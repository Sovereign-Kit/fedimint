var searchIndex = JSON.parse('{\
"devimint":{"doc":"","t":"DNDDDDDEDDNMMMMMMMMMMMLLLLMMMMLLLOLFMMMMAFMALLLLMMLLLLLLMMMLFOMMMLLLLLLLLLAALLDNDDDREDDDNMMMMMMLLMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLMFFLLLLLLLLLLLLLLMLLLFDDRDQDDIDDDDILMLLLLLLLLLLLLLLLLLLMLLKLLLLLMLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLFFLLLFFFLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDILLLLOLLLLLLLLLLFLKLLLLLLFLLLL","n":["Bitcoind","Cln","DevFed","Electrs","Esplora","ExternalDaemons","Gatewayd","LightningNode","Lightningd","Lnd","Lnd","_bitcoind","_bitcoind","_bitcoind","_process","_process","_process","_process","addr","bitcoind","bitcoind","bitcoind","borrow","borrow","borrow_mut","borrow_mut","client","client","cln","cln","clone","clone_into","cmd","cmd","connect_fed","dev_fed","electrs","electrs","esplora","esplora","external","external_daemons","fed","federation","from","from","from_ref","gateway_id","gw_cln","gw_lnd","into","into","into_request","into_request","into_request","into_request","ln","lnd","lnd","new","open_channel","poll_eq","process","process","rpc","set_lightning_node","stop_lightning_node","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","util","vars","vzip","vzip","Bitcoind","Cln","Electrs","Esplora","ExternalDaemons","GATEWAY_CLN_EXTENSION","LightningNode","Lightningd","LightningdProcessHandle","Lnd","Lnd","_bitcoind","_bitcoind","_bitcoind","_process","_process","_process","await_block_processing","await_block_processing","bitcoind","bitcoind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","client","client","cln","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","drop","electrs","esplora","external_daemons","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_new_address","get_raw_transaction","get_txout_proof","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoices_client_lock","lightning_client_lock","lnd","mine_blocks","name","new","new","new","new","new","new_bitcoin_rpc","open_channel","process","process","pub_key","pub_key","request","rpc","send_to","start","start","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Client","Federation","Fedimintd","_bitcoind","await_all_peers","await_block_sync","await_gateways_registered","bitcoind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_balance","client_config","clone","clone_into","cmd","cmd","federation_id","fork_client","from","from","from","from_ref","generate_epochs","generate_first_epoch","get_finality_delay","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","members","new","new","new_forked","path","pegin","pegin_gateway","process","run_dkg","set_config_gen_params","start_server","terminate","terminate_server","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_gateway","vars","vzip","vzip","vzip","wait_server_status","ClnLightningCli","Command","DEFAULT_RETRIES","FedimintCli","Fut","GatewayClnCli","GatewayLndCli","JsonValueExt","LnCli","ProcessHandle","ProcessHandleInner","ProcessManager","ToCmdExt","arg","args_debug","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","clone","clone_into","cmd","cmd","cmd","cmd","cmd","cmd","cmd","command_debug","drop","env","envs","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","get_command_for_alias","globals","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_running","kill_on_drop","name","new","out_json","out_string","parse_map","poll","run","run_inner","run_with_logging","send_sigkill","send_signal","send_sigterm","spawn_daemon","terminate","to_owned","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FM_API_URL","FM_BIND_API","FM_BIND_METRICS_API","FM_BIND_P2P","FM_BITCOIN_RPC_KIND","FM_BITCOIN_RPC_URL","FM_BTC_CLIENT","FM_BTC_DIR","FM_CLN_DIR","FM_CLN_EXTENSION_LISTEN_ADDRESS","FM_CLN_SOCKET","FM_DATA_DIR","FM_DATA_DIR","FM_DB_TOOL","FM_ELECTRS_DIR","FM_ESPLORA_DIR","FM_FAUCET_BIND_ADDR","FM_FED_SIZE","FM_GATEWAY_API_ADDR","FM_GATEWAY_FEES","FM_GATEWAY_LIGHTNING_ADDR","FM_GATEWAY_PASSWORD","FM_GWCLI_CLN","FM_GWCLI_LND","FM_LIGHTNING_CLI","FM_LNCLI","FM_LND_DIR","FM_LND_MACAROON","FM_LND_RPC_ADDR","FM_LND_TLS_CERT","FM_LOGS_DIR","FM_MINT_CLIENT","FM_MINT_RPC_CLIENT","FM_P2P_URL","FM_PORT_BTC_P2P","FM_PORT_BTC_RPC","FM_PORT_BTC_ZMQ_PUB_RAW_BLOCK","FM_PORT_BTC_ZMQ_PUB_RAW_TX","FM_PORT_CLN","FM_PORT_CLN_EXTENSION","FM_PORT_ELECTRS","FM_PORT_ESPLORA","FM_PORT_FAUCET","FM_PORT_FEDIMINTD_BASE","FM_PORT_GW_CLN","FM_PORT_GW_LND","FM_PORT_LND_LISTEN","FM_PORT_LND_REST","FM_PORT_LND_RPC","FM_READY_FILE","FM_TEST_BITCOIND_RPC","FM_TEST_DIR","FM_TEST_FAST_WEAK_CRYPTO","FM_TMP_DIR","Fedimintd","Global","ToEnvVar","borrow","borrow","borrow_mut","borrow_mut","declare_vars","from","from","init","init","into","into","into_request","into_request","into_request","into_request","mkdir","new","to_env_value","try_from","try_from","try_into","try_into","type_id","type_id","utf8","vars","vars","vzip","vzip"],"q":[[0,"devimint"],[78,"devimint::external"],[239,"devimint::federation"],[307,"devimint::util"],[449,"devimint::vars"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","easy syntax to create a Command","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>fedimint-cli</code> instance (basically path with client state: …","","","","","","","","","","","","","","","","","","","","","Fork the built-in client of <code>Federation</code> and give it a name","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a <code>Client</code> that starts with a state that is a copy of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kills process when all references to ProcessHandle are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Run the command and get its output as json.","Run the command and get its output as json.","","Will retry calling <code>f</code>.","Run the command ignoring its output.","","Run the command logging the output and error","","","","Logs to $FM_LOGS_DIR/{name}.{out,err}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,11,0,0,0,0,0,0,0,0,11,14,19,20,12,19,20,1,1,7,6,13,6,1,6,1,12,14,7,6,1,1,1,0,1,0,7,6,7,6,0,0,6,0,6,1,1,1,6,6,6,1,6,6,1,1,1,7,6,1,0,0,13,14,13,1,1,1,6,1,6,1,6,1,0,0,6,1,0,11,0,0,0,0,0,0,0,0,11,14,19,20,12,19,20,13,14,7,13,21,7,12,13,14,11,19,20,21,7,12,13,14,11,19,20,12,12,14,7,12,13,14,11,19,20,12,13,14,11,19,20,21,7,7,0,21,7,12,13,14,11,19,20,12,13,14,11,19,20,12,12,12,12,21,7,12,13,14,11,19,20,21,21,7,7,12,12,13,13,14,14,11,11,19,19,20,20,14,14,7,12,11,12,13,14,19,20,12,0,13,14,13,14,13,13,12,13,14,21,13,14,12,13,14,11,19,20,21,7,12,13,14,11,19,20,21,7,12,13,14,11,19,20,21,7,12,13,14,11,19,20,21,7,12,13,14,11,19,20,0,0,0,34,3,3,3,3,3,35,34,3,35,34,3,3,34,34,3,35,3,3,3,35,34,34,3,3,3,3,35,34,3,3,35,35,34,34,3,3,3,34,35,35,3,3,34,0,0,3,34,3,34,3,35,34,3,35,34,3,35,34,3,3,3,35,34,0,0,0,0,0,72,0,0,0,0,0,0,0,0,2,2,5,2,49,50,51,52,53,32,54,5,2,49,50,51,52,53,32,54,54,32,32,72,49,50,51,52,53,2,2,54,2,2,32,54,5,2,49,50,51,52,53,32,54,32,0,5,5,2,49,50,51,52,53,32,54,5,5,2,2,49,49,50,50,51,51,52,52,53,53,32,32,54,54,32,2,54,5,2,2,0,0,2,2,2,0,0,0,5,32,32,73,5,2,49,50,51,52,53,32,54,5,2,49,50,51,52,53,32,54,5,2,49,50,51,52,53,32,54,5,2,49,50,51,52,53,32,54,39,39,39,39,61,61,61,61,61,61,61,61,39,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,39,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,61,39,61,39,0,61,39,61,39,61,39,61,61,39,39,0,61,74,61,39,61,39,61,39,0,61,39,61,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[1,1],[[]],[1,2],0,[[1,3],4],[5,[[4,[6]]]],0,0,0,0,0,[5,[[4,[7]]]],0,0,[[]],[[]],[[]],[1,[[4,[8]]]],0,0,[[]],[[]],[[],9],[[],10],[[],10],[[],9],0,0,0,[[5,11],[[4,[1]]]],[[5,12,13,14],4],0,0,0,0,[[1,11]],[1,4],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13,4],[14,4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,[[18,[17]]]],0,0,0,[12,12],[13,13],[14,14],[11,11],[19,19],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[21],0,0,[5,[[4,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,[[4,[8]]]],[[12,22],[[4,[8]]]],[[12,22],[[4,[8]]]],[17,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],10],[[],10],[[],9],[[],10],[[],9],[[],9],[[],10],[[],10],[[],9],[[],10],[[],9],[[],9],[[],10],[[],10],[[],9],[14,[[4,[[24,[23]]]]]],[14,[[4,[[24,[25]]]]]],0,[[12,26],4],[11,27],[5,[[4,[12]]]],[[5,12],[[4,[13]]]],[[5,12],[[4,[14]]]],[[5,12],[[4,[19]]]],[[5,12],[[4,[20]]]],[[28,29],[[4,[17]]]],[[5,12,13,14],4],0,0,[13,[[4,[8]]]],[14,[[4,[8]]]],[[13,30],4],0,[[12,8,26],[[4,[22]]]],[[5,31],[[4,[32]]]],[5,4],[21,4],[13,4],[14,4],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[3,4],[3,[[4,[26]]]],[3,4],0,[[]],[[]],[[]],[[]],[[]],[[]],[3,[[4,[26]]]],[3,[[4,[33]]]],[34,34],[[]],[3,2],[35,2],[3,8],[[3,28],[[4,[35]]]],[[]],[[]],[[]],[[]],[[3,36],4],[3,4],[3,[[4,[37,38]]]],[[]],[[]],[[]],[[],10],[[],9],[[],9],[[],10],[[],9],[[],10],[3,[[4,[8]]]],0,[[5,12,36],[[4,[3]]]],[[5,12,36,39],[[4,[34]]]],[28,[[4,[35]]]],0,[[3,26],4],[[3,26,1],4],0,[[[42,[40,41]],[44,[40,43]]],4],[[41,45,46],4],[[3,5,36],4],[34,4],[[3,36],4],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[3,1],4],0,[[]],[[]],[[]],[[41,47],4],0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,48],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[32,32],[[]],[[]],[49,2],[50,2],[51,2],[52,2],[53,2],0,[2,8],[54],[[2,[56,[55]],[56,[55]]],2],[[2,57],2],[[32,58],59],[[54,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,28],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],9],[[],9],[[],10],[[],9],[[],10],[[],10],[[],9],[[],9],[[],10],[[],9],[[],10],[[],10],[[],9],[[],9],[[],10],[[],10],[[],9],[32,60],[[2,60],2],0,[61,5],[2,[[4,[62]]]],[2,[[4,[8]]]],[28,[[4,[[42,[8,8]]]]]],[[28,[64,[[63,[36]]]],65],4],[2,4],[2,[[4,[66]]]],[[2,8],4],[67],[[67,68]],[67],[[5,28,2],[[4,[32]]]],[32,4],[[]],[[],[[4,[69]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[31,36],[[4,[61]]]],[[61,43],[[4,[39]]]],[[]],[[]],[[],10],[[],9],[[],9],[[],10],[70,[[4,[70]]]],[[31,36],[[4,[61]]]],[[],[[63,[8]]]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[31,28],[61,71],[39,71],[[]],[[]]],"c":[],"p":[[3,"Gatewayd"],[3,"Command"],[3,"Federation"],[6,"Result"],[3,"ProcessManager"],[3,"DevFed"],[3,"ExternalDaemons"],[3,"String"],[3,"Request"],[3,"Request"],[4,"LightningNode"],[3,"Bitcoind"],[3,"Lightningd"],[3,"Lnd"],[4,"Result"],[3,"TypeId"],[3,"Client"],[3,"Arc"],[3,"Electrs"],[3,"Esplora"],[3,"LightningdProcessHandle"],[3,"Txid"],[6,"InvoicesClient"],[3,"MappedMutexGuard"],[6,"LightningClient"],[15,"u64"],[4,"LightningNodeType"],[15,"str"],[4,"Auth"],[8,"IntoRequest"],[3,"Path"],[3,"ProcessHandle"],[3,"ClientConfig"],[3,"Fedimintd"],[3,"Client"],[15,"usize"],[15,"u32"],[3,"Error"],[3,"Fedimintd"],[3,"PeerId"],[3,"WsAdminClient"],[3,"BTreeMap"],[3,"ConfigGenParams"],[3,"HashMap"],[3,"ApiAuth"],[6,"ServerModuleConfigGenParamsRegistry"],[4,"ServerStatus"],[8,"ToString"],[3,"FedimintCli"],[3,"LnCli"],[3,"ClnLightningCli"],[3,"GatewayClnCli"],[3,"GatewayLndCli"],[3,"ProcessHandleInner"],[3,"OsStr"],[8,"AsRef"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Global"],[4,"Value"],[4,"Option"],[8,"Into"],[8,"Fn"],[3,"Output"],[3,"Child"],[4,"Signal"],[8,"DeserializeOwned"],[3,"PathBuf"],[8,"Iterator"],[8,"ToCmdExt"],[8,"JsonValueExt"],[8,"ToEnvVar"]]},\
"faucet":{"doc":"","t":"DDLLMMMLLLLMLLLLLLLLLLFLMLLLLMMFLLLLLLLLLLLLL","n":["Cmd","Faucet","augment_args","augment_args_for_update","bind_addr","bitcoin","bitcoind_rpc","borrow","borrow","borrow_mut","borrow_mut","cln_socket","clone","clone_into","command","command_for_update","from","from","from_arg_matches","from_arg_matches_mut","from_ref","generate_invoice","get_invite_code","group_id","gw_lnd_port","into","into","into_request","into_request","invite_code","ln_rpc","main","new","pay_invoice","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip"],"q":[[0,"faucet"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,2,4,4,2,4,2,4,2,2,4,4,4,2,4,4,2,2,0,4,4,4,2,4,2,4,2,0,2,2,2,4,2,4,2,4,2,4,4,4,2],"f":[0,0,[1,1],[1,1],0,0,0,[[]],[[]],[[]],[[]],0,[2,2],[[]],[[],1],[[],1],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[4,5]]]],[[]],[[2,7],[[9,[8]]]],[[[10,[8]]],[[9,[8]]]],[[],[[10,[11]]]],0,[[]],[[]],[[],12],[[],12],0,0,[[],9],[4,[[9,[2]]]],[[2,8],9],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[4,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[]],[[]]],"c":[],"p":[[3,"Command"],[3,"Faucet"],[3,"ArgMatches"],[3,"Cmd"],[6,"Error"],[4,"Result"],[15,"u64"],[3,"String"],[6,"Result"],[4,"Option"],[3,"Id"],[3,"Request"],[3,"TypeId"]]},\
"fedimint_aead":{"doc":"","t":"DDRDLLMFLLLLLLLLLLLFLLLFFFLLLLLLLLLLFFMMLLLLLLLLFLLLLLLLLLLLLLLLL","n":["Aad","LessSafeKey","NONCE_LEN","UnboundKey","algorithm","algorithm","algorithm","argon2","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decrypt","empty","encode_hex","encode_hex_upper","encrypt","encrypted_read","encrypted_write","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","get_encryption_key","get_random_nonce","inner","inner","into","into","into","new","new","open_in_place","open_in_place_separate_tag","open_within","random_salt","seal_in_place_append_tag","seal_in_place_separate_tag","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"fedimint_aead"]],"d":["The additionally authenticated data (AAD) for an opening …","Immutable keys for use in situations where <code>OpeningKey</code>/…","All the AEADs we support use 96-bit nonces.","An AEAD key without a designated role or nonce sequence.","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","Constructs Argon2 with default params, easier if the weak …","","","","","","","","","","","","Decrypts a <code>ciphertext</code> using <code>key</code>.","Construct an empty <code>Aad</code>.","","","Encrypt <code>plaintext</code> using <code>key</code>.","Reads encrypted data from a file","Write <code>data</code> encrypted to a <code>file</code> with a random <code>nonce</code> that …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct the <code>Aad</code> from the given bytes.","Returns the argument unchanged.","Key used to encrypt and authenticate data stored on the …","Get a random nonce.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a <code>UnboundKey</code>.","Constructs a <code>LessSafeKey</code>.","Like <code>super::OpeningKey::open_in_place()</code>, except it accepts …","Like open_in_place, except the authentication tag is …","Like <code>super::OpeningKey::open_within()</code>, except it accepts an","Generates a B64-encoded random salt string of the …","Like <code>super::SealingKey::seal_in_place_append_tag()</code>, except …","Like <code>super::SealingKey::seal_in_place_separate_tag()</code>, …","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,3,3,0,8,1,8,3,1,8,3,8,3,8,3,0,8,8,8,0,0,0,8,8,1,8,3,1,1,8,8,3,0,0,1,3,1,8,3,1,3,3,3,3,0,3,3,8,3,1,8,3,1,8,3,1,8,3,1,8,3],"f":[0,0,0,0,[1,2],[3,2],0,[[],4],[[[8,[[7,[[6,[5]]]]]]],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[9]]],[[8,[9]]]],[3,3],[[]],[[]],[[[6,[5]],3],[[10,[[6,[5]]]]]],[[],[[8,[[11,[5]]]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[[14,[5]],3],[[10,[[14,[5]]]]]],[[3,15],[[10,[[14,[5]]]]]],[[[14,[5]],3,15],10],[[[8,[[16,[[16,[[16,[16]]]]]]]],[8,[[16,[[16,[[16,[16]]]]]]]]],17],[[],17],[[1,18],[[20,[19]]]],[[[8,[21]],18],[[20,[19]]]],[[3,18],[[20,[19]]]],[[[22,[2]]],1],[[]],[[]],[[[7,[[6,[5]]]]],[[8,[[7,[[6,[5]]]]]]]],[[]],[[23,23],[[10,[3]]]],[[],24],0,0,[[]],[[]],[[]],[[2,[6,[5]]],[[20,[1,25]]]],[1,3],[[3,24,[8,[[7,[[6,[5]]]]]],[6,[5]]],[[20,[[6,[5]],25]]]],[[3,24,[8,[[7,[[6,[5]]]]]],26,[6,[5]],[28,[27]]],[[20,[[6,[5]],25]]]],[[3,24,[8,[[7,[[6,[5]]]]]],[6,[5]],[28,[27]]],[[20,[[6,[5]],25]]]],[[],29],[[3,24,[8,[[7,[[6,[5]]]]]],[0,[[30,[[6,[5]]]],[31,[5]]]]],[[20,[25]]]],[[3,24,[8,[[7,[[6,[5]]]]]],[6,[5]]],[[20,[26,25]]]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],32],[[],32],[[],32],[[]],[[]],[[]]],"c":[],"p":[[3,"UnboundKey"],[3,"Algorithm"],[3,"LessSafeKey"],[3,"Argon2"],[15,"u8"],[15,"slice"],[8,"AsRef"],[3,"Aad"],[8,"Clone"],[6,"Result"],[15,"array"],[15,"char"],[8,"FromIterator"],[3,"Vec"],[3,"PathBuf"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Debug"],[3,"Okm"],[15,"str"],[3,"Nonce"],[3,"Unspecified"],[3,"Tag"],[15,"usize"],[3,"RangeFrom"],[3,"String"],[8,"AsMut"],[8,"Extend"],[3,"TypeId"]]},\
"fedimint_bip39":{"doc":"BIP39 client secret support crate","t":"DLLLLLLLLLLLLLL","n":["Bip39RootSecretStrategy","borrow","borrow_mut","consensus_decode","consensus_encode","fmt","from","into","into_request","random","to_root_secret","try_from","try_into","type_id","vzip"],"q":[[0,"fedimint_bip39"]],"d":["BIP39 root secret encoding strategy allowing retrieval of …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[0,[[]],[[]],[1,[[3,[2]]]],[4,[[6,[5]]]],[[7,8],9],[[]],[[]],[[],10],[[[0,[11,12]]]],[[],13],[[],3],[[],3],[[],14],[[]]],"c":[],"p":[[8,"Read"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[6,"Result"],[3,"Bip39RootSecretStrategy"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"RngCore"],[8,"CryptoRng"],[3,"DerivableSecret"],[3,"TypeId"]]},\
"fedimint_bitcoind":{"doc":"","t":"DDDIIRRRGDRRMALLLLLLLLLLLLFKLLLAALLLLLLLLLLLKLKLKLLLKLKLKLMMMLLLLLLLLLFLKLMLLLLLLLLLLLLLLLLLLKLDDLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BITCOIN_RPC_REGISTRY","DynBitcoindRpc","DynBitcoindRpcFactory","IBitcoindRpc","IBitcoindRpcFactory","MAINNET_GENESIS_BLOCK_HASH","RETRY_SLEEP_MAX_MS","RETRY_SLEEP_MIN_MS","Result","RetryClient","SIGNET_GENESIS_BLOCK_HASH","TESTNET_GENESIS_BLOCK_HASH","__private_field","bitcoincore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_bitcoind","create_connection","deref","deref","deref","electrum","esplora","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","get_block_count","get_block_count","get_block_hash","get_block_hash","get_fee_rate","get_fee_rate","get_mut","get_mut","get_network","get_network","get_tx_block_height","get_tx_block_height","get_txout_proof","get_txout_proof","inner","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","new","register_bitcoind","retry_call","submit_transaction","submit_transaction","task_handle","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","watch_script_history","watch_script_history","BitcoinClient","BitcoindFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","from_url_to_url_auth","get_block_count","get_block_hash","get_fee_rate","get_network","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","ElectrumClient","ElectrumFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","get_block_count","get_block_hash","get_fee_rate","get_network","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","is_already_submitted_error","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","EsploraClient","EsploraFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","get_block_count","get_block_hash","get_fee_rate","get_network","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history"],"q":[[0,"fedimint_bitcoind"],[95,"fedimint_bitcoind::bitcoincore"],[128,"fedimint_bitcoind::electrum"],[161,"fedimint_bitcoind::esplora"]],"d":["Global factories for creating bitcoin RPCs","","","Trait that allows interacting with the Bitcoin blockchain","Trait for creating new bitcoin RPC clients","","","","<code>Result&lt;T, Error&gt;</code>","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","","","","","","","","","","","","","","","","","Create a bitcoin RPC of a given kind","Creates a new bitcoin RPC client connection","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the current block count","","Returns the block hash at a given height","","Estimates the fee rate for a given confirmation target. …","","","","Returns the Bitcoin network the node is connected to","","Check if a transaction is included in a block","","Returns a proof that a tx is included in the bitcoin …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Register a new factory for creating bitcoin RPCs","Retries with an exponential backoff from <code>RETRY_SLEEP_MIN_MS</code>…","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","","","","Watches for a script and returns any transactions …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Parses errors from electrum-client to determine if the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,7,0,7,1,2,14,7,1,2,14,1,2,1,2,0,15,7,1,2,0,0,1,2,14,7,1,1,2,2,14,1,2,18,14,18,14,18,14,1,2,18,14,18,14,18,14,1,2,14,7,1,2,14,7,1,2,14,14,0,14,18,14,14,1,2,7,1,2,14,7,1,2,14,7,1,2,14,7,1,2,14,18,14,0,0,34,35,34,35,34,34,35,34,35,0,35,35,35,35,35,35,34,35,34,35,35,35,34,35,34,35,34,35,34,35,35,0,0,37,36,37,36,36,37,36,37,36,37,37,37,37,37,37,37,36,37,36,0,37,37,37,36,37,36,37,36,37,36,37,0,0,41,42,41,42,41,41,42,41,42,42,42,42,42,42,42,41,42,41,42,42,42,41,42,41,42,41,42,41,42,42],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[3,4],[[5,[2]]]],[[6,4],[[5,[2]]]],[7,[[10,[[9,[8,1]]]]]],[1],[2],0,0,[[1,11],12],[[2,11],12],[[[14,[13]],11],12],[[]],[[]],[[[0,[15,16,17]]],1],[[[0,[18,16,17]]],2],[[]],[[]],[[]],[[]],[[],[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]]],[[21,[[20,[19]]]]]],[24,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],24],[[21,[[20,[19]]]]]],[25,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],25],[[21,[[20,[19]]]]]],[1,26],[2,26],[[],[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]]],[[21,[[20,[19]]]]]],[27,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],27],[[21,[[20,[19]]]]]],[27,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],27],[[21,[[20,[19]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[4,14],[[8,1]],[[14,29],5],[30,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],30],[[21,[[20,[19]]]]]],0,[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[33,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],33],[[21,[[20,[19]]]]]],0,0,[[]],[[]],[[]],[[]],[[34,6,4],[[5,[2]]]],[[34,11],12],[[35,11],12],[[]],[[]],[6,5],[35,[[21,[[20,[19]]]]]],[[35,24],[[21,[[20,[19]]]]]],[[35,25],[[21,[[20,[19]]]]]],[35,[[21,[[20,[19]]]]]],[[35,27],[[21,[[20,[19]]]]]],[[35,27],[[21,[[20,[19]]]]]],[[]],[[]],[[],28],[[],28],[6,[[5,[35]]]],[[35,30],[[21,[[20,[19]]]]]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[]],[[]],[[35,33],[[21,[[20,[19]]]]]],0,0,[[]],[[]],[[]],[[]],[[36,6,4],[[5,[2]]]],[[37,11],12],[[36,11],12],[[]],[[]],[37,[[21,[[20,[19]]]]]],[[37,24],[[21,[[20,[19]]]]]],[[37,25],[[21,[[20,[19]]]]]],[37,[[21,[[20,[19]]]]]],[[37,27],[[21,[[20,[19]]]]]],[[37,27],[[21,[[20,[19]]]]]],[[]],[[]],[[],28],[[],28],[[[39,[8,38]]],40],[6,[[5,[37]]]],[[37,30],[[21,[[20,[19]]]]]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[]],[[]],[[37,33],[[21,[[20,[19]]]]]],0,0,[[]],[[]],[[]],[[]],[[41,6,4],[[5,[2]]]],[[41,11],12],[[42,11],12],[[]],[[]],[42,[[21,[[20,[19]]]]]],[[42,24],[[21,[[20,[19]]]]]],[[42,25],[[21,[[20,[19]]]]]],[42,[[21,[[20,[19]]]]]],[[42,27],[[21,[[20,[19]]]]]],[[42,27],[[21,[[20,[19]]]]]],[[]],[[]],[[],28],[[],28],[6,[[5,[42]]]],[[42,30],[[21,[[20,[19]]]]]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[]],[[]],[[42,33],[[21,[[20,[19]]]]]]],"c":[],"p":[[3,"DynBitcoindRpcFactory"],[3,"DynBitcoindRpc"],[3,"BitcoinRpcConfig"],[3,"TaskHandle"],[6,"Result"],[3,"SafeUrl"],[3,"BITCOIN_RPC_REGISTRY"],[3,"String"],[3,"BTreeMap"],[3,"Mutex"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"RetryClient"],[8,"IBitcoindRpcFactory"],[8,"MaybeSend"],[8,"MaybeSync"],[8,"IBitcoindRpc"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Sync"],[8,"Send"],[15,"u64"],[15,"u16"],[4,"Option"],[3,"Txid"],[3,"Request"],[8,"Fn"],[3,"Transaction"],[4,"Result"],[3,"TypeId"],[3,"Script"],[3,"BitcoindFactory"],[3,"BitcoinClient"],[3,"ElectrumFactory"],[3,"ElectrumClient"],[4,"Value"],[3,"Map"],[15,"bool"],[3,"EsploraFactory"],[3,"EsploraClient"]]},\
"fedimint_build":{"doc":"","t":"RRFFF","n":["FORCE_GIT_HASH_ENV","GIT_HASH_ENV","call_cmd","set_code_version","set_code_version_inner"],"q":[[0,"fedimint_build"]],"d":["Env variable to set to force git hash during build process","Env variable the cargo will set during crate build to pass …","","",""],"i":[0,0,0,0,0],"f":[0,0,[[1,[2,[1]]],[[4,[3,3]]]],[[]],[[],[[4,[3]]]]],"c":[],"p":[[15,"str"],[15,"slice"],[3,"String"],[4,"Result"]]},\
"fedimint_cli":{"doc":"","t":"F","n":["main"],"q":[[0,"fedimint_cli"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[6,"Result"]]},\
"fedimint_client":{"doc":"Client library for fedimintd","t":"EGDDDDDEDDNIGGDGNNRNDMLKLLKLLLMMLLLLLALLLLLLLLLLLLLLLLLLLLLLLFLLLLLLKLMKLMFLLLLLLLLLLLLMMMLLLALMMMKLLMLLLLCLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLFLFLFLLLLLLLLLFLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLAMKLMMMMLMLLMALMMLLLMLMAAOLLFFLLLLLLLLLALKLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLDDNDDNDDNDDNNEDNDDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQDDDIGQDDIQQGQMMLLLKLKLLKLLLLLLLLLLLLMMMLLLLLLKKKLKLMKLLLLLLLLLLLLLLLLLKLLLLLLLLKLLAMKKLLLLLLLLLLLLLLLLLLLLLMLMMKKAKLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLKLIDGDIQLMLMKLLLLLLLMLLLMLMKLLMLLLLLLKKMLLLLLMKLMLMKKLLLLLLLLLNDIIENKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLMMDDNNELLLLLLLFLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLMLLLLLLLLLLLLLLLLLIQDIRRLLKLKLKKLLFLLKLKLLLLLDDIDDDDIQIDQDDDDIDMKMMKMMMMAMKAMMMMMMMAKKMMAMMKKMADLLMLLLLMLLLLLLNDDEDDDNGRDDEDNDDDDDNRGMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMMMMMMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDDDMLLLLLLMMLLLLMMLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLIDDQIIQDIDGGKKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLKKLLMMLLLLLMKKLLMLLLLLLLLLLLLLLLLIQKNDDNRNNRDDEAMMMMMAMMFNDDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLMMFMMLLLLLLLLLLLLLLLLLLLLLLLNNRNRNRDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLFLLLL","n":["AddStateMachinesError","AddStateMachinesResult","Client","ClientArc","ClientBuilder","ClientModuleInstance","ClientWeak","DatabaseSource","DynGlobalClientContext","FederationInfo","Fresh","IGlobalClientContext","InstancelessDynClientInput","InstancelessDynClientOutput","ModuleGlobalClientContext","ModuleGlobalContextGen","Other","Reuse","SUPPORTED_CORE_API_VERSIONS","StateAlreadyExists","TransactionUpdates","__use_constructor_to_create","add_state_machine","add_state_machine_dyn","add_state_machine_dyn","add_state_machines","api","api","api","api","api","api","api_clone","await_primary_module_output","await_primary_module_outputs","await_tx_accepted","await_tx_accepted","backup","backup_to_federation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_up_state","build","build_restoring_from_backup","build_stopped","builder","channel_penalty_msat","claim_input","claim_input_dyn","claim_input_dyn","client","client_config","client_config","client_count","client_decoders","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","config","config","config","context_gen","create_backup","create_encrypted_backup","db","db","db","db","db","decoders","decoders","decoders","decoders","default","deref","deref","deref","derivable_secret","discover_common_api_version","discover_common_api_version_static","downgrade","download_backup_from_federation","drop","executor","federation_id","federation_id","federation_id","federation_meta","finalize_and_submit_transaction","finalize_and_submit_transaction_inner","finalize_transaction","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_config","from_invite_code","from_ref","from_ref","from_ref","from_ref","from_ref","fund_output","fund_output_dyn","fund_output_dyn","get_active_operations","get_backup_id","get_balance","get_config","get_config","get_config_from_db","get_config_json","get_decoded_client_secret","get_decoded_client_secret","get_derived_backup_encryption_key","get_derived_backup_encryption_key_static","get_derived_backup_signing_key","get_derived_backup_signing_key_static","get_federation_id","get_first_instance","get_first_module","get_internal_payment_markers","get_invite_code_from_db","get_meta","get_module","get_module_client_dyn","get_mut","has_active_states","id","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","invite_code","load_and_refresh_common_api_version_static","load_decodable_client_secret","meta","module","module","module_api","module_api","module_inits","module_inits","module_instance_id","modules","new","operation","operation_exists","operation_log","operation_log","oplog","primary_module","primary_module_instance","primary_module_instance","refresh_common_api_version_static","restore_from_backup","root_secret","root_secret","root_secret_encoding","secp_ctx","secret","sm","sm_enum_variant_translation","source","start_executor","states_add_instance","states_to_instanceless_dyn","store_encodable_client_secret","subscribe_balance_changes","supported_api_versions_summary_static","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction","transaction_builder_balance","transaction_update_stream","transaction_update_stream","transaction_update_stream","transaction_updates","try_download_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_module","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_stream","upgrade","upload_backup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_state","with_database","with_federation_info","with_module","with_module_inits","with_old_client_database","with_primary_module","with_raw_database","ClientBackup","EncryptedClientBackup","Metadata","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","decrypt_with","deserialize","empty","encrypt_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_bytes","from_bytes","from_json_serialized","from_raw","from_ref","get_alignment_size","into","into","into","into_backup_request","into_raw","into_request","into_request","into_request","is_empty","is_empty","len","metadata","modules","serialize","session_count","to_bytes","to_bytes","to_json_deserialized","to_json_value","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CachedApiVersionSet","CachedApiVersionSetKey","ChronologicalOperationLog","ChronologicalOperationLogKey","ChronologicalOperationLogKeyPrefix","ClientConfig","ClientConfigKey","ClientConfigKeyPrefix","ClientInviteCode","ClientInviteCodeKey","ClientInviteCodeKeyPrefix","ClientSecret","CommonApiVersionCache","DbKeyPrefix","DbKeyPrefixIter","EncodedClientSecret","EncodedClientSecretKey","EncodedClientSecretKeyPrefix","OperationLog","OperationLogKey","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","creation_time","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","id","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","operation_id","operation_id","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Backup","ClientContext","ClientContextSelfRef","ClientDbTxContext","ClientModule","ClientModuleRegistry","Common","DynClientModule","FinalClient","IClientModule","Init","ModuleStateMachineContext","StateGenerator","States","_marker","_marker","add_operation_log_entry","add_state_machines","add_state_machines_dbtx","as_any","as_ref","await_primary_module_output","await_primary_module_output","await_primary_module_outputs","backup","backup","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_penalty_msat","client","client","client","clone","clone","clone","clone_into","clone_into","clone_into","context","context","create_exact_output","create_exact_output","create_sufficient_input","create_sufficient_input","dbtx","decoder","decoder","default","deref","deref","finalize_and_submit_transaction","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","get","get_balance","get_balance","get_config","get_internal_payment_markers","get_mut","get_operation","get_own_active_states","global_api","global_db","handle_cli_command","handle_cli_command","has_active_states","init","inner","input_amount","input_amount","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","kind","leave","make_client_input","make_client_output","make_dyn","make_dyn_input","make_dyn_output","make_dyn_state","map_dyn","module_autocommit","module_db","module_db","module_dbtx","module_instance_id","module_instance_id","output_amount","output_amount","recovery","restore","restore","self_ref","set","subscribe_balance_changes","subscribe_balance_changes","supports_backup","supports_backup","supports_being_primary","supports_being_primary","to_owned","to_owned","to_owned","transaction_updates","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","wipe","wipe","ClientModuleInit","ClientModuleInitArgs","ClientModuleInitRegistry","DynClientModuleInit","IClientModuleInit","Module","api","api","api_version","api_version","as_common","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","cfg","cfg","clone","clone_into","context","context","db","db","decoder","deref","federation_id","federation_id","fmt","from","from","from","from_ref","get_mut","init","init","inner","into","into","into_request","into_request","module_api","module_api","module_kind","module_root_secret","module_root_secret","notifier","notifier","supported_api_versions","supported_api_versions","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Default","DynModuleBackup","IModuleBackup","ModuleBackup","NoModuleBackup","NoModuleBackup","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","from","from","from_bytes","from_bytes","from_parts","from_ref","from_ref","from_typed","inner","into","into","into_dyn","into_request","into_request","module_instance_id","module_instance_id","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bytes","variant","OperationLog","OperationLogEntry","Outcome","UpdateStream","UpdateStreamOrOutcome","add_operation_log_entry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","caching_operation_update_stream","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","db","deserialize","erased_serialize","fmt","fmt","from","from","from","from_bytes","from_ref","get_operation","get_operation_inner","into","into","into","into_request","into_request","into_request","into_stream","list_operations","meta","meta","new","operation_module_kind","operation_module_kind","optimistically_set_operation_outcome","outcome","outcome","outcome_or_updates","serialize","set_operation_outcome","to_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DeriveableSecretClientExt","Encoding","PlainRootSecretStrategy","RootSecretStrategy","TYPE_BACKUP","TYPE_MODULE","borrow","borrow_mut","consensus_decode","consensus_decode","consensus_encode","consensus_encode","derive_backup_secret","derive_module_secret","fmt","from","get_default_client_secret","into","into_request","random","random","to_root_secret","to_root_secret","try_from","try_into","type_id","vzip","ActiveState","ClientSMDatabaseTransaction","Context","DynContext","DynState","Executor","ExecutorBuilder","GlobalContext","GlobalContext","IState","InactiveState","ModuleContext","ModuleNotifier","Notifier","NotifierSender","OperationState","State","StateTransition","_pd","as_any","broadcast","broadcast","clone","created_at","created_at","db","db","dbtx","dbtx","erased_eq_no_instance_id","executor","exited_at","inner","inner","module_contexts","module_instance","module_instance","module_instance_id","notifier","operation_id","operation_id","operation_id","sender","state","state","transition","transitions","transitions","trigger","util","ClientSMDatabaseTransaction","borrow","borrow_mut","dbtx","from","global_tx","into","into_request","module_instance","module_tx","new","try_from","try_into","type_id","vzip","Active","ActiveModuleOperationStateKeyPrefix","ActiveOperationStateKeyPrefix","ActiveOrInactiveState","ActiveState","ActiveStateKey","ActiveStateKeyPrefix","ActiveStates","ContextGen","EXECUTOR_POLL_INTERVAL","Executor","ExecutorBuilder","ExecutorDbPrefixes","ExecutorInner","Inactive","InactiveModuleOperationStateKeyPrefix","InactiveOperationStateKeyPrefix","InactiveState","InactiveStateKey","InactiveStateKeyPrefix","InactiveStates","MAX_DB_ATTEMPTS","TransitionForActiveState","_pd","_pd","_pd","_pd","add_state_machines","add_state_machines_dbtx","await_active_state","await_inactive_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contains_active_state","contains_inactive_state","context","created_at","created_at","db","default","drop","execute_next_state_transitions","exited_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_state","from_state","get_active_states","get_active_states","get_inactive_states","get_transition_for","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inactive","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","module_contexts","module_contexts","module_instance","module_instance","new","new","new","notifier","notifier","operation_id","operation_id","operation_id","operation_id","operation_id","operation_id","run","shutdown_executor","start_executor","state","state","stop_executor","stop_executor","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module_dyn","active_state","dyn_state","dyn_state","ModuleNotifier","Notifier","NotifierSender","_pd","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","clone","clone","clone_into","clone_into","db","db","fmt","from","from","from","from_ref","from_ref","into","into","into","into_request","into_request","into_request","module_instance","module_notifier","new","notify","notify","sender","sender","subscribe","subscribe_all_operations","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Context","DynContext","DynState","GlobalContext","IContext","IState","ModuleContext","OperationState","State","StateTransition","StateTransitionFunction","TriggerFuture","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_typed","from_typed","inner","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","is_terminal","module_instance_id","module_instance_id","module_instance_id","new","operation_id","operation_id","operation_id","operation_id","operation_id","state","to_bytes","to_bytes","to_owned","to_owned","to_owned","transition","transitions","transitions","transitions","transitions","trigger","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","MapStateTransitions","State","map","Accepted","ClientInput","ClientOutput","Created","LOG_TARGET","NonRetryableError","Rejected","TRANSACTION_SUBMISSION_MODULE_INSTANCE","TransactionBuilder","TxSubmissionContext","TxSubmissionStates","builder","input","inputs","keys","output","outputs","sm","state_machines","state_machines","tx_submission_sm_decoder","Balanced","ClientInput","ClientOutput","Overfunded","TransactionBuilder","TransactionBuilderBalance","Underfunded","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from_ref","from_ref","from_ref","input","inputs","into","into","into","into","into_dyn","into_dyn","into_request","into_request","into_request","into_request","keys","new","output","outputs","state_gen_to_dyn","state_machines","state_machines","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_input","with_inputs","with_output","with_outputs","Accepted","Created","LOG_TARGET","NonRetryableError","RETRY_INTERVAL","Rejected","TRANSACTION_SUBMISSION_MODULE_INSTANCE","TxSubmissionContext","TxSubmissionStates","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","fmt","fmt","from","from","from_bytes","from_ref","from_ref","into","into","into_dyn","into_dyn","into_request","into_request","operation_id","operation_id","to_bytes","to_owned","to_owned","transitions","transitions","trigger_created_accepted","trigger_created_rejected","try_from","try_from","try_into","try_into","tx_submission_sm_decoder","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_client"],[308,"fedimint_client::backup"],[383,"fedimint_client::db"],[629,"fedimint_client::module"],[780,"fedimint_client::module::init"],[840,"fedimint_client::module::recovery"],[908,"fedimint_client::module::recovery::NoModuleBackup"],[910,"fedimint_client::oplog"],[973,"fedimint_client::secret"],[1000,"fedimint_client::sm"],[1050,"fedimint_client::sm::dbtx"],[1065,"fedimint_client::sm::executor"],[1351,"fedimint_client::sm::executor::ActiveOrInactiveState"],[1354,"fedimint_client::sm::notifier"],[1407,"fedimint_client::sm::state"],[1523,"fedimint_client::sm::util"],[1526,"fedimint_client::transaction"],[1547,"fedimint_client::transaction::builder"],[1625,"fedimint_client::transaction::sm"]],"d":["","","","Atomically-counted (<code>Arc</code>) handle to <code>Client</code>","","Resources particular to a module instance","Like <code>ClientArc</code> but using a <code>Weak</code> handle to <code>Client</code>","","Global state and functionality provided to all state …","Federation config and meta data that can be used to show a …","","","","","Global state given to a specific client module and state. …","","","","List of core api versions supported by the implementation. …","","See <code>Client::transaction_updates</code>","","Allows adding state machines from inside a transition to …","Adds a state machine to the executor.","","","Returns a reference to the client’s federation API …","","","Creates an API client for the federation","Module-specific API","","","Waits for an output from the primary module to reach its …","Waits for outputs from the primary module to reach its …","Waits for the transaction to be accepted or rejected as …","","Client backup","Prepare an encrypted backup and send it to federation for …","","","","","","","","","","","","","","","","","","","","","","","Not sure why I couldn’t just directly call <code>Box::new</code> ins …","Build a <code>Client</code> and start its executor","","Build a <code>Client</code> but do not start the executor","Initialize a client builder that can be configured to …","","Creates a transaction that with an output of the primary …","This function is mostly meant for internal use, you are …","","","","","Number of <code>ClientArc</code> instances using this <code>Client</code>.","","","","","","","","","","","","","Returns the federations configuration","","","","","Create a backup, include provided <code>metadata</code>","Create a backup, include provided <code>metadata</code>, and encrypt it …","Database keys used by the client","","Module-specific DB","","","","","","","","","","","","","Query the federation for API version support and then …","","Download most recent valid backup found from the Federation","","","","","","","Add funding and/or change to the transaction builder as …","","Adds funding to a transaction or removes over-funding via …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create <code>FederationInfo</code> from config, may download further …","Download federation info using invitation code","","","","","","Creates a transaction with the supplied output and funding …","This function is mostly meant for internal use, you are …","","","Backup id derived from the root secret key (public key …","Balance available to the client for spending","","Returns the config with which the client was initialized.","","Returns the config of the client in JSON format.","Fetches the encoded client secret from the database and …","","","Static version of <code>Self::get_derived_backup_encryption_key</code> …","","Static version of <code>Self::get_derived_backup_signing_key</code> for …","","Returns the instance id of the first module of the given …","Returns a reference to a typed module client instance by …","","","","Returns a reference to the module, panics if not found","","","","Instance id of the module","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","If the federation info was created from","","Load the common api versions to use from cache and start a …","","Get the value of a given meta field","Module client interface definitions","","Returned a reference client’s module API client, so that …","","","","","","Create","","","","","Operation log subsystem of the client","Get the primary module","","","","Restore client state from backup if provided or from …","","","Returns the data from which the client’s root secret is …","","Secret handling &amp; derivation","Client state machine interfaces and executor implementation","","","","","","","Returns a stream that yields the current client balance …","<code>SupportedApiVersionsSummary</code> that the client and its …","","","","","","","Structs and interfaces to construct Fedimint transactions","Determines if a transaction is underfunded, overfunded or …","","","","Returns a stream of transaction updates for the given …","Tries to download the client config from the federation, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upload <code>backup</code> to federation","","","","","","","","","","","","Wipe the client state (including module state)","","Instructs the client builder to use this <code>FederationInfo</code> in …","Make module generator available when reading the config","Replace module generator registry entirely","Re-uses the database of an old client. Useful for …","Uses this module with the given instance id as the primary …","Uses this database to store the client state","Client state backup","Encrypted version of <code>ClientBackup</code>.","Backup metadata","","","","","","","","","","","","","","","","","Create empty metadata","Encrypt with a key and turn into <code>EncryptedClientBackup</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create metadata as json from typed <code>val</code>","","","Align an ecoded message size up for better privacy","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Is metadata empty","","Application metadata","Module specific-backup (if supported)","","Session count taken right before taking the backup","","","Attempt to deserialize metadata as typed json","Attempt to deserialize metadata as untyped json (…","","","","","","","","","","","","","","","","","Key used to lookup operation log entries in chronological …","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data stored in regular backups so that restoring doesn’t …","A Client context for a <code>ClientModule</code> <code>M</code>","A reference back to itself that the module cacn get from …","A context of a database transaction started with …","Fedimint module client","","Common module types shared between client and server","","A final, fully initialized <code>crate::Client</code>","Type-erased version of <code>ClientModule</code>","","Data and API clients available to state machine …","","All possible states this client can submit to the executor","","","","","","","","","Waits for the funds from an output created by …","See <code>crate::Client::await_primary_module_outputs</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an output of <strong>exactly</strong> <code>amount</code> that will pay into the …","","Creates an input of <strong>at least</strong> a given <code>min_amount</code> from the …","","","","","","","See <code>crate::Client::finalize_and_submit_transaction</code>","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a temporary <code>ClientArc</code>","","Returns the balance held by this module and available for …","","","","","","Get a reference to a global Api handle","","","","","","","Returns the amount represented by the input and the fee …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Leave the federation","Turn a typed <code>ClientInput</code> into a dyn version","Turn a typed <code>ClientOutput</code> into a dyn version","Turn a <code>typed</code> into a dyn version","Turn a typed input into a dyn version","Turn a typed output into a dyn version","","","An <code>Database::autocommit</code> on module’s own database …","","","Get a reference to <code>DatabaseTransaction</code> isolated database …","","","Returns the amount represented by the output and the fee …","","","","","Get a reference back to client module from the <code>Self</code>","","","Returns a stream that will output the updated module …","","","","Does this module support being a primary module","","","","See <code>crate::Client::transaction_updates</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>ClientContext</code> for later use","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Initialize a <code>ClientModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Api versions of the corresponding server side module’s …","See <code>ClientModuleInit::supported_api_versions</code>","","","","","","","","","","","","","","A backup type for modules without a backup implementation. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Represents an operation triggered by a user, typically …","","","Either a stream of operation updates if the operation hasn…","","","","","","","","Wraps an operation update stream such that the last update …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a stream no matter if the operation is finished. …","Returns the last <code>limit</code> operations. To fetch the next page, …","Returns the meta data of the operation. This is a JSON …","","","Returns the kind of the module that generated the operation","","Tries to set the outcome of an operation, but only logs an …","Returns the last state update of the operation, if any was …","","Returns an a <code>UpdateStreamOrOutcome</code> enum that can be …","","Sets the outcome of an operation","","","","","","","","","","","","","","","","Type representing the secret","Just uses 64 random bytes and derives the secret from them","Trait defining a way to generate, serialize and …","","","","","Deserialization function for the external encoding","","Serialization function for the external encoding","","","","","Returns the argument unchanged.","Convenience function to derive fedimint-client root secret …","Calls <code>U::from(self)</code>.","","Random generation function for the external secret type","","Conversion function from the external encoding to the …","","","","","","","A transaction that acts as isolated for module code but …","Additional data made available to state machines of a …","A shared context for a module client state machine","A type-erased state of a state machine belonging to a …","Executor that drives forward state machines under its …","Builder to which module clients can be attached and used …","Context given to all state machines","Additional resources made available for all state …","Object-safe version of <code>State</code>","","Additional resources made available in this module’s …","State transition notifier for a specific module instance …","State transition notifier owned by the modularized client …","Notifier send handle that can be shared to places where we …","","Implementors act as state machines that can be executed","Represents one or multiple possible state transitions …","<code>S</code> limits the type of state that can be subscribed to to …","","Broadcast channel used to send state transitions to all …","","Clone state","","","Database used to load all states that happened before …","Database used to load all states that happened before …","","","","","","","","","","","","Helper to notify modules about state transitions","Operation this state machine belongs to. See <code>OperationId</code> …","Operation this state machine belongs to. See <code>OperationId</code> …","","","State machine state interface","","State transition function that, using the output of the …","All possible transitions from the current state to other …","All possible transitions from the state","Future that will block until a state transition is …","","A transaction that acts as isolated for module code but …","","","","Returns the argument unchanged.","Returns the non-isolated database transaction only …","Calls <code>U::from(self)</code>.","","","Returns the isolated database transaction for the module.","","","","","","","","","","","A state that is able to make progress eventually","","See <code>ActiveStateKey</code>","","Wait time till checking the DB for new state machines when …","Executor that drives forward state machines under its …","Builder to which module clients can be attached and used …","Prefixes for executor DB entries","","","","","","A past or final state of a state machine","","See <code>InactiveStateKey</code>","After how many attempts a DB transaction is aborted with …","","","","","","Adds a number of state machines to the executor …","Adds a number of state machines to the executor atomically …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build <code>Executor</code> and spawn background task in <code>tasks</code> …","Creates an <code>ExecutorBuilder</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Mostly used for testing</strong>","<strong>Mostly used for testing</strong>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the <code>Notifier</code> that can be used to …","","","","","","","","","","Starts the background thread that runs the state machines. …","","","See <code>Executor::stop_executor</code>.","Stops the background task that runs the state machines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow executor being built to run state machines …","Allow executor being built to run state machines …","","","","State transition notifier for a specific module instance …","State transition notifier owned by the modularized client …","Notifier send handle that can be shared to places where we …","<code>S</code> limits the type of state that can be subscribed to to …","","","","","","","Broadcast channel used to send state transitions to all …","","","","","","Database used to load all states that happened before …","Database used to load all states that happened before …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new notifier for a specific module instance that …","","Notify all subscribers of a state transition","Notify all subscribers of a state transition","Create a <code>NotifierSender</code> handle that lets the owner trigger …","","Subscribe to state transitions belonging to an operation …","Subscribe to all state transitions belonging to the module …","","","","","","","","","","","","","","","Additional data made available to state machines of a …","A shared context for a module client state machine","A type-erased state of a state machine belonging to a …","Additional resources made available for all state …","Something that can be a <code>DynContext</code> for a state machine","Object-safe version of <code>State</code>","Additional resources made available in this module’s …","","Implementors act as state machines that can be executed","Represents one or multiple possible state transitions …","","","","","","","","","","","","","","Clone state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","<code>true</code> if this state allows no further transitions","","","","Creates a new <code>StateTransition</code> where the <code>trigger</code> future …","Operation this state machine belongs to. See <code>OperationId</code> …","Operation this state machine belongs to. See <code>OperationId</code> …","","","","","","","","","","State transition function that, using the output of the …","All possible transitions from the current state to other …","All possible transitions from the state","","","Future that will block until a state transition is …","","","","","","","","","","","","","","","","","","","","The transaction has been accepted in consensus","","","The transaction has been created and potentially already …","","this should never happen with a honest federation and …","The transaction has been rejected by a quorum on submission","Reserved module instance id used for client-internal state …","","","State machine to (re-)submit a transaction until it is …","","","","","","","State machine for submitting transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction has been accepted in consensus","The transaction has been created and potentially already …","","this should never happen with a honest federation and …","","The transaction has been rejected by a quorum on submission","Reserved module instance id used for client-internal state …","","State machine to (re-)submit a transaction until it is …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,186,0,0,0,0,0,60,186,0,60,0,30,1,62,11,12,62,12,11,18,49,12,12,12,12,23,1,0,12,49,12,23,186,60,1,11,30,42,18,28,49,12,23,186,60,1,11,30,42,18,28,0,28,28,28,12,49,1,62,11,11,62,11,12,0,1,11,30,42,18,1,11,30,42,18,12,18,12,18,28,12,12,12,0,12,49,12,28,62,12,11,12,28,49,1,30,0,12,12,30,12,30,12,12,18,12,12,12,12,12,12,60,60,1,11,30,42,18,49,12,23,186,60,60,1,1,1,11,30,42,18,28,18,18,1,11,30,42,18,1,62,11,12,12,12,0,12,0,12,0,12,12,12,12,12,28,12,12,12,0,12,12,12,1,12,49,1,30,42,49,12,23,186,60,1,11,30,42,18,28,49,12,23,186,60,1,11,30,42,18,28,18,18,12,28,18,0,49,62,11,12,28,11,12,30,11,12,12,12,0,12,12,28,12,12,12,12,12,12,0,0,0,60,12,0,0,28,12,12,1,11,30,42,18,60,0,12,62,12,11,12,0,49,12,23,186,60,1,11,30,42,18,28,12,49,12,23,186,60,1,11,30,42,18,28,49,12,23,186,60,1,11,30,42,18,28,23,42,12,49,12,23,186,60,1,11,30,42,18,28,12,28,28,28,28,28,28,28,0,0,0,46,27,45,46,27,45,27,27,27,45,27,45,27,45,46,27,27,45,27,45,27,27,27,27,45,45,45,45,27,27,45,46,27,45,27,45,27,27,27,45,46,27,45,46,27,46,27,45,46,27,46,45,45,27,45,27,45,27,27,27,46,27,45,46,27,45,46,27,45,46,27,45,0,0,113,0,0,113,0,0,113,0,0,113,113,0,0,113,0,0,113,0,114,113,114,116,117,118,115,123,119,120,121,124,122,125,113,114,116,117,118,115,123,119,120,121,124,122,125,113,114,115,113,114,115,116,117,118,115,119,120,121,122,116,117,118,115,123,119,120,121,124,122,125,116,117,118,115,123,119,120,121,124,122,125,115,118,115,121,113,113,116,117,118,115,123,119,120,121,124,122,125,113,114,116,117,118,115,123,119,120,121,124,122,125,116,116,117,118,118,115,115,119,119,120,121,121,122,122,113,114,115,114,121,114,113,114,116,117,118,115,123,119,120,121,124,122,125,114,113,114,116,117,118,115,123,119,120,121,124,122,125,113,114,114,114,114,114,118,115,118,115,121,114,116,116,117,117,118,118,115,115,123,119,119,120,121,121,124,122,122,125,113,114,115,113,113,114,116,117,118,115,123,119,120,121,124,122,125,113,114,116,117,118,115,123,119,120,121,124,122,125,113,114,116,117,118,115,123,119,120,121,124,122,125,113,114,116,117,118,115,123,119,120,121,124,122,125,48,0,0,0,0,0,48,0,0,0,48,48,0,48,129,132,126,126,126,75,81,75,48,129,75,48,129,132,126,130,81,129,132,126,130,81,132,129,132,126,129,130,81,129,130,81,48,75,75,48,75,48,126,75,48,130,132,81,129,129,81,129,132,126,130,81,81,129,130,81,130,75,48,129,129,81,129,129,129,129,75,48,129,0,81,48,75,129,132,126,130,81,129,132,126,130,81,48,48,129,129,129,129,129,129,129,129,129,129,126,129,132,48,75,0,75,48,129,130,75,48,75,48,75,48,129,130,81,129,129,132,126,130,81,129,132,126,130,81,129,132,126,130,81,129,132,126,130,81,75,48,0,0,0,0,0,92,143,143,143,143,146,38,38,143,38,143,38,143,143,38,38,143,143,143,143,146,38,143,143,38,143,38,38,38,38,92,146,38,143,38,143,38,143,143,146,143,143,143,143,92,146,38,143,38,143,38,143,38,143,38,152,0,0,0,0,152,153,152,141,152,141,152,153,141,152,152,141,152,141,152,141,152,141,152,141,141,141,152,141,141,141,141,152,152,152,152,153,152,141,152,141,152,141,152,141,141,152,141,141,141,152,152,141,152,141,141,141,152,141,152,141,152,141,152,141,152,141,152,187,187,0,0,156,156,0,80,156,80,133,156,80,133,0,80,80,133,133,133,80,133,133,80,133,156,80,133,133,80,80,80,156,80,133,156,80,133,156,80,133,133,80,133,133,80,133,133,133,133,80,133,80,156,80,133,156,80,133,156,80,133,156,80,133,0,188,0,0,0,0,159,159,188,159,188,159,189,189,159,159,0,159,159,188,159,188,159,159,159,159,159,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,149,7,148,149,7,164,165,148,149,0,2,7,0,165,142,131,166,2,149,131,0,3,7,89,179,0,89,162,3,7,162,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,176,0,0,0,0,0,0,190,0,0,0,0,0,0,176,0,0,0,0,0,190,0,0,170,171,173,174,142,142,142,142,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,166,142,142,164,167,168,165,142,164,167,168,165,169,164,167,165,169,170,171,172,164,167,173,174,168,165,169,170,171,172,164,167,173,174,168,165,142,142,175,164,165,175,166,175,175,165,175,142,166,169,170,171,172,164,167,173,174,168,165,176,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,169,169,164,167,167,165,142,164,167,168,165,169,167,175,142,175,175,142,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,164,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,175,166,171,174,172,164,168,142,175,169,170,171,167,173,174,175,175,142,169,167,175,142,169,169,170,171,172,164,167,167,173,174,168,165,142,164,167,168,165,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,190,175,142,166,169,170,171,172,164,167,173,174,168,165,176,166,166,191,191,192,0,0,0,149,179,148,149,179,148,149,148,149,148,149,148,149,148,149,149,179,148,149,148,149,179,148,149,179,148,149,149,148,148,179,148,148,179,149,149,148,149,179,148,149,179,148,149,179,148,149,179,148,149,0,0,0,3,0,0,3,0,0,0,0,0,7,180,89,162,14,131,89,162,14,131,89,7,14,131,89,89,14,131,89,14,89,14,89,14,89,14,131,14,14,89,14,14,14,14,89,89,89,89,7,89,14,131,89,162,14,131,89,14,89,14,131,14,131,89,14,131,131,162,14,131,89,89,162,14,131,89,14,14,131,131,162,3,7,89,89,89,89,14,89,14,131,89,162,3,7,89,89,162,162,14,131,89,162,14,131,89,162,14,131,89,162,14,131,89,0,193,193,88,0,0,88,0,88,88,0,0,0,0,0,35,57,35,65,57,0,35,65,0,87,0,0,87,0,0,87,35,65,57,87,35,65,57,87,57,35,65,57,35,65,57,57,87,87,87,87,87,87,35,65,57,87,35,65,57,35,57,35,65,57,87,35,65,35,65,57,87,35,57,65,57,0,35,65,35,65,57,35,65,57,87,35,65,57,87,35,65,57,87,35,65,57,87,57,57,57,57,88,88,0,88,0,88,0,0,0,184,88,184,88,184,88,184,88,88,184,88,88,88,88,88,88,88,88,88,88,184,88,184,88,88,184,88,184,88,184,88,184,88,88,88,88,184,88,88,88,0,0,184,88,184,88,0,184,88,184,88],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[0,[3,4,5]]],6],[[2,[8,[7]]],[[10,[[8,[9]]]]]],[[11,2,[8,[7]]],[[10,[[8,[9]]]]]],[[12,13,[15,[[14,[1]]]]],6],[[],16],[12,17],[11,16],[18,16],0,0,[12,16],[[12,19,20],[[22,[21]]]],[[12,19,[15,[20]]],[[22,[21]]]],[[23,24],[[26,[25]]]],[[1,19,24],[[26,[25]]]],0,[[12,27],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[1]]],[[8,[7]]]],[[28,29],[[22,[30]]]],[[28,29],22],[[28,29],[[22,[30]]]],[[],28],[[31,32,32,33],31],[[1,2,[35,[[0,[34,4,5]],[0,[[7,[1]],4,5]]]]]],[[2,36],[[10,[[8,[9]]]]]],[[11,2,36],[[10,[[8,[9]]]]]],0,[[],37],[11,37],0,[[[39,[38]],40],[[22,[41]]]],[1,1],[11,11],[30,30],[42,42],[18,18],[[]],[[]],[[]],[[]],[[]],[12,37],[18,37],0,0,0,[[[43,[12]]],44],[[12,27],[[22,[45]]]],[[12,27],[[22,[46]]]],0,[12,47],0,0,0,[[],41],[12,41],[11,41],0,[[],28],[[[49,[48]]]],[1],[30],0,[12,[[22,[50]]]],[[37,51,16],[[22,[50]]]],[30,42],[12,[[22,[[52,[45]]]]]],[30],0,[12,53],[18,53],0,0,[[12,19,54,[0,[55,56,4,5]],57],22],[[12,13,19,57],22],[[12,13,19,57],22],[[12,58],59],[[60,58],59],[[60,58],59],[[1,58],59],[[11,58],59],[[30,58],59],[[42,58],59],[[18,58],59],[[]],[[]],[[]],[[]],[[]],[61,60],[[[43,[62]]],1],[[[0,[62,4,5]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[22,[18]]]],[63,[[22,[18]]]],[[]],[[]],[[]],[[]],[[]],[[1,2,[65,[[0,[64,4,5]],[0,[[7,[1]],4,5]]]]],22],[[2,66],[[10,[[8,[9]]]]]],[[11,2,66],[[10,[[8,[9]]]]]],[12,[[67,[19]]]],[12,68],[12,21],[[47,[52,[18]]],[[22,[37]]]],[12,37],[47,[[52,[37]]]],[12,69],[47,[[22,[70]]]],[12,[[22,[70]]]],[12,71],[29,71],[12,72],[29,72],[28,[[22,[53]]]],[[12,73],[[52,[74]]]],[12,[[49,[48]]]],[12,22],[47,[[52,[63]]]],[[12,54],[[52,[25]]]],[[12,74],75],[[12,74],[[22,[75]]]],[1,52],[[12,19],76],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[18,[[52,[63]]]],0,[[37,[39,[38]],16,47],[[22,[50]]]],[28,[[22,[70]]]],[[18,54],[[22,[[52,[78]]]]]],0,0,[[],79],[11,79],0,0,0,0,[[[43,[12]]],30],0,[[13,19],76],[12,80],0,0,[12,81],0,0,[[37,[39,[38]],16,47],[[22,[50]]]],[[12,[52,[45]]],[[22,[27]]]],[12,29],0,[12,[[22,[70]]]],0,0,0,0,[60,[[52,[82]]]],[[[43,[12]]]],[[74,[83,[[8,[7]]]]],[[83,[[14,[1]]]]]],[[[83,[[0,[[7,[1]],4,5]]]]],[[83,[[8,[7]]]]]],[[28,84],22],[12,[[85,[21]]]],[[37,51],86],[[]],[[]],[[]],[[]],[[]],[[],25],0,[[12,57],87],[19,[[10,[[8,[9]]]]]],[[12,19],[[85,[[89,[88]]]]]],[[11,19],[[10,[[8,[9]]]]]],[[12,19],23],[[63,90],[[22,[37]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[12,74],[[52,[75]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],0,[42,[[52,[30]]]],[[12,46],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,22],[[28,47]],[[28,18]],[[28,92]],[[28,51]],[[28,30]],[[28,74]],[[28,93]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[[]],[[94,41],[[26,[27,95]]]],[[94,41],[[26,[45,95]]]],[[27,96],[[26,[90,97]]]],[[45,96],[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[[46,71,41],[[22,[45]]]],[98,[[26,[27]]]],[[],27],[[45,71],[[22,[46]]]],[[27,27],76],[[45,45],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[99,[[26,[100,101]]]],[[27,58],59],[[45,58],59],[[]],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[108,27],[[[15,[102]]],27],[[]],[90,90],[[]],[[]],[[]],[[46,72],[[22,[109]]]],[27,[[15,[102]]]],[[],77],[[],77],[[],77],[46,76],[27,76],[46,90],0,0,[[27,110],26],0,[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[27,[[22,[78]]]],[27,[[22,[112]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[114,114],[115,115],[[]],[[]],[[]],[[94,41],[[26,[116,95]]]],[[94,41],[[26,[117,95]]]],[[94,41],[[26,[118,95]]]],[[94,41],[[26,[115,95]]]],[[94,41],[[26,[119,95]]]],[[94,41],[[26,[120,95]]]],[[94,41],[[26,[121,95]]]],[[94,41],[[26,[122,95]]]],[[116,96],[[26,[90,97]]]],[[117,96],[[26,[90,97]]]],[[118,96],[[26,[90,97]]]],[[115,96],[[26,[90,97]]]],[[123,96],[[26,[90,97]]]],[[119,96],[[26,[90,97]]]],[[120,96],[[26,[90,97]]]],[[121,96],[[26,[90,97]]]],[[124,96],[[26,[90,97]]]],[[122,96],[[26,[90,97]]]],[[125,96],[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],0,[99,[[26,[100,101]]]],[99,[[26,[100,101]]]],[99,[[26,[100,101]]]],[[113,58],59],[[113,58],59],[[116,58],59],[[117,58],59],[[118,58],59],[[115,58],59],[[123,58],59],[[119,58],59],[[120,58],59],[[121,58],59],[[124,58],59],[[122,58],59],[[125,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[]],[[]],[[]],[[114,90],[[52,[113]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],114],[114,90],0,[114,52],[114,52],[[114,90],52],0,0,[[118,110],26],[[115,110],26],[[121,110],26],[114],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[]],[[]],[[]],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[126,[48]],19,54,108]],[[[126,[48]],[15,[[14,[1]]]]],6],[[[126,[48]],[15,[[14,[1]]]]],6],[[],127],[81,75],[[19,20],[[10,[[8,[9]]]]]],[[128,19,20],[[10,[[8,[9]]]]]],[[[129,[48]],19,[15,[20]]],[[22,[21]]]],[74,[[10,[[8,[9]]]]]],[128,[[10,[[8,[9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,32,32,33],31],0,0,0,[129,129],[130,130],[81,81],[[]],[[]],[[]],[[]],[74,131],[[74,13,19,21],[[10,[[8,[9]]]]]],[[128,13,19,21],[[10,[[8,[9]]]]]],[[74,13,19,21],[[10,[[8,[9]]]]]],[[128,13,19,21],[[10,[[8,[9]]]]]],0,[[],104],[[],104],[[],130],[[[132,[48]]]],[81],[[[129,[48]],19,54,[0,[55,56,4,5]],57],22],[[129,58],59],[[81,58],59],[[]],[[]],[[]],[[]],[[]],[[[0,[75,4,5]]],81],[[]],[[]],[[]],[130,30],[[74,13],[[10,[[8,[9]]]]]],[[128,13],[[10,[[8,[9]]]]]],[[[129,[48]]],37],[[[129,[48]]],22],[81,52],[[[129,[48]],19],[[22,[133]]]],[[[129,[48]]],15],[[[129,[48]]],16],[[[129,[48]]],47],[[[103,[134]]],[[10,[[8,[9]]]]]],[[128,[103,[134]]],[[10,[[8,[9]]]]]],[[[129,[48]],19],76],0,0,[[],[[52,[135]]]],[136,[[52,[135]]]],[[]],[[]],[[]],[[]],[[]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],73],[[128,13],[[10,[[8,[9]]]]]],[[[129,[48]],[35,[137,137]]],35],[[[129,[48]],[65,[137,137]]],65],[[[129,[48]],137]],[[[129,[48]]],136],[[[129,[48]]],138],[[[129,[48]],7],14],[[[129,[48]],139],40],[[[129,[48]],[0,[55,5]],[52,[90]]],[[26,[140]]]],[[[129,[48]]],47],0,[[[126,[48]]],13],0,0,[[],[[52,[135]]]],[138,[[52,[135]]]],0,[[74,[52,[141]]],[[10,[[8,[9]]]]]],[[128,52],[[10,[[8,[9]]]]]],[[[129,[48]]],[[132,[48]]]],[[130,42]],[[],[[10,[[8,[9]]]]]],[128,[[10,[[8,[9]]]]]],[[],76],[[],76],[[],76],[[],76],[[]],[[]],[[]],[[[129,[48]],19],23],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],[[]],[[13,74,[142,[1]]],[[10,[[8,[9]]]]]],[[128,13,74,[142,[1]]],[[10,[[8,[9]]]]]],0,0,0,0,0,0,[[[143,[92]]],16],0,[[[143,[92]]],144],0,[[],145],[38,146],[38,145],[[]],[[]],[[]],[[]],[[[143,[92]]]],0,[38,38],[[]],[[[143,[92]]],129],0,[[[143,[92]]],47],0,[[],104],[38],[[[143,[92]]],53],0,[[38,58],59],[[]],[[]],[[[0,[146,4,5]]],38],[[]],[38,52],[143,[[10,[[8,[9]]]]]],[[130,53,147,47,74,144,29,[148,[1]],16],[[10,[[8,[9]]]]]],0,[[]],[[]],[[],77],[[],77],[[[143,[92]]],79],0,[[],73],[[[143,[92]]],29],0,[[[143,[92]]],[[149,[1]]]],0,[[],150],[[],150],[[]],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[]],[[]],0,0,0,0,0,0,[[],127],[[],127],[[]],[[]],[[]],[[]],[74,141],[141,141],[151,141],[152,152],[[]],[[]],[[94,41],[[26,[141,95]]]],[[94,41],[[26,[152,95]]]],[[141,96],[[26,[90,97]]]],[[152,96],[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[141],[141],[[141,141],76],[[152,152],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[141,76],[141,76],[[141,58],59],[[152,58],59],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[74,[8,[153]]],141],[[]],[[]],[[74,[0,[153,4,5]]],141],0,[[]],[[]],[[152,74]],[[],77],[[],77],[141,74],0,[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[]],[[]],0,0,0,0,0,0,0,[[80,13,19,54,108]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,19,[0,[154,4]]],[[85,[[0,[56,108,155,4,5]]]]]],[80,80],[[]],[[94,41],[[26,[133,95]]]],[[133,96],[[26,[90,97]]]],[96,[[26,[90,97]]]],0,[98,[[26,[133]]]],[99,[[26,[100,101]]]],[[80,58],59],[[133,58],59],[[]],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[]],[[80,19],[[52,[133]]]],[[13,19],[[52,[133]]]],[[]],[[]],[[]],[[],77],[[],77],[[],77],[[[156,[[0,[4,5]]]]],[[85,[[0,[4,5]]]]]],[[80,90,[52,[115]]],15],[133,78],0,[47,80],[133,54],0,[[47,19,[0,[108,155]]]],[133,[[52,[78]]]],0,[[133,47,19,157],[[156,[[0,[56,108,78,155,4,5]]]]]],[[133,110],26],[[47,19,[0,[108,155]]],22],[[],[[15,[102,111]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[94,[[26,[95]]]],[94,[[26,[95]]]],[96,[[158,[90]]]],[96,[[158,[90]]]],[[],29],[74,29],[[159,58],59],[[]],[[29,53],29],[[]],[[],77],[[[0,[160,161]]]],[[[0,[160,161]]]],[[],29],[[],29],[[],26],[[],26],[[],91],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],127],0,0,[74,14],0,0,0,0,0,0,[14,76],0,0,0,0,0,0,0,0,0,[[],19],[[],19],0,0,0,0,0,[[],[[15,[162]]]],[131,[[15,[[162,[14]]]]]],0,0,0,[[]],[[]],0,[[]],[2,13],[[]],[[],77],0,[2,13],[[13,74],2],[[],26],[[],26],[[],91],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[142,[163]],[15,[[14,[163]]]]],22],[[[142,[163]],13,[15,[[14,[163]]]]],6],[[[142,[163]],[14,[163]]],164],[[[142,[163]],[14,[163]]],165],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[166,47,[148,[163]]],[[142,[163]]]],[[],166],[[[142,[[0,[56,163]]]]],[[142,[[0,[56,163]]]]]],[164,164],[[[167,[56]]],[[167,[56]]]],[[[168,[56]]],[[168,[56]]]],[165,165],[[]],[[]],[[]],[[]],[[]],[[94,41],[[26,[[169,[163]],95]]]],[[94,41],[[26,[164,95]]]],[[94,41],[[26,[[167,[163]],95]]]],[[94,41],[[26,[165,95]]]],[[169,96],[[26,[90,97]]]],[[170,96],[[26,[90,97]]]],[[171,96],[[26,[90,97]]]],[[172,96],[[26,[90,97]]]],[[164,96],[[26,[90,97]]]],[[[167,[163]],96],[[26,[90,97]]]],[[173,96],[[26,[90,97]]]],[[174,96],[[26,[90,97]]]],[[168,96],[[26,[90,97]]]],[[165,96],[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[[[142,[163]],74,3],76],[[[142,[163]],74,3],76],0,0,0,0,[[],166],[175],[[[175,[163]],[43,[55]]],22],0,[[[175,[163]],58],59],[[[142,[[0,[155,163]]]],58],59],[[166,58],59],[[[169,[155]],58],59],[[[170,[155]],58],59],[[[171,[155]],58],59],[[[172,[155]],58],59],[[164,58],59],[[[167,[155]],58],59],[[[173,[155]],58],59],[[[174,[155]],58],59],[[[168,[155]],58],59],[[165,58],59],[[[176,[155]],58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[]],[[]],[[]],[[]],[[]],[14,169],[14,167],[[[175,[163]]],15],[[[142,[163]]],15],[[[175,[163]]],15],[[[175,[163]],[14,[163]],164,[43,[55]]],[[52,[177]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[164,165],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],0,0,0,0,[[],172],[[],164],[[],168],[[[142,[163]]],[[148,[163]]]],0,0,0,0,0,0,0,[[[175,[163]],[43,[55]]]],0,[[[142,[163]],[43,[55]]]],0,0,[175,[[52,[178]]]],[[[142,[163]]],[[52,[178]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[166,74,137]],[[166,131]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[148,[56]]],[[148,[56]]]],[[[149,[56,56]]],[[149,[56,56]]]],[[]],[[]],0,0,[[[149,[155,155]],58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],77],[[],77],[[],77],0,[[148,74],149],[47,148],[[179,14]],[[148,14]],[148,179],0,[[[149,[163,3]],19],[[85,[3]]]],[[[149,[163,3]]],[[85,[3]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],127],[[],127],[[],127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,14],[14,14],[131,131],[[[89,[3]]],[[89,[3]]]],[151,14],[[]],[[]],[[]],[[94,41],[[26,[[14,[163]],95]]]],[[94,41],[[26,[[89,[3]],95]]]],[[14,96],[[26,[90,97]]]],[[[89,[3]],96],[[26,[90,97]]]],[96,[[26,[90,97]]]],[96,[[26,[90,97]]]],[14],[131],[14],[[14,14],76],[[[89,[3]],[89,[3]]],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[14,76],[14,76],[[14,58],59],[[131,58],59],[[[89,[155]],58],59],[[]],[[]],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[74,[8,[7]]],14],[[74,[43,[180]]],131],[[]],[[]],[[]],[[74,7],14],[[74,[0,[180,4,5]]],131],0,[[]],[[]],[[]],[[]],[[[89,[3]],74]],[[],77],[[],77],[[],77],[[],77],[[14,131],76],[14,74],[131,74],0,[[[0,[9,4]],[0,[55,4,5,56]]],[[162,[[0,[4,5,56]]]]]],[[],19],[[],19],[[[89,[3]]],19],[[],19],0,0,[[],[[15,[102,111]]]],[[],[[15,[102,111]]]],[[]],[[]],[[]],0,[[],[[15,[162]]]],[131,[[15,[[162,[14]]]]]],[[[89,[3]]],[[15,[[162,[[89,[3]]]]]]]],[131,[[15,[[162,[14]],111]]]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],0,0,[[[0,[55,56,4,5]],[0,[55,56,4,5]]],[[15,[[162,[[0,[4,5]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],104],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,[183,[[0,[181,182]]]],[0,[160,161]]]],[[[35,[56,56]]],[[35,[56,56]]]],[[[65,[56,56]]],[[65,[56,56]]]],[57,57],[[]],[[]],[[]],[[],57],[[87,87],76],[[],76],[[],76],[[],76],[[],76],[[87,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[[35,[137,137]],74],35],[[[65,[137,137]],74],65],[[],77],[[],77],[[],77],[[],77],0,[[],57],0,0,[[[83,[137]],74],[[83,[[14,[1]]]]]],0,0,[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],[[57,35],57],[[57,[15,[35]]],57],[[57,65],57],[[57,[15,[65]]],57],0,0,0,0,0,0,0,0,0,[[],127],[[],127],[[]],[[]],[[]],[[]],[184,184],[151,14],[88,88],[[]],[[]],[[94,41],[[26,[88,95]]]],[[88,96],[[26,[90,97]]]],[96,[[26,[90,97]]]],[[88,88],76],[[],76],[[],76],[[],76],[[],76],[14,76],[[184,58],59],[[88,58],59],[[]],[[]],[[[103,[102]],[106,[104,105]]],[[26,[107]]]],[[]],[[]],[[]],[[]],[[184,74]],[[88,74]],[[],77],[[],77],[[],19],[88,19],[[],[[15,[102,111]]]],[[]],[[]],[[88,1],[[15,[[162,[88]]]]]],[131,[[15,[[162,[14]],111]]]],[[24,1],[[26,[25]]]],[[185,1],[[26,[25,25]]]],[[],26],[[],26],[[],26],[[],26],[[],104],[[],91],[[],91],[[]],[[]]],"c":[],"p":[[3,"DynGlobalClientContext"],[3,"ClientSMDatabaseTransaction"],[8,"State"],[8,"MaybeSend"],[8,"MaybeSync"],[6,"AddStateMachinesResult"],[8,"IState"],[3,"Box"],[8,"Future"],[3,"Pin"],[3,"ModuleGlobalClientContext"],[3,"Client"],[3,"DatabaseTransaction"],[3,"DynState"],[3,"Vec"],[3,"DynGlobalApi"],[8,"IGlobalFederationApi"],[3,"FederationInfo"],[3,"OperationId"],[3,"OutPoint"],[3,"Amount"],[6,"Result"],[3,"TransactionUpdates"],[3,"TransactionId"],[3,"String"],[4,"Result"],[3,"Metadata"],[3,"ClientBuilder"],[3,"DerivableSecret"],[3,"ClientArc"],[15,"u64"],[3,"NodeId"],[3,"ChannelUsage"],[8,"IInput"],[3,"ClientInput"],[6,"InstancelessDynClientInput"],[3,"ClientConfig"],[3,"DynClientModuleInit"],[3,"ModuleInitRegistry"],[8,"Iterator"],[6,"ModuleDecoderRegistry"],[3,"ClientWeak"],[3,"Arc"],[6,"ModuleGlobalContextGen"],[3,"ClientBackup"],[3,"EncryptedClientBackup"],[3,"Database"],[8,"ClientModule"],[3,"ClientModuleInstance"],[3,"ApiVersionSet"],[6,"ClientModuleInitRegistry"],[4,"Option"],[3,"FederationId"],[15,"str"],[8,"Fn"],[8,"Clone"],[3,"TransactionBuilder"],[3,"Formatter"],[6,"Result"],[4,"AddStateMachinesError"],[3,"Error"],[8,"IGlobalClientContext"],[3,"InviteCode"],[8,"IOutput"],[3,"ClientOutput"],[6,"InstancelessDynClientOutput"],[3,"HashSet"],[3,"PublicKey"],[3,"JsonClientConfig"],[8,"Decodable"],[3,"LessSafeKey"],[3,"KeyPair"],[3,"ModuleKind"],[6,"ModuleInstanceId"],[8,"IClientModule"],[15,"bool"],[3,"Request"],[8,"DeserializeOwned"],[3,"DynModuleApi"],[3,"OperationLog"],[3,"DynClientModule"],[8,"Error"],[6,"StateGenerator"],[8,"Encodable"],[6,"BoxStream"],[3,"SupportedApiVersionsSummary"],[4,"TransactionBuilderBalance"],[4,"TxSubmissionStates"],[3,"OperationState"],[15,"usize"],[3,"TypeId"],[8,"ClientModuleInit"],[8,"IRawDatabase"],[8,"Read"],[3,"DecodeError"],[8,"Write"],[3,"Error"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Serialize"],[3,"SignedBackupRequest"],[8,"Serializer"],[3,"Global"],[4,"Value"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ChronologicalOperationLogKey"],[3,"EncodedClientSecretKey"],[3,"EncodedClientSecretKeyPrefix"],[3,"OperationLogKey"],[3,"CachedApiVersionSetKey"],[3,"CachedApiVersionSet"],[3,"ClientConfigKey"],[3,"ClientInviteCodeKey"],[3,"ChronologicalOperationLogKeyPrefix"],[3,"ClientConfigKeyPrefix"],[3,"ClientInviteCodeKeyPrefix"],[3,"ClientDbTxContext"],[8,"Any"],[8,"Sync"],[3,"ClientContext"],[3,"FinalClient"],[3,"DynContext"],[3,"ClientContextSelfRef"],[3,"OperationLogEntry"],[3,"OsString"],[3,"TransactionItemAmount"],[3,"DynInput"],[8,"IntoDynInstance"],[3,"DynOutput"],[8,"IntoIterator"],[4,"AutocommitError"],[3,"DynModuleBackup"],[3,"Executor"],[3,"ClientModuleInitArgs"],[3,"ApiVersion"],[8,"IDynCommonModuleInit"],[8,"IClientModuleInit"],[3,"ClientModuleConfig"],[3,"Notifier"],[3,"ModuleNotifier"],[3,"MultiApiVersion"],[15,"u16"],[4,"NoModuleBackup"],[8,"IModuleBackup"],[8,"Stream"],[8,"Debug"],[4,"UpdateStreamOrOutcome"],[8,"FnOnce"],[6,"Result"],[3,"PlainRootSecretStrategy"],[8,"RngCore"],[8,"CryptoRng"],[3,"StateTransition"],[8,"GlobalContext"],[3,"ActiveState"],[3,"InactiveState"],[3,"ExecutorBuilder"],[3,"InactiveStateKey"],[3,"InactiveStateKeyPrefix"],[3,"ActiveStateKey"],[3,"ActiveOperationStateKeyPrefix"],[3,"ActiveModuleOperationStateKeyPrefix"],[3,"ActiveStateKeyPrefix"],[3,"InactiveOperationStateKeyPrefix"],[3,"InactiveModuleOperationStateKeyPrefix"],[3,"ExecutorInner"],[4,"ActiveOrInactiveState"],[6,"BoxFuture"],[3,"Receiver"],[3,"NotifierSender"],[8,"IContext"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[3,"TxSubmissionContext"],[3,"Transaction"],[4,"DatabaseSource"],[13,"Default"],[8,"RootSecretStrategy"],[8,"DeriveableSecretClientExt"],[4,"ExecutorDbPrefixes"],[13,"Active"],[13,"Inactive"],[8,"MapStateTransitions"]]},\
"fedimint_core":{"doc":"","t":"NDNEIESQDQSNNIDEDCCDRNSOOOOLLAKLAXLLLKLLLOALALLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLAALLLLLLLLOLOOOLLAALLALLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLOLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLKLLLLLLLLLLLLLAOOLLLLLLLLLKLLLLLLLLLALOOAOOOOOOOFMLALMLLLLLOOOOOALLFMLOLLLLLLOCALLLLALAAAALLLLLLLLLLLLLLLLLLLKALLLLLLLLLLLLLLLLLMALLLLLLLLALLLLLLLLFLDDDDDDLMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMMMMLMMMMLLALLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFFNDNRNNNNNNDDNIDNDGDIIIINNNDEIGEGEEDGDNNNNNGENDNNNDKLLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLMLLLLLLLLLLLLLFKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMMLLLLMMMLMMMMMLLKLLMLLLLLLLMKLKLMLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMLLLLLLLLLLLLLLLLKLMMMMMMMDDDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDRRRLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLGDLLLLLLLLLLLLNDDNGDQQNEIEEGNDNNDDNNDNIDDQQRRRIDNNDQNIDGDGNEIIMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMMFLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKKLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMMLFMMMMMMLLLLLLMLLAALLLLLLLLLLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMKMMLLLLLLLLLLLLLLLLLLFFDLLFLLLLLFLLLLLIGDDDDDDDDDQDEIIIIIIIIIIDRRRRIGDDIIINLKKKKKKKLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLALLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLMLLLLMMLLLMMLLLLLLLLLLDIKKKLLLLKKLLLLLLMLLKKKKLLLLLNEDDNNNNDDSDIIIIIDIDNDEDEIIIIIIIIQREGSSDNNNGDDGQNEQQINNLLFLMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMKKLLLLLLLLLLLFKLMLLLLLLLLLLLLLLFKLFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLFLLLKLMMLMLMMMKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMAMFLLLLLLAMMKLLMLLMLLLLMMKKLLLLLLMMKLLLKLLLKLLLKLLLKLLLKLLLKLLKLKLKLLLLLKLLLLAKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMDDENDNDDLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLLLLLMLLLLLLLLLLLLLMLLLLLLMLLLLLLRDDLLLLLMMLLLLLLLLLLLLLLFFLLLLLLLLLRDNDDDDDNRNEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFLLLLLLLLLLDDIYDNIEIYNALLLLLLLLALLLLLLKLLLKLLLKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOMLLLLLLLLLLLLLLALAALLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFOORRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRENNNLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDIDKLLLLLLLLLLFLLLLLFFFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLAFFADLLLLLLLMLLLLLLLDDDDDGDSQQQQIQDSDDGGIIQQQDSIDIDDQQQSQQDQDIIDQDDDDISMMMMMOKKLLAKMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLKMMMKLMMLMKKLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLKMLMLLKKMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKLMLLLLLLLMKMLMLKKKMALMLLLLKKLMKLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKAKLLLLLLLLLLLLLLLLDDDDLLLLLLLLLFLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLENGCDNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAIIDDKKLLLLLLLLLALLLLLLLLLKKKKLLLLLLLLLDLLLLLLFMLMLMLLMLLDNDDNDDEIDNNDDDMMLLLLLLLLLLLLLLLLLLLLMMFFFMMMMMMMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLDIIDDDDDDDDFLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMLLLMMLLMLLLLLMMMMMMLLLFFFLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDFMMMMMMMMMMMMMFFFFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLLLLLLLMLLLLLMMLLMLMLLLLLLLLLNNNNNNGDEENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMDLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLGGIQDLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLFFFFDENLLLLLLLLLLLLLLLLLLMLLLLLFLLLLLLLLLLLLLLL","n":["All","Amount","Amount","BitcoinAmountOrAll","BitcoinHash","CoreError","DISPLAY_BACKWARD","Engine","Feerate","Inner","LEN","MismatchingVariant","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","ServerModule","Tiered","TransactionId","WITNESS_SCALE_FACTOR","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_define_with_instance_id_inner","_dyn_newtype_impl_deref_mut","add","add_assign","admin_client","all_zeros","all_zeros","api","apply","as_bits","as_byte_slice","as_hash","as_inner","as_inner","as_ref","as_slice_of","async_trait_maybe_send","backup","base32_len","bitcoinrpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","cancellable","check_base32","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","db","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_as_encodable_hex","div","dyn_newtype_define","dyn_newtype_display_passthrough","dyn_newtype_impl_dyn_clone_passthrough","encode_hex","encode_hex_upper","encoding","endpoint_constants","engine","engine","epoch","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extensible_associated_module_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_utils","from","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_msats","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_sats","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","hash","hex","impl_db_lookup","impl_db_record","index","into","into","into","into","into","into","into","into","into_inner","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","macros","max_evil","maybe_add_send","maybe_add_send_sync","module","module_plugin_dyn_newtype_clone_passthrough","module_plugin_dyn_newtype_define","module_plugin_dyn_newtype_display_passthrough","module_plugin_dyn_newtype_encode_decode","module_plugin_dyn_newtype_eq_passthrough","module_plugin_static_trait_define","module_plugin_static_trait_define_config","msats","msats","mul","net","one_honest","out_idx","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl_common","plugin_types_trait_impl_config","push_db_key_items","push_db_pair_items","push_db_pair_items_no_serde","query","rem","rem_assign","sats","sats_per_kvb","saturating_sub","serde_as_encodable_hex","serialize","serialize","serialize","serialize","serialize","serialize","serialize_as_encodable_hex","server","session_outcome","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","time","timing","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_usize","total","transaction","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight_to_vbytes","write_base32","ConfigGenConnectionsRequest","ConfigGenParamsConsensus","ConfigGenParamsRequest","ConfigGenParamsResponse","PeerServerParams","WsAdminClient","add_config_gen_peer","api_url","audit","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_config_gen_params","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_config_gen_peers","get_default_config_gen_params","get_verify_config_hash","inner","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","leader_api_url","meta","meta","modules","modules","name","new","our_current_id","our_name","p2p_url","peers","request","run_dkg","serde_tls_cert","serialize","serialize","serialize","serialize","serialize","set_config_gen_connections","set_config_gen_params","set_password","start_consensus","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","Api","ApiVersionSet","AwaitingPassword","BECH32_HRP","ConfigGenFailed","Connected","ConsensusRunning","Core","Default","Disconnected","DynGlobalApi","DynModuleApi","Federation","FederationApiExt","FederationError","FederationId","FederationPeer","FederationResult","FederationStatus","GlobalFederationApi","IFederationApi","IGlobalFederationApi","IModuleFederationApi","InvalidPeerId","InvalidResponse","InvalidVout","InviteCode","InviteCodeData","JsonRpcClient","JsonRpcResult","OutputOutcomeError","OutputOutcomeResult","PeerConnectionStatus","PeerError","PeerResponse","PeerResult","PeerStatus","ReadyForConfigGen","Rejected","ResponseDeserialization","ResponseDeserialization","Rpc","SerdeOutputOutcome","ServerStatus","SharingConfigGenParams","StatusResponse","Timeout","VerifiedConfigs","VerifyingConfigs","WsFederationApi","all_peers","all_peers","as_ref","await_block","await_block","await_output_outcome","await_output_outcome","await_transaction","await_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_status","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","default","default","default","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_outcome","discover_api_version_set","discover_api_version_set","download_backup","download_backup","download_client_config","download_client_config","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation","federation_id","flagged","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_config","from_invite_code","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","general","general","get_mut","get_mut","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_connected","is_retryable","is_retryable","last_contribution","module_id","modules","new","new","new_with_client","peer","peer","peer_id","peer_ids","peers","peers","peers","peers_flagged","peers_offline","peers_online","request","request_current_consensus","request_raw","request_raw","request_with_strategy","result","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","server_config_consensus_hash","server_config_consensus_hash","session_count","session_count","session_count","source","source","status_by_peer","submit_transaction","submit_transaction","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_backup","upload_backup","url","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module","bytes","peer","url","variant","out_idx","outputs_num","peer_id","ClientBackupKey","ClientBackupKeyPrefix","ClientBackupSnapshot","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","into","into","into","into_request","into_request","into_request","serialize","serialize","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BitcoinRpcConfig","FM_BITCOIND_COOKIE_FILE_VAR_NAME","FM_BITCOIN_RPC_KIND","FM_BITCOIN_RPC_URL","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_env_vars","from_ref","hash","into","into_request","kind","serialize","to_bytes","to_owned","try_from","try_into","type_id","url","vzip","Cancellable","Cancelled","borrow","borrow_mut","fmt","fmt","from","into","into_request","to_string","try_from","try_into","type_id","vzip","Cancelled","ClientConfig","ClientModuleConfig","Commit","CommonModuleInitRegistry","ConfigGenModuleParams","Consensus","Consensus","DistributedGen","DkgError","DkgGroup","DkgMessage","DkgPeerMsg","DkgResult","Done","EmptyGenParams","Extract","Failed","FederationId","FederationIdPrefix","G1","G2","GlobalClientConfig","HashedCommit","ISupportedDkgMessage","JsonClientConfig","JsonWithKind","Local","Local","META_FEDERATION_NAME_KEY","META_OVERRIDE_URL_KEY","META_VETTED_GATEWAYS_KEY","ModuleInitParams","ModuleInitRegistry","ModuleNotFound","ParamsNotFound","PeerUrl","Private","PublicKey","SGroup","ServerModuleConfig","ServerModuleConfigGenParamsRegistry","ServerModuleConsensusConfig","ServerModuleInitRegistry","Share","SupportedDkgMessage","TypedServerModuleConfig","TypedServerModuleConsensusConfig","api_endpoints","attach","available_decoders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","config","config","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash","consensus_json","consensus_version","de_int_key","decoders","decoders_strict","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","dummy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_array","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_erased","from_iter","from_msg","from_msg","from_msg","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_typed","from_typed","get","get_first_module_by_kind","get_first_module_by_kind_cfg","get_module","get_module_cfg","global","global","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_kind","is_kind","kind","kind","kind","kind","kind","kind","kinds","load_from_file","local","local","meta","modules","modules","name","new","new","new","parse","partial_cmp","partial_cmp","private","redecode_raw","redecode_raw","serde_binary_human_readable","serde_commit","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","source","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_common","to_common","to_erased","to_fake_ln_pub_key","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_prefix","to_string","to_string","to_typed","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","value","value","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","deserialize","serialize","Wrap","borrow","borrow_mut","deserialize","deserialize","erased_serialize","from","into","into_request","serialize","serialize","try_from","try_into","type_id","vzip","ClientConfig","DecodeFn","Decoder","DecoderBuilder","DynClientConfig","DynInput","DynInputError","DynModuleConsensusItem","DynOutput","DynOutputError","DynOutputOutcome","DynType","DynUnknown","FinalizationError","IClientConfig","IInput","IInputError","IModuleConsensusItem","IOutput","IOutputError","IOutputOutcome","Input","InputError","IntoDynInstance","KeyPair","LEGACY_HARDCODED_INSTANCE_ID_LN","LEGACY_HARDCODED_INSTANCE_ID_MINT","LEGACY_HARDCODED_INSTANCE_ID_WALLET","MODULE_INSTANCE_ID_GLOBAL","ModuleConsensusItem","ModuleInstanceId","ModuleKind","OperationId","Output","OutputError","OutputOutcome","SomethingWentWrong","add_xonly_tweak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","as_str","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_str","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode","decode_fns","decode_fns","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","display_secret","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_static_str","from_str","from_str","from_typed","from_typed","from_typed","from_typed","from_typed","from_typed","from_typed","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","inner","inner","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","new","new_global","new_random","partial_cmp","partial_cmp","public_key","secret_bytes","secret_key","serialize","serialize","serialize","server","sign_schnorr","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_decodable_type","x_only_public_key","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","deserialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","DynServerModule","IServerModule","api_endpoints","as_any","audit","borrow","borrow_mut","clone","clone_into","consensus_proposal","decoder","deref","fmt","from","from","from_ref","get_mut","inner","into","into_request","output_status","process_consensus_item","process_input","process_output","to_owned","try_from","try_into","type_id","vzip","AltTest","AutocommitError","BaseDatabase","BaseDatabaseTransaction","Borrowed","ClientBackup","ClosureError","CommitFailed","CommitTracker","Committable","DB_PREFIX","Database","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyWithNotify","DatabaseLookup","DatabaseRecord","DatabaseTransaction","DatabaseValue","DatabaseVersion","DatabaseVersion","DatabaseVersionKey","DbKeyPrefix","DbKeyPrefixIter","DecodingError","IDatabase","IDatabaseTransaction","IDatabaseTransactionOps","IDatabaseTransactionOpsCore","IDatabaseTransactionOpsCoreTyped","IRawDatabase","IRawDatabaseExt","IRawDatabaseTransaction","Key","MODULE_GLOBAL_PREFIX","MaybeRef","MigrationMap","NOTIFY_ON_MODIFY","NOTIFY_ON_MODIFY","NonCommittable","Other","Owned","PercentTestKey","PhantomBound","PrefixDatabase","PrefixDatabaseTransaction","PrefixStream","Record","Test","TestDbKeyPrefix","Transaction","Value","WithDecoders","WrongLength","WrongPrefix","adapt_prefix_stream","add_notification_key","apply_migrations","autocommit","back_idx","begin_transaction","begin_transaction","begin_transaction","begin_transaction","begin_transaction","begin_transaction_nc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capability","channel_penalty_msat","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_tracker","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx_result","compare","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","decode_value","decoders","decoders","decoders","deref","deref_mut","drop","ensure_global","ensure_global","ensure_isolated","ensure_isolated","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","expect_write_conflict","find_by_prefix","find_by_prefix","find_by_prefix_sorted_descending","find_by_prefix_sorted_descending","find_by_prefix_sorted_descending","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future_returns_shortly","get","get_full_key","get_full_key","get_value","get_value","has_writes","idx","ignore_uncommitted","ignore_uncommitted","increment","inner","inner","inner","insert_entry","insert_entry","insert_new_entry","insert_new_entry","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_database","into_iter","into_nc","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_committed","is_global","is_global","iter","len","marker","mem_impl","module_decoders","module_instance_id_to_byte_prefix","new","new","new","new_from_arc","next","next_back","notifications","notifications","notifications","notify","notify","notify","notify_queue","nth","on_commit","on_commit_hooks","other","partial_cmp","payment_path_failed","payment_path_successful","prefix","prefix","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","probe_failed","probe_successful","raw","raw","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_get_bytes","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","raw_remove_entry","raw_remove_entry","register","register","register","remove_by_prefix","remove_by_prefix","remove_entry","remove_entry","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","serialize","serialize","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","size_hint","test_utils","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_ref","to_ref_nc","to_ref_with_prefix","to_ref_with_prefix_module_id","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_db","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_check","wait_key_exists","warn_uncommitted","with_decoders","with_prefix","with_prefix","with_prefix_module_id","with_prefix_module_id","wrong_length","wrong_prefix","attempts","attempts","error","last_error","expected","expected","found","found","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseOperation","Delete","DummyError","Insert","MemDatabase","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","db","default","default","default","dump_db","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","key","key","new","num_pending_operations","num_savepoint_operations","operations","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","rollback_tx_to_savepoint","savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","NOTIFY_BUCKETS","Notifications","NotifyQueue","add","borrow","borrow","borrow_mut","borrow_mut","buckets","buckets","default","default","fmt","fmt","from","from","into","into","into_request","into_request","new","new","notify","register","slot_index_for_hash","slot_index_for_key","submit_queue","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ALT_MODULE_PREFIX","AltDbPrefixTestPrefix","AltTest","AltTestKey","DbPrefixTestPrefix","DbPrefixTestPrefixV0","PercentPrefixTestPrefix","PercentTestKey","PercentTestKey","TEST_MODULE_PREFIX","Test","TestDbKeyPrefix","TestKey","TestKeyV0","TestVal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","cmp","cmp","compare","compare","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expect_write_conflict","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","future_returns_shortly","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","migrate_test_db_version_0","partial_cmp","partial_cmp","partial_cmp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_db","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BigSize","CountWrite","Decodable","Decodable","DecodeError","Decoded","DynEncodable","DynRawFallback","Encodable","Encodable","Raw","as_hex","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc","clone","clone","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode_hex","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_to_hex","consensus_encode_to_vec","consensus_hash","count","count","deserialize","emit_bool","emit_bool","emit_i16","emit_i16","emit_i32","emit_i32","emit_i64","emit_i64","emit_i8","emit_i8","emit_slice","emit_slice","emit_u16","emit_u16","emit_u32","emit_u32","emit_u64","emit_u64","emit_u8","emit_u8","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","expect_decoded","expect_decoded_ref","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_err","from_ref","from_ref","from_str","hash","impl_encode_decode_num_as_bigsize","impl_encode_decode_num_as_plain","impl_encode_decode_tuple","inner","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","new_custom","partial_cmp","read","read","redecode_raw","secp256k1","serialize","tbs","tls","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write","write","write","write_all","write_fixedint","write_varint","module_instance_id","raw","deserialize","serialize","impl_encode_decode_bridge","impl_external_encode_bls","ACCOUNT_ENDPOINT","ADD_CONFIG_GEN_PEER_ENDPOINT","AUDIT_ENDPOINT","AUTH_ENDPOINT","AWAIT_ACCOUNT_ENDPOINT","AWAIT_BLOCK_HEIGHT_ENDPOINT","AWAIT_OFFER_ENDPOINT","AWAIT_OUTGOING_CONTRACT_CANCELLED_ENDPOINT","AWAIT_OUTPUT_OUTCOME_ENDPOINT","AWAIT_PREIMAGE_DECRYPTION","AWAIT_SESSION_OUTCOME_ENDPOINT","AWAIT_SIGNED_SESSION_OUTCOME_ENDPOINT","AWAIT_TRANSACTION_ENDPOINT","BACKUP_ENDPOINT","BLOCK_COUNT_ENDPOINT","BLOCK_COUNT_LOCAL_ENDPOINT","CLIENT_CONFIG_ENDPOINT","CONFIG_GEN_PEERS_ENDPOINT","CONSENSUS_CONFIG_GEN_PARAMS_ENDPOINT","DEFAULT_CONFIG_GEN_PARAMS_ENDPOINT","INVITE_CODE_ENDPOINT","LIST_GATEWAYS_ENDPOINT","MODULES_CONFIG_JSON_ENDPOINT","OFFER_ENDPOINT","PEG_OUT_FEES_ENDPOINT","RECOVER_ENDPOINT","REGISTER_GATEWAY_ENDPOINT","RUN_DKG_ENDPOINT","SERVER_CONFIG_CONSENSUS_HASH_ENDPOINT","SESSION_COUNT_ENDPOINT","SET_CONFIG_GEN_CONNECTIONS_ENDPOINT","SET_CONFIG_GEN_PARAMS_ENDPOINT","SET_PASSWORD_ENDPOINT","START_CONSENSUS_ENDPOINT","STATUS_ENDPOINT","SUBMIT_TRANSACTION_ENDPOINT","VERIFIED_CONFIGS_ENDPOINT","VERIFY_CONFIG_HASH_ENDPOINT","VERSION_ENDPOINT","ConsensusItem","Default","Module","Transaction","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_bytes","from_ref","hash","into","into_request","to_bytes","to_owned","try_from","try_into","type_id","vzip","bytes","variant","AbbreviateDebug","AbbreviateHexBytes","AbbreviateJson","AbbreviatedDebug","OptStacktrace","abbreviated_fmt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_penalty_msat","deref","floor_char_boundary","fmt","fmt","fmt","fmt","fmt","fmt_abbreviated_object","fmt_abbreviated_str","fmt_abbreviated_vec","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","rust_log_full_enabled","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","serde","deserialize","serialize","tests","Data","borrow","borrow_mut","deserialize","eq","erased_serialize","fmt","from","inner","into","into_request","serialize","try_from","try_into","type_id","vzip","ApiAuth","ApiEndpoint","ApiEndpointContext","ApiError","ApiRequest","ApiRequestErased","ApiVersion","CONSENSUS_VERSION","ClientConfig","ClientConfig","Common","Common","CommonModuleInit","ConsensusItem","CoreConsensusVersion","DATABASE_VERSION","DynCommonModuleInit","DynServerModuleInit","HandlerFn","HandlerFnReturn","IDynCommonModuleInit","IServerModuleInit","Init","Input","InputError","InputMeta","KIND","ModuleCommon","ModuleConsensusVersion","ModuleInit","MultiApiVersion","MultiApiVersionIter","Output","OutputError","OutputOutcome","PATH","Param","Params","PeerHandle","Response","SerdeModuleEncoding","ServerModule","ServerModuleInit","ServerModuleInitArgs","State","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","TransactionItemAmount","TypedApiEndpoint","ZERO","_marker","amount","amount","api","api","api_endpoint","api_endpoints","as_common","as_ref","as_ref","audit","audit","auth","bad_request","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","cfg","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","commit_tx_result","consensus_proposal","core","core_consensus","core_consensus","database_version","db","db","db","dbtx","dbtx","decoder","decoder","decoder","decoder","decoder_builder","default","deref","deref","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","dump_database","dump_database","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_typed","get_client_config","get_client_config","get_database_migrations","get_database_migrations","get_mut","get_mut","handle","handler","has_auth","has_auth","hash","hash","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","major","major","major","message","minor","minor","minor","module_consensus","module_kind","module_kind","modules","new","new","new","new","new","not_found","our_peer_id","our_peer_id","output_status","params","parse_params","path","peer_ids","process_consensus_item","process_input","process_output","pub_key","registry","request_auth","request_auth","serialize","serialize","serialize","server_error","supported_api_versions","supported_api_versions","task_group","task_group","to_dyn_common","to_json","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_typed","to_typed","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner_known_module_kind","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unauthorized","validate_config","validate_config","validate_params","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_exists","wait_value_matches","with_auth","with_auth","Audit","AuditItem","AuditSummary","ModuleSummary","add_items","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_net_assets","clone","clone","clone_into","clone_into","create_empty_module_placeholder","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_audit","from_ref","from_ref","generate_module_summaries","into","into","into","into","into_request","into_request","into_request","into_request","items","kind","milli_sat","module_instance_id","module_summaries","name","net_assets","net_assets","net_assets","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DecodingMode","Fallback","ModuleDecoderRegistry","ModuleInstanceId","ModuleRegistry","Reject","ServerModuleRegistry","assert_reject_mode","assert_reject_mode","attach_config_gen_params","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decoder_registry","decoder_registry","decoding_mode","decoding_mode","default","default","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_iter","from_ref","from_ref","get","get_expect","get_with_kind","hash","inner","into","into","into_request","into_request","iter_modules","iter_modules_mut","new","register_module","state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_fallback","with_fallback","ApiVersion","CoreConsensusVersion","ModuleConsensusVersion","MultiApiVersion","MultiApiVersionIter","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","api","api","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","core_consensus","core_consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_raw","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_by_major","into","into","into","into","into","into","into","into","into_iter","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_consistent","iter","major","major","major","minor","minor","minor","module_consensus","modules","new","new","new","next","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","peers","IMuxPeerConnections","IPeerConnections","MuxPeerConnections","PeerConnections","ban_peer","ban_peer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","fake","from","from","from_ref","into","into","into_dyn","into_dyn","into_request","into_request","receive","receive","send","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FakePeerConnections","ban_peer","borrow","borrow_mut","from","into","into_request","make_fake_peer_connection","peer_id","receive","rx","send","task_handle","try_from","try_into","tx","type_id","vzip","AllOrDeadline","Continue","DiscoverApiVersionSet","ErrorStrategy","Failure","FilterMap","FilterMapThreshold","QueryStep","QueryStrategy","QueryStrategyWithRequestTimeout","Retry","Success","ThresholdConsensus","UnionResponses","UnionResponsesSingle","_ir","_or","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_versions","deadline","discover_common_api_versions_set","discover_common_core_api_version","discover_common_module_api_version","error_strategy","error_strategy","error_strategy","error_strategy","error_strategy","errors","filter_map","filter_map","filtered_responses","fmt","format_errors","from","from","from","from","from","from","from","from","from","from","full_participation","get_most_common_response","inner","inner","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","new","new","new","new","new","new","num_peers","overcome_evil","process","process","process","process","process","process","process","process","process","process","request_timeout","request_timeout","request_timeout","responses","responses","responses","responses","retry","threshold","threshold","threshold","threshold","threshold","timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_request_timeout","general","peers","AcceptedItem","SchnorrSignature","SessionOutcome","SignedSessionOutcome","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash_sha256","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","hash","header","into","into","into","into","into_request","into_request","into_request","into_request","item","items","peer","session_outcome","signatures","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","using_encoded","vzip","vzip","vzip","vzip","Elapsed","MaybeSend","MaybeSync","RwLock","RwLockReadGuard","RwLockWriteGuard","TaskGroup","TaskGroupInner","TaskHandle","TaskPanicGuard","TaskShutdownToken","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","channel_penalty_msat","clone","clone","clone_into","clone_into","completed","const_new","const_with_max_readers","data","data","default","default","default","deref","deref","deref_mut","downgrade","downgrade_map","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get_mut","imp","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_mapped","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_shutting_down","is_shutting_down","join","join_all","join_all_inner","make_handle","make_shutdown_rx","make_subgroup","map","map","marker","marker","mr","name","new","new","new","on_shutdown_rx","on_shutdown_tx","payment_path_failed","payment_path_successful","permits_acquired","poll","probe_failed","probe_successful","read","read_owned","resource_span","resource_span","resource_span","s","s","s","shutdown","shutdown","shutdown_join_all","sleep","sleep_until","spawn","spawn","spawn_local","subgroups","timeout","to_owned","to_owned","to_string","to_string","to_string","try_downgrade_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","c","data","data","marker","marker","mr","permits_acquired","resource_span","resource_span","resource_span","s","s","s","sleep","sleep_until","spawn","spawn_local","timeout","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","consensus_decode","consensus_encode","consensus_encode_dyn","count_tiers","default","deserialize","deserialize","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_iter","from_ref","from_ref","gen_denominations","get","get_mut","get_mut_or_default","hash","hash","insert","into","into","into_request","into_request","iter","max_tier","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_bytes","to_owned","to_owned","to_public","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TieredMulti","TieredMultiZip","TieredSummary","_pd","all_tiers_exist_in","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","count_items","count_items","count_tiers","count_tiers","default","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","fmt","fmt","from","from","from","from_bytes","from_iter","from_iter","from_ref","from_ref","get","get_mut","hash","inc","into","into","into","into_iter","into_iter","into_iter_items","into_request","into_request","into_request","is_empty","iter","iter","iter_items","iter_tiers","iters","longest_tier_except","multiunzip","new","new","next","represent_amount","serialize","serialize","structural_eq","summary","to_bytes","to_owned","to_owned","total_amount","total_amount","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","now","TimeReporter","TimeReporterInner","borrow","borrow","borrow_mut","borrow_mut","cancel","drop","finish","from","from","info","inner","into","into","into_request","into_request","level","level","name","new","report","start","threshold","threshold","threshold_millis","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Default","Input","InvalidSignature","InvalidWitnessLength","NaiveMultisig","Output","SerdeTransaction","Transaction","TransactionError","TransactionSignature","UnbalancedTransaction","UnsupportedSignatureScheme","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","hash","hash","inputs","into","into","into","into_request","into_request","into_request","nonce","outputs","signatures","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signatures","vzip","vzip","vzip","fee","hash","inputs","key","outputs","sig","tx","variant","bytes","variant","TxOutProof","block","block_header","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contains_tx","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_ref","hash","into","into_request","merkle_proof","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","BoxFuture","BoxStream","NextOrPending","Output","SafeUrl","as_str","borrow","borrow_mut","broadcaststream","clone","clone_into","cmp","compare","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from_bytes","from_ref","from_str","hash","host","host_str","into","into_request","join","next_or_pending","ok","parse","partial_cmp","password","path","port","port_or_known_default","scheme","serialize","to_bytes","to_owned","to_string","to_unsafe","try_from","try_into","type_id","username","vzip","write_new","write_new_async","write_overwrite","write_overwrite_async","BroadcastStream","BroadcastStreamRecvError","Lagged","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ref","inner","into","into","into_request","into_request","into_streaming_request","make_future","new","next_or_pending","ok","poll_next","to_owned","to_string","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_core"],[355,"fedimint_core::admin_client"],[508,"fedimint_core::admin_client::serde_tls_cert"],[510,"fedimint_core::api"],[928,"fedimint_core::api::InviteCodeData"],[932,"fedimint_core::api::OutputOutcomeError"],[934,"fedimint_core::api::PeerError"],[935,"fedimint_core::backup"],[1006,"fedimint_core::bitcoinrpc"],[1041,"fedimint_core::cancellable"],[1055,"fedimint_core::config"],[1581,"fedimint_core::config::serde_binary_human_readable"],[1583,"fedimint_core::config::serde_commit"],[1598,"fedimint_core::core"],[2116,"fedimint_core::core::backup"],[2157,"fedimint_core::core::server"],[2186,"fedimint_core::db"],[2620,"fedimint_core::db::AutocommitError"],[2624,"fedimint_core::db::DecodingError"],[2628,"fedimint_core::db::mem_impl"],[2726,"fedimint_core::db::notifications"],[2761,"fedimint_core::db::test_utils"],[2977,"fedimint_core::encoding"],[3123,"fedimint_core::encoding::DynRawFallback"],[3125,"fedimint_core::encoding::as_hex"],[3127,"fedimint_core::encoding::btc"],[3128,"fedimint_core::encoding::tbs"],[3129,"fedimint_core::endpoint_constants"],[3168,"fedimint_core::epoch"],[3197,"fedimint_core::epoch::ConsensusItem"],[3199,"fedimint_core::fmt_utils"],[3255,"fedimint_core::hex"],[3256,"fedimint_core::hex::serde"],[3259,"fedimint_core::hex::serde::tests"],[3275,"fedimint_core::module"],[3609,"fedimint_core::module::audit"],[3694,"fedimint_core::module::registry"],[3762,"fedimint_core::module::version"],[3954,"fedimint_core::net"],[3955,"fedimint_core::net::peers"],[3993,"fedimint_core::net::peers::fake"],[4011,"fedimint_core::query"],[4174,"fedimint_core::query::QueryStep"],[4176,"fedimint_core::session_outcome"],[4293,"fedimint_core::task"],[4492,"fedimint_core::task::imp"],[4514,"fedimint_core::tiered"],[4588,"fedimint_core::tiered_multi"],[4679,"fedimint_core::time"],[4680,"fedimint_core::timing"],[4714,"fedimint_core::transaction"],[4809,"fedimint_core::transaction::TransactionError"],[4817,"fedimint_core::transaction::TransactionSignature"],[4819,"fedimint_core::txoproof"],[4852,"fedimint_core::util"],[4911,"fedimint_core::util::broadcaststream"]],"d":["","Represents an amount of BTC inside the system. The base …","","Amount of bitcoin to send, or “all” to send all …","Trait which applies to hashes of all types.","","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","Length of the hash, in bytes.","","","for consensus-related calculations given the number of …","<code>OutPoint</code> represents a globally unique output in a …","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","","Example","","","","","","","Returns an all zero hash.","","","","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","async trait that use MaybeSend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint Core API (common) module interface","Core Fedimint database traits and types","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implements the <code>Display</code> trait for dyn newtypes whose traits …","Implement <code>Clone</code> on a “dyn newtype”","","","This module defines a binary encoding interface which is …","","Constructs a new engine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps a type into an enum with a default variant, this …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","","","","","","","Copies a byte slice into a hash object.","","","","","","","","Hashes some bytes.","","","","","","","","This is a helper macro that generates the implementations …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","","","","","","","","","number of peers that can be evil without disrupting the …","MaybeSync can not be used in <code>dyn $Trait + MaybeSend</code>","See <code>maybe_add_send</code>","","","Define a “module plugin dyn-newtype” which is like a …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","Define a “plugin” trait","A copy of <code>module_lugin_static_trait_define</code> but for …","Shorthand for <code>Amount::from_msats</code>","","","","number of peers to select such that one is honest (under …","As a transaction may have multiple outputs, this refers to …","","","","","","Implements the necessary traits for all associated types …","Implements the necessary traits for all configuration …","","","","","","","Shorthand for <code>Amount::from_sats</code>","","","","","","","","","","","","Atomic BFT unit containing consensus items","","","","","","number of peers required for a signature","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The referenced transaction ID","","","","","","","","","","","","","","","","","","","Converts weight to virtual bytes, defined in BIP-141 as …","","Sent by admin user to the API","The config gen params that need to be in consensus, sent …","Config gen params that can be configured from the UI","The config gen params response which includes our peer id","Connection information sent between peers in order to …","For a guardian to communicate with their server","During config gen, used for an API-to-API call that adds a …","API for secure websocket requests","Show an audit across all modules","Check auth credentials","","","","","","","","","","","","","TLS cert is necessary for P2P auth during DKG and  …","","","","","","","","","","","The same for all peers","Returns the consensus config gen params, followers will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","During config gen, gets all the server connections we’ve …","Gets the default config gen params which can be configured …","After DKG, returns the hash of the consensus config …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","URL of “leader” guardian to send our connection info to","Guardian-defined key-value pairs that will be passed to …","Guardian-defined key-value pairs that will be passed to …","Module init params (also contains local params from us)","Set the params (if leader) or just the local params (if …","Name of the peer, used in TLS auth","","Our id (might change if new peers join)","Our guardian name","P2P is the network for running DKG and consensus","Endpoints of all servers","","Runs DKG, can only be called once after configs have been …","","","","","","","During config gen, sets the server connection containing …","Leader sets the consensus params, everyone sets the local …","Sets the password used to decrypt the configs and …","Reads the configs from the disk, starts the consensus …","Returns the status of the server","Status of the peer if known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","API endpoint of one of the guardians","Set of api versions for each component (core + modules)","Server needs a password to read configs","We can represent client invite code as a bech32 string for …","We failed running config gen","","Consensus is running","","Unknown invite code fields to be defined in the future","","","","","An extension trait allowing to making federation-wide API …","An API request error when calling an entire federation","Authentication id for the federation","","","The status of a server, including how it views its peers","The API for the global (non-module) endpoints","An API (module or global) that can query a federation","Trait marker for the global (non-module) endpoints","Trait marker for the module (non-global) endpoints","","","","Information required for client to construct …","Data that can be encoded in the invite code. Currently we …","","","","","","An API request error when calling a single federation peer","","","","Ready to run config gen once all peers are ready","","","","","","The state of the server returned via APIs","Waiting for peers to share the config gen params","","","We have verified all our peer configs","Config is generated, peers should verify the config","Mint API client that will try to run queries against all …","List of all federation peers for the purpose of iterating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query peers and calculate optimal common api versions to …","","","","Fetch client configuration info only if verified against a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the federation’s ID that can be used to …","Indicates that this peer needs attention from the operator …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a new API client from a client config","Creates a new API client from a invite code, assumes they …","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a new API client","","Creates a new API client","Returns the id of the guardian from which we got the API …","","","","","","","This should always be 0 if everything is okay, so a …","","","","","Make request to a specific federation peer by <code>peer_id</code>","","Make an aggregate request to federation, using <code>strategy</code> to …","","","","","","","","","","Fetches the server consensus hash if enough peers agree on …","","","","","","","","","Submit a transaction for inclusion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the API URL of one of the guardians.","","","","","","","","","","","","","","","","","","","","","Peer id of the host from the Url","URL to reach an API that we can download configs from","","","","","Key used to store user’s ecash backups","","User’s backup, received at certain time, containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the bitcoin RPC","Env var that can be set to point at the bitcoind’s …","Env var for bitcoin RPC kind","Env var for bitcoin URL","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","User has cancelled the DKG task","Total client config","Config for the client-side of a particular Federation …","","","Type erased <code>ModuleInitParams</code> used to generate the …","Consensus parameters for config generation","Shared consensus-critical config","","Captures an error occurring in DKG","Defines a group (e.g. G1 or G2) that we can generate keys …","","Things that a <code>distributed_gen</code> config can send between peers","Result of running DKG","","Empty struct for if there are no params","","Error running DKG","The federation id is a copy of the authentication …","Prefix of the <code>FederationId</code>, useful for UX improvements","","","Federation-wide client config","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","Client config that cannot be cryptographically verified …","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","Locally configurable parameters for config generation","Local non-consensus, not security-sensitive settings","Key under which the federation name can be sent to client …","Key under which the override URL can be sent to client in …","Key under which the vetted gateways can be sent to client …","","","","","","Private for this federation member data that are security …","","","Config for the server-side of a particular Federation …","Registry that contains the config gen params for all …","","","","<code>enum</code> version of <code>SupportedDkgMessage</code>","Module (server side) config, typed","Consensus-critical part of a server side module config","API endpoints for each federation member","","Get decoders for <code>modules</code> and skip unsupported ones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the consensus hash for a given client config","","Core consensus version","","","Get decoders for <code>modules</code> and fail if any is unsupported","","","","","","","","","","","","","","","","","","","","","Random dummy id for testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Assemble from the distinct parts","Assemble from the three functionally distinct parts","","","","","","","","","","","","","","","","","","","","","(soft-deprecated): Get the first instance of a module of a …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional config the federation wants to transmit to the …","","","The peer’s name","","","","","","","","See <code>DynRawFallback::redecode_raw</code>.","","","Handling the Group serialization with a wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turn the typed config into type-erased version","Converts a federation id to a public key to which we know …","","","","","","","","","","","","","","","","","","","","Split the config into its distinct parts","Split the config into its three functionally distinct parts","","","","Converts the JSON into typed version, errors unless both …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)","","","","","","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Decoder for module associated types","","An owned, immutable input to a <code>Transaction</code>","An owned, immutable input to a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code> before it was …","An owned, immutable output of a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code> before it was …","The type erased version of the type implementing this trait","A type used by when decoding dyn-types, when the module is …","","","Something that can be an <code>DynInput</code> in a <code>Transaction</code>","","","Something that can be an <code>DynOutput</code> in a <code>Transaction</code>","","","","","A type that has a <code>Dyn*</code>, type erased version of itself","Opaque data structure that holds a keypair consisting of a …","","","","Special IDs we use for global dkg","","Module instance ID","A type of a module","Unique identifier for one semantic, correlatable operation.","","","","","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>DecoderBuilder</code> to which decoders for single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a specific <code>DynType</code> from the <code>reader</code> byte stream.","","","","","","","","","","","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into its type-erased equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","Generate random <code>OperationId</code>","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attach decoder for a specific <code>Type</code>/<code>DynType</code> pair where …","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Backend side module interface","Returns a list of custom API endpoints defined by the …","","Queries the database and returns all assets and …","","","","","This module’s contribution to the next consensus proposal","Returns the decoder belonging to the server module","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","Error returned when the autocommit function fails","Base functionality around <code>IRawDatabase</code> to make it a …","Struct that implements <code>ISingleUseDatabaseTransaction</code> and …","","","Error returned by the closure provided to <code>autocommit</code>. If …","Committing the transaction failed too many times, giving up","A helper for tracking and logging on <code>Drop</code> any instances of …","Session type for <code>DatabaseTransaction</code> that is allowed to …","","A public-facing newtype over <code>IDatabase</code>","<code>DatabaseKey</code> that represents the lookup structure for …","","Marker trait for <code>DatabaseKey</code>s where <code>NOTIFY</code> is true","A key that can be used to query one or more <code>DatabaseRecord</code> …","A key + value pair in the database with a unique prefix …","A high level database transaction handle","<code>DatabaseValue</code> that represents the value structure of …","","","","","An iterator over the variants of Self","","A database that on top of a raw database operation, …","Fedimint database transaction","Additional operations (only some) database transactions …","Core raw a operations database transactions supports","Like <code>IDatabaseTransactionOpsCore</code>, but typed","Raw database implementation","An extension trait with convenience operations on …","Raw database transaction (e.g. rocksdb implementation)","","","","MigrationMap is a BTreeMap that maps DatabaseVersions to …","","Send a notification to tasks waiting to be notified if the …","Session type for a <code>DatabaseTransaction</code> that is not allowed …","","","","Just ignore this type, it’s only there to make compiler …","A database that wraps an <code>inner</code> one and adds a prefix to …","A database transactions that wraps an <code>inner</code> one and adds a …","","","","","A raw database transaction type","","A database type that has decoders, which allows it to …","","","","","<code>apply_migrations</code> iterates from the on disk database …","Runs a closure with a reference to a database transaction …","","Start a database transaction","Start a database transaction","","Begin a new committable database transaction","","Begin a new non-committable database transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit the transaction","","","","","","","","","","","","","","","","","","","<code>Err</code> if <code>Self::is_global</code> is not true","<code>Err</code> if <code>Self::is_global</code> is not true","<code>Err</code> if <code>Self::is_global</code> is true","<code>Err</code> if <code>Self::is_global</code> is true","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Does the dbtx have any writes","","Cancel the tx to avoid debugging warnings about …","Don’t warn-log uncommitted writes","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to type implementing <code>IRawDatabase</code> into <code>Database</code>.","","Convert into a non-committeable version","","","","","","","","","","","","","","","","","Is the dbtx committed","Is this <code>Database</code> a global, unpartitioned <code>Database</code>","Is this <code>Database</code> a global, unpartitioned <code>Database</code>","","","","","","","","","Creates a new Fedimint database from any object …","Create <code>Database</code> from an already typed-erased <code>IDatabase</code>.","","","","","","Notify about <code>key</code> update (creation, modification, deletion)","","","","","Register a hook that will be run after commit succeeds.","","","","","","","","The prefix len of this database instance","The prefix len of this database instance","","","","","","","","","Returns an stream of key-value pairs with keys that start …","","","","Same as <code>Self::raw_find_by_prefix</code> but the order is …","","","","","","","","","","","","Delete keys matching prefix","","","","","","","","Register (and wait) for <code>key</code> updates","","","","","","","","","","","","","Create a savepoint during the transaction that can be …","","","","","","","","","","","","","","","","","Get <code>DatabaseTransaction</code> to <code>self</code>","Get a reference to a non-committeable version","Get <code>DatabaseTransaction</code> isolated to a <code>prefix</code> of <code>self</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for key to be notified.","Waits for key to be present in database.","Create warnings about uncommitted writes","","Get <code>DatabaseTransaction</code> isolated to a <code>prefix</code>","Create <code>Database</code> isolated to a partition with a given <code>prefix</code>","Get <code>DatabaseTransaction</code> isolated to a prefix of a given …","Create <code>Database</code> isolated to a partition with a prefix for …","","","Number of attempts","The attempt on which the closure returned an error","Error returned by the closure","Last error on commit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of buckets used for <code>Notifications</code>.","The state of Notification.","Save notifications to be sent after transaction is …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Notify a key.","This registers for notification when called.","","","Notifies the waiters about the notifications recorded in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lightning TLV uses a custom variable-length integer called …","A writer counting number of writes written to it","Data which can be encoded in a consensus-consistent way","","","","Object-safe trait for things that can encode themselves","A type that decodes <code>module_instance_id</code>-prefixed <code>T</code>s even …","Data which can be encoded in a consensus-consistent way","","","Serde implementations using hex-encoded encodables","","","","","","","","","","","","","","","","Decode an object with a well-defined format","","","Decode an object from hex","Encode an object with a well-defined format. Returns the …","","","","","","","","<code>Self::consensus_encode</code> to newly allocated <code>Vec&lt;u8&gt;</code>","Generate a SHA256 hash of the consensus encoding using the …","Returns the number of bytes successfully written so far","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner writer, discarding this wrapper","","","","","","","","","Attempt to re-decode raw values with new set of of <code>modules</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the items that may be produced during a consensus epoch","Allows us to add new items in the future without crashing …","Any data that modules require consensus on","Threshold sign the epoch history for verification via the …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","A wrapper that causes the inner <code>T</code> to be debug-formatted …","Use for displaying bytes in the logs","Use for displaying potentially large <code>[serde_json::Value]</code>s …","Something that can be debug-formatted in an abbreviated way","Optional stacktrace formatting for errors.","","","","","","","","","","","","","","","","","","Format json object value truncating keys if there’s too …","Format json string value if it’s too long","Format json array value truncating elements if there’s …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize a hex String to a <code>Vec&lt;u8&gt;</code>","Serialize a <code>&amp;[u8]</code> to a hex String","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Authentication uses the hashed user password in PHC format","Definition of an API endpoint defined by a module <code>M</code>.","State made available to all API endpoints for handling a …","","All requests from client to server contain these fields","","Api version supported by a core server or a client/server …","","","","","","Logic and constant common between server side and client …","","Consensus version of a core server","This represents the module’s database version that the …","","","","","Operations common to Server and Client side module gen dyn …","Interface for Module Generation","","","","","","Module associated types required by both client and server","Consensus version of a specific module instance","Trait implemented by every <code>*ModuleInit</code> (server or client …","Multiple, disjoint, minimum required or maximum supported, …","","","","","example: /transaction","","","A handle passed to <code>ServerModuleInit::distributed_gen</code>","","Creates a struct that can be used to make our …","","Module Generation trait with associated types","","","","","","Information about the amount represented by an input or …","","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","Example","Returns a list of custom API endpoints defined by the …","","","","","Queries the database and returns all assets and …","Hashed user password if the API requires authentication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to commit the dbtx or returns an ApiError","This module’s contribution to the next consensus proposal","","","","","","","","Database tx handle, will be committed","","","","","Returns a decoder for the following associated types of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Converts the consensus config into the client config","Retrieves the <code>MigrationMap</code> from the module to be applied …","Retrieves the <code>MigrationMap</code> from the module to be applied …","","","","Handler for the API call that takes the following …","Whether the request was authenticated as the guardian who …","","","","Initialize the <code>DynServerModule</code> instance from its config","Initialize the <code>DynServerModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Major API version","","","","Minor API version","","","","","","<code>db</code> and <code>dbtx</code> should be isolated.","","","","","","","Retrieve the current status of the output. Depending on …","Parameters required by the API","","Path under which the API endpoint can be reached. It …","","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","Returns the auth set on the request (regardless of whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In cases where we know exactly which module kind we expect …","","","","","","","","","","","","","","","","","Fedimint consensus and API versioning.","Version of the module consensus supported by this …","","","","","","","","","","","","","Waits for key to be present in database.","Waits for key to have a value that matches.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallback to decoding unknown module instance ids as …","Collection of decoders belonging to modules, typically …","","Module Registry hold module-specific data <code>M</code> by the …","Reject unknown module instance ids","Collection of server modules","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","","","","","","","","","","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get module data by instance id","Return the module data belonging to the module identified …","Get module data by instance id, including <code>ModuleKind</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return an iterator over all module data","Return an iterator over all module data","Create <code>Self</code> from an iterator of pairs","Add a module to the registry","","","","","","","","","","","","","","Api version supported by a core server or a client/server …","Consensus version of a core server","Consensus version of a specific module instance","Multiple, disjoint, minimum required or maximum supported, …","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create <code>SupportedModuleApiVersions</code> from raw parts","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verify the invariant: sorted by unique major numbers","","","","Major API version","","","Minor API version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert <code>version</code> to the list of supported APIs","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>IPeerConnections</code> but with an ability to handle …","Connection manager that tries to keep connections open to …","Owned <code>MuxPeerConnections</code> trait object type","Owned <code>PeerConnections</code> trait object type","Removes a peer connection in case of misbehavior","Removes a peer connection in case of misbehavior","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the struct to a <code>PeerConnection</code> trait object","Converts the struct to a <code>PeerConnection</code> trait object","","","Await receipt of a message from any connected peer.","Await receipt of a message from any connected peer.","Send a message to a specific peer.","Send a message to a specific destination at specific peer.","","","","","","","","","","","Removes a peer connection in case of misbehavior","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a fake link between <code>peer1</code> and <code>peer2</code> for test …","","","","","","","","","","","Query strategy that returns when all peers responded or a …","Do nothing yet, keep waiting for requests","Query for supported api versions from all the guardians …","","Fail the whole request","Returns the first valid response. The response of a peer is","Returns when a threshold of valid responses. The response …","Results from the strategy handling a response from a peer","Fedimint query strategy","Wraps a strategy <code>S</code> and adds a timeout to each call","Retry request to this peer","Return the successful result","Returns when a threshold of responses are equal","Returns the deduplicated union of a threshold of responses","Returns the deduplicated union of <code>required</code> number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the most common response that has been processed so …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Strategy for returning first response that is verifiable …","","","","","","","","","","","","","","","","","","Should requests for this strategy have specific timeouts?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If two correct nodes obtain two ordered items from the …","","All items ordered in a session that have been accepted by …","A signed block combines a block with the naive threshold …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","A blocks header consists of 40 bytes formed by its index …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>MaybeSend</code> is no-op on wasm and <code>Send</code> on non wasm.","<code>MaybeSync</code> is no-op on wasm and <code>Sync</code> on non wasm.","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A group of task working together","","","","","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","","","","Did the future completed successfully (no panic)","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","Atomically downgrades a write lock into a read lock …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a mutable reference to the underlying data.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","","","","","","","","","","","Is task group shutting down?","","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Create a sub-group","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generates denominations of a give base up to and including …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the highest tier amount","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","","Represents notes of different denominations.","","","","Verifies that all keys in <code>self</code> are present in the keys of …","","","","","","","","","","","","","","Returns the number of items in all vectors","","Returns the number of tiers","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns an <code>Option</code> with a reference to the vector of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an consuming iterator over every <code>(Amount, T)</code>","","","","Verifies whether all vectors in all tiers are empty","Returns an borrowing iterator","","Returns an iterator over every <code>(Amount, &amp;T)</code>","Returns an iterator over the keys","","Returns the length of the longest vector of all tiers, …","","Creates a new MultiZip Iterator from <code>Notes</code> iterators. …","Returns a new <code>TieredMulti</code> with the given <code>BTreeMap</code> map","","Determines the denominations to use when representing an …","","","Verifies whether the structure of <code>self</code> and <code>other</code> is …","Returns the summary of number of items in each tier","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","","","","","","","","","","","","Data inside <code>TimeReporter</code>, in another struct to be able to …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Inner data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Add a threshold, which will log a warning if exeeded","","Handy alias for <code>Self::threshold</code>","","","","","","","","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","<code>DynInput</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","No defined meaning, can be used to send the otherwise …","<code>DynOutput</code>s created as a result of the transaction","signatures for all the public keys of the inputs","","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the schnorr signatures signed over the <code>tx_hash</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Future that is <code>Send</code> unless targeting WASM","Stream that is <code>Send</code> unless targeting WASM","","","Wrapper for <code>Url</code> that only prints the scheme, domain, port …","Warning: This will expose username &amp; password if present.","","","Copied from <code>tokio_stream</code> 0.1.12 to use our optional Send …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Warning: This removes the safety.","","","","","","Write out a new file (like <code>std::fs::write</code> but fails if …","","","","A wrapper around <code>tokio::sync::broadcast::Receiver</code> that …","An error returned from the inner stream of a …","The receiver lagged too far behind. Attempting to receive …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new <code>BroadcastStream</code>.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","",""],"i":[19,0,19,0,0,0,267,267,0,267,267,37,36,0,0,0,0,0,0,0,0,36,1,0,0,0,0,1,1,0,267,2,0,0,2,2,2,267,2,2,2,0,0,2,0,2,2,18,1,19,20,36,12,37,2,18,1,19,20,36,12,37,12,0,2,2,18,1,19,20,12,2,18,1,19,20,12,2,18,1,20,12,2,18,1,20,12,0,2,18,1,20,12,2,18,1,20,12,2,18,1,20,12,0,0,380,2,2,18,1,19,20,12,0,1,0,0,0,2,2,0,0,267,2,0,2,18,1,20,12,2,2,2,2,18,18,18,18,1,1,1,1,20,20,20,20,12,12,12,12,0,2,18,1,19,20,12,0,2,2,2,18,18,1,1,19,20,20,36,36,12,37,37,0,2,2,18,18,1,1,19,20,36,36,36,12,37,2,2,18,1,20,12,267,2,2,267,2,1,2,18,1,19,20,12,1,267,2,2,2,18,1,19,1,267,2,18,1,20,12,0,0,0,2,2,18,1,19,20,36,12,37,267,2,2,18,1,19,20,36,12,37,0,380,0,0,0,0,0,0,0,0,0,0,0,1,1,0,380,20,2,18,1,20,12,0,0,0,0,0,0,1,1,0,12,1,0,2,18,1,19,20,12,0,0,0,36,1,1,1,0,380,0,0,0,0,2,18,1,20,12,2,2,18,1,19,20,12,2,18,1,20,36,37,18,380,0,2,2,18,1,19,20,36,12,37,2,18,1,19,20,36,12,37,20,0,2,18,1,19,20,36,12,37,0,2,18,1,19,20,36,12,37,0,2,0,0,0,0,0,0,62,63,62,62,62,67,63,68,69,70,62,67,63,68,69,70,63,67,63,68,69,70,67,63,68,69,70,69,62,70,67,63,68,69,70,63,68,69,70,63,63,63,63,68,68,68,68,69,69,69,69,70,70,70,70,67,63,68,69,70,67,63,68,69,70,62,67,63,68,69,70,67,63,68,69,70,62,62,62,62,62,67,63,68,69,70,62,67,63,68,69,70,67,68,70,68,70,63,62,69,67,63,68,62,62,0,67,63,68,69,70,62,62,62,62,62,63,67,63,68,69,70,62,67,63,68,69,70,62,67,63,68,69,70,62,67,63,68,69,70,62,62,67,63,68,69,70,0,0,93,0,97,0,97,96,97,100,93,96,0,0,100,0,0,93,0,0,0,0,0,0,0,104,104,100,0,0,0,0,0,0,0,0,0,0,0,97,100,104,100,104,0,0,97,0,100,97,97,0,381,83,84,382,83,382,83,382,83,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,106,90,91,84,83,92,93,94,95,96,97,79,90,91,84,83,92,93,94,95,96,97,79,82,95,90,92,93,90,92,93,90,92,93,90,94,95,96,97,91,84,90,92,94,95,96,97,79,0,382,83,382,83,382,83,92,93,94,95,96,97,79,92,92,92,92,93,93,93,93,94,94,94,94,95,95,95,95,96,96,96,96,97,97,97,97,79,79,79,79,90,92,94,95,96,97,79,79,92,95,104,104,105,105,100,100,90,91,84,83,106,92,92,93,107,94,95,96,97,79,104,104,105,100,100,100,90,91,91,84,84,83,106,92,93,107,94,95,96,97,79,90,92,93,83,83,90,91,84,83,92,93,94,95,96,97,79,92,105,105,91,84,91,84,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,82,104,105,95,83,90,83,92,83,92,107,106,83,83,105,83,94,94,94,106,383,381,83,383,107,90,92,94,95,96,97,79,79,382,83,382,83,94,104,100,94,382,83,90,92,93,90,91,84,83,92,93,94,95,96,97,79,104,105,100,92,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,382,83,92,106,104,105,100,90,91,84,83,106,92,93,107,94,95,96,97,79,381,83,384,385,385,384,386,386,387,0,0,0,122,124,123,122,124,123,122,123,122,123,122,124,123,122,124,123,122,124,123,123,123,123,123,123,123,123,122,123,122,124,123,122,124,123,122,122,124,123,122,123,122,124,123,122,124,123,122,123,123,122,122,124,124,123,122,123,122,124,123,122,124,123,122,124,123,122,124,123,0,0,0,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,127,127,127,127,127,127,127,127,127,127,127,127,151,0,0,145,0,0,156,167,142,0,0,0,0,0,142,0,145,151,0,0,143,143,0,145,0,0,0,156,167,0,0,0,0,0,151,151,0,167,142,0,0,0,0,0,145,0,0,0,136,130,130,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,132,133,134,112,135,136,103,137,130,138,139,140,132,141,142,143,145,133,134,112,135,136,103,137,130,138,139,140,132,141,142,143,145,103,137,103,137,140,132,138,141,134,112,136,103,137,140,132,134,112,136,103,137,140,132,134,112,136,103,137,140,132,112,141,136,0,130,130,130,138,139,149,133,134,112,135,136,103,137,138,139,140,132,141,142,143,145,388,103,149,133,134,112,135,136,103,137,138,140,132,141,145,133,133,133,133,134,134,134,134,112,112,112,112,135,135,135,135,136,136,136,136,103,103,103,103,137,137,137,137,138,138,138,138,140,140,140,140,132,132,132,132,141,141,141,141,145,145,145,145,133,134,112,135,136,103,137,138,139,140,132,141,142,143,145,136,133,134,112,135,136,103,103,137,130,138,139,140,132,141,142,151,151,143,145,133,134,112,135,136,103,137,130,130,138,139,140,132,141,141,142,151,151,151,143,145,103,134,112,136,103,137,140,132,389,130,390,145,145,156,167,133,134,112,135,136,103,137,130,138,139,140,132,141,142,143,145,103,138,132,130,112,112,112,112,112,135,134,103,137,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,133,132,389,133,132,133,140,132,130,0,138,141,136,112,135,134,133,130,138,138,103,137,141,112,132,0,0,149,133,134,112,135,136,103,137,138,139,140,132,141,142,143,145,388,151,134,112,136,103,137,140,132,162,130,167,103,390,145,145,133,134,112,135,136,103,137,130,138,139,140,132,141,142,143,145,156,167,103,103,151,138,141,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,134,133,133,389,140,132,133,134,112,135,136,103,137,130,138,139,140,132,141,142,151,143,145,133,0,0,0,169,169,0,169,169,169,169,169,0,169,169,169,169,169,0,0,0,0,0,0,0,0,0,0,0,391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,170,189,190,191,192,193,194,195,175,175,175,175,175,175,175,170,170,157,0,392,170,185,157,175,177,45,178,179,180,181,182,183,184,392,170,185,157,175,177,45,178,179,180,181,182,183,184,177,45,189,190,191,192,193,194,195,170,185,157,175,175,175,175,175,175,175,175,45,178,179,180,181,182,183,184,157,170,185,157,175,45,178,179,180,181,182,183,184,170,157,170,157,170,185,157,175,178,179,180,181,182,183,184,170,185,157,175,178,179,180,181,182,183,184,170,185,157,175,178,179,180,181,182,183,184,170,45,177,45,177,45,178,179,180,181,182,183,184,178,179,180,181,182,183,184,170,185,157,170,189,190,191,192,193,194,195,175,175,175,175,175,175,175,170,185,157,175,178,179,180,181,182,183,184,170,170,170,170,185,185,185,185,157,157,157,157,178,178,178,178,179,179,179,179,180,180,180,180,181,181,181,181,182,182,182,182,183,183,183,183,184,184,184,184,189,190,191,192,193,194,195,175,175,175,175,175,175,175,170,185,157,170,185,185,157,157,175,175,45,178,178,179,179,180,180,181,181,182,182,183,183,184,184,392,170,170,185,157,157,175,177,45,178,179,180,181,182,183,184,170,185,157,175,178,179,180,181,182,183,184,178,179,180,181,182,183,184,170,185,157,175,45,178,179,180,181,182,183,184,170,170,170,170,157,170,185,178,179,180,181,182,183,184,170,185,175,178,179,180,181,182,183,184,178,179,180,181,182,183,184,392,170,185,157,175,177,45,178,179,180,181,182,183,184,391,392,170,185,157,175,177,45,178,179,180,181,182,183,184,178,179,180,181,182,183,184,178,179,180,181,182,183,184,170,170,185,170,157,170,170,170,170,185,157,0,170,170,170,185,157,175,178,179,180,181,182,183,184,189,175,170,185,157,175,45,178,179,180,181,182,183,184,185,157,175,178,179,180,181,182,183,184,392,170,185,157,175,177,45,178,179,180,181,182,183,184,392,170,185,157,175,177,45,178,179,180,181,182,183,184,170,392,170,185,157,175,177,45,178,179,180,181,182,183,184,392,170,185,157,175,177,45,178,179,180,181,182,183,184,177,170,0,0,203,120,203,120,203,203,203,203,120,203,120,203,120,203,120,203,203,203,203,120,203,120,203,120,203,120,203,120,203,203,203,120,203,120,203,120,120,203,120,0,0,208,208,208,204,204,204,204,208,208,204,204,204,204,204,204,204,204,204,208,208,208,208,204,204,204,204,204,253,0,0,0,232,226,216,216,0,0,236,0,0,0,0,0,0,0,0,0,226,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0,0,236,235,0,48,232,253,0,0,0,0,233,253,0,217,236,0,48,48,229,211,0,212,227,217,220,218,212,221,212,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,206,232,212,221,225,213,226,227,212,221,225,213,226,227,213,206,210,228,229,211,206,206,213,230,213,230,213,230,213,0,393,206,206,232,232,225,206,212,206,212,213,213,213,213,213,230,213,0,394,206,0,394,206,218,216,212,221,230,213,213,226,226,48,48,218,229,211,232,219,222,206,216,212,212,221,225,230,213,226,227,48,235,231,230,230,213,212,221,225,213,226,227,0,227,229,221,394,206,225,227,206,225,213,229,212,221,394,206,394,206,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,395,227,206,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,225,206,212,226,227,227,0,212,0,211,206,212,212,227,227,0,218,211,220,218,221,211,227,206,206,48,213,232,232,229,221,220,228,218,229,211,221,232,232,218,211,241,229,211,206,241,229,211,206,241,229,211,206,241,229,211,206,241,229,211,206,241,229,211,206,220,218,221,394,206,394,206,242,229,211,206,230,213,242,229,211,206,227,0,396,231,230,230,213,212,221,225,213,226,227,206,206,206,206,213,226,48,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,206,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,229,211,232,219,222,206,216,212,221,225,230,213,226,227,48,212,212,206,212,206,212,206,212,48,48,397,398,398,397,399,400,399,400,0,0,0,249,0,249,0,0,244,246,247,249,244,245,248,246,247,249,244,245,248,245,244,245,246,247,244,244,248,248,248,248,248,246,247,249,244,245,248,246,247,249,244,245,248,246,247,249,244,245,248,246,247,249,244,245,248,246,247,244,245,245,245,245,245,245,245,245,245,245,245,245,246,247,249,244,245,248,246,247,249,244,245,248,245,246,247,249,244,245,248,246,246,247,249,244,245,248,0,0,0,250,237,250,237,250,237,250,237,250,237,250,237,250,237,250,237,250,237,250,237,237,0,0,237,237,250,237,250,237,250,237,250,0,0,253,0,0,0,0,0,253,0,253,0,0,0,0,253,254,257,258,259,255,260,261,262,256,253,254,257,258,259,255,260,261,262,256,253,253,254,255,256,254,255,256,254,257,258,259,255,260,261,262,256,254,257,258,259,255,260,261,262,256,254,257,258,259,255,260,261,262,256,254,255,256,254,254,254,254,255,255,255,255,256,256,256,256,0,254,257,258,259,255,260,261,262,256,253,254,257,258,259,255,260,261,262,256,254,254,257,258,258,259,255,255,260,261,261,262,256,253,0,253,254,257,258,259,255,260,261,262,256,253,254,257,258,259,255,260,261,262,256,0,254,255,256,254,254,257,257,258,258,259,259,255,255,260,260,261,261,262,262,256,253,253,254,257,258,259,255,260,261,262,256,253,254,257,258,259,255,260,261,262,256,253,254,257,258,259,255,260,261,262,256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,254,257,258,259,255,260,261,262,256,0,0,0,0,0,263,0,0,0,0,263,0,268,24,263,264,268,24,263,264,0,263,264,263,264,264,264,160,263,264,160,266,265,263,264,265,263,264,266,266,266,268,268,263,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,263,264,263,263,263,263,264,264,264,264,263,263,263,268,24,24,263,264,268,268,268,24,263,263,263,264,263,264,24,263,264,24,264,0,0,0,268,268,24,263,264,268,268,24,263,264,24,264,264,264,263,0,263,0,0,263,264,263,264,24,268,24,263,264,268,24,263,264,268,24,263,264,268,24,263,264,268,268,264,268,268,268,401,401,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,402,402,0,0,0,0,0,286,283,284,285,281,283,284,285,281,281,281,0,283,284,284,285,281,0,0,0,283,284,285,281,283,284,285,281,283,284,285,281,0,283,284,283,284,285,281,283,284,285,281,283,284,285,281,283,284,285,281,0,0,0,0,0,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,0,0,0,0,0,0,0,403,404,403,405,406,0,404,0,291,0,0,0,0,0,0,406,404,404,0,403,0,0,0,0,0,404,404,404,407,407,291,0,407,0,0,0,0,407,0,0,0,0,0,293,292,298,293,313,302,0,406,299,289,164,0,406,296,290,295,205,292,297,298,293,296,65,290,289,164,294,295,205,292,297,298,293,296,65,290,289,164,294,292,292,293,65,290,289,164,294,293,65,290,289,164,294,290,295,406,101,313,302,299,292,295,292,295,295,128,403,404,406,404,73,289,164,296,65,294,299,291,128,405,298,293,65,294,293,293,293,293,65,65,65,65,294,294,294,294,296,65,294,293,298,293,296,65,290,289,164,294,295,205,292,297,298,293,296,65,290,289,289,164,164,294,294,289,293,65,290,289,164,294,205,299,291,299,291,289,164,407,205,295,295,293,294,299,291,289,164,295,205,292,297,298,293,296,65,290,289,164,294,295,205,292,297,298,293,296,65,290,289,164,294,291,304,158,311,290,304,158,311,302,128,406,101,73,295,297,296,290,290,292,292,406,296,291,205,297,406,406,406,298,0,295,295,296,65,294,290,299,291,292,292,128,73,296,293,65,290,289,164,294,73,296,299,291,295,205,292,297,298,293,296,65,290,289,164,294,295,205,292,297,298,293,296,65,290,289,164,294,294,294,295,205,292,297,298,293,296,65,290,289,164,294,290,299,291,299,0,291,295,205,292,297,298,293,296,65,290,289,164,294,295,295,73,296,0,0,0,0,207,307,207,66,306,307,207,66,306,0,66,306,66,306,0,207,66,306,66,306,66,66,66,66,306,306,306,306,66,306,307,207,66,306,307,207,66,306,66,66,306,0,307,207,66,306,307,207,66,306,207,306,307,307,66,307,207,66,306,66,306,66,306,307,207,307,207,66,306,307,207,66,306,307,207,66,306,307,207,66,306,0,46,0,0,0,46,0,23,47,47,47,46,47,46,47,46,47,46,309,47,23,47,47,46,46,47,47,47,47,46,46,46,46,47,47,46,47,47,46,47,47,46,47,47,47,46,47,47,46,47,46,47,47,47,47,47,47,46,47,46,47,46,47,46,47,46,23,47,0,0,0,0,0,0,0,0,313,302,314,304,158,311,312,313,302,101,314,304,158,311,312,313,302,101,304,158,311,312,313,302,101,304,158,311,312,313,302,101,304,158,311,304,158,311,304,158,311,101,313,302,312,304,158,311,312,313,302,101,304,158,311,304,304,304,304,158,158,158,158,311,311,311,311,304,158,311,312,313,302,101,304,158,311,312,313,302,101,314,304,158,311,312,313,302,101,304,158,311,302,304,158,311,312,313,302,101,312,314,304,158,311,312,313,302,101,314,312,314,304,158,311,312,313,302,101,312,312,304,158,311,304,158,311,302,101,304,158,312,314,304,158,311,312,313,302,101,304,158,311,304,158,311,312,313,302,101,314,304,158,311,312,313,302,101,312,312,314,304,158,311,312,313,302,101,314,304,158,311,312,313,302,101,314,304,158,311,312,313,302,101,0,0,0,0,0,408,409,315,301,315,301,301,301,315,301,315,0,315,301,301,315,301,408,409,315,301,408,409,408,409,301,315,301,315,301,315,301,315,301,0,317,317,317,317,317,317,0,317,317,317,317,317,317,317,317,317,317,0,319,0,0,319,0,0,0,0,0,319,319,0,0,0,330,330,330,320,322,323,321,324,325,327,328,319,330,320,322,323,321,324,325,327,328,319,328,327,0,0,0,322,323,321,324,325,320,322,323,323,319,320,330,320,322,323,321,324,325,327,328,319,321,321,330,328,330,320,322,323,321,324,325,327,328,319,330,320,322,323,321,324,325,327,328,319,320,322,323,324,325,327,328,327,321,118,330,320,322,323,321,324,325,327,328,118,330,328,321,324,325,327,321,320,323,321,324,325,330,330,320,322,323,321,324,325,327,328,319,330,320,322,323,321,324,325,327,328,319,330,320,322,323,321,324,325,327,328,319,324,325,330,320,322,323,321,324,325,327,328,319,118,410,410,0,0,0,0,331,332,333,334,331,332,333,334,331,332,333,334,331,332,333,334,331,332,333,334,331,332,333,334,331,332,333,334,0,333,333,333,333,333,333,331,332,333,334,331,331,331,331,332,332,332,332,333,333,333,333,334,334,334,334,331,332,333,334,331,332,333,334,331,332,333,334,331,332,333,334,333,332,331,332,333,334,331,332,333,334,331,332,331,334,334,333,331,332,333,334,333,331,332,333,334,331,332,333,334,331,332,333,334,331,332,333,334,333,331,332,333,334,0,0,0,0,0,0,0,0,0,0,0,0,339,339,343,347,344,342,300,318,339,340,341,343,347,344,342,300,318,339,340,341,339,340,341,300,318,300,318,343,339,339,340,341,342,300,339,340,341,341,341,341,343,340,341,344,344,342,300,318,339,340,340,341,341,343,347,344,342,300,318,339,339,339,340,341,300,318,339,0,343,300,318,300,343,347,344,342,300,318,339,340,341,347,339,341,343,347,344,342,300,318,339,340,341,343,318,342,300,300,300,318,300,340,341,340,341,339,343,347,300,339,342,342,341,341,341,347,341,341,339,339,339,340,341,339,340,341,342,300,300,0,0,0,300,300,342,0,300,318,344,340,341,341,343,347,344,342,300,318,339,340,341,343,347,344,342,300,318,339,340,341,340,341,339,339,339,339,343,347,344,342,300,318,339,340,341,343,347,344,342,300,318,339,340,341,339,339,339,0,0,0,0,339,340,341,340,341,339,341,339,340,341,339,340,341,0,0,0,0,0,0,0,357,358,357,358,357,358,357,358,357,358,358,357,357,357,357,357,358,357,357,358,357,358,358,358,358,357,357,357,357,358,357,358,358,357,358,357,357,357,358,357,357,357,357,357,358,357,357,358,357,358,357,357,357,358,358,357,357,357,357,357,358,357,357,358,358,357,358,357,358,357,358,357,0,0,0,364,362,364,362,363,364,362,363,362,363,362,363,362,362,362,362,363,362,363,362,363,362,363,362,363,362,362,362,362,362,363,362,362,363,364,362,363,362,362,363,362,363,362,362,362,363,364,362,363,364,362,362,364,362,363,362,362,363,362,362,364,362,364,364,362,364,363,362,363,362,362,362,362,363,362,363,364,362,363,364,362,363,364,362,363,364,362,363,0,0,0,368,365,368,365,365,365,365,368,365,365,365,368,365,368,365,365,368,368,365,368,368,365,368,365,368,365,368,365,368,365,368,365,369,370,370,370,369,370,0,0,0,0,370,370,119,369,370,119,369,370,119,369,370,119,369,370,119,369,370,119,369,370,119,369,370,119,369,370,119,119,119,119,369,369,369,369,370,370,370,370,119,369,370,370,119,369,370,119,369,370,119,369,370,119,369,119,119,369,370,119,369,370,119,119,119,119,369,370,119,369,370,370,119,369,370,119,369,370,119,119,119,369,370,119,119,369,370,411,412,411,412,411,412,412,413,414,414,0,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,0,0,0,415,0,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,415,415,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,0,377,378,377,378,377,377,377,377,377,377,377,377,378,377,377,378,378,377,377,378,378,377,378,377,378,0,378,378,378,378,377,377,378,377,378,377,378,378,377,378,377],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],0,[[]],[[],2],0,0,[[],[[4,[3]]]],[[],[[6,[5]]]],[2,7],[[]],[2],[2,[[6,[5]]]],[[],[[10,[[6,[8]],9]]]],0,0,[[],11],0,[[]],[2,[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,13],14],0,[[],[[10,[[17,[15,16]]]]]],[2,2],[18,18],[1,1],[19,19],[20,20],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],21],[[18,18],21],[[1,1],21],[[20,20],21],[[12,12],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[22,23],[[10,[2,24]]]],[[22,23],[[10,[18,24]]]],[[22,23],[[10,[1,24]]]],[[22,23],[[10,[20,24]]]],[[22,23],[[10,[12,24]]]],[[2,25],[[10,[11,26]]]],[[18,25],[[10,[11,26]]]],[[1,25],[[10,[11,26]]]],[[20,25],[[10,[11,26]]]],[[12,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],0,0,[[],11],[2],[27,[[10,[2]]]],[27,[[10,[18]]]],[27,[[10,[1]]]],[27,[[10,[19]]]],[27,[[10,[20]]]],[27,[[10,[12]]]],0,[[1,1]],0,0,0,[[],[[29,[28]]]],[[],[[29,[28]]]],0,0,[[]],[[]],0,[[2,2],30],[[18,18],30],[[1,1],30],[[20,20],30],[[12,12],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],0,[[2,34],35],[[2,34],35],[[2,34],35],[[18,34],35],[[18,34],35],[[1,34],35],[[1,34],35],[[19,34],35],[[20,34],35],[[20,34],35],[[36,34],35],[[36,34],35],[[12,34],35],[[37,34],35],[[37,34],35],0,[7,2],[[]],[38,18],[[]],[[]],[14,1],[[]],[[]],[39,36],[40,36],[[]],[[]],[[]],[[[0,[41,42,43]]],[[10,[44]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[],2],[7,2],[[]],[[],2],[13,1],[[]],[[]],[[]],[[]],[[]],[[]],[13,1],[[[6,[5]]],[[10,[49]]]],[[[6,[5]]],[[10,[2,49]]]],[[[6,[5]]],[[10,[2,49]]]],[50,[[10,[2]]]],[50,[[10,[18]]]],[50,[[10,[1]]]],[50,[[10,[19]]]],[[50,51],[[10,[1,36]]]],[[[6,[5]]]],[[2,52]],[[18,52]],[[1,52]],[[20,52]],[[12,52]],0,0,0,[[2,[53,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,[[],11],0,0,0,0,0,0,0,0,0,0,[13,1],0,[[1,13]],0,[[],11],0,[[2,2],[[55,[21]]]],[[18,18],[[55,[21]]]],[[1,1],[[55,[21]]]],[[20,20],[[55,[21]]]],[[12,12],[[55,[21]]]],0,0,0,0,0,0,[[1,1]],[[1,1]],[13,1],0,[[1,1],1],0,[[2,56],10],[[18,56],10],[[1,56],10],[[19,56],10],[[20,56],10],[[12,56],10],0,0,0,[36,[[55,[57]]]],[[1,1]],[[1,1]],[41,1],0,[[],11],0,0,0,0,[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[18,11],[[],11],0,[[],[[10,[[4,[3]],59]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[61,10],0,0,0,0,0,0,[[62,63],64],0,[[62,65],[[64,[66]]]],[[62,65],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[67,67],[63,63],[68,68],[69,69],[70,70],[[]],[[]],[[]],[[]],[[]],0,[62,[[64,[69]]]],[[],70],[27,[[10,[67]]]],[27,[[10,[63]]]],[27,[[10,[68]]]],[27,[[10,[69]]]],[27,[[10,[70]]]],[[63,63],30],[[68,68],30],[[69,69],30],[[70,70],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[67,34],35],[[63,34],35],[[68,34],35],[[69,34],35],[[70,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,[[64,[[17,[63]]]]]],[[62,65],[[64,[70]]]],[[62,65],[[64,[[71,[18,7]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,0,0,0,0,0,[72,62],0,0,0,0,[[62,50,73],[[64,[[0,[74,75,76,77,78]]]]]],[[62,65],64],0,[[67,56],10],[[63,56],10],[[68,56],10],[[69,56],10],[[70,56],10],[[62,67,65],64],[[62,70,65],64],[[62,65],64],[[62,65],64],[62,[[64,[79]]]],0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,[[]],[[]],[[]],[[]],[[]],[[]],[27,[[10,[80]]]],[[80,56],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[81,[18]]]],[[[83,[[0,[82,76]]]]],[[81,[18]]]],[84,85],[[13,23],[[88,[[87,[86]]]]]],[[13,[47,[45,46]]],[[88,[[87,[86,16]]]]]],[[20,89,45],[[88,[[87,[86]]]]]],[[20,89,45],[[88,[[87,[86,16]]]]]],[2,[[88,[[87,[86]]]]]],[2,[[88,[[87,[86,16]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[90,90],[91,91],[84,84],[[[83,[77]]],[[83,[77]]]],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[79,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,[[88,[[87,[86]]]]]],0,[[22,23],[[10,[90,24]]]],[[22,23],[[10,[92,24]]]],[[22,23],[[10,[93,24]]]],[[90,25],[[10,[11,26]]]],[[92,25],[[10,[11,26]]]],[[93,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],0,[[],94],[[],95],[[],96],[[],97],[91],[84],[27,[[10,[90]]]],[27,[[10,[92]]]],[27,[[10,[94]]]],[27,[[10,[95]]]],[27,[[10,[96]]]],[27,[[10,[97]]]],[27,[[10,[79]]]],[[98,45],[[10,[[0,[99,78]],100]]]],[101,[[88,[[87,[86]]]]]],[101,[[88,[[87,[86,16]]]]]],[102,[[88,[[87,[86]]]]]],[102,[[88,[[87,[86,16]]]]]],[92,[[88,[[87,[86]]]]]],[92,[[88,[[87,[86,16]]]]]],[[92,92],30],[[93,93],30],[[94,94],30],[[95,95],30],[[96,96],30],[[97,97],30],[[79,79],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],0,[92,103],0,[[104,34],35],[[104,34],35],[[105,34],35],[[105,34],35],[[100,34],35],[[100,34],35],[[90,34],35],[[91,34],35],[[84,34],35],[[[83,[76]],34],35],[[[106,[76]],34],35],[[92,34],35],[[92,34],35],[[93,34],35],[[[107,[76]],34],35],[[94,34],35],[[95,34],35],[[96,34],35],[[97,34],35],[[79,34],35],[108,104],[[]],[[]],[109,100],[105,100],[[]],[[]],[[[0,[110,78,111]]],91],[[]],[[[0,[85,78,111]]],84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[112,[[83,[113]]]],[[[6,[92]]],[[83,[113]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[10,[92]]]],[[[114,[109]]],105],0,[91,55],[84,55],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],30],[104,30],[105,30],0,0,0,[17,[[83,[113]]]],[[72,18,103],92],[17,83],[92,18],0,0,0,[83,[[17,[18]]]],0,0,0,0,0,[[[106,[82]],50,[6,[115]]],[[116,[115]]]],[[117,58,73],[[88,[[87,[86]]]]]],[[18,50,[6,[115]]],[[88,[[87,[86]]]]]],[[[83,[[0,[82,76]]]],18,50,[6,[115]]],[[88,[[87,[86]]]]]],[[117,[0,[[118,[74,76]],78]],58,73],[[88,[[87,[86]]]]]],0,[[90,56],10],[[92,56],10],[[94,56],10],[[95,56],10],[[96,56],10],[[97,56],10],[[79,56],10],0,[[],[[88,[[87,[86]]]]]],[[],[[88,[[87,[86,16]]]]]],[[],[[88,[[87,[86]]]]]],[[],[[88,[[87,[86,16]]]]]],0,[104,[[55,[57]]]],[100,[[55,[57]]]],0,[119,[[88,[[87,[86]]]]]],[119,[[88,[[87,[86,16]]]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],58],[[],58],[[],58],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[120,[[88,[[87,[86]]]]]],[120,[[88,[[87,[86,16]]]]]],[92,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121,91],[[[83,[[0,[82,76]]]],121],91],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[123,123],[[]],[[]],[[22,23],[[10,[122,24]]]],[[22,23],[[10,[124,24]]]],[[22,23],[[10,[123,24]]]],[[122,25],[[10,[11,26]]]],[[124,25],[[10,[11,26]]]],[[123,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],0,[27,[[10,[123]]]],[[123,123],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[122,34],35],[[124,34],35],[[123,34],35],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[122,56],10],[[123,56],10],0,[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[125,125],[[]],[[22,23],[[10,[125,24]]]],[[125,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[27,[[10,[125]]]],[[125,125],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[[125,34],35],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[],[[126,[125]]]],[[]],[[125,52]],[[]],[[],54],0,[[125,56],10],[[],[[17,[5,16]]]],[[]],[[],10],[[],10],[[],60],0,[[]],0,0,[[]],[[]],[[127,34],35],[[127,34],35],[[]],[[]],[[],54],[[],58],[[],10],[[],10],[[],60],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[130,[[129,[128]]]],[0,[[114,[[129,[128]]]],131,117]]]],[[[130,[[129,[128]]]],41],[[126,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,126],[133,133],[134,134],[112,112],[135,135],[136,136],[103,103],[137,137],[[[130,[77]]],[[130,[77]]]],[138,138],[139,139],[140,140],[132,132],[141,141],[142,142],[143,143],[[[145,[[0,[77,144]]]]],[[145,[[0,[77,144]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[103,103],21],[[137,137],21],[[],21],[[],21],0,0,0,0,[[22,23],[[10,[134,24]]]],[[22,23],[[10,[112,24]]]],[[22,23],[[10,[136,24]]]],[[22,23],[[10,[103,24]]]],[[22,23],[[10,[137,24]]]],[[22,23],[[10,[140,24]]]],[[22,23],[[10,[132,24]]]],[[134,25],[[10,[11,26]]]],[[112,25],[[10,[11,26]]]],[[136,25],[[10,[11,26]]]],[[103,25],[[10,[11,26]]]],[[137,25],[[10,[11,26]]]],[[140,25],[[10,[11,26]]]],[[132,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[112,7],0,0,[27,[[10,[[71,[[0,[75,146,147]],148]]]]]],[[[130,[[129,[128]]]],41],[[126,[23]]]],[[[130,[[129,[128]]]],41],[[126,[23]]]],[[],130],[[],138],[[],139],[27,[[10,[149]]]],[27,[[10,[133]]]],[27,[[10,[134]]]],[27,[[10,[112]]]],[27,[[10,[135]]]],[27,[[10,[136]]]],[27,[[10,[103]]]],[27,[[10,[137]]]],[27,[[10,[138]]]],[27,[[10,[139]]]],[27,[[10,[140]]]],[27,[[10,[132]]]],[27,[[10,[141]]]],[27,[[10,[142]]]],[27,[[10,[143]]]],[27,[[10,[[145,[144]]]]]],[27,10],[[],103],[[149,149],30],[[133,133],30],[[134,134],30],[[112,112],30],[[135,135],30],[[136,136],30],[[103,103],30],[[137,137],30],[[138,138],30],[[140,140],30],[[132,132],30],[[141,141],30],[[[145,[[0,[150,144]]]],[145,[[0,[150,144]]]]],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[136,103],[[133,34],35],[[134,34],35],[[112,34],35],[[135,34],35],[[136,34],35],[[103,34],35],[[103,34],35],[[137,34],35],[[[130,[76]],34],35],[[138,34],35],[[139,34],35],[[140,34],35],[[132,34],35],[[141,34],35],[[142,34],35],[[151,34],35],[[151,34],35],[[143,34],35],[[[145,[[0,[76,144]]]],34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[[129,[128]]]]],[[130,[[129,[128]]]]]],[[]],[[]],[[]],[[]],[[133,133,140,133],141],[[]],[[]],[[]],[127,151],[109,151],[[]],[[]],[[[152,[5]]],103],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[140,126],[153,[[130,[[129,[128]]]]]],[143,126],[143,[[126,[[145,[154]]]]]],[143,[[126,[[145,[155]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[10,[103]]]],[156,[[126,[138]]]],[[121,157,158,159],[[126,[132]]]],[[130,157],55],[[112,[114,[157]]],126],[[112,[114,[157]]],126],[[112,121],[[126,[160]]]],[[112,121],[[126,[132]]]],0,0,[[134,52]],[[103,52]],[[137,52]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[133,157],30],[[132,157],30],[[],157],[133,157],[132,157],0,0,0,[130,[[81,[157]]]],[161,[[10,[74,109]]]],0,0,0,0,0,0,[[157,115],133],[[],130],[[[55,[115]],[55,[115]]],138],[[50,[55,[115]]],[[126,[74]]]],[[103,103],[[55,[21]]]],[[137,137],[[55,[21]]]],0,[[112,23],[[10,[112,24]]]],[[132,23],[[10,[132,24]]]],0,0,[[149,56],10],[[133,56],10],[[134,56],10],[[112,56],10],[[135,56],10],[[136,56],10],[[103,56],10],[[137,56],10],[[138,56],10],[[139,56],10],[[140,56],10],[[132,56],10],[[141,56],10],[[142,56],10],[[143,56],10],[[[145,[144]],56],10],[56,10],[151,[[55,[57]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[162,163],[[[130,[164]]],163],[[],141],[[103,[166,[165]]],[[126,[102]]]],[[],143],[[[145,[154]]],143],[[[145,[155]]],143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,137],[[],58],[[],58],[138,[[126,[156]]]],[141,[[126,[167]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,[133,115],0,[[],158],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[27,[[10,[74]]]],[[168,56],10],0,[[]],[[]],[27,[[10,[[17,[144]]]]]],[27,[[10,[[169,[144]]]]]],[31,[[10,[32,33]]]],[[]],[[]],[[],54],[[[6,[144]],56],10],[[[169,[144]],56],10],[[],10],[[],10],[[],60],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[170,[166,[171]],172],[[10,[170,173]]]],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[175,174],[175,174],[175,174],[175,174],[175,174],[175,174],[175,174],[170,176],[170,176],[157,50],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177,45],[[],177],[121,178],[121,179],[121,180],[121,181],[121,182],[121,183],[121,184],[170,170],[185,185],[157,157],[[175,121],182],[[175,121],180],[[175,121],184],[[175,121],179],[[175,121],181],[[175,121],183],[[175,121],178],[175,175],[45,45],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[50,157],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[170,170],21],[[157,157],21],[[],21],[[],21],[[22,23],[[10,[170,24]]]],[[22,23],[[10,[185,24]]]],[[22,23],[[10,[157,24]]]],[[22,23],[[10,[175,24]]]],[[22,23],[[10,[178,24]]]],[[22,23],[[10,[179,24]]]],[[22,23],[[10,[180,24]]]],[[22,23],[[10,[181,24]]]],[[22,23],[[10,[182,24]]]],[[22,23],[[10,[183,24]]]],[[22,23],[[10,[184,24]]]],[[170,25],[[10,[11,26]]]],[[185,25],[[10,[11,26]]]],[[157,25],[[10,[11,26]]]],[[175,25],[[10,[11,26]]]],[[178,25],[[10,[11,26]]]],[[179,25],[[10,[11,26]]]],[[180,25],[[10,[11,26]]]],[[181,25],[[10,[11,26]]]],[[182,25],[[10,[11,26]]]],[[183,25],[[10,[11,26]]]],[[184,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[170,186],[[45,22,121,23],[[10,[174,24]]]],0,0,[[],177],[[],45],[178],[179],[180],[181],[182],[183],[184],[178],[179],[180],[181],[182],[183],[184],[27,[[10,[170]]]],[27,[[10,[185]]]],[27,[[10,[157]]]],[170,187],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[175,13],[175,13],[175,13],[175,13],[175,13],[175,13],[175,13],[[170,170],30],[[185,185],30],[[157,157],30],[[175,175],30],[[178,178],30],[[179,179],30],[[180,180],30],[[181,181],30],[[182,182],30],[[183,183],30],[[184,184],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[178,30],[179,30],[180,30],[181,30],[182,30],[183,30],[184,30],[[175,184],30],[[175,180],30],[[175,179],30],[[175,178],30],[[175,182],30],[[175,183],30],[[175,181],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[170,34],[[10,[188]]]],[[185,34],35],[[185,34],35],[[157,34],35],[[157,34],35],[[175,34],35],[[175,34],35],[[45,34],35],[[178,34],35],[[178,34],35],[[179,34],35],[[179,34],35],[[180,34],35],[[180,34],35],[[181,34],35],[[181,34],35],[[182,34],35],[[182,34],35],[[183,34],35],[[183,34],35],[[184,34],35],[[184,34],35],[[]],[186,170],[[]],[[]],[[]],[50,157],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[121,[87,[189]]],178],[[121,[87,[190]]],179],[[121,[87,[191]]],180],[[121,[87,[192]]],181],[[121,[87,[193]]],182],[[121,[87,[194]]],183],[[121,[87,[195]]],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[166,[196]],[6,[5]]],[[10,[170,173]]]],[[[166,[196]],50],[[10,[170,173]]]],[50,[[10,[170,173]]]],[[[166,[196]],197],170],[50,157],[50,[[10,[170]]]],[50,[[10,[185]]]],[[121,[0,[189,78,111]]],178],[[121,[0,[190,78,111]]],179],[[121,[0,[191,78,111]]],180],[[121,[0,[192,78,111]]],181],[[121,[0,[193,78,111]]],182],[[121,[0,[194,78,111]]],183],[[121,[0,[195,78,111]]],184],[[170,52]],[[185,52]],[[175,52]],[[178,52]],[[179,52]],[[180,52]],[[181,52]],[[182,52]],[[183,52]],[[184,52]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[178,121],[179,121],[180,121],[181,121],[182,121],[183,121],[184,121],0,0,0,0,0,0,0,[[[166,[196]],[0,[198,199]]],170],[[[0,[198,199]]],170],[[],185],[[170,170],[[55,[21]]]],[[157,157],[[55,[21]]]],[170,102],[170,[[152,[5]]]],[170,197],[[170,56],10],[[185,56],10],[[157,56],10],0,[[170,200],201],[[170,[166,[171]],[55,[202]]],186],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[55,[115]]]],[175,[[55,[115]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[170,[166,[171]],172],[[10,[173]]]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177],[170],0,0,[[]],[[]],[[]],[[]],[[22,23],[[10,[203,24]]]],[[203,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[27,[[10,[203]]]],[27,[[10,[120]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[203,34],35],[[120,34],35],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[203,7],0,[[]],[[]],[[],54],[[],54],0,0,[[203,56],10],[[120,56],10],[[203,170],[[126,[120]]]],0,0,[[],[[17,[5,16]]]],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[120,[166,[[0,[196,171]]]]],[[10,[203,173]]]],[[]],[[]],0,0,[[],[[17,[[205,[204]]]]]],[[],174],[[206,207,121],[[88,[[87,[86]]]]]],[[]],[[]],[204,204],[[]],[[206,121],[[88,[[87,[86]]]]]],[[],45],[204],[[204,34],35],[[]],[[[0,[208,78,111]]],204],[[]],[204,55],0,[[]],[[],54],[[206,20,121],[[88,[[87,[86]]]]]],[[206,182,18],[[88,[[87,[86]]]]]],[[206,179,121],[[88,[[87,[86]]]]]],[[206,180,20,121],[[88,[[87,[86]]]]]],[[]],[[],10],[[],10],[[],60],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[209,11],209],[[[211,[210]],[6,[5]]],126],[[212,58,213,214],[[126,[109]]]],[[212,215,[55,[11]]],[[126,[216]]]],0,[[],[[88,[[87,[86]]]]]],[[],[[88,[[87,[86]]]]]],[[[218,[[0,[217,78]]]]],[[88,[[87,[86]]]]]],[212,[[206,[219]]]],[[[221,[[0,[76,78,111,220]]]]],[[88,[[87,[86]]]]]],[212,[[206,[222]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[13,223,223,224],13],[212,212],[[[221,[[0,[76,77]]]]],[[221,[[0,[76,77]]]]]],[225,225],[213,213],[226,226],[227,227],[[]],[[]],[[]],[[]],[[]],[[]],[[213,213],21],0,[[],[[88,[[87,[86]]]]]],[[],[[88,[[87,[86]]]]]],[[[229,[228]]],[[88,[[87,[86]]]]]],[[[211,[210]]],[[88,[[87,[86]]]]]],[[[206,[219]]]],[[[206,[219]]],126],[[],21],[[22,23],[[10,[230,24]]]],[[22,23],[[10,[213,24]]]],[[230,25],[[10,[11,26]]]],[[213,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[[[6,[5]],23],[[126,[231,48]]]],[[],23],[206,23],0,[232],[232],[225],[206,126],[212,126],[206,126],[212,126],[[213,213],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[212],[[[0,[233,78,111]]],[[88,[[87,[86]]]]]],[[[0,[233,78,111]]],[[88,[[87,[86,16]]]]]],[[228,23,233],234],[[[0,[233,78,111]]],[[88,[[87,[86]]]]]],[[[0,[233,78,111]]],[[88,[[87,[86,16]]]]]],[[218,34],35],[[[216,[76]],34],35],[[212,34],35],[[[221,[[0,[76,76]]]],34],35],[[230,34],35],[[213,34],35],[[213,34],35],[[226,34],35],[[226,34],35],[[48,34],35],[[48,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[217,212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]],23],[[126,[48]]]],[[[6,[5]],23],[[126,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[86,55],[[227,11],[[55,[226]]]],[[229,[6,[5]]],[[17,[5]]]],[[[221,[76]],[6,[5]]],[[17,[5]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86]]]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86,16]]]]]],0,0,[206,206],0,[213],0,0,0,[[[0,[235,236,78,111]]],[[88,[[87,[86]]]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86,16]]]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86]]]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86,16]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],212],[[]],[206,[[206,[222]]]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,[206,30],[212,30],[[],227],[227,11],0,0,0,[38,[[17,[5]]]],[[210,[238,[237]]],[[211,[210]]]],[[[87,[228]],23],[[206,[219]]]],[[217,23],212],[[[238,[220]],23],212],[227,55],[227,55],0,0,0,[[[6,[5]]],[[88,[[87,[86]]]]]],[[[218,[[0,[217,78]]]],[6,[5]]],[[88,[[87,[86]]]]]],[[[221,[[0,[76,78,111,220]]]],[6,[5]]],[[88,[[87,[86]]]]]],0,[[227,11],55],[[206,[0,[239,131]]]],0,[[[0,[57,131,117]]],48],[[213,213],[[55,[21]]]],[[240,13]],[240],0,0,[[],11],[[],11],[[[218,[[0,[217,78]]]]],11],[[[229,[228]]],11],[[[211,[210]]],11],[[[221,[[0,[76,78,111,220]]]]],11],[[240,13]],[240],0,0,[[[6,[5]]],[[88,[[87,[86]]]]]],[[[229,[241]],[6,[5]]],[[88,[[87,[86]]]]]],[[[211,[210]],[6,[5]]],[[88,[[87,[86]]]]]],[[[206,[131]],[6,[5]]],[[88,[[87,[86]]]]]],[[[6,[5]]],[[88,[[87,[86]]]]]],[[[229,[241]],[6,[5]]],[[88,[[87,[86]]]]]],[[[211,[210]],[6,[5]]],[[88,[[87,[86]]]]]],[[[206,[131]],[6,[5]]],[[88,[[87,[86]]]]]],[[[6,[5]]],[[88,[[87,[86]]]]]],[[[229,[241]],[6,[5]]],[[88,[[87,[86]]]]]],[[[211,[210]],[6,[5]]],[[88,[[87,[86]]]]]],[[[206,[131]],[6,[5]]],[[88,[[87,[86]]]]]],[[[6,[5]],[6,[5]]],[[88,[[87,[86]]]]]],[[[229,[241]],[6,[5]],[6,[5]]],[[88,[[87,[86]]]]]],[[[211,[210]],[6,[5]],[6,[5]]],[[88,[[87,[86]]]]]],[[[206,[131]],[6,[5]],[6,[5]]],[[88,[[87,[86]]]]]],[[[6,[5]]],[[88,[[87,[86]]]]]],[[[229,[241]],[6,[5]]],[[88,[[87,[86]]]]]],[[[211,[210]],[6,[5]]],[[88,[[87,[86]]]]]],[[[206,[131]],[6,[5]]],[[88,[[87,[86]]]]]],[[[6,[5]]],[[88,[[87,[86]]]]]],[[[229,[241]],[6,[5]]],[[88,[[87,[86]]]]]],[[[211,[210]],[6,[5]]],[[88,[[87,[86]]]]]],[[[206,[131]],[6,[5]]],[[88,[[87,[86]]]]]],[[[6,[5]]],[[88,[[87,[86]]]]]],[[[218,[[0,[217,78]]]],[6,[5]]],[[88,[[87,[86]]]]]],[[[221,[[0,[76,78,111,220]]]],[6,[5]]],[[88,[[87,[86]]]]]],[[[0,[233,78,111]]],[[88,[[87,[86]]]]]],[[[0,[233,78,111]]],[[88,[[87,[86,16]]]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86]]]]]],[[[0,[235,236,78,111]]],[[88,[[87,[86,16]]]]]],[[],[[88,[[87,[86]]]]]],[[[229,[242]]],[[88,[[87,[86]]]]]],[[[211,[210]]],[[88,[[87,[86]]]]]],[[[206,[219]]],[[88,[[87,[86]]]]]],[[230,56],10],[[213,56],10],[[],[[88,[[87,[86]]]]]],[[[229,[242]]],[[88,[[87,[86]]]]]],[[[211,[210]]],[[88,[[87,[86]]]]]],[[[206,[219]]],[[88,[[87,[86]]]]]],[227],0,[[],[[17,[5]]]],[[],[[17,[5]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[206,206],[206,[[206,[222]]]],[[206,[17,[5]]],206],[[206,121],206],[[],58],[[],58],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[212],[212],[212],[[212,212]],[212],[212],[212],[212],[212],[212],[212],[212],[212],[212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[212,[0,[235,236,243]],215]],[[212,[0,[235,236,243]]]],[206,206],[[212,23],212],[[206,[17,[5]]],206],[[212,[17,[5]]],212],[[206,121],206],[[212,121],212],[[11,11],48],[[5,5],48],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[244,[[88,[[87,[86]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[245,[[88,[[87,[86]]]]]],0,0,[[],246],[[],247],[[],244],[244],[[248,248],30],[[],30],[[],30],[[],30],[[],30],[[246,34],35],[[247,34],35],[[249,34],35],[[244,34],35],[[245,34],35],[[248,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,0,[[],244],0,0,0,[[245,[6,[5]]],[[88,[[87,[86]]]]]],[[245,[6,[5]]],[[88,[[87,[86]]]]]],[[245,[6,[5]]],[[88,[[87,[86]]]]]],[[245,[6,[5]],[6,[5]]],[[88,[[87,[86]]]]]],[[245,[6,[5]]],[[88,[[87,[86]]]]]],[[245,[6,[5]]],[[88,[[87,[86]]]]]],[245,[[88,[[87,[86]]]]]],0,[245,[[88,[[87,[86]]]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[250,251]],[[]],[[]],[[]],[[]],0,0,[[],237],[[],250],[[237,34],35],[[250,34],35],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],237],[[],250],[[237,251]],[[237,251],252],[13,11],[251,11],[[237,250]],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[253,253],[[]],[[254,254],21],[[255,255],21],[[256,256],21],[[],21],[[],21],[[],21],[[22,23],[[10,[254,24]]]],[[22,23],[[10,[257,24]]]],[[22,23],[[10,[258,24]]]],[[22,23],[[10,[259,24]]]],[[22,23],[[10,[255,24]]]],[[22,23],[[10,[260,24]]]],[[22,23],[[10,[261,24]]]],[[22,23],[[10,[262,24]]]],[[22,23],[[10,[256,24]]]],[[254,25],[[10,[11,26]]]],[[257,25],[[10,[11,26]]]],[[258,25],[[10,[11,26]]]],[[259,25],[[10,[11,26]]]],[[255,25],[[10,[11,26]]]],[[260,25],[[10,[11,26]]]],[[261,25],[[10,[11,26]]]],[[262,25],[[10,[11,26]]]],[[256,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[[254,254],30],[[255,255],30],[[256,256],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[212],[[254,34],35],[[257,34],35],[[258,34],35],[[259,34],35],[[255,34],35],[[260,34],35],[[261,34],35],[[262,34],35],[[256,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[86,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[206,[[10,[109]]]],[[254,254],[[55,[21]]]],[[255,255],[[55,[21]]]],[[256,256],[[55,[21]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[212],[212],[212],[[212,212]],[212],[212],[212],[212],[212],[212],[212],[212],[212],[212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[263,[77]]],[[263,[77]]]],[264,264],[[]],[[]],[[264,264],21],[[],21],[[22,23],[[10,[24]]]],[[22,23],[[10,[[263,[160]],24]]]],[[22,23],[[10,[264,24]]]],[[50,23],[[10,[24]]]],[25,[[10,[11,26]]]],[[265,25],[[10,[11,26]]]],[[[263,[266]],25],[[10,[11,26]]]],[[264,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[[],[[10,[58,26]]]],[[],[[10,[[17,[5]],26]]]],[[],267],[268,13],0,[27,[[10,[[263,[148]]]]]],[30,[[10,[26]]]],[30,[[10,[26]]]],[269,[[10,[26]]]],[269,[[10,[26]]]],[270,[[10,[26]]]],[270,[[10,[26]]]],[271,[[10,[26]]]],[271,[[10,[26]]]],[272,[[10,[26]]]],[272,[[10,[26]]]],[[[6,[5]]],[[10,[26]]]],[[[6,[5]]],[[10,[26]]]],[38,[[10,[26]]]],[38,[[10,[26]]]],[273,[[10,[26]]]],[273,[[10,[26]]]],[13,[[10,[26]]]],[13,[[10,[26]]]],[5,[[10,[26]]]],[5,[[10,[26]]]],[[[263,[150]],[263,[150]]],30],[[264,264],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[[[263,[160]]],160],[[[263,[160]]],160],[[[268,[25]]],274],[[24,34],35],[[24,34],35],[[[263,[76]],34],35],[[264,34],[[10,[188]]]],[275],[[],268],[[]],[[]],[[],263],[275],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[0,[57,131,117]]],24],[[]],[[]],[50,24],[[264,52]],0,0,0,0,[[]],[[]],[[]],[[]],[268],[[],54],[[],54],[[],54],[[],54],[109,24],[[264,264],[[55,[21]]]],[22,[[10,[264,276]]]],[22,[[10,[55,276]]]],[[[263,[160]],23],[[10,[[263,[160]],24]]]],0,[[[263,[168]],56],10],0,0,[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[]],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[[6,[5]]]],[[[268,[25]],[6,[5]]],[[274,[11]]]],[[264,277],[[10,[26]]]],[[[6,[5]]],[[10,[26]]]],[278,[[10,[11,26]]]],[279,[[10,[11,26]]]],0,0,[27,[[10,[160]]]],[[266,56],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[280,280],[[]],[[22,23],[[10,[280,24]]]],[[280,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[[280,280],30],[[],30],[[],30],[[],30],[[],30],[[280,34],35],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[280,52]],[[]],[[],54],[[],[[17,[5,16]]]],[[]],[[],10],[[],10],[[],60],[[]],0,0,0,0,0,0,0,[34,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,223,223,224],13],[281],[[50,11],11],[[[283,[[0,[76,282]]]],34],35],[[284,34],35],[[284,34],35],[[285,34],35],[[[281,[286]],34],35],[[[287,[58,115]],34],35],[[50,34],35],[[[6,[115]],34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],30],[[],58],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],0,[27,[[10,[[17,[5]]]]]],[[[6,[5]],56],10],0,0,[[]],[[]],[27,[[10,[288]]]],[[288,288],30],[31,[[10,[32,33]]]],[[288,34],35],[[]],0,[[]],[[],54],[[288,56],10],[[],10],[[],10],[[],60],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[17,[205]]]],[[],128],[289,128],[164,128],0,[[206,207,121],[[88,[[87,[86]]]]]],0,[58,290],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[292,[291]]],141],0,[293,293],[65,65],[290,290],[289,289],[164,164],[[[294,[[0,[77,266,160]]]]],[[294,[[0,[77,266,160]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[295,50],[[10,[290]]]],[206,[[88,[[87,[86]]]]]],0,0,0,[[],213],[[[292,[291]]],212],0,0,[295,[[206,[219]]]],0,[[],45],[[],45],[[],45],[[],45],[[],177],[[],73],[289],[164],[27,[[10,[[296,[148]]]]]],[27,[[10,[65]]]],[27,[[10,[[294,[[0,[266,160]]]]]]]],[[297,138],[[88,[[87,[86]]]]]],[[297,138],[[88,[[87,[86]]]]]],[[206,[17,[58]]],[[88,[[87,[86]]]]]],[[206,[17,[58]]],[[88,[[87,[86]]]]]],[[298,298],30],[[293,293],30],[[65,65],30],[[[294,[[0,[150,266,160]]]],[294,[[0,[150,266,160]]]]],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],0,[[298,34],35],[[293,34],35],[[[296,[76]],34],35],[[65,34],35],[[290,34],35],[[289,34],35],[[164,34],35],[[[294,[[0,[76,266,160]]]],34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[128,78,111]]],289],[[]],[[[0,[299,78,111]]],164],[[]],[[[0,[266,160]]],[[294,[[0,[266,160]]]]]],[[[238,[128]]],289],[[]],[[]],[[]],[[]],[[]],[[]],[[],205],[[121,140],[[126,[132]]]],[140,126],[[],214],[[],214],[289,55],[164,55],[295,[[88,[[87,[86]]]]]],0,[295,30],0,[[293,52]],[[[294,[[0,[251,266,160]]]],52]],[[141,212,300,18],[[88,[[87,[86]]]]]],[292,[[88,[[87,[86]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],157],0,0,0,0,0,0,0,0,[[],157],[[],157],0,[168,73],[[212,[206,[219]],30,[55,[65]]],295],[[[301,[142]],121,18,[17,[18]]],297],[168,73],[[270,58],290],[58,290],[[[292,[291]]],18],0,[[206,20],[[88,[[87,[86]]]]]],0,[138,126],0,[297,[[6,[18]]]],[[206,18],[[88,[[87,[86]]]]]],[206,[[88,[[87,[86]]]]]],[[206,20],[[88,[[87,[86]]]]]],0,0,[295,[[55,[65]]]],0,[[[296,[168]],56],10],[[65,56],10],[[[294,[[0,[266,160]]]],56],10],[58,290],[[],302],[[],302],[[[292,[291]]],300],0,[[],289],[73,115],[[[296,[115]]],115],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[10,[[296,[74]],303]]]],[[[296,[115]]],[[10,[[296,[74]],303]]]],[[[6,[18]],138],[[71,[18,141]]]],[[[6,[18]],138],[[71,[18,141]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[294,[[0,[266,160]]]],23],[[10,[[0,[266,160]],24]]]],[[[294,[[0,[266,160]]]],45],[[10,[[0,[266,160]],24]]]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],290],[[18,141],126],[[18,141],126],[138,126],0,[304,[[6,[158]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[295,[0,[235,236,243]]],86],[[295,[0,[235,236,243]],[0,[215,305]]],86],[[73,65],73],[[[296,[115]],65],[[296,[115]]]],0,0,0,0,[[207,206,121,[0,[233,78,111]],215]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,271],[66,66],[306,306],[[]],[[]],[121,307],[[],207],[27,[[10,[66]]]],[27,[[10,[306]]]],[[66,66],30],[[306,306],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[307,34],35],[[207,34],35],[[66,34],35],[[306,34],35],[[]],[[]],[[]],[[]],[[207,[308,[121,58]]],66],[[]],[[]],[[41,[308,[121,58]]],[[308,[121,306]]]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],0,0,0,0,0,0,[207,307],0,0,[[66,56],10],[[306,56],10],[[]],[[]],[[],58],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[23],[[[47,[45,46]]]],[[[47,[138]],121,157,156],[[47,[138]]]],[[]],[[]],[[]],[[]],[[[47,[77,77]]],[[47,[77,77]]]],[46,46],[[]],[[]],[309,23],[[[47,[204]]],23],[23,46],[[[47,[45,46]]],46],[[],[[47,[310]]]],[[],46],[[46,46],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[[[47,[76,76]],34],35],[[46,34],35],[[[71,[121]]],[[47,[310]]]],[[]],[[]],[153,[[47,[310]]]],[[]],[[]],[[47,121],55],[[[47,[76]],121],76],[[47,121],55],[[46,52]],0,[[]],[[]],[[],54],[[],54],[47,41],[47,41],[153,[[47,[310]]]],[[[47,[76]],121,157,76]],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[]],[[]],[23,23],[[[47,[45,46]]],[[47,[45,46]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[304,304],[158,158],[311,311],[312,312],[313,313],[302,302],[101,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,23],[[10,[304,24]]]],[[22,23],[[10,[158,24]]]],[[22,23],[[10,[311,24]]]],[[304,25],[[10,[11,26]]]],[[158,25],[[10,[11,26]]]],[[311,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],0,0,0,[[],312],[27,[[10,[304]]]],[27,[[10,[158]]]],[27,[[10,[311]]]],[27,[[10,[312]]]],[27,[[10,[313]]]],[27,[[10,[302]]]],[27,[[10,[101]]]],[[304,304],30],[[158,158],30],[[311,311],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[304,34],35],[[158,34],35],[[311,34],35],[[312,34],35],[[313,34],35],[[302,34],35],[[101,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[6,302],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[312,273],[[55,[311]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[312],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[312,30],[312,314],0,0,0,0,0,0,0,0,[[273,273],304],[[273,273],158],[[],312],[314,55],[[304,56],10],[[158,56],10],[[311,56],10],[[312,56],10],[[313,56],10],[[302,56],10],[[101,56],10],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[153,[[10,[312,311]]]],[[312,311],[[10,[273]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[18,[[88,[[87,[86]]]]]],[18,[[88,[[87,[86]]]]]],[[]],[[]],[[]],[[]],[[[301,[77,77]]],[[301,[77,77]]]],[[]],[315],[301],[315],0,[[]],[[]],[[]],[[]],[[]],[[[0,[199,131,316]]],315],[[[0,[199,131,117,316]]],301],[[],54],[[],54],[[],[[88,[[87,[86]]]]]],[[],[[88,[[87,[86]]]]]],[[[6,[18]]],[[88,[[87,[86]]]]]],[[[6,[18]]],[[88,[[87,[86]]]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[]],[[]],0,[[[317,[[0,[168,74,316,131]]]],18],[[88,[[87,[86]]]]]],[[]],[[]],[[]],[[]],[[],54],[[18,18,11,318]],0,[[[317,[[0,[168,74,316,131]]]]],[[88,[[87,[86]]]]]],0,[[[317,[[0,[168,74,316,131]]]],[6,[18]],[0,[168,74,316,131]]],[[88,[[87,[86]]]]]],0,[[],10],[[],10],0,[[],60],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[101,[71,[18,101]]],[[126,[90]]]],[[313,[71,[18,313]]],[[55,[311]]]],[[302,[71,[18,302]]],[[55,[311]]]],0,0,0,0,0,0,0,0,0,[[[319,[76]],34],35],[320,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,321],[[[321,[75]]],[[55,[75]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[11,320],[[[0,[215,78,111]],11],322],[[[0,[215,78,111]],11],323],[11,324],[11,325],[[11,326],327],[[11,326,101],328],0,[11,321],[[18,329],319],[[[330,[118]],18,329],319],[[320,18,104],319],[[[322,[[0,[76,75,77]]]],18,[329,[[0,[76,75,77]]]]],319],[[[323,[[0,[75,77,76]]]],18,[329,[[0,[75,77,76]]]]],[[319,[[71,[18]]]]]],[[[321,[[0,[75,77,76]]]],18,[329,[[0,[75,77,76]]]]],[[319,[[0,[75,77,76]]]]]],[[[324,[[0,[76,75,77]]]],18,[329,[[17,[[0,[76,75,77]]]]]]],[[319,[[17,[[0,[76,75,77]]]]]]]],[[[325,[[0,[76,75,77]]]],18,[329,[[0,[76,75,77]]]]],[[319,[[17,[[0,[76,75,77]]]]]]]],[[327,18,329],[[319,[[71,[18]]]]]],[[328,18,[329,[101]]],[[319,[90]]]],[[],[[55,[89]]]],[[[330,[118]]],[[55,[89]]]],[328,[[55,[89]]]],0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[199,89],[[330,[199]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[331,331],[332,332],[333,333],[334,334],[[]],[[]],[[]],[[]],[[22,23],[[10,[331,24]]]],[[22,23],[[10,[332,24]]]],[[22,23],[[10,[333,24]]]],[[22,23],[[10,[334,24]]]],[[331,25],[[10,[11,26]]]],[[332,25],[[10,[11,26]]]],[[333,25],[[10,[11,26]]]],[[334,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[266,335],[336,[[10,[333,337]]]],[[[6,[5]]],[[10,[337]]]],[[273,[6,[5]]],[[10,[337]]]],[[273,336],[[10,[337]]]],[333,[[17,[5]]]],[[333,[0,[338,199]]]],[[331,331],30],[[332,332],30],[[333,333],30],[[334,334],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[331,34],35],[[332,34],35],[[333,34],35],[[334,34],35],[[]],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[]],[[]],[[]],[[333,52]],[[332,13],[[152,[5]]]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],0,0,0,0,0,[333,11],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[[6,[5]]],[[17,[5,16]]]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[],60],[[333,239]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[239],[[[339,[199]]],[[340,[199]]]],[[[339,[199]]],[[341,[199]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[13,223,223,224],13],[[13,223,223,224],13],[300,300],[318,318],[[]],[[]],0,[199,[[339,[199]]]],[[199,273],[[339,[199]]]],0,0,[[],342],[[],300],[[],[[339,[[0,[310,199]]]]]],[[[340,[199]]],199],[[[341,[199]]],199],[[[341,[199]]],199],[[[341,[199]]],[[340,[199]]]],[[[341,[199]],239],[[340,[199]]]],[343],[[[340,[199]]]],[[[341,[199]]]],[[344,34],35],[[344,34],35],[[342,34],35],[[300,34],35],[[318,34],35],[[[339,[[0,[76,199]]]],34],[[10,[188]]]],[[[340,[[0,[76,199]]]],34],[[10,[188]]]],[[[340,[[0,[282,199]]]],34],[[10,[188]]]],[[[341,[[0,[76,199]]]],34],[[10,[188]]]],[[[341,[[0,[282,199]]]],34],[[10,[188]]]],[[]],[[]],[[]],[[]],[[]],[[]],[275],[[]],[[],339],[[]],[[]],[[]],[[]],[[[339,[199]]],199],0,0,0,0,[300],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[339,[199]]],199],[[[341,[199]]],[[345,[199]]]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[343,30],[318,30],0,[[300,[55,[89]]],[[10,[109]]]],[[300,[55,[326]],[17,[346]]],[[88,[[87,[86]]]]]],[300,318],[318,347],[300,300],[[[340,[199]],239],[[340,[199]]]],[[[341,[199]],239],[[345,[199]]]],0,0,0,0,[[[348,[30]]],347],[[],300],[199,[[339,[199]]]],0,0,[[240,13]],[240],0,[[[88,[347]],349],350],[[240,13]],[240],[[[339,[199]]],86],[[[238,[[339,[199]],16]]],86],0,0,0,0,0,0,[342],[300],[[300,[55,[89]]],[[10,[109]]]],[89],[351],[[50,[0,[86,131]]],[[55,[[352,[131]]]]]],[[300,[114,[58]],[0,[239,131]]],[[353,[131]]]],[[300,[114,[58]],239]],0,[[89,86],[[10,[344]]]],[[]],[[]],[[],58],[[],58],[[],58],[[[341,[199]],239],[[10,[[340,[199]],[341,[199]]]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[340,[199]],239],[[10,[[340,[199]],[340,[199]]]]]],[[[341,[199]],239],[[10,[[345,[199]],[341,[199]]]]]],[[[339,[199]]],[[10,[[340,[199]],354]]]],[[[238,[[339,[199]],16]]],[[10,[[355,[199,199]],354]]]],[[[339,[199]]],[[10,[[341,[199]],354]]]],[[[238,[[339,[199]],16]]],[[10,[[356,[199]],354]]]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[199,273],[[339,[199]]]],[[[339,[199]]],86],[[[238,[[339,[199]],16]]],86],0,0,0,[239],0,0,0,0,0,0,0,0,0,0,0,0,0,[89],[351],[[50,[0,[86,131]]],[[55,[[352,[131]]]]]],[[50,86],[[55,[352]]]],[[89,86],[[10,[344]]]],0,0,[357,[[71,[1]]]],[[]],[[]],[[]],[[]],[358,358],[[[357,[77]]],[[357,[77]]]],[[]],[[]],[[358,358],21],[[],21],[[22,23],[[10,[[357,[160]],24]]]],[[[357,[266]],25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[357,11],[[],357],[27,[[10,[358]]]],[27,[[10,[[357,[148]]]]]],[[[357,[310]],1],[[359,[1,310]]]],[[358,358],30],[[[357,[150]],[357,[150]]],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[358,34],35],[[358,34],35],[[[357,[76]],34],35],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[153,357],[[]],[[]],[[38,1],357],[[357,1],55],[[357,1],55],[[[357,[310]],1],310],[[358,52]],[[[357,[251]],52]],[[357,1],55],[[]],[[]],[[],54],[[],54],[357,41],[357,1],[[358,358],[[55,[21]]]],[[358,56],10],[[[357,[168]],56],10],[[357,357],30],[[357,1],[[10,[358]]]],[357,43],[[],[[17,[5,16]]]],[[]],[[]],[[[357,[360]]],[[357,[361]]]],[[],58],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[]],[[]],0,0,0,0,[[362,357],[[10,[358]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[362,[77]]],[[362,[77]]]],[363,363],[[]],[[]],[[22,23],[[10,[[362,[160]],24]]]],[[[362,[266]],25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[362,11],[363,11],[362,11],[363,11],[[],362],[[],363],[27,[[10,[[362,[148]]]]]],[27,[[10,[363]]]],[[[362,[150]],[362,[150]]],30],[[363,363],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[31,[[10,[32,33]]]],[[362,153]],[[[362,[76]],34],35],[[363,34],35],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[153,362],[153,363],[[]],[[]],[[362,1],[[55,[17]]]],[[362,1],[[55,[17]]]],[[[362,[251]],52]],[[363,1,11]],[[]],[[]],[[]],[[]],[[[362,[131]]]],[362,[[0,[41,43]]]],[[],54],[[],54],[[],54],[362,30],[362,41],[363,41],[362,[[0,[41,43]]]],[362,41],0,[[362,1],11],[[]],[17,364],[[[71,[1,17]]],362],[[[364,[41]]],55],[[1,363,357,38],363],[[[362,[168]],56],10],[[363,56],10],[[362,362],30],[362,363],[[],[[17,[5,16]]]],[[]],[[]],[362,1],[363,1],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[],326],0,0,[[]],[[]],[[]],[[]],[365],[365],[365],[[]],[[]],[365,365],0,[[]],[[]],[[],54],[[],54],[[365,366],365],0,0,[[[114,[[367,[50]]]]],365],[368],0,[[365,89],365],0,[[365,13],365],[[],10],[[],10],[[],10],[[],10],[[],60],[[],60],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[369,369],[370,370],[[]],[[]],[[]],[[22,23],[[10,[119,24]]]],[[22,23],[[10,[369,24]]]],[[22,23],[[10,[370,24]]]],[[119,25],[[10,[11,26]]]],[[369,25],[[10,[11,26]]]],[[370,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[25,[[10,[11,26]]]],[[119,119],30],[[369,369],30],[[370,370],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[119,34],35],[[369,34],35],[[370,34],35],[[370,34],35],[[]],[[]],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[]],[[]],[[119,52]],[[369,52]],0,[[]],[[]],[[]],[[],54],[[],54],[[],54],0,0,0,[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[],[[17,[5,16]]]],[[]],[[]],[[]],[[],58],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[119,2],[[[6,[179]],[6,[180]],[152,[5]]],2],[[],60],[[],60],[[],60],[[119,[17,[102]]],[[10,[370]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[371,372],0,[[]],[[]],[371,371],[[]],[[22,23],[[10,[371,24]]]],[[371,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[[371,373],30],[27,[[10,[371]]]],[[371,371],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[[371,34],35],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[[371,52]],[[]],[[],54],0,[[371,56],10],[[],[[17,[5,16]]]],[[]],[[],10],[[],10],[[],60],[[]],0,0,0,0,0,[72,50],[[]],[[]],0,[72,72],[[]],[[72,72],21],[[],21],[[22,23],[[10,[72,24]]]],[[72,25],[[10,[11,26]]]],[25,[[10,[11,26]]]],[27,[[10,[72]]]],[[72,72],30],[[],30],[[],30],[[],30],[[],30],[31,[[10,[32,33]]]],[[72,34],35],[[72,34],35],[374,72],[[]],[[[6,[5]],[47,[45,46]]],[[10,[48]]]],[[]],[50,[[10,[72,375]]]],[[72,52]],[72,[[55,[[376,[50]]]]]],[72,[[55,[50]]]],[[]],[[],54],[[72,50],[[10,[72,375]]]],[[],[[88,[[87,[86]]]]]],[[],[[88,[[87,[86]]]]]],[50,[[10,[72,375]]]],[[72,72],[[55,[21]]]],[72,[[55,[50]]]],[72,50],[72,[[55,[38]]]],[72,[[55,[38]]]],[72,50],[[72,56],10],[[],[[17,[5,16]]]],[[]],[[],58],[72,374],[[],10],[[],10],[[],60],[72,50],[[]],[[[129,[161]],[129,[[6,[5]]]]],274],[[[129,[161]],[129,[[6,[5]]]]],274],[[[129,[161]],[129,[[6,[5]]]]],274],[[[129,[161]],[129,[[6,[5]]]]],274],0,0,0,[[]],[[]],[[]],[[]],[377,377],[[]],[[377,377],30],[[],30],[[],30],[[],30],[[],30],[[378,34],35],[[377,34],35],[[377,34],35],[[[379,[[0,[77,78]]]]],[[378,[[0,[77,78]]]]]],[[]],[[]],[[]],0,[[]],[[]],[[],54],[[],54],[[],54],[[[379,[77]]]],[[[379,[[0,[77,78]]]]],[[378,[[0,[77,78]]]]]],[[],[[88,[[87,[86,16]]]]]],[[],[[88,[[87,[86,16]]]]]],[[[88,[[378,[[0,[77,78]]]]]],349],[[350,[55]]]],[[]],[[],58],[[],10],[[],10],[[],10],[[],10],[[88,349],[[350,[[55,[10]]]]]],[[],60],[[],60],[[]],[[]]],"c":[1206,2085],"p":[[3,"Amount"],[3,"TransactionId"],[8,"BitOrder"],[3,"BitSlice"],[15,"u8"],[15,"slice"],[3,"Hash"],[8,"FromByteSlice"],[4,"Error"],[4,"Result"],[15,"usize"],[3,"Feerate"],[15,"u64"],[3,"Amount"],[3,"u5"],[3,"Global"],[3,"Vec"],[3,"PeerId"],[4,"BitcoinAmountOrAll"],[3,"OutPoint"],[4,"Ordering"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[8,"Write"],[3,"Error"],[8,"Deserializer"],[15,"char"],[8,"FromIterator"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[4,"ParseAmountError"],[4,"CoreError"],[15,"u16"],[4,"ParseAmountError"],[3,"ParseIntError"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"Hasher"],[8,"SliceIndex"],[3,"Request"],[4,"Option"],[8,"Serializer"],[8,"Error"],[3,"String"],[4,"BitSpanError"],[3,"TypeId"],[8,"WriteBase32"],[3,"WsAdminClient"],[3,"PeerServerParams"],[6,"FederationResult"],[3,"ApiAuth"],[3,"AuditSummary"],[3,"ConfigGenConnectionsRequest"],[3,"ConfigGenParamsConsensus"],[3,"ConfigGenParamsResponse"],[3,"ConfigGenParamsRequest"],[3,"BTreeMap"],[3,"SafeUrl"],[6,"ApiRequestErased"],[8,"DeserializeOwned"],[8,"Eq"],[8,"Debug"],[8,"Clone"],[8,"MaybeSend"],[3,"StatusResponse"],[3,"Certificate"],[3,"BTreeSet"],[8,"JsonRpcClient"],[3,"WsFederationApi"],[3,"DynGlobalApi"],[8,"IGlobalFederationApi"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Duration"],[3,"ApiVersionSet"],[3,"DynModuleApi"],[3,"InviteCode"],[4,"InviteCodeData"],[3,"FederationStatus"],[3,"PeerStatus"],[4,"PeerConnectionStatus"],[4,"ServerStatus"],[6,"SerdeOutputOutcome"],[8,"OutputOutcome"],[4,"OutputOutcomeError"],[3,"SupportedApiVersionsSummary"],[3,"PublicKey"],[3,"FederationId"],[4,"PeerError"],[3,"FederationError"],[3,"FederationPeer"],[3,"PeerResponse"],[4,"Error"],[3,"Error"],[8,"IModuleFederationApi"],[8,"MaybeSync"],[3,"ClientConfig"],[3,"Client"],[8,"Into"],[4,"Value"],[6,"JsonRpcResult"],[8,"Sync"],[8,"QueryStrategy"],[3,"Transaction"],[3,"SignedBackupRequest"],[6,"ModuleInstanceId"],[3,"ClientBackupKey"],[3,"ClientBackupSnapshot"],[3,"ClientBackupKeyPrefix"],[3,"BitcoinRpcConfig"],[6,"Result"],[3,"Cancelled"],[8,"IDynCommonModuleInit"],[8,"AsRef"],[3,"ModuleInitRegistry"],[8,"Send"],[3,"ClientModuleConfig"],[3,"JsonWithKind"],[3,"PeerUrl"],[3,"JsonClientConfig"],[3,"GlobalClientConfig"],[3,"FederationIdPrefix"],[3,"ConfigGenModuleParams"],[3,"EmptyGenParams"],[3,"ServerModuleConsensusConfig"],[3,"ServerModuleConfig"],[4,"DkgPeerMsg"],[4,"SupportedDkgMessage"],[8,"DkgGroup"],[4,"DkgMessage"],[8,"Ord"],[8,"FromStr"],[8,"Deserialize"],[6,"ServerModuleConfigGenParamsRegistry"],[8,"PartialEq"],[4,"DkgError"],[15,"array"],[8,"IntoIterator"],[3,"G2Projective"],[3,"G1Projective"],[8,"ModuleInitParams"],[3,"ModuleKind"],[3,"ModuleConsensusVersion"],[8,"ClientConfig"],[8,"Decodable"],[3,"Path"],[6,"ServerModuleInitRegistry"],[6,"CommonModuleInitRegistry"],[3,"DynServerModuleInit"],[4,"All"],[3,"Secp256k1"],[8,"TypedServerModuleConfig"],[8,"Serialize"],[3,"Wrap"],[3,"KeyPair"],[8,"Verification"],[3,"Scalar"],[4,"Error"],[8,"Any"],[3,"DynUnknown"],[3,"KeyPair"],[3,"DecoderBuilder"],[3,"DynClientConfig"],[3,"DynInput"],[3,"DynOutput"],[3,"DynOutputOutcome"],[3,"DynModuleConsensusItem"],[3,"DynOutputError"],[3,"DynInputError"],[3,"OperationId"],[3,"TweakedKeyPair"],[3,"DisplaySecret"],[3,"Error"],[8,"IClientConfig"],[8,"IInput"],[8,"IOutput"],[8,"IOutputOutcome"],[8,"IModuleConsensusItem"],[8,"IOutputError"],[8,"IInputError"],[8,"Signing"],[3,"SecretKey"],[8,"Rng"],[8,"Sized"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[3,"BackupRequest"],[3,"DynServerModule"],[3,"ApiEndpoint"],[3,"DatabaseTransaction"],[3,"Audit"],[8,"IServerModule"],[6,"PrefixStream"],[8,"IRawDatabaseTransaction"],[3,"BaseDatabaseTransaction"],[3,"Database"],[3,"DatabaseVersion"],[6,"MigrationMap"],[8,"Fn"],[4,"AutocommitError"],[8,"IRawDatabase"],[3,"BaseDatabase"],[3,"Committable"],[8,"IDatabase"],[3,"PrefixDatabase"],[3,"NonCommittable"],[3,"NodeId"],[3,"ChannelUsage"],[3,"CommitTracker"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[8,"IDatabaseTransaction"],[3,"PrefixDatabaseTransaction"],[3,"DatabaseVersionKey"],[8,"DatabaseValue"],[4,"MaybeRef"],[8,"DatabaseLookup"],[8,"Stream"],[8,"DatabaseKey"],[8,"DatabaseRecord"],[3,"Notifications"],[3,"Arc"],[8,"FnOnce"],[3,"Path"],[8,"IDatabaseTransactionOpsCore"],[8,"IDatabaseTransactionOps"],[8,"DatabaseKeyWithNotify"],[3,"MemDatabase"],[3,"MemTransaction"],[3,"DatabaseInsertOperation"],[3,"DatabaseDeleteOperation"],[3,"DummyError"],[4,"DatabaseOperation"],[3,"NotifyQueue"],[8,"Hash"],[3,"Notified"],[4,"TestDbKeyPrefix"],[3,"TestKey"],[3,"AltTestKey"],[3,"TestVal"],[3,"DbPrefixTestPrefix"],[3,"TestKeyV0"],[3,"DbPrefixTestPrefixV0"],[3,"AltDbPrefixTestPrefix"],[3,"PercentTestKey"],[3,"PercentPrefixTestPrefix"],[4,"DynRawFallback"],[3,"BigSize"],[8,"DynEncodable"],[8,"Encodable"],[8,"BitcoinHash"],[3,"CountWrite"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u32"],[6,"Result"],[15,"never"],[4,"DecodeError"],[8,"Writer"],[8,"FixedInt"],[8,"VarInt"],[4,"ConsensusItem"],[3,"AbbreviateDebug"],[8,"Display"],[3,"OptStacktrace"],[3,"AbbreviateHexBytes"],[3,"AbbreviateJson"],[8,"AbbreviatedDebug"],[3,"Map"],[3,"Data"],[3,"DynCommonModuleInit"],[3,"ApiError"],[8,"ServerModuleInit"],[3,"ServerModuleInitArgs"],[3,"TransactionItemAmount"],[3,"SerdeModuleEncoding"],[3,"ApiEndpointContext"],[3,"ApiRequest"],[3,"PeerHandle"],[3,"InputMeta"],[8,"IServerModuleInit"],[3,"TaskGroup"],[3,"MuxPeerConnections"],[3,"SupportedModuleApiVersions"],[3,"Error"],[3,"CoreConsensusVersion"],[8,"Copy"],[3,"ModuleSummary"],[3,"AuditItem"],[3,"HashMap"],[6,"ServerModuleRegistry"],[8,"Default"],[3,"ApiVersion"],[3,"MultiApiVersion"],[3,"SupportedCoreApiVersions"],[3,"MultiApiVersionIter"],[3,"PeerConnections"],[8,"Unpin"],[3,"FakePeerConnections"],[3,"TaskHandle"],[4,"QueryStep"],[3,"ErrorStrategy"],[3,"ThresholdConsensus"],[3,"FilterMap"],[3,"FilterMapThreshold"],[3,"UnionResponses"],[3,"UnionResponsesSingle"],[3,"SystemTime"],[3,"AllOrDeadline"],[3,"DiscoverApiVersionSet"],[6,"PeerResult"],[3,"QueryStrategyWithRequestTimeout"],[3,"AcceptedItem"],[3,"SessionOutcome"],[3,"SchnorrSignature"],[3,"SignedSessionOutcome"],[3,"Hash"],[8,"Input"],[3,"Error"],[8,"Output"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"TaskGroupInner"],[3,"TaskPanicGuard"],[3,"Elapsed"],[3,"RwLockMappedWriteGuard"],[3,"JoinError"],[3,"TaskShutdownToken"],[3,"Receiver"],[3,"Context"],[4,"Poll"],[3,"Instant"],[3,"JoinHandle"],[3,"Receiver"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"Tiered"],[3,"InvalidAmountTierError"],[4,"Entry"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[3,"TieredMulti"],[3,"TieredSummary"],[3,"TieredMultiZip"],[3,"TimeReporter"],[3,"Level"],[4,"Cow"],[3,"TimeReporterInner"],[4,"TransactionSignature"],[4,"TransactionError"],[3,"TxOutProof"],[3,"BlockHash"],[3,"Txid"],[3,"Url"],[4,"ParseError"],[4,"Host"],[4,"BroadcastStreamRecvError"],[3,"BroadcastStream"],[3,"Receiver"],[8,"NumPeers"],[8,"IFederationApi"],[8,"GlobalFederationApi"],[8,"FederationApiExt"],[13,"Default"],[13,"Api"],[13,"InvalidVout"],[13,"InvalidPeerId"],[8,"SGroup"],[8,"TypedServerModuleConsensusConfig"],[8,"ISupportedDkgMessage"],[8,"IntoDynInstance"],[4,"FinalizationError"],[8,"WithDecoders"],[8,"IDatabaseTransactionOpsCoreTyped"],[8,"IRawDatabaseExt"],[8,"DatabaseKeyPrefix"],[13,"CommitFailed"],[13,"ClosureError"],[13,"WrongPrefix"],[13,"WrongLength"],[13,"Raw"],[13,"Default"],[8,"CommonModuleInit"],[8,"ModuleCommon"],[8,"ModuleInit"],[8,"ServerModule"],[8,"TypedApiEndpoint"],[8,"IPeerConnections"],[8,"IMuxPeerConnections"],[13,"Failure"],[13,"UnbalancedTransaction"],[13,"InvalidSignature"],[13,"UnsupportedSignatureScheme"],[13,"Default"],[8,"NextOrPending"]]},\
"fedimint_dbtool":{"doc":"","t":"ENNNDNLLLLLLLLLLLLLMLMALLLLLLLLLLLLFLLLLLLFMFLLLLLLLLLLLLLLMMMMMMMMDDLLLLMMMLLLLLLLLLLLLMMLMLMLLLLMLLLLLLLL","n":["DbCommand","Delete","Dump","List","Options","Write","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command","command_for_update","database","dump","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","group_id","has_subcommand","hex_parser","into","into","into_request","into_request","into_request","into_request","main","no_modules","print_kv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","cfg_dir","key","key","modules","password","prefix","prefixes","value","DatabaseDump","SerdeWrapper","borrow","borrow","borrow_mut","borrow_mut","cfg","client_cfg","client_module_inits","dump_database","erased_serialize","fmt","from","from","from_encodable","into","into","into_request","into_request","into_request","into_request","module_inits","modules","new","prefixes","print_database","read_only","retrieve_consensus_data","serialize","serialize_gateway","serialize_module","serialized","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_dbtool"],[59,"fedimint_dbtool::DbCommand"],[67,"fedimint_dbtool::dump"]],"d":["Tool to inspect and manipulate rocksdb databases. All …","Delete a single entry from the database identified by <code>key</code>","Dump a subset of the specified database and serialize the …","List all key-value pairs where the key begins with <code>prefix</code>","","Write a key-value pair to the database, overwriting the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Run dbtool like it doesn’t know about any module kind. …","","","","","","","","","","","","","","","","","","","","","","","","Structure to hold the deserialized structs from the …","","","","","","","","","Iterates through all the specified ranges in the database …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Prints the contents of the BTreeMap to a pretty JSON string","","Iterates through each of the prefixes within the consensus …","","","","","","","","","","","",""],"i":[0,3,3,3,0,3,2,2,3,3,2,3,2,3,2,3,2,3,2,2,2,2,0,2,3,2,3,2,3,2,3,2,3,2,3,0,2,3,2,2,3,3,0,2,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,35,36,37,35,35,38,35,36,0,0,20,24,20,24,20,20,20,20,24,24,20,24,24,20,24,20,20,24,24,20,20,20,20,20,20,20,24,20,20,20,20,24,20,24,20,24,20,24],"f":[0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[],1],0,[[],1],0,0,[[2,4],5],[[3,4],5],[[]],[[]],[6,[[8,[2,7]]]],[6,[[8,[3,7]]]],[6,[[8,[2,7]]]],[6,[[8,[3,7]]]],[[]],[[]],[[],[[10,[9]]]],[11,12],[11,[[14,[13]]]],[[]],[[]],[[],15],[[],16],[[],15],[[],16],[[],14],0,[[[18,[17]],[18,[17]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[2,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[[2,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[20,14],[21,[[8,[22,23]]]],[[24,4],5],[[]],[[]],[25,24],[[]],[[]],[[],16],[[],15],[[],15],[[],16],0,0,[[26,27,27,28,29,[30,[27]],[30,[27]]],[[14,[20]]]],0,[20],0,[20],[[24,31],8],[20,14],[[20,32,33,34],14],0,[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[]],[[]]],"c":[],"p":[[3,"Command"],[3,"Options"],[4,"DbCommand"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Bytes"],[6,"Result"],[3,"Request"],[3,"Request"],[15,"u8"],[15,"slice"],[3,"TypeId"],[3,"DatabaseDump"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"SerdeWrapper"],[8,"Encodable"],[3,"PathBuf"],[3,"String"],[6,"ServerModuleInitRegistry"],[6,"ClientModuleInitRegistry"],[3,"Vec"],[8,"Serializer"],[15,"u16"],[3,"ModuleKind"],[6,"CommonModuleInitRegistry"],[13,"Dump"],[13,"Write"],[13,"Delete"],[13,"List"]]},\
"fedimint_derive":{"doc":"","t":"YYFFFFFFFFFFFFF","n":["Decodable","Encodable","derive_enum_decode","derive_enum_encode","derive_enum_variant_encode_block","derive_named_decode_block","derive_struct_decode","derive_struct_encode","derive_tuple_decode_block","derive_tuple_or_named_decode_block","do_not_ignore","error","is_default_variant_enforce_valid","is_tuple_struct","panic_if_ignored"],"q":[[0,"fedimint_derive"]],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,[[1,[4,[2,3]]],5],[[1,[4,[2,3]]],5],[[6,[7,[1]]],5],[[5,5,8],5],[[1,8],5],[8,5],[[5,5,8],5],[[5,5,8],5],[9,10],[[1,11],5],[2,10],[8,10],[9,10]],"c":[],"p":[[3,"Ident"],[3,"Variant"],[3,"Comma"],[3,"Punctuated"],[3,"TokenStream"],[15,"usize"],[15,"slice"],[4,"Fields"],[3,"Field"],[15,"bool"],[15,"str"]]},\
"fedimint_derive_secret":{"doc":"Scheme for deriving deterministic secret keys","t":"RRRDDRRLLLLLLLLLLLLLLLLLLLLLLLLMLMLFLLLLLLLLLLLLLLLL","n":["BLS12_381_TAG","CHACHA20_POLY1305","CHILD_TAG","ChildId","DerivableSecret","RAW_BYTES","SECP256K1_TAG","borrow","borrow","borrow_mut","borrow_mut","child_key","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","federation_key","fmt","fmt","from","from","from_bytes","from_ref","from_ref","into","into","into_request","into_request","kdf","level","level","new_root","tagged_derive","to_bls12_381_key","to_bytes","to_chacha20_poly1305_key","to_chacha20_poly1305_key_raw","to_owned","to_owned","to_random_bytes","to_secp_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_derive_secret"]],"d":["","","","Describes a child key of a <code>DerivableSecret</code>","A secret that can have child-subkey derived from it.","","","","","","","","","","","","","","","Derive a federation-ID-based child key from self.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An instance of the HKDF (Hash-based Key Derivation …","Get derivation level","Derivation level, root = 0, every <code>child_key</code> increments it","Derive root secret key from a secret material and salt.","","bls12-381 keys are used for the guardians’ threshold …","","","","","","Generate a pseudo-random byte array from the derivable …","secp256k1 keys are used for bitcoin deposit addresses, …","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,1,2,1,1,2,1,2,1,2,2,2,1,2,1,2,1,2,2,1,2,1,2,1,1,1,1,1,0,1,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],1],[2,2],[1,1],[[]],[[]],[[3,4],[[6,[2,5]]]],[[2,7],[[6,[8,9]]]],[7,[[6,[8,9]]]],[[1,10],1],[[2,11],12],[[1,11],12],[[]],[[]],[[[14,[13]],[17,[15,16]]],[[6,[18]]]],[[]],[[]],[[]],[[]],[[],19],[[],19],0,[1,8],0,[[[14,[13]],[14,[13]]],1],[[[20,[13]],2],[[20,[13]]]],[1,21],[[],[[23,[13,22]]]],[1,24],[1,[[20,[13]]]],[[]],[[]],[1,[[20,[13]]]],[[1,[26,[25]]],27],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[]],[[]]],"c":[],"p":[[3,"DerivableSecret"],[3,"ChildId"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"FederationId"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"Request"],[15,"array"],[3,"Scalar"],[3,"Global"],[3,"Vec"],[3,"UnboundKey"],[8,"Signing"],[3,"Secp256k1"],[3,"KeyPair"],[3,"TypeId"]]},\
"fedimint_dummy_client":{"doc":"","t":"DDDLALLLLLLLLLLLMMLLLLCLLLLLLAMLLLMLLLLLLLLLLLLFLLLLLLLLLLLMLLMLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLINEDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLENENNNNRNFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DummyClientContext","DummyClientInit","DummyClientModule","account","api","as_any","as_common","await_primary_module_output","await_primary_module_output","backup","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone_into","clone_into","common","context","context","create_exact_output","create_exact_output","create_sufficient_input","create_sufficient_input","db","db","decoder","decoder","decoder","dummy_decoder","dump_database","dump_database","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_balance","get_balance","get_funds","handle_cli_command","init","init","input_amount","input_amount","into","into","into","into_request","into_request","into_request","key","module_kind","module_kind","notifier","output_amount","output_amount","print_liability","print_money","print_using_account","receive_money","restore","send_money","states","subscribe_balance_changes","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","supports_being_primary","to_dyn_common","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wipe","DummyFederationApi","ClientFunds","DbKeyPrefix","DbKeyPrefixIter","DummyClientFundsKeyV0","back_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","hash","idx","into","into","into","into_iter","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DummyError","DummyInternalError","DummyStateMachine","Input","InputDone","Output","OutputDone","RETRY_DELAY","Refund","add_funds","as_any","await_dummy_output_outcome","await_tx_accepted","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","into","into","into_dyn","into_request","into_request","operation_id","operation_id","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_dummy_client"],[95,"fedimint_dummy_client::api"],[96,"fedimint_dummy_client::db"],[167,"fedimint_dummy_client::states"]],"d":["Data needed by the state machine","","","Return our account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Use a broken printer to print a liability instead of money …","Request the federation prints money for us","","Wait to receive money at an outpoint","","Send money to another user","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tracks a transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,1,13,1,1,1,1,12,13,1,12,13,1,1,12,13,12,13,0,1,1,1,1,1,1,0,1,1,13,13,12,13,13,1,12,13,1,12,13,12,13,1,1,0,1,13,13,1,1,1,12,13,1,12,13,1,13,13,1,1,1,1,1,1,1,1,1,0,1,1,13,13,1,1,1,13,12,13,1,12,13,1,12,13,1,12,13,1,12,13,1,0,50,0,0,0,51,50,51,52,50,51,52,50,51,52,50,51,52,52,52,52,52,52,52,52,52,50,50,52,50,51,52,52,52,50,51,52,51,52,51,50,51,52,51,50,51,52,50,51,51,51,51,51,51,52,52,50,51,52,50,50,51,52,50,51,52,50,51,52,50,51,52,0,64,0,66,66,66,66,0,66,0,66,0,0,66,64,66,64,66,66,64,66,64,66,64,66,64,66,64,64,66,64,66,66,66,66,64,64,64,64,66,64,66,64,64,66,64,66,64,66,64,66,64,66,66,64,66,66,64,66,64,66,64,64,66,66,66,64,66,64,66,64,66,64],"f":[0,0,0,[1,2],0,[[],3],[[],4],[[1,5,6],[[9,[[8,[7]]]]]],[[5,6],[[9,[[8,[7,10]]]]]],[11,[[9,[[8,[7,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[12,12],[13,13],[[]],[[]],0,[1],[11,14],[[1,15,5,16],[[9,[[8,[7]]]]]],[[11,[15,[17]],5,16],[[9,[[8,[7,10]]]]]],[[1,15,5,16],[[9,[[8,[7]]]]]],[[11,[15,[17]],5,16],[[9,[[8,[7,10]]]]]],0,0,[[],18],[[],18],[[],18],0,[[13,15,[20,[19]]],[[9,[[8,[7]]]]]],[[[15,[17]],[20,[19,10]]],[[9,[[8,[7,10]]]]]],[[1,21],22],[[12,21],22],[[13,21],22],[[]],[[]],[[]],[[]],[[]],[[11,[15,[17]]],[[9,[[8,[7,10]]]]]],[[1,15],[[9,[[8,[7]]]]]],[15,16],[[[24,[23]]],[[9,[[8,[7,10]]]]]],[[25,26,27,28,11,29,30,[32,[31]],33],[[9,[[8,[7,10]]]]]],[[13,[34,[13]]],[[9,[[8,[7]]]]]],[35,[[37,[36]]]],[1,[[37,[36]]]],[[]],[[]],[[]],[[],38],[[],38],[[],38],0,[[],39],[[],39],0,[40,[[37,[36]]]],[1,[[37,[36]]]],[[1,16],41],[[1,16],41],[[1,16,42],41],[[1,6],41],[[11,[37,[43]]],[[9,[[8,[7,10]]]]]],[[1,2,16],[[41,[6]]]],0,[[],[[9,[[8,[7,10]]]]]],[1,[[9,[[8,[7]]]]]],[13,44],[[],44],[[],45],[1,45],[[],45],[[],46],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[[15,[17]],11,[49,[31]]],[[9,[[8,[7,10]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[51,51],[52,52],[[]],[[]],[[]],[[53,54],[[47,[52,55]]]],[[52,56],[[47,[57,58]]]],[56,[[47,[57,58]]]],[[52,52],45],[[],45],[[],45],[[],45],[[],45],[[50,21],22],[[50,21],22],[[52,21],22],[[]],[[]],[[]],[[[24,[59]],[61,[18,60]]],[[47,[62]]]],[[[24,[59]],[61,[18,60]]],[[47,[62]]]],[[]],[[]],[[]],[[51,57],[[37,[50]]]],[[52,63]],0,[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],51],[51,57],0,[51,37],[51,37],[[51,57],37],[51],[[],[[20,[59,10]]]],[[],[[20,[59,10]]]],[[]],[[]],[[]],[[],19],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],48],[[],48],[[],48],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[16,15]],[[],3],[[31,6,18],[[47,[64]]]],[[31,5,65],[[47,[19]]]],[[]],[[]],[[]],[[]],[66,66],[11,67],[64,64],[[]],[[]],[[53,54],[[47,[66,55]]]],[[53,54],[[47,[64,55]]]],[[66,56],[[47,[57,58]]]],[[64,56],[[47,[57,58]]]],[56,[[47,[57,58]]]],[56,[[47,[57,58]]]],[68,[[47,[64]]]],[[66,66],45],[[64,64],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[67,45],[69,[[47,[70,71]]]],[[66,21],22],[[64,21],22],[[64,21],22],[[]],[[]],[[[24,[59]],[61,[18,60]]],[[47,[62]]]],[[[24,[59]],[61,[18,60]]],[[47,[62]]]],[[]],[[]],[[]],[[]],[[66,72]],[[],38],[[],38],[[],5],[66,5],[[64,73],47],[[],[[20,[59,10]]]],[[],[[20,[59,10]]]],[[]],[[]],[[],19],[66,[[20,[[74,[66]]]]]],[14,[[20,[[74,[67]],10]]]],[[],47],[[],47],[[],47],[[],47],[[],48],[[],48],[[]],[[]]],"c":[],"p":[[3,"DummyClientModule"],[3,"PublicKey"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"OperationId"],[3,"OutPoint"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Global"],[15,"u16"],[3,"DummyClientContext"],[3,"DummyClientInit"],[3,"DynContext"],[3,"DatabaseTransaction"],[3,"Amount"],[3,"NonCommittable"],[3,"Decoder"],[3,"String"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"OsString"],[15,"slice"],[3,"FinalClient"],[3,"FederationId"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"DynGlobalClientContext"],[3,"Notifier"],[3,"DynGlobalApi"],[3,"ClientModuleInitArgs"],[3,"DynInput"],[3,"TransactionItemAmount"],[4,"Option"],[3,"Request"],[3,"ModuleKind"],[3,"DynOutput"],[6,"Result"],[3,"KeyPair"],[3,"DynModuleBackup"],[3,"MultiApiVersion"],[15,"bool"],[3,"DynCommonModuleInit"],[4,"Result"],[3,"TypeId"],[3,"Executor"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"DummyClientFundsKeyV0"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[8,"Write"],[15,"usize"],[3,"Error"],[15,"u8"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[4,"DummyError"],[3,"TransactionId"],[4,"DummyStateMachine"],[3,"DynState"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[6,"ModuleInstanceId"],[8,"Serializer"],[3,"StateTransition"]]},\
"fedimint_dummy_common":{"doc":"","t":"RRDDDEDDEDRRNMMMMLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLL","n":["BROKEN_FED_SECRET_PHRASE","CONSENSUS_VERSION","DummyCommonInit","DummyConsensusItem","DummyInput","DummyInputError","DummyModuleTypes","DummyOutput","DummyOutputError","DummyOutputOutcome","FED_SECRET_PHRASE","KIND","NotEnoughFunds","account","account","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broken_fed_key_pair","broken_fed_public_key","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fed_key_pair","fed_public_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DummyClientConfig","DummyConfig","DummyConfigConsensus","DummyConfigLocal","DummyConfigPrivate","DummyGenParams","DummyGenParamsConsensus","DummyGenParamsLocal","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","example","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_fee","tx_fee","tx_fee","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_dummy_common"],[246,"fedimint_dummy_common::config"]],"d":["","Modules are non-compatible with older versions","","Non-transaction items that will be submitted to consensus","Input for a fedimint transaction","Errors that might be returned by the server","Contains the types defined above","Output for a fedimint transaction","Errors that might be returned by the server","Information needed by a client to update output funds","A special key that creates assets for a test/example","Unique name for this module","","Associate the input with a user’s pubkey","Associate the output with a user’s pubkey","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all the configuration for the client","Contains all the configuration for the server","Will be the same for every federation member","Locally unencrypted config unique to each member","Will be encrypted and not shared such as private key …","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accessible to clients","Will be the same for all peers","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,14,8,10,8,10,6,8,10,12,14,16,60,6,8,10,12,14,16,33,60,6,8,10,12,14,16,33,0,0,6,6,8,8,10,10,12,12,14,14,16,16,6,8,10,12,14,16,0,6,8,10,12,14,16,6,8,10,12,14,16,6,8,10,12,14,16,33,6,8,10,12,6,8,10,12,14,16,6,8,10,12,14,16,6,6,6,6,8,8,8,8,10,10,10,10,12,12,12,12,14,14,14,14,16,16,16,16,6,8,10,12,14,16,6,8,10,12,0,0,6,6,8,8,10,10,12,12,14,14,16,16,33,60,6,8,10,12,14,16,33,6,8,10,12,14,16,6,8,10,12,14,16,6,8,10,12,14,16,60,6,8,10,12,14,16,33,6,8,10,12,14,16,60,6,8,10,12,14,16,33,6,8,10,12,6,8,10,12,14,16,6,8,10,12,14,16,6,8,10,12,14,16,60,6,8,10,12,14,16,33,60,6,8,10,12,14,16,33,60,6,8,10,12,14,16,33,60,6,8,10,12,14,16,33,0,0,0,0,0,0,0,0,51,47,48,49,50,51,53,54,55,47,48,49,50,51,53,54,55,47,48,49,50,51,51,53,54,55,47,48,49,50,51,53,54,55,47,50,51,53,54,51,53,54,51,53,54,47,47,48,49,50,51,53,54,55,51,51,51,51,51,51,51,47,48,49,50,51,53,54,55,53,47,48,49,50,51,51,53,54,55,47,48,49,50,51,53,54,55,51,53,54,47,50,47,48,49,50,51,53,54,55,51,47,48,49,50,51,53,54,55,51,47,48,49,50,51,53,54,55,54,47,50,50,47,48,49,50,51,53,54,55,51,53,54,51,47,48,49,50,51,53,54,55,47,50,51,47,48,49,50,51,53,54,55,47,48,49,50,51,53,54,55,49,51,54,47,48,49,50,51,53,54,55,54,47,48,49,50,51,53,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],3],[4,5],[6,6],[4,7],[8,8],[4,9],[10,10],[4,11],[12,12],[4,13],[14,14],[4,15],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],0,[[17,18],[[20,[6,19]]]],[[17,18],[[20,[8,19]]]],[[17,18],[[20,[10,19]]]],[[17,18],[[20,[12,19]]]],[[17,18],[[20,[14,19]]]],[[17,18],[[20,[16,19]]]],[[6,21],[[20,[22,23]]]],[[8,21],[[20,[22,23]]]],[[10,21],[[20,[22,23]]]],[[12,21],[[20,[22,23]]]],[[14,21],[[20,[22,23]]]],[[16,21],[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[[],24],[25,[[20,[6]]]],[25,[[20,[8]]]],[25,[[20,[10]]]],[25,[[20,[12]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[6,6],27],[[8,8],27],[[10,10],27],[[12,12],27],[[14,14],27],[[16,16],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[5,27],[7,27],[9,27],[11,27],[13,27],[15,27],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[[],2],[[],3],[[6,31],32],[[6,31],32],[[8,31],32],[[8,31],32],[[10,31],32],[[10,31],32],[[12,31],32],[[12,31],32],[[14,31],32],[[14,31],32],[[16,31],32],[[16,31],32],[[33,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,39]],[[8,39]],[[10,39]],[[12,39]],[[14,39]],[[16,39]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,40]],[[8,40]],[[10,40]],[[12,40]],[[14,40]],[[16,40]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[6,42],20],[[8,42],20],[[10,42],20],[[12,42],20],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[48,48],[49,49],[50,50],[51,51],[4,52],[53,53],[54,54],[55,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[17,18],[[20,[51,19]]]],[[17,18],[[20,[53,19]]]],[[17,18],[[20,[54,19]]]],[[51,21],[[20,[22,23]]]],[[53,21],[[20,[22,23]]]],[[54,21],[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[21,[[20,[22,23]]]],[[],47],[25,[[20,[47]]]],[25,[[20,[48]]]],[25,[[20,[49]]]],[25,[[20,[50]]]],[25,[[20,[51]]]],[25,[[20,[53]]]],[25,[[20,[54]]]],[25,[[20,[55]]]],[[],26],[[51,51],27],[[],27],[[],27],[[],27],[[],27],[52,27],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],[28,[[20,[29,30]]]],0,[[47,31],32],[[48,31],32],[[49,31],32],[[50,31],32],[[51,31],32],[[51,31],32],[[53,31],32],[[54,31],32],[[55,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[[35,[34]],[37,[24,36]]],[[20,[38]]]],[[],47],[[],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,39]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,40]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[54,56],0,0,0,[[47,42],20],[[48,42],20],[[49,42],20],[[50,42],20],[[51,42],20],[[53,42],20],[[54,42],20],[[55,42],20],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[],[[44,[34,43]]]],[[],[[58,[57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47],[50],[[],45],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[54,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[3,"KeyPair"],[3,"PublicKey"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"DummyConsensusItem"],[3,"DynInput"],[3,"DummyInput"],[3,"DynOutput"],[3,"DummyOutput"],[3,"DynOutputOutcome"],[3,"DummyOutputOutcome"],[3,"DynInputError"],[4,"DummyInputError"],[3,"DynOutputError"],[4,"DummyOutputError"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"DummyCommonInit"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[8,"Serializer"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"DummyGenParams"],[3,"DummyGenParamsLocal"],[3,"DummyGenParamsConsensus"],[3,"DummyConfig"],[3,"DummyClientConfig"],[3,"DynClientConfig"],[3,"DummyConfigLocal"],[3,"DummyConfigConsensus"],[3,"DummyConfigPrivate"],[3,"ModuleKind"],[4,"Value"],[4,"Option"],[3,"ModuleConsensusVersion"],[3,"DummyModuleTypes"]]},\
"fedimint_dummy_server":{"doc":"","t":"DDLLLLLLLLLLMLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDDDDDDDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Dummy","DummyInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow_mut","borrow_mut","cfg","clone","clone_into","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","from","from","from_ref","get_client_config","get_client_config","get_database_migrations","get_database_migrations","init","init","into","into","into_request","into_request","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_into","try_into","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","DummyFundsKeyPrefixV0","DummyFundsKeyV0","DummyFundsKeyV1","DummyFundsPrefixV1","DummyOutcomeKey","DummyOutcomePrefix","Funds","Outcome","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","hash","hash","idx","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","migrate_to_v1","next","next_back","nth","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_dummy_server"],[68,"fedimint_dummy_server::db"]],"d":["Dummy module","Generates the module","","","","","","Queries the database and returns all assets and …","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","Generates configs for all peers in an untrusted manner","Dumps all database items for debugging","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Converts the consensus config into the client config","DB migrations to move from old to newer versions","","Initialize the module","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create new module instance","Retrieve the current status of the output. Depending on …","","","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","Generates configs for all peers in a trusted manner for …","","","","","","","","","","","Returns the version of this module","","","Namespaces DB keys for this module","An iterator over the variants of Self","","Example old version 0 of DB entries","Lookup funds for a user by key or prefix","","Lookup tx outputs by key or prefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Example DB migration from version 0 to version 1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,16,1,1,16,1,16,1,1,16,16,1,1,16,0,16,1,16,16,16,16,16,1,16,1,16,16,16,16,16,16,16,16,1,16,1,16,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,1,16,1,16,1,16,16,16,16,16,1,0,0,0,0,0,0,0,0,53,53,54,53,54,55,61,56,62,57,63,53,54,55,61,56,62,57,63,53,54,55,56,57,53,54,55,56,57,55,61,56,62,57,63,55,61,56,62,57,63,55,61,56,62,57,63,55,56,57,55,55,55,55,56,56,56,56,57,57,57,57,55,56,57,53,53,55,61,56,62,57,63,53,54,55,61,56,62,57,63,55,55,61,56,56,62,57,57,63,53,54,55,56,57,54,55,56,57,54,53,54,55,61,56,62,57,63,54,53,54,55,61,56,62,57,63,53,54,54,0,54,54,54,55,56,57,54,55,55,61,61,56,56,62,62,57,57,63,63,53,54,55,56,57,53,53,54,55,61,56,62,57,63,53,54,55,61,56,62,57,63,53,54,55,61,56,62,57,63,53,54,55,61,56,62,57,63],"f":[0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],7],[[1,8,9,10],[[13,[[12,[11]]]]]],[[[8,[14]],9,15],[[13,[[12,[11,5]]]]]],[[]],[[]],[[]],[[]],0,[16,16],[[]],[[[8,[14]],15],[[13,[[12,[11,5]]]]]],[[1,8],[[13,[[12,[11]]]]]],[[],17],0,[[],18],[[],18],[[19,20],[[13,[[12,[11,5]]]]]],[[16,19,20],[[13,[[12,[11]]]]]],[[16,8,[3,[21]]],[[13,[[12,[11]]]]]],[[[8,[14]],[3,[21,5]]],[[13,[[12,[11,5]]]]]],[[16,22],23],[[1,22],23],[[]],[[]],[[]],[[15,24],[[27,[25,26]]]],[[16,24],[[29,[28]]]],[16,30],[[],[[31,[17,5]]]],[[16,[32,[16]]],[[13,[[12,[11]]]]]],[[33,34,35,36],[[13,[[12,[11,5]]]]]],[[]],[[]],[[],37],[[],37],[[],38],[39,1],[[[8,[14]],40,15],[[13,[[12,[11,5]]]]]],[[1,8,40],[[13,[[12,[11]]]]]],[[1,8,41,36],[[13,[[12,[11]]]]]],[[[8,[14]],42,36],[[13,[[12,[11,5]]]]]],[[1,8,43],[[13,[[12,[11]]]]]],[[[8,[14]],44,15],[[13,[[12,[11,5]]]]]],[[1,8,45,40],[[13,[[12,[11]]]]]],[[[8,[14]],46,40,15],[[13,[[12,[11,5]]]]]],[[],47],[16,47],[[],48],[[]],[[16,[49,[36]],20],[[31,[36,33]]]],[[[49,[36]],20],[[31,[36,33,5]]]],[[],27],[[],27],[[],27],[[],27],[[],50],[[],50],[[36,33],[[27,[26]]]],[[16,36,33],29],[20,[[27,[26]]]],[[16,51],[[49,[52]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,53],[54,54],[55,55],[56,56],[57,57],[[]],[[]],[[]],[[]],[[]],[[58,59],[[27,[55,60]]]],[[58,59],[[27,[61,60]]]],[[58,59],[[27,[56,60]]]],[[58,59],[[27,[62,60]]]],[[58,59],[[27,[57,60]]]],[[58,59],[[27,[63,60]]]],[[55,64],[[27,[65,66]]]],[[61,64],[[27,[65,66]]]],[[56,64],[[27,[65,66]]]],[[62,64],[[27,[65,66]]]],[[57,64],[[27,[65,66]]]],[[63,64],[[27,[65,66]]]],[64,[[27,[65,66]]]],[64,[[27,[65,66]]]],[64,[[27,[65,66]]]],[64,[[27,[65,66]]]],[64,[[27,[65,66]]]],[64,[[27,[65,66]]]],[[55,55],67],[[56,56],67],[[57,57],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[68,[[27,[69,70]]]],[68,[[27,[69,70]]]],[68,[[27,[69,70]]]],[[53,22],23],[[53,22],23],[[55,22],23],[[61,22],23],[[56,22],23],[[62,22],23],[[57,22],23],[[63,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[[49,[71]],[73,[18,72]]],[[27,[74]]]],[[]],[[]],[[]],[[]],[[]],[[54,65],[[75,[53]]]],[[55,76]],[[56,76]],[[57,76]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],54],[54,65],0,[8,[[27,[26]]]],[54,75],[54,75],[[54,65],75],[[55,77],27],[[56,77],27],[[57,77],27],[54],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[],[[3,[71,5]]]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Dummy"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"DatabaseTransaction"],[3,"Audit"],[6,"ModuleInstanceId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"NonCommittable"],[15,"u16"],[3,"DummyInit"],[3,"DatabaseVersion"],[3,"Decoder"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"ServerModuleConsensusConfig"],[3,"ClientModuleConfig"],[3,"Error"],[4,"Result"],[3,"DummyClientConfig"],[6,"Result"],[6,"MigrationMap"],[3,"BTreeMap"],[3,"ServerModuleInitArgs"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"PeerId"],[3,"Request"],[3,"ModuleKind"],[3,"DummyConfig"],[3,"OutPoint"],[3,"DummyConsensusItem"],[3,"DynModuleConsensusItem"],[3,"DummyInput"],[3,"DynInput"],[3,"DummyOutput"],[3,"DynOutput"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[15,"slice"],[3,"TypeId"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"DummyFundsKeyV0"],[3,"DummyFundsKeyV1"],[3,"DummyOutcomeKey"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"DummyFundsKeyPrefixV0"],[3,"DummyFundsPrefixV1"],[3,"DummyOutcomePrefix"],[8,"Write"],[15,"usize"],[3,"Error"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"u8"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[4,"Option"],[8,"Hasher"],[8,"Serializer"]]},\
"fedimint_ln_client":{"doc":"","t":"NNNNNNNNNNNNNNNENEDDEDDENEERRDNEENNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLFLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFMMLLFMLLLMLLALLMMAMLMLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMEDNDDDNDDDNDDMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLNDNDNNNNNDDEEDNNNDNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMNNNNRNEDDDDDDENDRNNNNLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMNNNNNDEDDEDRNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLL","n":["AwaitingChange","AwaitingFunds","Canceled","Canceled","Canceled","Claimed","Created","Created","Failed","Funded","Funded","Funding","FundingFailed","Internal","InternalPay","InternalPayState","Lightning","LightningChildKeys","LightningClientInit","LightningClientModule","LightningClientStateMachines","LightningOperationMeta","LightningOperationMetaPay","LightningOperationMetaVariant","LightningPay","LnPayState","LnReceiveState","META_OVERRIDE_CACHE_DURATION","OUTGOING_LN_CONTRACT_TIMELOCK","OutgoingLightningPayment","Pay","PayError","PayType","Preimage","PreimageAuthentication","Receive","Receive","RedeemKey","RefundError","RefundSuccess","Refundable","Refunded","Refunded","Success","UnexpectedError","UnexpectedError","WaitingForPayment","WaitingForRefund","as_any","as_any","as_common","await_claim_acceptance","await_lightning_payment_success","await_primary_module_output","await_receive_success","await_refund","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","change","client_ctx","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","contract_id","contract_id","create_bolt11_invoice","create_exact_output","create_incoming_contract_output","create_incoming_output","create_lightning_receive_output","create_outgoing_output","create_sufficient_input","db","decoder","decoder","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dump_database","dump_database","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_meta","fee","fee","fetch_and_validate_offer","fetch_meta_overrides","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_balance","get_ln_pay_details_for","get_payment_operation_id","get_preimage_authentication","get_prev_payment_result","handle_cli_command","incoming","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice_has_internal_payment_markers","invoice_routes_back_to_federation","is_internal_payment","module_api","module_kind","module_kind","network_to_currency","notifier","operation_id","operation_id","operation_id","out_point","output_amount","output_amount","pay","pay_bolt11_invoice","payment_type","payment_type","preimage_auth","receive","redeem_key","restore","secp","select_active_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_active_gateway","set_payment_result","subscribe_balance_changes","subscribe_internal_pay","subscribe_ln_pay","subscribe_ln_receive","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant","verify_gateway_availability","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","error","error","error","error_message","out_points","invoice","out_point","block_height","error_message","gateway_error","gateway_error","preimage","invoice","reason","timeout","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","MetaOverrides","MetaOverrides","MetaOverridesKey","MetaOverridesPrefix","PaymentResult","PaymentResult","PaymentResultKey","PaymentResultPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","completed_payment","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fetched_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","get","idx","index","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","payment_hash","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AmountError","AwaitingPreimageDecryption","DecryptingPreimage","DecryptingPreimageState","FailedToFundContract","Failure","FetchContractError","FundingFailed","FundingOffer","FundingOfferState","IncomingSmCommon","IncomingSmError","IncomingSmStates","IncomingStateMachine","InvalidOffer","InvalidPreimage","Preimage","PreimageState","RefundSubmitted","RefundSuccessState","TimeoutFetchingOffer","ViolatedFeePolicy","as_any","await_funding_success","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","payment_hash","preimage","refund_incoming_contract","refund_txid","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_funding_success","transition_incoming_contract_funded","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txid","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract","error_message","error_message","invoice","offer_amount","offer_hash","payment_amount","payment_hash","payment_hash","payment_hash","error","error","out_points","Canceled","CreatedOutgoingLnContract","Failure","Funded","GATEWAY_API_TIMEOUT","GatewayInternalError","GatewayPayError","LightningPayCommon","LightningPayCreatedOutgoingLnContract","LightningPayFunded","LightningPayRefund","LightningPayRefundable","LightningPayStateMachine","LightningPayStates","OutgoingContractError","PayInvoicePayload","RETRY_DELAY","Refund","Refundable","Refunded","Success","as_any","await_contract_cancellable","await_contract_timeout","await_outgoing_contract_funded","await_refund_success","block_timelock","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","contract_id","contract_id","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","error","federation_id","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","funding_txid","gateway","gateway","gateway_fee","gateway_pay_invoice","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","operation_id","operation_id","operation_id","out_points","payload","payment_hash","payment_hash","preimage_auth","preimage_auth","serialize","serialize","state","timelock","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_outgoing_contract_execution","transition_outgoing_contract_funded","transition_refund_success","transitions","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_gateway_pay_invoice","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error_code","error_message","Canceled","ClaimRejected","ConfirmedInvoice","Funded","InvalidPreimage","LightningReceiveConfirmedInvoice","LightningReceiveError","LightningReceiveFunded","LightningReceiveStateMachine","LightningReceiveStates","LightningReceiveSubmittedOffer","RETRY_DELAY","Rejected","SubmittedOffer","Success","Timeout","as_any","await_claim_success","await_incoming_contract_account","await_invoice_confirmation","await_payment_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_incoming_contract","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","keypair","offer_txid","operation_id","operation_id","operation_id","out_points","payment_keypair","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_claim_success","transition_confirmed_invoice","transition_funded","transition_timeout","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_ln_client"],[372,"fedimint_ln_client::InternalPayState"],[377,"fedimint_ln_client::LightningOperationMetaVariant"],[379,"fedimint_ln_client::LnPayState"],[384,"fedimint_ln_client::LnReceiveState"],[387,"fedimint_ln_client::db"],[588,"fedimint_ln_client::incoming"],[855,"fedimint_ln_client::incoming::IncomingSmError"],[865,"fedimint_ln_client::incoming::IncomingSmStates"],[868,"fedimint_ln_client::pay"],[1158,"fedimint_ln_client::pay::GatewayPayError"],[1160,"fedimint_ln_client::receive"]],"d":["","","","","","","","","","","","","","","","The high-level state of an pay operation internal to the …","","","","Client side lightning module","","","","","","The high-level state of a pay operation over lightning, …","The high-level state of a reissue operation started with …","","Number of blocks until outgoing lightning contracts times …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Receive over LN with a new invoice","","","Create an output that funds an incoming contract within …","","Create an output that incentivizes a Lightning gateway to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateways actively registered with the fed","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Hashes the client’s preimage authentication secret with …","","","Incoming State Machine","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pays a LN invoice with our available funds","","","","","","","","The set active gateway, or a random one if none has been …","","","","","","","","","","Sets the gateway to be used by all other operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes a transaction between two users","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that requests the lightning gateway to pay …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that waits on the receipt of a Lightning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[18,19,18,19,10,19,18,19,10,18,19,17,17,16,24,0,16,0,0,0,0,0,0,0,24,0,0,0,0,0,22,0,0,17,66,22,24,66,17,17,10,18,10,18,17,18,19,18,3,24,23,3,3,3,3,3,3,16,17,18,19,20,21,22,23,66,3,10,24,29,16,17,18,19,20,21,22,23,66,3,10,24,29,3,20,3,16,17,18,19,20,21,22,23,24,24,16,17,18,19,20,21,22,23,24,16,24,29,16,24,29,16,24,29,3,3,20,29,3,3,0,3,3,3,3,0,23,23,3,16,17,18,19,20,21,22,10,23,23,16,17,18,19,24,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,24,24,24,24,24,16,17,18,19,20,21,22,10,29,21,20,29,0,3,3,16,17,18,19,20,21,22,23,66,3,10,10,24,29,16,17,18,19,20,21,22,23,66,3,10,24,29,16,24,29,16,17,18,19,20,21,22,23,24,3,3,3,3,3,3,0,23,23,3,3,16,17,18,19,20,21,22,23,66,3,10,24,29,24,16,17,18,19,20,21,22,23,66,3,10,24,29,20,0,0,20,3,23,23,0,3,16,24,24,20,3,3,0,3,16,29,3,0,3,3,3,3,16,17,18,19,20,21,22,10,29,3,0,3,3,3,3,23,23,3,3,16,24,29,23,16,17,18,19,20,21,22,23,24,10,24,24,16,17,18,19,20,21,22,23,66,3,10,24,29,16,17,18,19,20,21,22,23,66,3,10,24,29,16,17,18,19,20,21,22,23,66,3,10,24,29,21,3,16,17,18,19,20,21,22,23,66,3,10,24,29,3,139,140,141,140,139,142,142,143,144,143,145,146,147,148,147,0,0,101,0,0,0,101,0,0,0,101,0,0,102,101,102,103,104,105,106,72,107,108,109,101,102,103,104,105,106,72,107,108,109,101,102,101,102,72,103,104,105,106,72,107,108,109,103,104,105,106,72,107,108,109,103,104,105,106,72,107,108,109,103,105,106,72,107,108,109,109,101,101,103,104,105,106,72,107,108,109,101,102,103,104,105,106,72,107,108,109,103,103,104,105,105,106,72,107,107,108,109,101,102,102,102,72,101,102,103,104,105,106,72,107,108,109,102,101,102,103,104,105,106,72,107,108,109,101,102,102,102,102,102,105,103,105,106,72,107,108,109,102,103,103,104,104,105,105,106,106,72,107,107,108,108,109,101,102,101,101,102,103,104,105,106,72,107,108,109,101,102,103,104,105,106,72,107,108,109,101,102,103,104,105,106,72,107,108,109,109,101,102,103,104,105,106,72,107,108,109,46,0,112,0,46,112,46,112,112,0,0,0,0,0,46,46,112,0,112,0,46,46,114,115,116,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,112,113,114,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,114,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,113,46,112,113,114,46,115,116,117,118,119,112,112,112,112,113,113,113,113,114,114,114,114,46,46,46,46,115,115,115,115,116,116,116,116,117,117,117,117,118,118,118,118,119,119,119,119,114,46,112,113,114,46,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,114,114,113,113,118,116,119,46,114,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,46,115,116,114,114,115,116,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,115,116,117,112,113,114,46,115,116,117,118,119,112,113,114,46,115,116,117,118,119,149,150,151,152,153,154,153,154,155,150,156,157,156,126,126,126,126,0,124,0,0,0,0,0,0,0,0,124,0,0,126,126,126,126,127,130,130,128,131,130,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,126,125,127,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,127,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,125,128,130,132,124,132,126,125,127,128,129,124,130,131,132,126,126,126,126,125,125,125,125,127,127,127,127,128,128,128,128,129,129,129,129,124,124,124,124,130,130,130,130,131,131,131,131,132,132,132,132,127,124,132,130,125,132,126,125,127,128,129,124,124,130,131,132,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,128,128,129,125,129,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,132,127,127,125,131,129,125,132,125,132,124,132,127,129,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,124,129,128,131,127,127,128,129,130,131,126,125,127,128,129,124,130,131,132,129,126,125,127,128,129,124,130,131,132,130,131,126,125,127,128,129,124,130,131,132,126,125,127,128,129,124,130,131,132,158,158,134,7,134,134,7,0,0,0,0,0,0,0,7,134,134,7,135,138,137,136,137,134,135,136,7,137,138,134,135,136,7,137,138,137,134,135,135,136,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,7,134,135,136,7,137,138,134,134,134,134,135,135,135,135,136,136,136,136,7,7,7,7,137,137,137,137,138,138,138,138,135,7,134,135,136,7,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,134,135,136,7,137,138,136,137,137,136,135,135,135,138,136,7,135,134,135,136,7,137,138,134,135,136,7,137,138,7,138,136,137,137,135,135,136,137,138,134,135,136,7,137,138,134,135,136,7,137,138,138,134,135,136,7,137,138,134,135,136,7,137,138],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],2],[[3,4],[[8,[[6,[5]],7]]]],[[3,4],[[8,[9,10]]]],[[4,5],[[14,[[13,[11,12]]]]]],[[3,4],[[8,[7]]]],[[3,4],[[8,[[6,[5]],10]]]],[15,[[14,[[13,[11,12]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[15,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27],[[8,[16,28]]]],[[26,27],[[8,[24,28]]]],[[26,27],[[8,[29,28]]]],[[16,30],[[8,[31,32]]]],[[24,30],[[8,[31,32]]]],[[29,30],[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[15,33],[3],0,0,[[3,34,9,[36,[35]],[0,[37,38,39]]],40],[[15,[42,[41]],4,34],[[14,[[13,[11,12]]]]]],[[43,44,34,45],[[8,[46]]]],[[3,4,47],40],[[3,34,9,[0,[48,49]],[36,[35]],50,35,[6,[51]],52],40],[[3,4,47,53,54,[0,[48,49]]],40],[[15,[42,[41]],4,34],[[14,[[13,[11,12]]]]]],0,[[],55],[[],55],[[],55],[56,[[8,[16]]]],[56,[[8,[17]]]],[56,[[8,[18]]]],[56,[[8,[19]]]],[56,[[8,[20]]]],[56,[[8,[21]]]],[56,[[8,[22]]]],[56,[[8,[10]]]],[[23,42,[6,[9]]],[[14,[[13,[11]]]]]],[[[42,[41]],[6,[9,12]]],[[14,[[13,[11,12]]]]]],[[16,16],57],[[17,17],57],[[18,18],57],[[19,19],57],[[24,24],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],0,0,0,[[43,44,34],[[40,[61,46]]]],[[3,62],[[40,[9]]]],[3,[[40,[[6,[63]]]]]],[[16,64],65],[[17,64],65],[[18,64],65],[[19,64],65],[[20,64],65],[[21,64],65],[[22,64],65],[[23,64],65],[[66,64],65],[[3,64],65],[[10,64],65],[[10,64],65],[[24,64],65],[[29,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,[42,[41]]],[[14,[[13,[11,12]]]]]],[[3,4],[[40,[20]]]],[[3,44,15],4],[[3,44],44],[[3,44,42],72],[[[68,[73]]],[[14,[[13,[11,12]]]]]],0,[[74,54,75,76,15,77,78,[80,[79]],81],[[14,[[13,[11,12]]]]]],[[23,[82,[23]]],[[14,[[13,[11]]]]]],[3,[[36,[83]]]],[84,[[36,[83]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,85]],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],0,[47,57],[[47,[6,[53]]],57],0,0,[[],87],[[],87],[52,88],0,[16,4],[24,4],[[],4],0,[89,[[36,[83]]]],[3,[[36,[83]]]],0,[[3,47,[0,[37,90,91]]],[[40,[29]]]],[16,9],0,0,0,0,[[15,[36,[92]]],[[14,[[13,[11,12]]]]]],0,[3,[[40,[53]]]],[[16,93],8],[[17,93],8],[[18,93],8],[[19,93],8],[[20,93],8],[[21,93],8],[[22,93],8],[[10,93],8],[[29,93],8],[[3,50],40],[[42,44,16,94,34]],[[],[[14,[[13,[11,12]]]]]],[[3,4],[[40,[[95,[17]]]]]],[[3,4],[[40,[[95,[18]]]]]],[[3,4],[[40,[[95,[19]]]]]],[[],96],[23,96],[[],57],[[],57],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[33,[[6,[[98,[25]],12]]]],[[24,79],[[6,[[98,[24]]]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],0,[[3,53],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[41]],15,[100,[79]]],[[14,[[13,[11,12]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[102,102],[[]],[[]],0,[[26,27],[[8,[103,28]]]],[[26,27],[[8,[104,28]]]],[[26,27],[[8,[105,28]]]],[[26,27],[[8,[106,28]]]],[[26,27],[[8,[72,28]]]],[[26,27],[[8,[107,28]]]],[[26,27],[[8,[108,28]]]],[[26,27],[[8,[109,28]]]],[[103,30],[[8,[31,32]]]],[[104,30],[[8,[31,32]]]],[[105,30],[[8,[31,32]]]],[[106,30],[[8,[31,32]]]],[[72,30],[[8,[31,32]]]],[[107,30],[[8,[31,32]]]],[[108,30],[[8,[31,32]]]],[[109,30],[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],0,[[101,64],65],[[101,64],65],[[103,64],65],[[104,64],65],[[105,64],65],[[106,64],65],[[72,64],65],[[107,64],65],[[108,64],65],[[109,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[]],[[]],[[102,31],[[36,[101]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],102],[102,31],0,[102,36],[102,36],[[102,31],36],0,[[103,93],8],[[105,93],8],[[106,93],8],[[72,93],8],[[107,93],8],[[108,93],8],[[109,93],8],[102],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[]],[[]],[[],9],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[79,5,110],[[8,[46]]]],[[79,94],[[8,[111,46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[113,113],[114,114],[15,25],[46,46],[115,115],[116,116],[117,117],[118,118],[119,119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[26,27],[[8,[112,28]]]],[[26,27],[[8,[113,28]]]],[[26,27],[[8,[114,28]]]],[[26,27],[[8,[46,28]]]],[[26,27],[[8,[115,28]]]],[[26,27],[[8,[116,28]]]],[[26,27],[[8,[117,28]]]],[[26,27],[[8,[118,28]]]],[[26,27],[[8,[119,28]]]],[[112,30],[[8,[31,32]]]],[[113,30],[[8,[31,32]]]],[[114,30],[[8,[31,32]]]],[[46,30],[[8,[31,32]]]],[[115,30],[[8,[31,32]]]],[[116,30],[[8,[31,32]]]],[[117,30],[[8,[31,32]]]],[[118,30],[[8,[31,32]]]],[[119,30],[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],0,[56,[[8,[46]]]],[[112,112],57],[[113,113],57],[[114,114],57],[[46,46],57],[[115,115],57],[[116,116],57],[[117,117],57],[[118,118],57],[[119,119],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],[58,[[8,[59,60]]]],[[112,64],65],[[113,64],65],[[114,64],65],[[46,64],65],[[46,64],65],[[115,64],65],[[116,64],65],[[117,64],65],[[118,64],65],[[119,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],4],[114,4],0,0,0,[[120,79,110,114,[13,[121]]],114],0,[[46,93],8],0,[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[[8,[46]],114],114],[[[8,[111,46]],114,120,79,110],114],[114,[[6,[[98,[114]]]]]],[33,[[6,[[98,[25]],12]]]],[[115,79,110],[[6,[[98,[114]]]]]],[[116,113,79,110],[[6,[[98,[114]]]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[94,79]],[[79,122]],[[55,79,123,94],[[8,[122,124]]]],[[125,79,123],[[8,[9]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,126],[125,125],[127,127],[15,25],[128,128],[129,129],[124,124],[130,130],[131,131],[132,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[26,27],[[8,[126,28]]]],[[26,27],[[8,[125,28]]]],[[26,27],[[8,[127,28]]]],[[26,27],[[8,[128,28]]]],[[26,27],[[8,[129,28]]]],[[26,27],[[8,[124,28]]]],[[26,27],[[8,[130,28]]]],[[26,27],[[8,[131,28]]]],[[26,27],[[8,[132,28]]]],[[126,30],[[8,[31,32]]]],[[125,30],[[8,[31,32]]]],[[127,30],[[8,[31,32]]]],[[128,30],[[8,[31,32]]]],[[129,30],[[8,[31,32]]]],[[124,30],[[8,[31,32]]]],[[130,30],[[8,[31,32]]]],[[131,30],[[8,[31,32]]]],[[132,30],[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],0,0,0,0,[56,[[8,[124]]]],[56,[[8,[132]]]],[[126,126],57],[[125,125],57],[[127,127],57],[[128,128],57],[[129,129],57],[[124,124],57],[[130,130],57],[[131,131],57],[[132,132],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],[58,[[8,[59,60]]]],[58,[[8,[59,60]]]],0,0,0,[[126,64],65],[[125,64],65],[[127,64],65],[[128,64],65],[[129,64],65],[[124,64],65],[[124,64],65],[[130,64],65],[[131,64],65],[[132,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[53,132],[[8,[9,124]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[125,132],[[],4],[127,4],0,0,0,0,0,0,0,[[124,93],8],[[132,93],8],0,0,[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[[8,[9,124]],127,94,122,120,44,125],127],[[[8,[122,124]],127,53],127],[[[8,[9]],127,[6,[5]]],127],[127,[[6,[[98,[127]]]]]],[33,[[6,[[98,[25]],12]]]],[[128,110,79],[[6,[[98,[127]]]]]],[[129,125],[[6,[[98,[127]]]]]],[[130,125,79],[[6,[[98,[127]]]]]],[[131,125,79],[[6,[[98,[127]]]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[53,132],[[8,[9,124]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[127,125,120,79],127],0,[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[4,79,123],[[8,[9]]]],[[47,79],[[8,[121,7]]]],[[79,4,123],[[8,[9]]]],[133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[120,121,45,79]],[134,134],[135,135],[15,25],[136,136],[7,7],[137,137],[138,138],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27],[[8,[134,28]]]],[[26,27],[[8,[135,28]]]],[[26,27],[[8,[136,28]]]],[[26,27],[[8,[7,28]]]],[[26,27],[[8,[137,28]]]],[[26,27],[[8,[138,28]]]],[[134,30],[[8,[31,32]]]],[[135,30],[[8,[31,32]]]],[[136,30],[[8,[31,32]]]],[[7,30],[[8,[31,32]]]],[[137,30],[[8,[31,32]]]],[[138,30],[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[30,[[8,[31,32]]]],[56,[[8,[7]]]],[[134,134],57],[[135,135],57],[[136,136],57],[[7,7],57],[[137,137],57],[[138,138],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],[58,[[8,[59,60]]]],[[134,64],65],[[135,64],65],[[136,64],65],[[7,64],65],[[7,64],65],[[137,64],65],[[138,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[[68,[67]],[70,[55,69]]],[[8,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],0,0,0,0,[135,4],[[],4],0,0,0,[[7,93],8],0,[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[],[[6,[67,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[[8,[9]],135,[6,[5]]],135],[[[8,[9]],135,47,45],135],[[135,45,[8,[121,7]],120,79],135],[135,135],[33,[[6,[[98,[25]],12]]]],[135,[[6,[[98,[135]]]]]],[[136,4,79],[[6,[[98,[135]]]]]],[[137,79],[[6,[[98,[135]]]]]],[[138,4,79],[[6,[[98,[135]]]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[8,"IDynCommonModuleInit"],[3,"LightningClientModule"],[3,"OperationId"],[3,"OutPoint"],[3,"Vec"],[4,"LightningReceiveError"],[4,"Result"],[3,"String"],[4,"PayError"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[15,"u16"],[4,"PayType"],[4,"InternalPayState"],[4,"LnPayState"],[4,"LnReceiveState"],[3,"LightningOperationMetaPay"],[3,"LightningOperationMeta"],[4,"LightningOperationMetaVariant"],[3,"LightningClientInit"],[4,"LightningClientStateMachines"],[3,"DynState"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"OutgoingLightningPayment"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DynContext"],[3,"Amount"],[15,"u64"],[4,"Option"],[8,"Serialize"],[8,"Send"],[8,"Sync"],[6,"Result"],[3,"NonCommittable"],[3,"DatabaseTransaction"],[3,"DynModuleApi"],[3,"Hash"],[3,"KeyPair"],[4,"IncomingSmError"],[3,"Bolt11Invoice"],[8,"RngCore"],[8,"CryptoRng"],[3,"PublicKey"],[3,"RouteHint"],[4,"Network"],[3,"LightningGateway"],[3,"FederationId"],[3,"Decoder"],[8,"Deserializer"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"IncomingContractOffer"],[3,"ClientConfig"],[3,"LightningGatewayAnnouncement"],[3,"Formatter"],[6,"Result"],[4,"LightningChildKeys"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"PaymentResult"],[3,"OsString"],[3,"FinalClient"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"DynGlobalClientContext"],[3,"Notifier"],[3,"DynGlobalApi"],[3,"ClientModuleInitArgs"],[3,"TransactionItemAmount"],[3,"DynInput"],[6,"ModuleInstanceId"],[3,"Request"],[3,"ModuleKind"],[4,"Currency"],[3,"DynOutput"],[8,"MaybeSend"],[8,"MaybeSync"],[3,"DynModuleBackup"],[8,"Serializer"],[3,"ContractId"],[4,"UpdateStreamOrOutcome"],[3,"MultiApiVersion"],[3,"DynCommonModuleInit"],[3,"StateTransition"],[3,"TypeId"],[3,"Executor"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"PaymentResultKey"],[3,"PaymentResultPrefix"],[3,"MetaOverridesKey"],[3,"MetaOverridesPrefix"],[3,"MetaOverrides"],[3,"LightningClientContext"],[3,"Preimage"],[4,"IncomingSmStates"],[3,"IncomingSmCommon"],[3,"IncomingStateMachine"],[3,"FundingOfferState"],[3,"DecryptingPreimageState"],[3,"AwaitingPreimageDecryption"],[3,"PreimageState"],[3,"RefundSuccessState"],[3,"ClientSMDatabaseTransaction"],[3,"IncomingContractAccount"],[15,"u32"],[3,"TransactionId"],[4,"GatewayPayError"],[3,"LightningPayCommon"],[4,"LightningPayStates"],[3,"LightningPayStateMachine"],[3,"LightningPayCreatedOutgoingLnContract"],[3,"LightningPayFunded"],[3,"LightningPayRefundable"],[3,"LightningPayRefund"],[3,"PayInvoicePayload"],[3,"Duration"],[4,"LightningReceiveStates"],[3,"LightningReceiveStateMachine"],[3,"LightningReceiveSubmittedOffer"],[3,"LightningReceiveConfirmedInvoice"],[3,"LightningReceiveFunded"],[13,"RefundSuccess"],[13,"RefundError"],[13,"FundingFailed"],[13,"Receive"],[13,"WaitingForRefund"],[13,"UnexpectedError"],[13,"Refunded"],[13,"Success"],[13,"WaitingForPayment"],[13,"Canceled"],[13,"InvalidPreimage"],[13,"FetchContractError"],[13,"FailedToFundContract"],[13,"AmountError"],[13,"ViolatedFeePolicy"],[13,"InvalidOffer"],[13,"TimeoutFetchingOffer"],[13,"RefundSubmitted"],[13,"FundingFailed"],[13,"GatewayInternalError"]]},\
"fedimint_ln_common":{"doc":"Lightning Module","t":"NRNNNNDNDNNNNNNNNNNNRDDEDDDEEDDEEEEENNNNNNNNDDDNNNNNMMMLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLMLLLLLLLMMAMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMIKKKKFKKKKKKKKNDDDDDDDDDDENNNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDEEDEINNNNNNNDNDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDMLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMMLLLLMLLLLLLLLLLLLLLLMLLLNDDDNDDNDDNDDEDNDDNNEDNDDNDDNNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLMMLLLLLLLLLLLLLFFFF","n":["BlockCount","CONSENSUS_VERSION","CancelOutgoing","CancelOutgoingContract","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","DecryptPreimage","Default","Default","Default","Default","DuplicateEncryptedPreimage","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","KIND","LightningClientContext","LightningCommonInit","LightningConsensusItem","LightningGateway","LightningGatewayAnnouncement","LightningGatewayRegistration","LightningInput","LightningInputError","LightningInputV0","LightningModuleTypes","LightningOutput","LightningOutputError","LightningOutputOutcome","LightningOutputOutcomeV0","LightningOutputV0","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","UnknownContract","UnknownInputVariant","UnknownLightningInputVariantError","UnknownLightningOutputOutcomeVariantError","UnknownLightningOutputVariantError","UnknownOutputVariant","V0","V0","V0","ZeroOutput","amount","amount","amount","anchor","api","api","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","contracts","db","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","gateway_redeem_key","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","info","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_expired","is_permanent","lightning_alias","ln_decoder","ln_operation","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","mint_channel_id","new_v0","new_v0_cancel_outgoing","new_v0_cancel_outgoing","new_v0_contract","new_v0_contract","new_v0_offer","new_v0_offer","node_pub_key","redeem_key","route_hints","route_hints","serde_option_routing_fees","serde_routing_fees","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","source","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unanchor","valid_until","variant","variant","variant","vetted","vetted","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","bytes","variant","bytes","variant","bytes","variant","bytes","variant","id","id","id","outcome","contract","gateway_signature","LnFederationApi","fetch_consensus_block_count","fetch_contract","fetch_gateways","fetch_offer","filter_duplicate_gateways","get_incoming_contract","get_outgoing_contract","offer_exists","register_gateway","wait_block_height","wait_contract","wait_outgoing_contract_cancelled","wait_preimage_decrypted","Bitcoin","FeeConsensus","GatewayFee","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigLocal","LightningConfigPrivate","LightningGenParams","LightningGenParamsConsensus","LightningGenParamsLocal","Network","Regtest","Signet","Testnet","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_input","contract_output","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_magic","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","magic","network","network","network","partial_cmp","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifiableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","PreimageKey","Some","all_zeros","as_bits","as_byte_slice","as_hash","as_inner","as_ref","as_slice_of","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_permanent","is_permanent","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","FundedIncomingContract","IncomingContract","IncomingContractAccount","IncomingContractOffer","OfferId","all_zeros","amount","amount","as_bits","as_byte_slice","as_hash","as_inner","as_ref","as_slice_of","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","claim","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","out_point","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancellation_message","cancelled","claim","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","contract_id","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","gateway_key","hash","hash","into","into","into","into_request","into_request","into_request","invoice","recovery_key","refund","serialize","serialize","serialize","timelock","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_key","vzip","vzip","vzip","AgreedDecryptionShare","AgreedDecryptionShareContractIdPrefix","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","EncryptedPreimageIndex","EncryptedPreimageIndexKey","EncryptedPreimageIndexKeyPrefix","Incoming","LightningAuditItem","LightningAuditItemKey","LightningAuditItemKeyPrefix","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","Outgoing","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_funded_contract","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cltv_expiry_delta","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","htlc_maximum_msat","htlc_minimum_msat","into","into","into_request","into_request","proportional_millionths","serialize","serialize","short_channel_id","src_node_id","to_bytes","to_bytes","to_ldk_route_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize","deserialize","serialize"],"q":[[0,"fedimint_ln_common"],[665,"fedimint_ln_common::LightningConsensusItem"],[667,"fedimint_ln_common::LightningInput"],[669,"fedimint_ln_common::LightningOutput"],[671,"fedimint_ln_common::LightningOutputOutcome"],[673,"fedimint_ln_common::LightningOutputOutcomeV0"],[677,"fedimint_ln_common::LightningOutputV0"],[679,"fedimint_ln_common::api"],[693,"fedimint_ln_common::config"],[979,"fedimint_ln_common::contracts"],[1323,"fedimint_ln_common::contracts::incoming"],[1515,"fedimint_ln_common::contracts::outgoing"],[1615,"fedimint_ln_common::db"],[2033,"fedimint_ln_common::route_hints"],[2099,"fedimint_ln_common::serde_option_routing_fees"],[2101,"fedimint_ln_common::serde_routing_fees"]],"d":["","","Allow early refund of outgoing contract","","Fund contract","","","","","","","","","","","","","","","","","","","","Information a gateway registers with a federation","Information about a gateway that is shared with other …","Information about a gateway that is stored locally and …","","","","","","","","","Represents an output of the Lightning module.","","","","Create incoming contract offer","","","","","","","","","","","","","While for now we only support spending the entire contract …","","","Create a registration from this announcement that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateway configured routing fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key used to pay the gateway","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channel identifier assigned to the mint by the gateway. …","","","","","","","","","","Hack to get a route hint that implements <code>serde</code> traits.","Route hints to reach the LN node of the gateway.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limits the validity of the announcement to allow updates, …","","","","","","","","","","","","","","","","","","","","","Create an announcement from this registration that is …","Limits the validity of the announcement to allow updates, …","","","","Indicates if this announcement has been vetted by the …","Indicates if this announcement has been vetted by the …","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","","","","","","","","","","","","","Contract to update","Signature of gateway","","","","","","Filter out duplicate gateways. This is necessary because …","","","","","","","","","Classic Bitcoin","","Gateway routing fees","","","","","","","","","The cryptocurrency to act on","Bitcoin’s regtest","Bitcoin’s signet","Bitcoin’s testnet","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for LN transactions","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Creates a <code>Network</code> from the magic bytes.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Return the network magic bytes, which should be encoded …","","","","","","","","","","","","","","","","","The number of decryption shares required","","The threshold public keys for encrypting the LN preimage","Our secret key for decrypting preimages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","","The decrypted preimage was valid","","","","Converts this type into the inner hash typeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","","","","","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Invoice containing metadata on how to obtain the preimage","","","","","","Block height at which the money will be spendable by the …","","","","","","","","","","","","","","","","Public key of the user that can claim the money back after …","","","","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","","","","An iterator over the variants of Self","","We save the hash of the encrypted preimage from each …","","","","We keep a separate mapping of incoming and outgoing …","","","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codelist of hops along a payment path terminating with a …","","Flat routing fee in millisatoshis","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","The maximum value in msat available for routing with a …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Liquidity-based routing fee in millionths of a routed …","","","The <code>short_channel_id</code> of this channel","The <code>node_id</code> of the non-target end of the route","","","","","","","","","","","","","","","","",""],"i":[21,0,12,18,12,18,0,23,0,21,4,10,16,21,26,23,26,26,26,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,26,26,12,18,23,26,23,0,0,0,26,4,10,16,26,8,13,14,1,0,19,4,10,16,21,23,26,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,4,4,7,8,10,10,11,12,13,14,16,16,17,18,2,1,19,21,21,22,23,23,26,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,22,23,26,0,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,13,14,8,0,0,43,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,4,10,16,21,23,26,4,10,16,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,4,4,4,4,7,7,7,7,8,8,8,8,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,16,16,16,16,17,17,17,17,18,18,18,18,2,2,2,2,1,1,1,1,19,19,19,19,21,21,21,21,23,23,23,23,26,26,26,26,4,10,16,21,23,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,19,4,4,7,7,8,8,10,10,11,11,12,12,13,14,16,16,17,17,18,18,2,1,19,21,21,43,22,23,23,26,26,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,23,26,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,22,23,26,19,19,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,2,1,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,4,10,16,21,23,26,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,2,18,19,22,0,4,10,16,19,4,10,16,10,16,10,16,19,22,0,19,0,0,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,23,26,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,22,23,26,4,7,8,10,11,12,16,17,18,21,23,26,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,1,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,2,2,7,11,17,2,1,152,4,7,8,10,11,12,13,14,16,17,18,2,1,19,21,43,22,23,26,8,153,153,154,154,155,155,156,156,157,158,159,157,160,160,0,161,161,161,161,0,161,161,161,161,161,161,161,161,85,0,0,0,0,0,0,0,0,0,0,0,85,85,85,82,76,78,74,75,76,77,78,79,80,82,83,84,85,74,75,76,77,78,79,80,82,83,84,85,74,75,76,77,78,79,80,82,82,83,84,85,74,75,76,77,78,79,80,82,83,84,85,85,85,74,77,78,79,82,83,85,78,79,82,83,85,78,79,82,83,85,83,83,83,74,75,76,77,78,79,80,82,83,85,82,82,83,85,82,82,82,82,83,83,83,83,85,85,85,85,82,74,75,76,77,78,79,80,82,83,85,79,82,74,75,76,77,78,79,80,82,82,83,84,85,85,74,75,76,77,78,79,80,82,83,84,85,85,78,79,82,83,85,85,74,77,74,75,76,77,78,79,80,82,83,84,85,84,85,82,83,85,74,75,76,77,78,79,80,82,83,84,85,82,74,75,76,77,78,79,80,82,83,84,85,79,74,77,85,75,79,82,85,77,74,74,75,76,77,78,79,80,82,83,85,79,82,79,80,78,79,82,83,85,82,74,75,76,77,78,79,80,82,83,84,85,74,77,82,85,74,75,76,77,78,79,80,82,83,84,85,74,75,76,77,78,79,80,82,83,84,85,74,75,76,77,78,79,80,82,83,84,85,79,74,75,76,77,78,79,80,82,83,84,85,0,0,0,0,0,0,0,100,101,61,104,100,101,61,0,104,0,0,0,104,57,57,57,57,57,57,57,57,57,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,57,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,57,57,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,162,100,101,57,57,100,101,61,102,59,103,104,105,106,57,57,57,57,100,101,61,102,59,103,104,105,106,57,57,57,57,100,100,100,100,101,101,101,101,61,61,61,61,102,102,102,102,59,59,59,59,103,103,103,103,104,104,104,104,105,105,105,105,106,106,106,106,57,100,101,61,102,59,103,104,105,106,57,57,57,100,101,61,102,59,103,104,105,106,57,57,100,101,61,102,59,103,104,105,106,57,57,100,101,61,102,59,103,104,105,106,57,57,57,57,100,101,61,102,59,103,104,105,106,57,57,57,57,100,101,61,102,59,103,104,105,106,0,57,57,100,101,61,102,59,103,104,105,106,57,57,100,101,61,102,59,103,104,105,106,61,104,105,0,57,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,100,57,100,57,100,101,61,102,59,103,104,105,106,103,57,57,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,57,100,101,61,102,59,103,104,105,106,57,0,0,0,0,0,63,62,121,63,63,63,63,63,63,63,62,122,123,63,63,121,62,122,123,63,121,63,121,62,122,123,63,121,62,122,123,63,121,63,63,62,122,123,63,121,62,122,123,63,121,62,122,123,63,121,123,121,122,122,63,62,122,123,63,121,63,63,62,122,63,62,122,123,63,121,62,62,62,62,122,122,122,122,123,123,123,123,63,63,63,63,121,121,121,121,62,122,123,63,121,62,62,122,123,63,63,63,121,62,122,123,63,63,121,63,62,122,123,63,121,63,63,63,62,122,123,63,121,63,63,63,122,62,122,123,63,62,122,62,63,62,122,123,63,121,63,62,122,123,63,121,123,63,62,122,123,63,121,62,122,123,63,121,63,62,122,123,63,121,63,63,62,122,123,63,121,62,122,123,63,121,62,122,123,63,121,62,122,123,63,121,63,0,0,0,0,125,124,126,125,124,126,125,124,124,125,124,126,125,124,126,125,124,126,125,124,126,125,124,126,125,125,126,124,124,126,125,124,126,125,124,124,124,124,126,126,126,126,125,125,125,125,124,126,125,124,126,125,124,126,125,124,126,125,124,126,125,124,124,124,124,126,125,124,126,125,124,126,125,124,126,125,124,124,126,125,124,126,125,124,126,125,124,126,125,124,126,125,124,124,126,125,127,0,0,0,127,0,0,127,0,0,127,0,0,0,0,127,0,0,132,127,0,0,127,0,0,127,0,0,132,127,0,0,128,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,129,130,131,132,133,127,128,129,130,131,132,133,129,130,134,131,132,135,136,137,138,139,140,141,142,143,144,133,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,132,129,134,132,136,137,138,140,141,142,144,127,127,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,129,129,130,134,134,131,132,132,135,136,136,137,138,138,139,140,140,141,141,142,142,143,144,144,133,132,127,128,129,130,131,132,133,128,128,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,128,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,128,128,128,128,129,134,132,136,137,138,140,141,142,144,128,129,129,130,130,134,134,131,131,132,132,135,135,136,136,137,137,138,138,139,139,140,140,145,141,141,146,147,142,142,143,143,144,144,133,133,127,128,129,130,131,132,133,127,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,127,128,129,130,134,131,132,135,136,137,138,139,140,145,141,146,147,142,143,144,133,0,0,148,148,149,148,149,148,149,148,149,148,148,149,148,149,148,149,148,149,148,149,148,148,148,148,149,149,149,149,148,149,148,149,148,149,148,149,148,149,148,149,148,148,148,149,148,149,148,148,149,148,148,148,149,149,148,149,148,149,148,149,148,149,148,149,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,6],[7,7],[8,8],[5,9],[10,10],[11,11],[12,12],[13,13],[14,14],[5,15],[16,16],[17,17],[18,18],[2,2],[1,1],[19,19],[5,20],[21,21],[22,22],[23,23],[5,24],[5,25],[26,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[27,28],[[30,[4,29]]]],[[27,28],[[30,[7,29]]]],[[27,28],[[30,[8,29]]]],[[27,28],[[30,[10,29]]]],[[27,28],[[30,[11,29]]]],[[27,28],[[30,[12,29]]]],[[27,28],[[30,[13,29]]]],[[27,28],[[30,[14,29]]]],[[27,28],[[30,[16,29]]]],[[27,28],[[30,[17,29]]]],[[27,28],[[30,[18,29]]]],[[27,28],[[30,[2,29]]]],[[27,28],[[30,[1,29]]]],[[27,28],[[30,[19,29]]]],[[27,28],[[30,[21,29]]]],[[27,28],[[30,[23,29]]]],[[27,28],[[30,[26,29]]]],[[4,31],[[30,[32,33]]]],[[7,31],[[30,[32,33]]]],[[8,31],[[30,[32,33]]]],[[10,31],[[30,[32,33]]]],[[11,31],[[30,[32,33]]]],[[12,31],[[30,[32,33]]]],[[13,31],[[30,[32,33]]]],[[14,31],[[30,[32,33]]]],[[16,31],[[30,[32,33]]]],[[17,31],[[30,[32,33]]]],[[18,31],[[30,[32,33]]]],[[2,31],[[30,[32,33]]]],[[1,31],[[30,[32,33]]]],[[19,31],[[30,[32,33]]]],[[21,31],[[30,[32,33]]]],[[23,31],[[30,[32,33]]]],[[26,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],0,0,0,0,0,[[],34],[35,[[30,[4]]]],[35,[[30,[7]]]],[35,[[30,[8]]]],[35,[[30,[10]]]],[35,[[30,[11]]]],[35,[[30,[12]]]],[35,[[30,[13]]]],[35,[[30,[14]]]],[35,[[30,[16]]]],[35,[[30,[17]]]],[35,[[30,[18]]]],[35,[[30,[2]]]],[35,[[30,[1]]]],[35,[[30,[19]]]],[35,[[30,[21]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[4,[[30,[8,7]]]],[10,[[30,[12,11]]]],[16,[[30,[18,17]]]],[[4,4],37],[[7,7],37],[[8,8],37],[[10,10],37],[[11,11],37],[[12,12],37],[[13,13],37],[[14,14],37],[[16,16],37],[[17,17],37],[[18,18],37],[[2,2],37],[[1,1],37],[[19,19],37],[[21,21],37],[[23,23],37],[[26,26],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[6,37],[9,37],[15,37],[20,37],[24,37],[25,37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],0,[[4,41],42],[[4,41],42],[[7,41],42],[[7,41],42],[[8,41],42],[[8,41],42],[[10,41],42],[[10,41],42],[[11,41],42],[[11,41],42],[[12,41],42],[[12,41],42],[[13,41],42],[[14,41],42],[[16,41],42],[[16,41],42],[[17,41],42],[[17,41],42],[[18,41],42],[[18,41],42],[[2,41],42],[[1,41],42],[[19,41],42],[[21,41],42],[[21,41],42],[[43,41],42],[[22,41],42],[[23,41],42],[[23,41],42],[[26,41],42],[[26,41],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,23],[[]],[11,26],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[4,49]],[[7,49]],[[8,49]],[[10,49]],[[11,49]],[[12,49]],[[13,49]],[[14,49]],[[16,49]],[[17,49]],[[18,49]],[[2,49]],[[1,49]],[[19,49]],[[21,49]],[[23,49]],[[26,49]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,50]],[[10,50]],[[16,50]],[[21,50]],[[23,50]],[[26,50]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[2,37],[18,37],0,0,[[52,53],[[55,[54]]]],[4,[[56,[8]]]],[10,[[56,[12]]]],[16,[[56,[18]]]],0,[[57,58,[56,[59]]],4],[[57,60],10],[57,16],[13,10],[[57,61],16],[62,10],[63,16],0,0,0,0,0,0,[[4,64],30],[[7,64],30],[[8,64],30],[[10,64],30],[[11,64],30],[[12,64],30],[[13,64],30],[[14,64],30],[[16,64],30],[[17,64],30],[[18,64],30],[[2,64],30],[[1,64],30],[[19,64],30],[[21,64],30],[23,[[56,[65]]]],[26,[[56,[65]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[2,1],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[72,[[71,[70]]]]]],[57,[[72,[[71,[70]]]]]],[[],[[72,[[71,[70]]]]]],[73,[[72,[[71,[70]]]]]],[[[67,[1]]],[[67,[1]]]],[57,[[72,[[71,[70]]]]]],[57,[[72,[[71,[70]]]]]],[73,[[72,[[71,[70]]]]]],[1,[[72,[[71,[70]]]]]],[36,[[72,[[71,[70]]]]]],[57,[[72,[[71,[70]]]]]],[57,[[72,[[71,[70]]]]]],[57,[[72,[[71,[70]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[5,81],[82,82],[83,83],[84,84],[85,85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,85],86],[[],86],0,0,[[27,28],[[30,[78,29]]]],[[27,28],[[30,[79,29]]]],[[27,28],[[30,[82,29]]]],[[27,28],[[30,[83,29]]]],[[27,[47,[34,46]]],[[30,[85,29]]]],[[78,31],[[30,[32,33]]]],[[79,31],[[30,[32,33]]]],[[82,31],[[30,[32,33]]]],[[83,31],[[30,[32,33]]]],[[85,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],0,0,[[],83],[35,[[30,[74]]]],[35,[[30,[75]]]],[35,[[30,[76]]]],[35,[[30,[77]]]],[35,[[30,[78]]]],[35,[[30,[79]]]],[35,[[30,[80]]]],[35,[[30,[82]]]],[35,[[30,[83]]]],[35,[[30,[85]]]],[[],36],[[82,82],37],[[83,83],37],[[85,85],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[81,37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],0,0,[[74,41],42],[[75,41],42],[[76,41],42],[[77,41],42],[[78,41],42],[[79,41],42],[[80,41],42],[[82,41],42],[[82,41],42],[[83,41],42],[[84,41],42],[[85,41],[[30,[87]]]],[[85,41],[[30,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,85],[[]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[89,[[56,[85]]]],[[],74],[[],77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,[[30,[84]]]],[90,[[30,[85]]]],[[82,49]],[[83,49]],[[85,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,50]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[79,91],0,0,[85,89],0,0,0,[[85,85],[[56,[86]]]],0,[92,74],[[74,64],30],[[75,64],30],[[76,64],30],[[77,64],30],[[78,64],30],[[79,64],30],[[80,64],30],[[82,64],30],[[83,64],30],[[85,64],30],[79,32],0,0,0,[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[56,[93]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74],[77],[[],68],[[],68],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[79,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],57],[[],[[96,[95]]]],[[],[[45,[44]]]],[57,73],[57],[57,[[45,[44]]]],[[],[[30,[[45,[97]],98]]]],[[],32],[[]],[57,[[45,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[[67,[99,66]]]]]],[57,57],[100,100],[101,101],[61,61],[102,102],[59,59],[103,103],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,57],86],[[],86],[[27,28],[[30,[57,29]]]],[[27,28],[[30,[100,29]]]],[[27,28],[[30,[101,29]]]],[[27,28],[[30,[61,29]]]],[[27,28],[[30,[102,29]]]],[[27,28],[[30,[59,29]]]],[[27,28],[[30,[103,29]]]],[[27,28],[[30,[104,29]]]],[[27,28],[[30,[105,29]]]],[[27,28],[[30,[106,29]]]],[[57,31],[[30,[32,33]]]],[[100,31],[[30,[32,33]]]],[[101,31],[[30,[32,33]]]],[[61,31],[[30,[32,33]]]],[[102,31],[[30,[32,33]]]],[[59,31],[[30,[32,33]]]],[[103,31],[[30,[32,33]]]],[[104,31],[[30,[32,33]]]],[[105,31],[[30,[32,33]]]],[[106,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[[],57],[100,57],[101,57],[57],[35,[[30,[57]]]],[35,[[30,[100]]]],[35,[[30,[101]]]],[35,[[30,[61]]]],[35,[[30,[102]]]],[35,[[30,[59]]]],[35,[[30,[103]]]],[35,[[30,[104]]]],[35,[[30,[105]]]],[35,[[30,[106]]]],[[],[[108,[107]]]],[[],[[108,[107]]]],[[]],[[57,57],37],[[100,100],37],[[101,101],37],[[61,61],37],[[102,102],37],[[59,59],37],[[103,103],37],[[104,104],37],[[105,105],37],[[106,106],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[[57,41],42],[[57,41],42],[[57,41],42],[[100,41],42],[[101,41],42],[[61,41],42],[[102,41],42],[[59,41],42],[[103,41],42],[[104,41],42],[[105,41],42],[[106,41],42],[73,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[109,110,111]]],[[30,[112]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[],57],[73,57],[[],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[44]]],[[30,[57,113]]]],[[[45,[44]]],[[30,[57,113]]]],[90,[[30,[57]]]],[[57,49]],[[100,49]],[[101,49]],[[61,49]],[[102,49]],[[59,49]],[[103,49]],[[104,49]],[[105,49]],[[106,49]],0,[[57,[114,[[45,[44]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[61,37],[104,37],[[103,115],105],0,[[57,57],[[56,[86]]]],[[57,64],30],[[100,64],30],[[101,64],30],[[61,64],30],[[102,64],30],[[59,64],30],[[103,64],30],[[104,64],30],[[105,64],30],[[106,64],30],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[100,116],101],[[],68],[100,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,[[30,[117,118]]]],[[],68],[[],[[30,[[96,[95]],119]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120,30],0,0,0,0,0,[[],63],0,0,[[],[[96,[95]]]],[[],[[45,[44]]]],[63,73],[63],[63,[[45,[44]]]],[[],[[30,[[45,[97]],98]]]],[[],32],[[]],[[]],[[]],[[]],[63,[[45,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[[67,[99,66]]]]]],[121,4],[62,62],[122,122],[123,123],[63,63],[121,121],[[]],[[]],[[]],[[]],[[]],[[63,63],86],[[],86],[[27,28],[[30,[62,29]]]],[[27,28],[[30,[122,29]]]],[[27,28],[[30,[123,29]]]],[[27,28],[[30,[63,29]]]],[[27,28],[[30,[121,29]]]],[[62,31],[[30,[32,33]]]],[[122,31],[[30,[32,33]]]],[[123,31],[[30,[32,33]]]],[[63,31],[[30,[32,33]]]],[[121,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],0,0,[122,57],0,[63],[35,[[30,[62]]]],[35,[[30,[122]]]],[35,[[30,[123]]]],[35,[[30,[63]]]],[35,[[30,[121]]]],[[],[[108,[107]]]],[[],[[108,[107]]]],0,0,[[]],[[62,62],37],[[122,122],37],[[123,123],37],[[63,63],37],[[121,121],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],0,[[62,41],42],[[122,41],42],[[123,41],42],[[63,41],42],[[63,41],42],[[63,41],42],[[121,41],42],[[]],[[]],[[]],[73,63],[[]],[[]],[[[0,[109,110,111]]],[[30,[112]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[],63],[73,63],[[],63],[[]],[[]],[[]],[[]],[[]],[[[45,[44]]],[[30,[63,113]]]],[[[45,[44]]],[[30,[63,113]]]],[90,[[30,[63]]]],0,[[62,49]],[[122,49]],[[123,49]],[[63,49]],0,0,[62,63],[[63,[114,[[45,[44]]]]]],[[]],[[]],[[]],[[]],[[]],[63],[[],51],[[],51],[[],51],[[],51],[[],51],0,[[63,63],[[56,[86]]]],[[62,64],30],[[122,64],30],[[123,64],30],[[63,64],30],[[121,64],30],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],68],[[]],[[]],[[]],[[]],[[]],[[],68],[[],[[30,[[96,[95]],119]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],69],[[],69],[[],69],[[],69],[[],69],[[]],[[]],[[]],[[]],[[]],[120,30],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[124,73],0,[[125,59],4],[124,124],[126,126],[125,125],[[]],[[]],[[]],[[27,28],[[30,[124,29]]]],[[27,28],[[30,[126,29]]]],[[27,28],[[30,[125,29]]]],[[124,31],[[30,[32,33]]]],[[126,31],[[30,[32,33]]]],[[125,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],0,0,[124,57],[35,[[30,[124]]]],[35,[[30,[126]]]],[35,[[30,[125]]]],[[124,124],37],[[126,126],37],[[125,125],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[[124,41],42],[[126,41],42],[[125,41],42],[[]],[[]],[[]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[]],[[]],[[]],0,[[124,49]],0,[[]],[[]],[[]],[[],51],[[],51],[[],51],0,0,[125,4],[[124,64],30],[[126,64],30],[[125,64],30],0,[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],69],[[],69],[[],69],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,28],[[30,[129,29]]]],[[27,28],[[30,[130,29]]]],[[27,28],[[30,[134,29]]]],[[27,28],[[30,[131,29]]]],[[27,28],[[30,[132,29]]]],[[27,28],[[30,[135,29]]]],[[27,28],[[30,[136,29]]]],[[27,28],[[30,[137,29]]]],[[27,28],[[30,[138,29]]]],[[27,28],[[30,[139,29]]]],[[27,28],[[30,[140,29]]]],[[27,28],[[30,[141,29]]]],[[27,28],[[30,[142,29]]]],[[27,28],[[30,[143,29]]]],[[27,28],[[30,[144,29]]]],[[27,28],[[30,[133,29]]]],[[129,31],[[30,[32,33]]]],[[130,31],[[30,[32,33]]]],[[134,31],[[30,[32,33]]]],[[131,31],[[30,[32,33]]]],[[132,31],[[30,[32,33]]]],[[135,31],[[30,[32,33]]]],[[136,31],[[30,[32,33]]]],[[137,31],[[30,[32,33]]]],[[138,31],[[30,[32,33]]]],[[139,31],[[30,[32,33]]]],[[140,31],[[30,[32,33]]]],[[145,31],[[30,[32,33]]]],[[141,31],[[30,[32,33]]]],[[146,31],[[30,[32,33]]]],[[147,31],[[30,[32,33]]]],[[142,31],[[30,[32,33]]]],[[143,31],[[30,[32,33]]]],[[144,31],[[30,[32,33]]]],[[133,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[[132,132],37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[[127,41],42],[[127,41],42],[[129,41],42],[[130,41],42],[[134,41],42],[[131,41],42],[[132,41],42],[[135,41],42],[[136,41],42],[[137,41],42],[[138,41],42],[[139,41],42],[[140,41],42],[[145,41],42],[[141,41],42],[[146,41],42],[[147,41],42],[[142,41],42],[[143,41],42],[[144,41],42],[[133,41],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[101,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[128,32],[[56,[127]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],128],[128,32],0,[128,56],[128,56],[[128,32],56],[[129,64],30],[[134,64],30],[[132,64],30],[[136,64],30],[[137,64],30],[[138,64],30],[[140,64],30],[[141,64],30],[[142,64],30],[[144,64],30],[128],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[148,148],[149,149],[[]],[[]],0,[[27,28],[[30,[148,29]]]],[[27,28],[[30,[149,29]]]],[[148,31],[[30,[32,33]]]],[[149,31],[[30,[32,33]]]],[31,[[30,[32,33]]]],[31,[[30,[32,33]]]],[35,[[30,[148]]]],[35,[[30,[149]]]],[[148,148],37],[[149,149],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[38,[[30,[39,40]]]],[38,[[30,[39,40]]]],[[148,41],42],[[149,41],42],[[]],[[]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[[45,[44]],[47,[34,46]]],[[30,[48]]]],[[]],[[]],[[148,49]],[[149,49]],0,0,[[]],[[]],[[],51],[[],51],0,[[148,64],30],[[149,64],30],0,0,[[],[[67,[44,66]]]],[[],[[67,[44,66]]]],[149,150],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],69],[[],69],[[]],[[]],[35,[[30,[[56,[151]]]]]],[[[56,[151]],64],30],[35,[[30,[151]]]],[[151,64],30]],"c":[],"p":[[3,"LightningGatewayAnnouncement"],[3,"LightningGatewayRegistration"],[8,"Any"],[4,"LightningInput"],[15,"u16"],[3,"DynInput"],[3,"UnknownLightningInputVariantError"],[3,"LightningInputV0"],[3,"DynOutput"],[4,"LightningOutput"],[3,"UnknownLightningOutputVariantError"],[4,"LightningOutputV0"],[3,"ContractOutput"],[3,"ContractAccount"],[3,"DynOutputOutcome"],[4,"LightningOutputOutcome"],[3,"UnknownLightningOutputOutcomeVariantError"],[4,"LightningOutputOutcomeV0"],[3,"LightningGateway"],[3,"DynModuleConsensusItem"],[4,"LightningConsensusItem"],[3,"LightningClientContext"],[4,"LightningInputError"],[3,"DynInputError"],[3,"DynOutputError"],[4,"LightningOutputError"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"LightningCommonInit"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[3,"ClientArc"],[3,"OperationId"],[3,"OperationLogEntry"],[6,"Result"],[4,"Option"],[3,"ContractId"],[3,"Amount"],[3,"Preimage"],[3,"Signature"],[4,"ContractOutcome"],[3,"IncomingContractOffer"],[3,"OfferId"],[8,"Serializer"],[8,"Error"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Hash"],[3,"LightningGenParams"],[3,"LightningGenParamsConsensus"],[3,"LightningGenParamsLocal"],[3,"LightningConfig"],[3,"LightningConfigLocal"],[3,"LightningConfigConsensus"],[3,"LightningConfigPrivate"],[3,"DynClientConfig"],[3,"LightningClientConfig"],[3,"FeeConsensus"],[3,"GatewayFee"],[4,"Network"],[4,"Ordering"],[3,"Error"],[4,"Currency"],[15,"u32"],[15,"str"],[3,"ModuleKind"],[3,"BitcoinRpcConfig"],[4,"Value"],[3,"ModuleConsensusVersion"],[8,"BitOrder"],[3,"BitSlice"],[8,"FromByteSlice"],[4,"Error"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[3,"OutgoingContractOutcome"],[3,"PreimageKey"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[15,"char"],[8,"FromIterator"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[4,"Error"],[8,"SliceIndex"],[3,"PublicKey"],[3,"OutPoint"],[3,"PublicKey"],[4,"Error"],[4,"BitSpanError"],[8,"WriteBase32"],[3,"IncomingContractAccount"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[3,"OutgoingContractAccount"],[3,"OutgoingContractData"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKeyPrefix"],[4,"LightningAuditItemKey"],[3,"BlockCountVotePrefix"],[3,"ContractUpdateKey"],[3,"LightningAuditItemKeyPrefix"],[3,"EncryptedPreimageIndexKey"],[3,"EncryptedPreimageIndexKeyPrefix"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"BlockCountVoteKey"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareContractIdPrefix"],[3,"RouteHintHop"],[3,"RouteHint"],[3,"RouteHint"],[3,"RoutingFees"],[3,"LightningModuleTypes"],[13,"Default"],[13,"Default"],[13,"Default"],[13,"Default"],[13,"Contract"],[13,"Offer"],[13,"CancelOutgoingContract"],[13,"CancelOutgoing"],[8,"LnFederationApi"],[8,"IdentifiableContract"]]},\
"fedimint_ln_server":{"doc":"","t":"DDDDDDDDDDMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ALL_METRICS","AMOUNTS_BUCKETS_SATS","LN_FUNDED_CONTRACT_INCOMING","LN_FUNDED_CONTRACT_INCOMING_ACCOUNT_AMOUNTS_SATS","LN_FUNDED_CONTRACT_OUTGOING","LN_FUNDED_CONTRACT_OUTGOING_ACCOUNT_AMOUNTS_SATS","LN_INCOMING_OFFER","LN_OUTPUT_OUTCOME_CANCEL_OUTGOING_CONTRACT","Lightning","LightningInit","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","api_endpoints","api_endpoints","as_any","as_common","audit","audit","block_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_rpc","cfg","clone","clone_into","consensus_block_count","consensus_proposal","consensus_proposal","database_version","decoder","decoder","delete_expired_gateways","deref","deref","deref","deref","deref","deref","deref","deref","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","get_client_config","get_client_config","get_contract_account","get_database_migrations","get_incoming_contract_account","get_offer","init","init","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","list_gateways","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","register_gateway","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_decryption_share","validate_params","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_block_height","wait_contract_account","wait_offer","wait_outgoing_contract_account_cancelled","wait_preimage_decrypted"],"q":[[0,"fedimint_ln_server"]],"d":["","","","","","","","","The lightning module implements an account system. It does …","","","","","","","","","","","","","","","Queries the database and returns all assets and …","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,21,23,24,25,26,28,30,31,1,1,1,18,1,1,1,21,23,24,25,26,28,30,31,18,1,21,23,24,25,26,28,30,31,18,1,1,1,18,18,1,1,1,18,18,1,1,21,23,24,25,26,28,30,31,18,18,18,18,18,1,21,23,24,25,26,28,30,31,18,1,18,18,18,1,18,1,1,18,18,21,23,24,25,26,28,30,31,18,1,21,23,24,25,26,28,30,31,18,1,1,18,1,1,1,1,1,1,1,1,1,1,18,18,18,18,18,18,21,23,24,25,26,28,30,31,18,1,21,23,24,25,26,28,30,31,18,1,21,23,24,25,26,28,30,31,18,1,18,18,1,18,18,21,23,24,25,26,28,30,31,18,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],7],[[1,8,9,10],[[13,[[12,[11]]]]]],[[[8,[14]],9,15],[[13,[[12,[11,5]]]]]],[1,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[18,18],[[]],[[1,8],16],[[[8,[14]],15],[[13,[[12,[11,5]]]]]],[[1,8],[[13,[[12,[11]]]]]],[[],19],[[],20],[[],20],[[1,8]],[21,22],[23,22],[24,22],[25,22],[26,[[3,[27]]]],[28,29],[30,29],[31,[[33,[[12,[32]]]]]],[[18,34,35],[[13,[[12,[11]]]]]],[[34,35],[[13,[[12,[11,5]]]]]],[[18,8,[3,[36]]],[[13,[[12,[11]]]]]],[[[8,[14]],[3,[36,5]]],[[13,[[12,[11,5]]]]]],[[18,37],38],[[1,37],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,39],[[42,[40,41]]]],[[18,39],[[17,[43]]]],[[1,8,44],[[46,[45]]]],[[],[[47,[19,5]]]],[45,48],[[1,8,49],[[46,[50]]]],[[18,[51,[18]]],[[13,[[12,[11]]]]]],[[52,53,54,55],[[13,[[12,[11,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[1,8],[[3,[57]]]],[[],58],[[59,54],[[17,[1]]]],[[[8,[14]],60,15],[[13,[[12,[11,5]]]]]],[[1,8,60],[[13,[[12,[11]]]]]],[[1,8,61,55],[[13,[[12,[11]]]]]],[[[8,[14]],62,55],[[13,[[12,[11,5]]]]]],[[[8,[14]],63,15],[[13,[[12,[11,5]]]]]],[[1,8,64],[[13,[[12,[11]]]]]],[[1,8,65,60],[[13,[[12,[11]]]]]],[[[8,[14]],66,60,15],[[13,[[12,[11,5]]]]]],[[1,8,57]],[[],67],[18,67],[[],68],[[]],[[[69,[55]],35],[[47,[55,52,5]]]],[[18,[69,[55]],35],[[47,[55,52]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[55,52],[[42,[41]]]],[[18,55,52],17],[[1,55,71,72],73],[35,[[42,[41]]]],[[18,74],[[69,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,16,8]],[[1,76,44],45],[[1,76,49],50],[[1,76,44],45],[[1,76,44]]],"c":[],"p":[[3,"Lightning"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"DatabaseTransaction"],[3,"Audit"],[6,"ModuleInstanceId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"NonCommittable"],[15,"u16"],[15,"u64"],[6,"Result"],[3,"LightningInit"],[3,"DatabaseVersion"],[3,"Decoder"],[3,"LN_INCOMING_OFFER"],[6,"IntCounter"],[3,"LN_OUTPUT_OUTCOME_CANCEL_OUTGOING_CONTRACT"],[3,"LN_FUNDED_CONTRACT_INCOMING"],[3,"LN_FUNDED_CONTRACT_OUTGOING"],[3,"AMOUNTS_BUCKETS_SATS"],[15,"f64"],[3,"LN_FUNDED_CONTRACT_INCOMING_ACCOUNT_AMOUNTS_SATS"],[3,"Histogram"],[3,"LN_FUNDED_CONTRACT_OUTGOING_ACCOUNT_AMOUNTS_SATS"],[3,"ALL_METRICS"],[8,"Collector"],[15,"array"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"ServerModuleConsensusConfig"],[3,"ClientModuleConfig"],[3,"Error"],[4,"Result"],[3,"LightningClientConfig"],[3,"ContractId"],[3,"ContractAccount"],[4,"Option"],[3,"BTreeMap"],[3,"IncomingContractAccount"],[3,"Hash"],[3,"IncomingContractOffer"],[3,"ServerModuleInitArgs"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"PeerId"],[3,"Request"],[3,"LightningGatewayAnnouncement"],[3,"ModuleKind"],[3,"LightningConfig"],[3,"OutPoint"],[4,"LightningConsensusItem"],[3,"DynModuleConsensusItem"],[3,"DynInput"],[4,"LightningInput"],[4,"LightningOutput"],[3,"DynOutput"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[15,"slice"],[3,"TypeId"],[3,"PreimageDecryptionShare"],[3,"EncryptedPreimage"],[15,"bool"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"],[3,"ApiEndpointContext"]]},\
"fedimint_load_test_tool":{"doc":"","t":"NEDDRNDENENDDDNNNNNMLLLLLLLLMMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMLAMLLFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFFFFFFLLLFLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMMMMMFMMMMMMMMMMMMMMMFFFFFLLMFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLFMMMMMFFFFFFFFFFFFFFFFFF","n":["ClnLightningCli","Command","EventMetricComparison","EventMetricSummary","GATEWAY_CREATE_INVOICE","LnCircularLoadTest","LnCircularLoadTestArgs","LnCircularStrategy","LnCli","LnInvoiceGeneration","LoadTest","LoadTestArgs","MetricEvent","Opts","PartnerPingPong","SelfPayment","TestConnect","TestDownload","TwoGateways","archive_dir","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","avg_ms","avg_ms_gain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_create_invoice","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command_for_update","common","current","deserialize","deserialize","do_ln_circular_test_user_task","do_load_test_user_task","do_partner_ping_pong","do_self_payment","duration","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","generate_invoice_with","get_coordinator_client","get_db_path","get_gateway_id","get_notes_for_users","get_required_notes","get_user_client","get_users_clients","group_id","group_id","group_id","handle_metrics_summary","has_subcommand","initial_notes","initial_notes","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","invite_code","invite_code_or_fallback","invoice_amount","invoice_amount","invoices_file","invoices_per_user","ln_payment_sleep_secs","ln_payment_sleep_secs","main","max_ms","max_ms_gain","median_ms","median_ms_gain","metrics_json_output","min_ms","min_ms_gain","n","name","name","note_denomination","note_denomination","notes_per_user","notes_per_user","previous","print_coordinator_notes","reissue_initial_notes","run_ln_circular_load_test","run_load_test","run_two_gateways_strategy","serialize","serialize","strategy","test_connect_raw_client","test_download_config","test_duration_secs","timestamp_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","url_to_string_with_default_port","users","users","value_variants","value_variants","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_invoice_payment","duration_secs","invite_code","invite_code","limit_endpoints","timeout_secs","await_spend_notes_finish","build_client","cln_create_invoice","cln_pay_invoice","cln_wait_invoice_payment","do_spend_notes","gateway_pay_invoice","get_invite_code_cli","get_note_summary","get_notes_cli","lnd_create_invoice","lnd_pay_invoice","lnd_wait_invoice_payment","parse_gateway_id","reissue_notes","remint_denomination","switch_default_gateway","try_get_notes_cli"],"q":[[0,"fedimint_load_test_tool"],[251,"fedimint_load_test_tool::Command"],[256,"fedimint_load_test_tool::common"]],"d":["","","","","","Run a load test where many users in parallel will receive …","","","","","","","","","Two clients will pay to each other using the same gateway","The user will pay its own invoice","","","One gateway will pay/receive to/from the other, then they …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[8,0,0,0,0,9,0,0,8,0,9,0,0,0,12,12,9,9,12,7,7,10,11,7,10,11,9,9,13,16,7,8,9,10,11,12,4,13,16,7,8,9,10,11,12,4,13,16,0,7,8,9,10,11,12,4,13,7,8,9,10,11,12,4,13,7,7,7,0,16,13,16,0,0,0,0,4,13,16,8,12,4,13,16,16,7,8,9,10,11,12,4,13,16,7,9,10,11,7,9,10,11,7,8,9,10,11,12,4,13,10,10,0,0,0,0,0,0,0,7,10,11,0,9,10,11,7,8,9,10,11,12,4,13,16,7,7,8,8,9,9,10,10,11,11,12,12,4,4,13,13,16,16,10,11,0,10,11,10,10,10,11,0,13,16,13,16,7,13,16,13,4,13,10,11,10,11,16,0,0,0,0,0,13,16,11,0,0,11,13,7,8,9,10,11,12,4,13,8,12,16,7,8,9,10,11,12,4,13,16,7,8,9,10,11,12,4,13,16,7,8,9,10,11,12,4,13,16,7,9,10,11,7,9,10,11,0,7,13,8,12,7,8,9,10,11,12,4,13,16,0,53,53,54,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,3,[5,[4]]],6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[4,4],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],0,[[],1],0,0,[14,[[15,[13]]]],[14,[[15,[16]]]],[[17,2,[19,[18]],[21,[20]],22,22,3,12,[5,[4]]],6],[[17,2,[21,[20]],23,22,3,[21,[24]],[19,[8]],[5,[4]]],6],[[25,2,2,3,[5,[4]]],6],[[25,2,3,[5,[4]]],6],0,[26,[[15,[27,28]]]],[26,[[15,[27,28]]]],[[8,29],30],[[12,29],30],[[4,29],30],[[13,29],30],[[16,29],30],[[16,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[15,[7,32]]]],[31,[[15,[9,32]]]],[31,[[15,[10,32]]]],[31,[[15,[11,32]]]],[31,[[15,[7,32]]]],[31,[[15,[9,32]]]],[31,[[15,[10,32]]]],[31,[[15,[11,32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[19,[33]],[19,[18]]],6],[[[19,[33]]],[[19,[33]]]],[8,[[6,[17]]]],[[23,23,2,3],[[6,[[34,[23,[21,[20]]]]]]]],[[2,3,[5,[4]]],6],[[23,[19,[33]],[19,[18]],[19,[17]]],6],[[23,[19,[33]],[19,[18]],[19,[17]]],[[6,[[21,[2]]]]]],[[],[[19,[35]]]],[[],[[19,[35]]]],[[],[[19,[35]]]],[[7,[36,[4]]],6],[25,37],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],39],[[],39],[[],38],[[],39],[[],38],[[],39],[[],38],[[],39],[[],38],[[],39],[[],38],[[],38],[[],39],[[],39],[[],38],[[],38],[[],39],0,0,[[[19,[18]]],[[19,[18]]]],0,0,0,0,0,0,[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,6],[[[19,[20]],2,[5,[4]]],6],[[[19,[33]],23,[19,[18]],[19,[20]],22,22,23,3,3,12,[5,[4]]],[[6,[[21,[[40,[6]]]]]]]],[[[19,[33]],23,[19,[18]],[19,[20]],[19,[8]],23,22,[21,[24]],[19,[17]],23,3,3,[5,[4]]],[[6,[[21,[[40,[6]]]]]]]],[[25,8,3,[5,[4]],2],[[15,[41]]]],[[13,42],15],[[16,42],15],0,[[18,23,22,22,[19,[43]],[5,[4]]],[[6,[[21,[[40,[6]]]]]]]],[[18,23,[5,[4]]],[[6,[[21,[[40,[6]]]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[19,[44]]]],[12,[[19,[44]]]],[[],17],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[7,31],[[15,[32]]]],[[9,31],[[15,[32]]]],[[10,31],[[15,[32]]]],[[11,31],[[15,[32]]]],[[7,31],[[15,[32]]]],[[9,31],[[15,[32]]]],[[10,31],[[15,[32]]]],[[11,31],[[15,[32]]]],[46,17],0,0,[[],[[47,[8]]]],[[],[[47,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,25,2,48,[5,[4]],49],6],0,0,0,0,0,[[2,48],6],[[[19,[18]],[19,[33]]],6],[3,6],[24,6],[25,6],[[2,3],6],[[25,25,2,24,[5,[4]]],6],[[],[[6,[18]]]],[2,[[6,[50]]]],[3,[[6,[20]]]],[3,6],[24,6],[17,6],[25,[[6,[51,52]]]],[[2,20,[5,[4]]],6],[[2,3,23],6],[[2,25],6],[[3,43],[[6,[20]]]]],"c":[],"p":[[3,"Command"],[3,"ClientArc"],[3,"Amount"],[3,"MetricEvent"],[3,"UnboundedSender"],[6,"Result"],[3,"Opts"],[4,"LnInvoiceGeneration"],[4,"Command"],[3,"LoadTestArgs"],[3,"LnCircularLoadTestArgs"],[4,"LnCircularStrategy"],[3,"EventMetricSummary"],[8,"Deserializer"],[4,"Result"],[3,"EventMetricComparison"],[3,"String"],[3,"InviteCode"],[4,"Option"],[3,"OOBNotes"],[3,"Vec"],[3,"Duration"],[15,"u16"],[3,"Bolt11Invoice"],[15,"str"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"PathBuf"],[3,"HashMap"],[3,"Id"],[3,"UnboundedReceiver"],[15,"bool"],[3,"Request"],[3,"Request"],[6,"BoxFuture"],[3,"Error"],[8,"Serializer"],[15,"usize"],[3,"PossibleValue"],[3,"TypeId"],[3,"SafeUrl"],[15,"slice"],[3,"OperationId"],[3,"SystemTime"],[3,"TieredSummary"],[3,"PublicKey"],[4,"Error"],[13,"TestConnect"],[13,"TestDownload"]]},\
"fedimint_logging":{"doc":"","t":"RRRRRRRRRRRRRRRRRRRDLLLLLLLLMLLLLLMLMLM","n":["LOG_BLOCKCHAIN","LOG_CLIENT","LOG_CLIENT_BACKUP","LOG_CLIENT_NET_API","LOG_CLIENT_RECOVERY","LOG_CLIENT_RECOVERY_MINT","LOG_CONSENSUS","LOG_CORE","LOG_DB","LOG_DEVIMINT","LOG_ECASH_RECOVERY","LOG_NET","LOG_NET_API","LOG_NET_PEER","LOG_NET_PEER_DKG","LOG_TASK","LOG_TEST","LOG_TIMING","LOG_WALLET","TracingSetup","borrow","borrow_mut","default","from","init","into","into_request","tokio_console_bind","tokio_console_bind","try_from","try_into","type_id","vzip","with_chrome","with_chrome","with_file","with_file","with_jaeger","with_jaeger"],"q":[[0,"fedimint_logging"]],"d":["Constants for categorizing the logging type","","","","","","","","","","","","","","","","","","","Consolidates the setup of server tracing into a helper","","","","Returns the argument unchanged.","Initialize the logging, must be called for tracing to begin","Calls <code>U::from(self)</code>.","","Setup a console server for tokio logging …","","","","","","Setup telemetry through Chrome …","","","","Setup telemetry through Jaeger …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],[[]],[1,2],[[]],[[],3],[[1,[5,[4]]],1],0,[[],6],[[],6],[[],7],[[]],[[1,8],1],0,[[1,[5,[9]]],1],0,[[1,8],1],0],"c":[],"p":[[3,"TracingSetup"],[6,"Result"],[3,"Request"],[4,"SocketAddr"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"bool"],[3,"File"]]},\
"fedimint_metrics":{"doc":"","t":"IDGDLLLLLLLMLLKLLLLLKLLLLFLLOLLLLOLLLLLOCOOFLLLLLLLLLLL","n":["Encoder","Histogram","IntCounter","TextEncoder","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","collect","core","default","desc","encode","encode","encode_to_string","encode_utf8","fmt","fmt","format_type","format_type","from","from","from_ref","get_metrics","get_sample_count","get_sample_sum","histogram_opts","into","into","into_request","into_request","lazy_static","local","metric","new","observe","observe_closure_duration","opts","prometheus","register_histogram","register_int_counter","run_api_server","start_timer","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_opts"],"q":[[0,"fedimint_metrics"]],"d":["An interface for encoding metric families into an …","A <code>Metric</code> counts individual observations from an event or …","The integer version of <code>Counter</code>. Provides better …","An implementation of an <code>Encoder</code> that converts a …","","","","","","","","","","","<code>encode</code> converts a slice of MetricFamily proto messages …","","Converts metrics to <code>String</code>.","Appends metrics to a given <code>String</code> buffer.","","","<code>format_type</code> returns target format.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Return count of all samples.","Return accumulated sum of all samples.","Create a <code>HistogramOpts</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Return a <code>LocalHistogram</code> for single thread usage.","","Create a new text encoder.","Add a single observation to the <code>Histogram</code>.","Observe execution time of a closure, in second.","Create an <code>Opts</code>.","","Create a <code>Histogram</code> and registers to default registry.","Create an <code>IntCounter</code> and registers to default registry.","","Return a <code>HistogramTimer</code> to track a duration.","","","","","","","","","","<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options."],"i":[0,0,0,0,5,1,5,1,1,1,1,1,5,1,28,5,5,5,5,1,28,5,5,1,1,0,1,1,0,5,1,5,1,0,1,1,5,1,1,0,0,0,0,0,1,1,5,1,5,1,5,1,5,1,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[1,[[4,[2,3]]]],0,[[],5],[1,[[4,[6,3]]]],[[[7,[2]],8],[[10,[9]]]],[[5,[7,[2]],8],[[10,[9]]]],[[5,[7,[2]]],[[10,[11,9]]]],[[5,[7,[2]],11],[[10,[9]]]],[[5,12],[[10,[13]]]],[[1,12],[[10,[13]]]],[[],14],[5,14],[[]],[[]],[[]],[[]],[1,15],[1,16],0,[[]],[[]],[[],17],[[],17],0,[1,18],[1,19],[[],5],[[1,16]],[[1,20]],0,0,0,0,[[21,22],[[24,[23]]]],[1,25],[[]],[[],10],[[],10],[[],10],[[],10],[[],26],[[],26],[[]],[[]],[27,[[10,[1,9]]]]],"c":[],"p":[[3,"Histogram"],[3,"MetricFamily"],[3,"Global"],[3,"Vec"],[3,"TextEncoder"],[3,"Desc"],[15,"slice"],[8,"Write"],[4,"Error"],[4,"Result"],[3,"String"],[3,"Formatter"],[3,"Error"],[15,"str"],[15,"u64"],[15,"f64"],[3,"Request"],[3,"LocalHistogram"],[3,"Metric"],[8,"FnOnce"],[4,"SocketAddr"],[3,"TaskGroup"],[3,"TaskShutdownToken"],[6,"Result"],[3,"HistogramTimer"],[3,"TypeId"],[3,"HistogramOpts"],[8,"Encoder"]]},\
"fedimint_mint_client":{"doc":"","t":"DDNNRNNNNNNNNNDNNNNRRRRDDDEDEEEDDDEEDEEDDDDDNINDEDDNNNENDDNDEDNNNDDDNNNNNNNLMMMLLLLLLLLLLLLLLLALLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMLMALLALLLLMMLLMMLLLMMMKLLFLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLLFLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALLMMLLLLLLLLLLLLMMDDNNDDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLMMMLLLMLMMMMLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLEDNDDNDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDDNDDNNNEDDDDDNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDDDDDDENNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNDEDDDNNMLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLFFLLLFLLLLLLLLLLLLLLLLLLLLNRNNNNNNDDEDDDDEDRRNNNNMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLL","n":["BackupRequest","BlindNonce","Created","Created","DEFAULT_MAX_NOTES_PER_DENOMINATION","Default","Default","Default","Default","Default","Done","Failed","FederationIdPrefix","Input","InsufficientBalanceError","InvalidAmountTier","InvalidAmountTier","InvalidSignature","Issuing","KIND","LOG_TARGET","MINT_BACKUP_RESTORE_OPERATION_ID","MINT_E_CASH_TYPE_CHILD_ID","MintClientContext","MintClientInit","MintClientModule","MintClientStateMachines","MintCommonInit","MintConsensusItem","MintInput","MintInputError","MintInputV0","MintModuleTypes","MintOperationMeta","MintOperationMetaVariant","MintOutput","MintOutputBlindSignature","MintOutputError","MintOutputOutcome","MintOutputOutcomeV0","MintOutputV0","Nonce","Note","NoteIndex","Notes","NotesSelector","OOB","OOBNotes","OOBNotesData","OOBReissueTag","OOBSpendTag","Output","Refunded","Reissuance","ReissueExternalNotesState","Restore","SelectNotesWithAtleastAmount","SignedBackupRequest","SpendOOB","SpendOOBRefund","SpendOOBState","SpendableNote","SpentCoin","Success","UnknownInputVariant","UnknownMintInputVariantError","UnknownMintOutputOutcomeVariantError","UnknownMintOutputVariantError","UnknownOutputVariant","UserCanceledFailure","UserCanceledProcessing","UserCanceledSuccess","V0","V0","V0","advance","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_common","as_u64","await_output_finalized","await_primary_module_output","await_primary_module_output","await_restore_finished","await_spend_oob_refund","backup","backup","backup","blind_nonce","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_oob_payment_bc","cancel_oob_payment_bc","cfg","client_ctx","client_db","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","common","compare","compare","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_exact_output","create_input","create_input_from_notes","create_output","create_sufficient_input","create_sufficient_input","db","decoder","decoder","decoder","decoder","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dump_database","dump_database","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","engine","engine","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_meta","federation_id","federation_id_prefix","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_u64","get_all_spendable_notes","get_balance","get_balance","get_next_note_index","get_wallet_summary","handle_cli_command","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","init","init","input","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","leave","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","mint_decoder","mint_operation","module_kind","module_kind","new","new_ecash_note","new_note_secret","new_note_secret_static","new_v0","new_v0","new_v0","next","nonce","nonce","note","note","notes","notifier","oob","operation_id","operation_id","output","output_amount","output_amount","partial_cmp","partial_cmp","payload","peer_tbs_pks","prepare_plaintext_ecash_backup","reissue_external_notes","request","requested_amount","restore","restore","restore_inner","secp","secret","secret","select_notes","select_notes","select_notes","select_notes_from_stream","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","signature","signature","signature","source","source","spend_key","spend_key","spend_notes","spend_notes_oob","spend_notes_with_selector","spendable_notes_to_operation_id","subscribe_balance_changes","subscribe_balance_changes","subscribe_cancel_oob_payment","subscribe_reissue_external_notes","subscribe_spend_notes","supported_api_versions","supported_api_versions","supports_backup","supports_backup","supports_being_primary","supports_being_primary","tbs_pks","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_amount","total_amount","transaction_id","transitions","transitions","try_cancel_spend_notes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_triggered","validate_notes","variant","variant","variant","variant","verify","verify_valid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","wipe_all_spendable_notes","bytes","variant","bytes","variant","oob_notes","out_point","requested_amount","bytes","variant","bytes","variant","bytes","variant","Default","EcashBackup","EcashBackupV0","V0","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","into","into","into_dyn","into_request","into_request","new_empty","new_v0","next_note_idx","pending_notes","recovery","serialize","serialize","session_count","spendable_notes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bytes","variant","CompressedBlindedMessage","EcashRecoveryFinalState","Failed","InProgress","MintRestoreFailedState","MintRestoreInProgressState","MintRestoreStateMachine","MintRestoreStates","Success","add_next_pending_nonce_in_pending_pool","as_any","await_block","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","end_epoch","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","fill_initial_pending_nonces","finalize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_backup","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","gap_limit","handle_input","handle_output","handle_transaction","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_done","last_mined_nonce_idx","make_progress","next_epoch","next_note_idx","next_pending_note_idx","observe_nonce_idx_being_used","operation_id","operation_id","operation_id","partial_cmp","pending_nonces","pending_outputs","pub_key_shares","reason","serialize","serialize","spendable_notes","spendable_notes","start_epoch","state","tbs_pks","threshold","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unconfirmed_notes","vzip","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","NextECashNoteIndex","NextECashNoteIndexKey","NextECashNoteIndexKeyPrefix","Note","NoteKey","NoteKeyPrefix","amount","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nonce","nth","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","FeeConsensus","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigLocal","MintConfigPrivate","MintGenParams","MintGenParamsConsensus","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","denomination_base","denomination_base","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gen_denominations","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","max_notes_per_denomination","max_notes_per_denomination","new","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","MintOutputOutcomeKey","MintOutputOutcomePrefix","NonceKey","NonceKeyPrefix","NoteNonce","OutputOutcome","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Created","Error","MintInputCommon","MintInputStateCreated","MintInputStateError","MintInputStateMachine","MintInputStateRefund","MintInputStateRefundSuccess","MintInputStateSuccess","MintInputStates","Refund","RefundSuccess","Success","amount","as_any","await_refund_success","await_success","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","input_idx","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","refund","refund_txid","refund_txid","spendable_note","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transition_refund_success","transition_success","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Created","MintOOBStateMachine","MintOOBStates","MintOOBStatesCreated","MintOOBStatesTimeoutRefund","MintOOBStatesUserRefund","TimeoutRefund","UserRefund","amount","as_any","await_timeout_cancel","await_user_cancels","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","refund_txid","refund_txid","spendable_note","state","timeout","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_timeout_cancel","transition_user_cancel","transitions","transitions","transitions","try_cancel_oob_spend","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Aborted","BLINDING_KEY_CHILD_ID","Created","Failed","InvalidAmountTier","InvalidIssuanceId","InvalidSignature","InvalidSignatureAtIdx","MintOutputCommon","MintOutputStateMachine","MintOutputStates","MintOutputStatesAborted","MintOutputStatesCreated","MintOutputStatesFailed","MintOutputStatesSucceeded","NoteFinalizationError","NoteIssuanceRequest","RETRY_DELAY","SPEND_KEY_CHILD_ID","Succeeded","UnknownIssuance","UnknownOutputOutcomeVersion","WrongMintAnswer","amount","amount","as_any","await_outcome_ready","await_tx_rejected","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","error","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","issuance_request","new","nonce","operation_id","operation_id","operation_id","out_point","recover_blind_nonce","serialize","spend_key","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_outcome_ready","transition_tx_rejected","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_client"],[1078,"fedimint_mint_client::MintConsensusItem"],[1080,"fedimint_mint_client::MintInput"],[1082,"fedimint_mint_client::MintOperationMetaVariant"],[1085,"fedimint_mint_client::MintOutput"],[1087,"fedimint_mint_client::MintOutputOutcome"],[1089,"fedimint_mint_client::OOBNotesData"],[1091,"fedimint_mint_client::backup"],[1160,"fedimint_mint_client::backup::EcashBackup"],[1162,"fedimint_mint_client::backup::recovery"],[1348,"fedimint_mint_client::client_db"],[1484,"fedimint_mint_client::config"],[1695,"fedimint_mint_client::db"],[1944,"fedimint_mint_client::input"],[2173,"fedimint_mint_client::oob"],[2321,"fedimint_mint_client::output"]],"d":["","<code>Nonce</code> but blinded by the user key","The operation has been created and is waiting to be …","The e-cash has been selected and given to the caller","By default, the maximum notes per denomination when …","","","","","","The operation has been completed successfully.","Some error happened and the operation failed.","","","","","","","We are waiting for blind signatures to arrive but can …","","","","","","","The <code>MintClientModule</code> is responsible for handling e-cash …","","","The mint module currently doesn’t define any consensus …","","","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","An index used to deterministically derive <code>Note</code>s","","","","An encapsulation of <code>FederationId</code> and e-cash notes in the …","","","","","We tried to cancel the operation automatically after the …","","The high-level state of a reissue operation started with …","","Select notes with total amount of <em>at least</em> <code>request_amount</code>. …","","","","The high-level state of a raw e-cash spend operation …","A <code>Note</code> with associated secret key that allows to proof …","","We tried to cancel the operation automatically after the …","","","","","","The user-requested cancellation failed, the e-cash notes …","The user requested a cancellation of the operation, we are …","The user-requested cancellation was successful, we got all …","","","","","","","","","","","","","","","","","","Wait for the e-cash notes to be retrieved. If this is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Database keys used throughout the mint client module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mint input of at least <code>min_amount</code>.","Create a mint input from external, potentially untrusted …","Creates a mint output with exactly the given <code>amount</code>, …ase64 encode a set of e-cash notes for out-of-band …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode a set of out-of-band e-cash notes from a base64 …","","","","","","Returns the number of held e-cash notes per denomination","","","","","","","","","","","","","","","","","","","","","","","State machines for mint inputs","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We always keep track of an incrementing index in the …","Derive the note <code>DerivableSecret</code> from the Mint’s <code>secret</code> …","","","","","","","","","","","State machines for out-of-band transmitted e-cash notes","","","State machines for mint outputs","","","","","","","","Try to reissue e-cash notes received from a third party to …","","","","","","","","","Select notes from stream for requested_amount. The stream …","","Select notes with <code>requested_amount</code> using <code>notes_selector</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","Fetches and removes notes of <em>at least</em> amount <code>min_amount</code> …","","Same as <code>spend_notes</code> but allows different to select notes …","","","","","Subscribe to updates on the progress of a reissue …","Subscribe to updates on the progress of a raw e-cash spend …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","Try to cancel a spend operation started with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the given notes and return the total amount of …","","","","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Snapshot of a ecash state (notes)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","An empty backup with, like a one created by a newly …","","","","","","","","","","","","","","","","","","","","","","","Newtype over <code>BlindedMessage</code> to enable <code>Ord</code>","","Something went wrong, and restore failed","The restore has been started and is processing","","The state machine used for fast-forwarding backup from …","","State machine managing e-cash that has been taken out of …","Done","Add next nonce from <code>amount</code> tier to the …","","Fetch epochs in a given range and send them over <code>sender</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill each tier pool to the gap limit","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","The number of nonces we look-ahead when looking for mints …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","<code>LastECashNoteIndex</code> but tracked in flight. Basically max …","","","Note index to derive next note in a given amount tier","Tail of <code>pending</code>. <code>pending_notes</code> is filled by generating …","React to a valid pending nonce being tracked being used in …","","","","","Next nonces that we expect might soon get used. Once we …","Nonces that we track that are currently spendable.","Public key shares for each peer","","","","","","","","Aggregate public key for each amount tier","Threshold","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsigned notes","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum amount of change a client can request","","","","","The set of public keys for blind-signing all peers and note","","","","","","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","Transaction id and output index identifying an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine managing the e-cash redemption process …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The e-cash has been taken out of the wallet and we are …","","State machine managing e-cash that has been taken out of …","","","","The timeout of this out-of-band transaction was hit and we …","The user has triggered a refund.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction containing the issuance was rejected, we …","Child ID used to derive the blinding key from a note’s …","Issuance request was created, we are waiting for blind …","The transaction containing the issuance was accepted but …","","","","","","","State machine managing the e-cash issuance process related …","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","","Single <code>Note</code> issuance request to the mint.f","","Child ID used to derive the spend key from a note’s …","The issuance was completed successfully and the e-cash …","","","","","","","","","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the blind signatures received from the federation to …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Generate a request session for a single note and returns …","Return nonce of the e-cash note being requested","","","","","","","Spend key from which the note nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","","","","","","","","",""],"i":[0,0,34,35,0,17,22,27,30,33,34,34,33,48,0,39,42,39,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,48,0,0,0,0,48,35,43,0,48,0,0,43,0,0,0,39,35,39,0,0,0,42,35,35,35,22,27,30,1,25,29,37,17,22,27,30,39,42,5,48,44,1,5,5,5,5,5,0,5,5,29,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,5,45,5,5,0,17,17,18,19,20,21,22,22,24,25,27,27,28,29,30,30,32,33,34,35,36,37,38,39,39,42,42,43,44,45,46,48,48,49,1,17,18,19,20,21,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,45,46,48,49,1,20,1,0,20,1,0,55,17,18,19,20,21,22,24,25,27,28,29,30,32,33,36,38,39,42,48,49,1,55,17,18,19,20,21,22,24,25,27,28,29,30,32,33,36,38,39,42,48,49,1,55,17,18,19,20,21,22,24,25,27,28,29,30,32,33,36,38,39,42,48,49,1,5,5,5,5,5,5,5,5,5,0,80,44,44,5,1,55,70,17,18,19,20,21,22,24,25,27,28,29,30,32,34,35,36,37,38,43,49,1,44,44,17,22,27,30,39,42,203,204,22,27,30,17,18,19,20,21,22,24,25,27,28,29,30,34,35,36,38,39,42,48,49,1,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,24,24,24,24,25,25,25,25,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,34,34,34,34,35,35,35,35,36,36,36,36,38,38,38,38,39,39,39,39,42,42,42,42,48,48,48,48,49,49,49,49,1,1,1,1,17,22,27,30,39,42,48,55,70,17,18,19,20,21,22,24,25,27,28,29,30,32,34,35,36,37,38,43,49,1,37,5,32,55,70,17,17,18,19,20,21,80,22,22,24,24,25,25,27,27,28,28,29,29,30,30,32,32,33,34,35,36,36,37,38,38,39,39,42,42,43,44,5,45,46,46,48,49,1,1,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,39,42,42,43,44,5,45,46,48,49,1,55,17,18,19,20,20,21,22,24,25,27,28,29,30,32,33,36,38,39,42,48,49,1,17,18,19,20,21,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,45,46,48,49,1,32,1,5,5,5,5,5,5,5,17,18,19,20,21,22,24,25,27,28,29,30,36,38,39,42,49,55,44,44,0,5,5,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,17,22,27,30,39,42,48,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,5,22,27,30,45,5,44,44,32,5,5,5,22,27,30,1,49,19,49,25,32,5,0,48,48,0,5,5,20,1,55,45,5,5,70,46,5,5,5,5,5,45,114,113,5,0,55,70,17,18,19,20,21,22,24,25,27,28,29,30,32,34,35,36,37,38,43,49,1,55,70,19,49,39,42,19,49,5,5,5,0,5,5,45,5,5,44,44,5,5,5,5,45,55,55,17,18,19,20,20,21,22,24,25,27,28,29,30,32,33,36,38,39,42,48,49,1,44,20,17,18,19,20,21,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,45,46,48,49,1,17,22,24,25,27,28,29,30,32,36,38,39,42,46,1,32,46,14,48,48,5,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,14,5,24,28,36,37,19,70,202,14,113,203,55,204,70,17,18,19,20,21,80,22,24,25,27,28,29,30,32,33,34,35,36,37,38,39,42,43,44,5,45,46,48,49,1,5,5,5,205,205,206,206,207,208,207,209,209,210,210,211,211,107,0,0,107,107,107,111,107,111,107,107,111,107,111,107,111,107,111,107,111,107,111,107,111,107,107,107,107,111,111,111,111,107,107,111,107,111,107,111,107,111,107,111,107,111,107,107,111,111,107,111,111,0,107,111,111,111,107,111,107,111,107,111,107,111,107,111,107,111,212,212,0,0,140,140,0,0,0,0,140,135,139,135,141,137,135,138,139,140,141,137,135,138,139,140,137,135,138,139,139,140,137,135,138,139,140,137,137,137,135,138,139,140,137,135,138,139,140,137,135,138,139,140,137,135,135,137,135,138,139,140,137,137,137,137,135,135,135,135,138,138,138,138,139,139,139,139,140,140,140,140,139,137,135,135,135,141,137,135,138,139,140,141,137,137,135,138,139,140,135,137,135,138,139,140,137,135,138,139,140,135,135,135,135,141,137,135,138,139,140,141,137,135,138,139,140,135,135,135,135,141,135,135,139,139,139,137,135,135,135,138,137,135,141,135,135,139,135,135,137,135,138,139,140,137,135,138,139,140,135,139,139,141,137,135,138,139,140,141,137,135,138,139,140,141,137,135,138,139,140,141,141,137,135,138,139,140,0,0,147,0,0,147,0,0,149,148,147,148,149,150,151,152,147,148,149,150,151,152,147,148,149,150,151,152,147,148,149,150,151,152,149,150,151,152,149,150,151,152,149,150,151,152,149,151,147,147,149,150,151,152,147,148,149,150,151,152,149,149,150,151,151,152,147,148,149,150,151,152,148,148,147,148,149,150,151,152,148,147,148,149,150,151,152,147,148,148,148,148,149,148,149,151,148,149,149,150,150,151,151,152,152,147,148,149,150,151,152,147,147,148,149,150,151,152,147,148,149,150,151,152,147,148,149,150,151,152,147,148,149,150,151,152,0,0,0,0,0,0,0,0,159,153,154,155,156,157,158,159,161,153,154,155,156,157,158,159,161,153,154,155,156,157,158,159,159,161,153,154,155,156,157,158,159,161,153,155,156,157,159,161,156,157,159,161,156,157,159,161,153,161,154,154,153,154,155,156,157,158,159,161,159,159,161,159,159,159,159,161,161,161,161,159,153,154,155,156,157,158,159,161,157,159,153,154,155,156,157,158,159,159,161,153,154,155,156,157,158,159,161,156,157,159,161,153,155,153,154,155,156,157,158,159,161,154,159,161,153,154,155,156,157,158,159,161,159,153,154,155,156,157,158,159,161,157,153,155,157,159,154,161,161,157,159,155,153,154,155,156,157,158,159,161,159,158,156,157,159,161,159,153,154,155,156,157,158,159,161,153,155,159,153,154,155,156,157,158,159,161,153,154,155,156,157,158,159,161,153,154,155,156,157,158,159,161,157,153,154,155,156,157,158,159,161,0,0,0,164,0,0,168,168,164,0,0,0,0,0,0,164,164,168,168,165,164,165,166,171,167,172,168,173,169,174,170,164,165,166,171,167,172,168,173,169,174,170,164,165,166,167,168,169,170,164,165,166,167,168,169,170,166,171,167,172,168,173,169,174,170,166,171,167,172,168,173,169,174,170,166,171,167,172,168,173,169,174,170,170,170,166,170,166,166,166,166,170,170,170,170,166,167,168,169,170,164,164,166,171,167,172,168,173,169,174,170,164,165,166,171,167,172,168,173,169,174,170,166,166,171,167,167,172,168,168,173,169,169,174,170,164,165,166,167,168,169,170,166,165,164,165,166,171,167,172,168,173,169,174,170,165,164,165,166,171,167,172,168,173,169,174,170,164,165,165,165,165,165,166,167,168,169,170,165,170,166,166,171,171,167,167,172,172,168,168,173,173,169,169,174,174,170,164,165,166,167,168,169,170,164,164,165,166,171,167,172,168,173,169,174,170,164,165,166,171,167,172,168,173,169,174,170,164,165,166,171,167,172,168,173,169,174,170,164,165,166,171,167,172,168,173,169,174,170,177,177,0,0,0,0,0,0,0,0,177,177,177,179,178,180,179,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,177,175,178,178,179,180,181,182,183,177,175,178,179,180,181,182,183,178,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,177,177,177,177,175,175,175,175,178,178,178,178,179,179,179,179,180,180,180,180,181,181,181,181,182,182,182,182,183,183,183,183,178,182,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,175,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,178,178,175,179,180,183,179,178,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,180,179,178,178,179,180,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,175,177,175,178,179,180,181,182,183,177,175,178,179,180,181,182,183,186,0,0,0,0,0,186,186,188,187,0,0,186,187,188,189,190,186,187,188,189,190,186,187,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,186,186,186,187,187,187,187,188,188,188,188,189,189,189,189,190,190,190,190,187,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,187,187,187,189,190,188,187,188,186,187,188,189,190,186,187,188,189,190,0,0,187,187,188,0,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,186,187,188,189,190,193,0,193,193,200,200,200,200,0,0,0,0,0,0,0,0,0,0,0,193,200,200,200,195,198,194,195,195,192,193,191,194,195,196,197,198,192,200,193,191,194,195,196,197,198,192,200,193,191,194,194,195,196,197,198,192,193,191,194,195,196,197,198,192,194,193,191,194,195,196,197,198,192,193,191,194,195,196,197,198,192,193,191,194,195,196,197,198,192,192,193,191,194,195,196,197,198,192,193,193,193,193,191,191,191,191,194,194,194,194,195,195,195,195,196,196,196,196,197,197,197,197,198,198,198,198,192,192,192,192,194,192,197,192,193,191,194,195,196,197,198,192,200,200,193,191,194,195,196,197,198,192,200,193,191,194,195,196,197,198,192,193,191,194,195,196,197,198,192,193,191,194,195,196,197,198,192,200,193,191,194,195,196,197,198,192,200,195,192,192,194,194,191,191,192,192,192,194,193,191,194,195,196,197,198,192,193,191,194,195,196,197,198,192,200,195,195,194,194,195,193,191,194,195,196,197,198,192,200,193,191,194,195,196,197,198,192,200,193,191,194,195,196,197,198,192,200,0,193,191,194,195,196,197,198,192,200],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[1,4],[[5,6,7],[[9,[8]]]],[[5,6,7],[[12,[[11,[10]]]]]],[[6,7],[[12,[[11,[10,13]]]]]],[5,[[9,[8]]]],[[5,6],14],0,[5,[[12,[[11,[10]]]]]],[15,[[12,[[11,[10,13]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[15,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[15,23],[24,24],[25,25],[15,26],[27,27],[28,28],[29,29],[30,30],[15,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[15,40],[15,41],[42,42],[43,43],[44,44],[45,45],[46,46],[15,47],[48,48],[49,49],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,20],50],[[1,1],50],0,[[],50],[[],50],0,[[51,[54,[52,53]]],[[57,[55,56]]]],[[51,[54,[52,53]]],[[57,[17,56]]]],[[51,[54,[52,53]]],[[57,[18,56]]]],[[51,[54,[52,53]]],[[57,[19,56]]]],[[51,[54,[52,53]]],[[57,[20,56]]]],[[51,[54,[52,53]]],[[57,[21,56]]]],[[51,[54,[52,53]]],[[57,[22,56]]]],[[51,[54,[52,53]]],[[57,[24,56]]]],[[51,[54,[52,53]]],[[57,[25,56]]]],[[51,[54,[52,53]]],[[57,[27,56]]]],[[51,[54,[52,53]]],[[57,[28,56]]]],[[51,[54,[52,53]]],[[57,[29,56]]]],[[51,[54,[52,53]]],[[57,[30,56]]]],[[51,58],[[57,[32,56]]]],[[51,58],[[57,[33,56]]]],[[51,[54,[52,53]]],[[57,[36,56]]]],[[51,[54,[52,53]]],[[57,[38,56]]]],[[51,[54,[52,53]]],[[57,[39,56]]]],[[51,[54,[52,53]]],[[57,[42,56]]]],[[51,58],[[57,[48,56]]]],[[51,58],[[57,[49,56]]]],[[51,58],[[57,[1,56]]]],[[55,59],[[57,[60,61]]]],[[17,59],[[57,[60,61]]]],[[18,59],[[57,[60,61]]]],[[19,59],[[57,[60,61]]]],[[20,59],[[57,[60,61]]]],[[21,59],[[57,[60,61]]]],[[22,59],[[57,[60,61]]]],[[24,59],[[57,[60,61]]]],[[25,59],[[57,[60,61]]]],[[27,59],[[57,[60,61]]]],[[28,59],[[57,[60,61]]]],[[29,59],[[57,[60,61]]]],[[30,59],[[57,[60,61]]]],[[32,59],[[57,[60,61]]]],[[33,59],[[57,[60,61]]]],[[36,59],[[57,[60,61]]]],[[38,59],[[57,[60,61]]]],[[39,59],[[57,[60,61]]]],[[42,59],[[57,[60,61]]]],[[48,59],[[57,[60,61]]]],[[49,59],[[57,[60,61]]]],[[1,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[15,62],[5],[[15,[64,[63]],6,8],[[12,[[11,[10,13]]]]]],[[5,64,6,8],[[12,[[11,[10]]]]]],[[5,64,6,8],[[9,[[66,[[65,[22,48]]]]]]]],[[5,6,[67,[49]]],[[9,[[66,[[65,[22,48]]]]]]]],[[5,64,6,15,8],[[66,[[68,[27,48]]]]]],[[5,64,6,8],[[12,[[11,[10]]]]]],[[15,[64,[63]],6,8],[[12,[[11,[10,13]]]]]],0,[[],52],[[],52],[[],52],[[],52],[[],1],[69,[[57,[55]]]],[69,[[57,[70]]]],[69,[[57,[17]]]],[69,[[57,[18]]]],[69,[[57,[19]]]],[69,[[57,[20]]]],[69,[[57,[21]]]],[69,[[57,[22]]]],[69,[[57,[24]]]],[69,[[57,[25]]]],[69,[[57,[27]]]],[69,[[57,[28]]]],[69,[[57,[29]]]],[69,[[57,[30]]]],[69,[[57,[32]]]],[69,[[57,[34]]]],[69,[[57,[35]]]],[69,[[57,[36]]]],[69,[[57,[37]]]],[69,[[57,[38]]]],[69,[[57,[43]]]],[69,[[57,[49]]]],[69,[[57,[1]]]],[[[64,[63]],[66,[71,13]]],[[12,[[11,[10,13]]]]]],[[44,64,[66,[71]]],[[12,[[11,[10]]]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],72],[[],72],[22,[[57,[25,24]]]],[27,[[57,[29,28]]]],[30,[[57,[38,36]]]],[[17,17],73],[[18,18],73],[[19,19],73],[[20,20],73],[[21,21],73],[[22,22],73],[[24,24],73],[[25,25],73],[[27,27],73],[[28,28],73],[[29,29],73],[[30,30],73],[[34,34],73],[[35,35],73],[[36,36],73],[[38,38],73],[[39,39],73],[[42,42],73],[[48,48],73],[[49,49],73],[[1,1],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[16,73],[23,73],[26,73],[31,73],[40,73],[41,73],[47,73],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],0,0,[32,77],[[55,78],[[57,[79]]]],[[70,78],[[57,[79]]]],[[17,78],[[57,[79]]]],[[17,78],[[57,[79]]]],[[18,78],[[57,[79]]]],[[19,78],[[57,[79]]]],[[20,78],[[57,[79]]]],[[21,78],[[57,[79]]]],[[80,78],[[57,[79]]]],[[22,78],[[57,[79]]]],[[22,78],[[57,[79]]]],[[24,78],[[57,[79]]]],[[24,78],[[57,[79]]]],[[25,78],[[57,[79]]]],[[25,78],[[57,[79]]]],[[27,78],[[57,[79]]]],[[27,78],[[57,[79]]]],[[28,78],[[57,[79]]]],[[28,78],[[57,[79]]]],[[29,78],[[57,[79]]]],[[29,78],[[57,[79]]]],[[30,78],[[57,[79]]]],[[30,78],[[57,[79]]]],[[32,78],81],[[32,78],81],[[33,78],81],[[34,78],81],[[35,78],81],[[36,78],[[57,[79]]]],[[36,78],[[57,[79]]]],[[37,78],81],[[38,78],[[57,[79]]]],[[38,78],[[57,[79]]]],[[39,78],[[57,[79]]]],[[39,78],[[57,[79]]]],[[42,78],[[57,[79]]]],[[42,78],[[57,[79]]]],[[43,78],81],[[44,78],81],[[5,78],81],[[45,78],81],[[46,78],81],[[46,78],81],[[48,78],81],[[49,78],81],[[1,78],81],[[1,78],81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,39],[[]],[[]],[28,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]]],20],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,[[57,[32]]]],[4,1],[64,[[67,[49]]]],[[5,64],[[12,[[11,[10]]]]]],[[15,[64,[63]]],[[12,[[11,[10,13]]]]]],[[5,64,8],1],[[5,64],86],[[5,[83,[87]]],[[12,[[11,[10]]]]]],[[[83,[87]]],[[12,[[11,[10,13]]]]]],[[17,88]],[[18,88]],[[19,88]],[[20,88]],[[21,88]],[[22,88]],[[24,88]],[[25,88]],[[27,88]],[[28,88]],[[29,88]],[[30,88]],[[36,88]],[[38,88]],[[39,88]],[[42,88]],[[49,88]],0,[[44,[89,[44]]],[[12,[[11,[10]]]]]],[[90,91,92,93,15,94,95,[97,[96]],98],[[12,[[11,[10,13]]]]]],0,[23,[[100,[99]]]],[5,[[100,[99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,15]],[[22,15]],[[27,15]],[[30,15]],[[39,15]],[[42,15]],[[48,101]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[5,64],[[12,[[11,[10]]]]]],[22,[[100,[25]]]],[27,[[100,[29]]]],[30,[[100,[38]]]],0,[[5,6],[[9,[103]]]],[[],104],[[],104],[[77,[67,[49]]],32],[[5,8,64]],[[5,8,64],95],[[95,8,1],95],[[8,19],22],[[8,21],27],[105,30],[1,1],[49,20],0,[49,19],0,[32,[[67,[49]]]],0,0,[48,6],[[],6],0,[26,[[100,[99]]]],[5,[[100,[99]]]],[[20,20],[[100,[50]]]],[[1,1],[[100,[50]]]],0,0,[[5,[106,[5]]],[[9,[107]]]],[[5,32,[0,[108,109]]],[[9,[6]]]],0,0,[[5,[100,[107]]],[[12,[[11,[10]]]]]],[[15,[100,[110]]],[[12,[[11,[10,13]]]]]],[[5,[106,[5]],[100,[111]]],9],0,0,0,[[[0,[112,109]],8],[[12,[[11,[10]]]]]],[[113,[0,[112,109]],8],[[12,[[11,[10]]]]]],[[64,[114,[49]],8],[[9,[[67,[49]]]]]],[[112,8],[[57,[67,46]]]],[[55,115],57],[[70,115],57],[[17,115],57],[[18,115],57],[[19,115],57],[[20,115],57],[[21,115],57],[[22,115],57],[[24,115],57],[[25,115],57],[[27,115],57],[[28,115],57],[[29,115],57],[[30,115],57],[[32,115],57],[[34,115],57],[[35,115],57],[[36,115],57],[[37,115],57],[[38,115],57],[[43,115],57],[[49,115],57],[[1,115],57],[[55,116],[[57,[70,117]]]],0,0,0,[39,[[100,[118]]]],[42,[[100,[118]]]],[19,119],0,[[5,8,120,[0,[108,109]]],9],[[5,64,[114,[49]],8,120],9],[[5,[114,[49]],8,120,[0,[108,109]]],9],[[[67,[49]]],6],[[],[[12,[[11,[10,13]]]]]],[5,[[12,[[11,[10]]]]]],[45,[[121,[6]]]],[[5,6],[[9,[[122,[34]]]]]],[[5,6],[[9,[[122,[35]]]]]],[[],123],[44,123],[5,73],[[],73],[5,73],[[],73],0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[20,[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],124],[20,125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[32,8],0,0,[62,[[66,[[126,[47]],13]]]],[[48,96],[[66,[[126,[48]]]]]],[[5,6]],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],0,[[5,32],[[9,[8]]]],0,0,0,0,[[19,128],73],[[70,[131,[[0,[129,130]]]]],[[57,[55,132]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[64,[63]],15,[133,[96]]],[[12,[[11,[10,13]]]]]],[[5,64,101,[133,[96]]],[[12,[[11,[10]]]]]],[64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[]],[[]],[[]],[[]],[107,107],[15,110],[111,111],[[]],[[]],[[51,58],[[57,[107,56]]]],[[51,58],[[57,[111,56]]]],[[107,59],[[57,[60,61]]]],[[111,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[69,[[57,[107]]]],[69,[[57,[111]]]],[[107,107],73],[[111,111],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[110,73],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[[107,78],81],[[111,78],81],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[107,101]],[[],102],[[],102],[[],111],[[[67,[49]],66,4,[134,[1]]],107],0,0,0,[[107,115],57],[[111,115],57],0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[135,8,95]],[[],2],[[98,58,4],136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[135,135],[138,138],[139,139],[15,47],[140,140],[[]],[[]],[[]],[[]],[[]],[[137,137],50],[[],50],[[51,58],[[57,[137,56]]]],[[51,58],[[57,[135,56]]]],[[51,58],[[57,[138,56]]]],[[51,58],[[57,[139,56]]]],[[51,58],[[57,[140,56]]]],[[137,59],[[57,[60,61]]]],[[135,59],[[57,[60,61]]]],[[138,59],[[57,[60,61]]]],[[139,59],[[57,[60,61]]]],[[140,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[69,[[57,[137]]]],[69,[[57,[135]]]],0,[[137,137],73],[[135,135],73],[[138,138],73],[[139,139],73],[[140,140],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[47,73],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[[135,8,95]],[135,141],[[141,78],81],[[137,78],81],[[135,78],81],[[138,78],81],[[139,78],81],[[140,78],81],[[]],[[]],[142,137],[[]],[[]],[[]],[[]],[[4,111,4,[134,[128]],[145,[143,[134,[144]]]],95],135],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],0,[[135,22]],[[135,7,27,95]],[[135,146,95]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[135,73],0,[[135,98,58,95],135],0,0,0,[[135,8,1,95]],[139,6],[[],6],0,[[137,137],[[100,[50]]]],0,0,0,0,[[137,115],57],[[135,115],57],0,0,0,0,0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[]],[[]],[[]],[[135,6,45,96],[[66,[[126,[139]]]]]],[62,[[66,[[126,[47]],13]]]],[139,[[66,[[126,[139]]]]]],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[[]],[[]],[[]],[[]],[[]],[[]],[[51,58],[[57,[149,56]]]],[[51,58],[[57,[150,56]]]],[[51,58],[[57,[151,56]]]],[[51,58],[[57,[152,56]]]],[[149,59],[[57,[60,61]]]],[[150,59],[[57,[60,61]]]],[[151,59],[[57,[60,61]]]],[[152,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[[147,78],81],[[147,78],81],[[149,78],81],[[150,78],81],[[151,78],81],[[152,78],81],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[148,60],[[100,[147]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],148],[148,60],0,[148,100],[148,100],0,[[148,60],100],[[149,115],57],[[151,115],57],[148],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],71],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[15,160],[161,161],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[51,[54,[52,53]]],[[57,[156,56]]]],[[51,[54,[52,53]]],[[57,[157,56]]]],[[51,[54,[52,53]]],[[57,[159,56]]]],[[51,[54,[52,53]]],[[57,[161,56]]]],[[156,59],[[57,[60,61]]]],[[157,59],[[57,[60,61]]]],[[159,59],[[57,[60,61]]]],[[161,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[[],153],[[],161],[154,15],0,[69,[[57,[153]]]],[69,[[57,[154]]]],[69,[[57,[155]]]],[69,[[57,[156]]]],[69,[[57,[157]]]],[69,[[57,[158]]]],[69,[[57,[159]]]],[69,[[57,[161]]]],[[],4],[[159,159],73],[[161,161],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[160,73],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],0,0,[[153,78],[[57,[79]]]],[[154,78],[[57,[79]]]],[[155,78],[[57,[79]]]],[[156,78],[[57,[79]]]],[[157,78],[[57,[79]]]],[[158,78],[[57,[79]]]],[[159,78],[[57,[79]]]],[[159,78],[[57,[79]]]],[[161,78],[[57,[79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[],153],[[],155],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,[[66,[8,13]]]],[[159,88]],[[161,88]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[159,15]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[157,104],0,0,0,0,[15,154],0,0,0,0,0,[[153,115],57],[[154,115],57],[[155,115],57],[[156,115],57],[[157,115],57],[[158,115],57],[[159,115],57],[[161,115],57],0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[100,[162]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153],[155],[[],71],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[157,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,[54,[52,53]]],[[57,[166,56]]]],[[51,[54,[52,53]]],[[57,[171,56]]]],[[51,[54,[52,53]]],[[57,[167,56]]]],[[51,[54,[52,53]]],[[57,[172,56]]]],[[51,[54,[52,53]]],[[57,[168,56]]]],[[51,[54,[52,53]]],[[57,[173,56]]]],[[51,[54,[52,53]]],[[57,[169,56]]]],[[51,[54,[52,53]]],[[57,[174,56]]]],[[51,[54,[52,53]]],[[57,[170,56]]]],[[166,59],[[57,[60,61]]]],[[171,59],[[57,[60,61]]]],[[167,59],[[57,[60,61]]]],[[172,59],[[57,[60,61]]]],[[168,59],[[57,[60,61]]]],[[173,59],[[57,[60,61]]]],[[169,59],[[57,[60,61]]]],[[174,59],[[57,[60,61]]]],[[170,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],0,[69,[[57,[170]]]],[[166,166],73],[[170,170],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[74,[[57,[75,76]]]],[[164,78],[[57,[79]]]],[[164,78],[[57,[79]]]],[[166,78],[[57,[79]]]],[[171,78],[[57,[79]]]],[[167,78],[[57,[79]]]],[[172,78],[[57,[79]]]],[[168,78],[[57,[79]]]],[[173,78],[[57,[79]]]],[[169,78],[[57,[79]]]],[[174,78],[[57,[79]]]],[[170,78],[[57,[79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[166,88]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],165],[165,60],0,[165,100],[165,100],[[165,60],100],[[166,115],57],[[167,115],57],[[168,115],57],[[169,115],57],[[170,115],57],[165],0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],71],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[175,96,176],[[57,[71]]]],[[175,96],[[57,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177,177],[175,175],[15,47],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[51,58],[[57,[177,56]]]],[[51,58],[[57,[175,56]]]],[[51,58],[[57,[178,56]]]],[[51,58],[[57,[179,56]]]],[[51,58],[[57,[180,56]]]],[[51,58],[[57,[181,56]]]],[[51,58],[[57,[182,56]]]],[[51,58],[[57,[183,56]]]],[[177,59],[[57,[60,61]]]],[[175,59],[[57,[60,61]]]],[[178,59],[[57,[60,61]]]],[[179,59],[[57,[60,61]]]],[[180,59],[[57,[60,61]]]],[[181,59],[[57,[60,61]]]],[[182,59],[[57,[60,61]]]],[[183,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[[177,177],73],[[175,175],73],[[178,178],73],[[179,179],73],[[180,180],73],[[181,181],73],[[182,182],73],[[183,183],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[47,73],0,[[177,78],81],[[175,78],81],[[178,78],81],[[179,78],81],[[180,78],81],[[181,78],81],[[182,78],81],[[183,78],81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[178,6],[[],6],0,[[184,178,96],178],0,0,0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[71]],178],178],[[[57,[71]],178,184,96],178],[62,[[66,[[126,[47]],13]]]],[178,[[66,[[126,[178]]]]]],[[179,175,96],[[66,[[126,[178]]]]]],[[180,175,96],[[66,[[126,[178]]]]]],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],0,[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],2],[185],[[6,[121,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[186,186],[15,47],[187,187],[188,188],[189,189],[190,190],[[]],[[]],[[]],[[]],[[]],[[51,58],[[57,[186,56]]]],[[51,58],[[57,[187,56]]]],[[51,58],[[57,[188,56]]]],[[51,58],[[57,[189,56]]]],[[51,58],[[57,[190,56]]]],[[186,59],[[57,[60,61]]]],[[187,59],[[57,[60,61]]]],[[188,59],[[57,[60,61]]]],[[189,59],[[57,[60,61]]]],[[190,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[[186,186],73],[[187,187],73],[[188,188],73],[[189,189],73],[[190,190],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[47,73],[[186,78],81],[[187,78],81],[[188,78],81],[[189,78],81],[[190,78],81],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[187,6],[[],6],0,0,0,0,0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[]],[[]],[[]],[[187,184,96],187],[[187,184,96],187],[187,[[66,[[126,[187]]]]]],[62,[[66,[[126,[47]],13]]]],[[188,6,45,96],[[66,[[126,[187]]]]]],[[184,6,8,49,96],176],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[96,191,52,8,192,[145,[143,[134,[144]]]]],[[57,[[145,[143,30]],71]]]],[[96,191]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[193,193],[191,191],[194,194],[15,47],[195,195],[196,196],[197,197],[198,198],[192,192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[51,58],[[57,[193,56]]]],[[51,58],[[57,[191,56]]]],[[51,58],[[57,[194,56]]]],[[51,58],[[57,[195,56]]]],[[51,58],[[57,[196,56]]]],[[51,58],[[57,[197,56]]]],[[51,58],[[57,[198,56]]]],[[51,58],[[57,[192,56]]]],[[193,59],[[57,[60,61]]]],[[191,59],[[57,[60,61]]]],[[194,59],[[57,[60,61]]]],[[195,59],[[57,[60,61]]]],[[196,59],[[57,[60,61]]]],[[197,59],[[57,[60,61]]]],[[198,59],[[57,[60,61]]]],[[192,59],[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[59,[[57,[60,61]]]],[69,[[57,[192]]]],[[193,193],73],[[191,191],73],[[194,194],73],[[195,195],73],[[196,196],73],[[197,197],73],[[198,198],73],[[192,192],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[47,73],[74,[[57,[75,76]]]],0,[[192,199,128],[[57,[49,200]]]],[[193,78],81],[[191,78],81],[[194,78],81],[[195,78],81],[[196,78],81],[[197,78],81],[[198,78],81],[[192,78],81],[[200,78],81],[[200,78],81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[[83,[82]],[54,[52,53]]],[[57,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],0,[[[131,[129]],95]],[192,20],[[],6],[194,6],0,0,[192,21],[[192,115],57],0,0,[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[],[[66,[82,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],71],[[184,[57,[[145,[143,30]],71]],194,[134,[128]]],194],[194,194],[194,[[66,[[126,[194]]]]]],[62,[[66,[[126,[47]],13]]]],[[195,45,96,191],[[66,[[126,[194]]]]]],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[143,201,8,192,52,[145,[143,[134,[144]]]]],[[9,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"NoteIndex"],[8,"Any"],[8,"IDynCommonModuleInit"],[15,"u64"],[3,"MintClientModule"],[3,"OperationId"],[3,"OutPoint"],[3,"Amount"],[6,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Global"],[3,"SpendOOBRefund"],[15,"u16"],[3,"DynModuleConsensusItem"],[4,"MintConsensusItem"],[3,"MintOutputBlindSignature"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[4,"MintInput"],[3,"DynInput"],[3,"UnknownMintInputVariantError"],[3,"MintInputV0"],[3,"DynOutput"],[4,"MintOutput"],[3,"UnknownMintOutputVariantError"],[3,"MintOutputV0"],[4,"MintOutputOutcome"],[3,"DynOutputOutcome"],[3,"OOBNotes"],[4,"OOBNotesData"],[4,"ReissueExternalNotesState"],[4,"SpendOOBState"],[3,"UnknownMintOutputOutcomeVariantError"],[3,"MintOperationMeta"],[3,"MintOutputOutcomeV0"],[4,"MintInputError"],[3,"DynInputError"],[3,"DynOutputError"],[4,"MintOutputError"],[4,"MintOperationMetaVariant"],[3,"MintClientInit"],[3,"MintClientContext"],[3,"InsufficientBalanceError"],[3,"DynState"],[4,"MintClientStateMachines"],[3,"SpendableNote"],[4,"Ordering"],[8,"Read"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[3,"BackupRequest"],[3,"DecodeError"],[4,"Result"],[6,"ModuleDecoderRegistry"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DynContext"],[3,"NonCommittable"],[3,"DatabaseTransaction"],[3,"ClientInput"],[3,"Vec"],[3,"TieredMulti"],[3,"ClientOutput"],[8,"Deserializer"],[3,"SignedBackupRequest"],[3,"String"],[3,"HashEngine"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"FederationIdPrefix"],[3,"Formatter"],[3,"Error"],[3,"MintCommonInit"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[15,"str"],[3,"TieredSummary"],[3,"OsString"],[8,"Hasher"],[3,"ClientModuleInitArgs"],[3,"FinalClient"],[3,"FederationId"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"DynGlobalClientContext"],[3,"Notifier"],[3,"DynGlobalApi"],[3,"TransactionItemAmount"],[4,"Option"],[6,"ModuleInstanceId"],[3,"Request"],[3,"OperationLogEntry"],[3,"ModuleKind"],[3,"BlindedSignatureShare"],[3,"ClientDbTxContext"],[4,"EcashBackup"],[8,"Serialize"],[8,"Send"],[3,"DynModuleBackup"],[3,"EcashBackupV0"],[8,"Stream"],[3,"SelectNotesWithAtleastAmount"],[8,"NotesSelector"],[8,"Serializer"],[3,"KeyPair"],[3,"Error"],[8,"Error"],[3,"PublicKey"],[3,"Duration"],[3,"Receiver"],[4,"UpdateStreamOrOutcome"],[3,"MultiApiVersion"],[3,"DynCommonModuleInit"],[3,"Message"],[3,"StateTransition"],[3,"TypeId"],[3,"AggregatePublicKey"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[4,"Error"],[3,"Executor"],[3,"Tiered"],[3,"MintRestoreInProgressState"],[3,"SessionOutcome"],[3,"CompressedBlindedMessage"],[3,"MintRestoreFailedState"],[3,"MintRestoreStateMachine"],[4,"MintRestoreStates"],[3,"EcashRecoveryFinalState"],[3,"BlindedMessage"],[3,"PeerId"],[3,"PublicKeyShare"],[3,"BTreeMap"],[3,"Transaction"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NoteKey"],[3,"NoteKeyPrefix"],[3,"NextECashNoteIndexKey"],[3,"NextECashNoteIndexKeyPrefix"],[3,"MintGenParams"],[3,"MintGenParamsConsensus"],[3,"MintConfig"],[3,"MintConfigLocal"],[3,"MintConfigConsensus"],[3,"MintConfigPrivate"],[3,"MintClientConfig"],[3,"DynClientConfig"],[3,"FeeConsensus"],[4,"Value"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"MintOutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"ECashUserBackupSnapshot"],[3,"NonceKeyPrefix"],[3,"MintOutputOutcomePrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"],[3,"MintInputCommon"],[3,"TransactionId"],[4,"MintInputStates"],[3,"MintInputStateMachine"],[3,"MintInputStateCreated"],[3,"MintInputStateRefund"],[3,"MintInputStateSuccess"],[3,"MintInputStateError"],[3,"MintInputStateRefundSuccess"],[3,"ClientSMDatabaseTransaction"],[3,"SystemTime"],[4,"MintOOBStates"],[3,"MintOOBStateMachine"],[3,"MintOOBStatesCreated"],[3,"MintOOBStatesUserRefund"],[3,"MintOOBStatesTimeoutRefund"],[3,"MintOutputCommon"],[3,"NoteIssuanceRequest"],[4,"MintOutputStates"],[3,"MintOutputStateMachine"],[3,"MintOutputStatesCreated"],[3,"MintOutputStatesAborted"],[3,"MintOutputStatesFailed"],[3,"MintOutputStatesSucceeded"],[3,"BlindedSignature"],[4,"NoteFinalizationError"],[6,"SerdeOutputOutcome"],[3,"MintModuleTypes"],[3,"OOBSpendTag"],[3,"OOBReissueTag"],[13,"Default"],[13,"Default"],[13,"SpendOOB"],[13,"Reissuance"],[13,"Default"],[13,"Default"],[13,"Default"],[13,"Default"]]},\
"fedimint_mint_common":{"doc":"","t":"CDRRNNNNNNNRDEEEDDEDEEDDDDCNNDDDNNNNMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLMMMMMMMMDDLLLLLLLLLLLLLLLLLMLLLLMMLLLMMLLLLLLLLLLDRDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDDNDDNNNEDDDDDNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BackupRequest","BlindNonce","CONSENSUS_VERSION","DEFAULT_MAX_NOTES_PER_DENOMINATION","Default","Default","Default","Default","InvalidAmountTier","InvalidAmountTier","InvalidSignature","KIND","MintCommonInit","MintConsensusItem","MintInput","MintInputError","MintInputV0","MintModuleTypes","MintOutput","MintOutputBlindSignature","MintOutputError","MintOutputOutcome","MintOutputOutcomeV0","MintOutputV0","Nonce","Note","SignedBackupRequest","SpentCoin","UnknownInputVariant","UnknownMintInputVariantError","UnknownMintOutputOutcomeVariantError","UnknownMintOutputVariantError","UnknownOutputVariant","V0","V0","V0","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","blind_nonce","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","common","compare","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","db","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","new_v0","new_v0","new_v0","nonce","note","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","source","source","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant","variant","variant","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bytes","variant","bytes","variant","bytes","variant","bytes","variant","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","deserialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","FeeConsensus","MAX_DENOMINATION_SIZE","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigLocal","MintConfigPrivate","MintGenParams","MintGenParamsConsensus","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","denomination_base","denomination_base","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gen_denominations","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","max_notes_per_denomination","max_notes_per_denomination","new","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","MintOutputOutcomeKey","MintOutputOutcomePrefix","NonceKey","NonceKeyPrefix","NoteNonce","OutputOutcome","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_common"],[585,"fedimint_mint_common::MintConsensusItem"],[587,"fedimint_mint_common::MintInput"],[589,"fedimint_mint_common::MintOutput"],[591,"fedimint_mint_common::MintOutputOutcome"],[593,"fedimint_mint_common::common"],[634,"fedimint_mint_common::config"],[846,"fedimint_mint_common::db"]],"d":["","<code>Nonce</code> but blinded by the user key","","By default, the maximum notes per denomination when …","","","","","","","","","","The mint module currently doesn’t define any consensus …","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","","","","Unique ID of a mint note.","An verifiable one time use IOU from the minteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum amount of change a client can request","","","","","The set of public keys for blind-signing all peers and note","","","","","","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","Transaction id and output index identifying an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,2,10,13,17,22,24,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,24,10,13,17,12,16,2,10,13,17,22,24,16,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,2,2,5,6,7,8,10,10,11,12,13,13,15,16,17,17,19,20,22,22,24,24,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,7,0,7,0,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,0,42,2,5,6,7,8,10,11,12,13,15,16,17,19,20,2,10,13,17,22,24,10,13,17,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,2,2,2,2,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,15,15,15,15,16,16,16,16,17,17,17,17,19,19,19,19,20,20,20,20,22,22,22,22,24,24,24,24,2,10,13,17,22,24,2,5,6,7,8,10,11,12,13,15,16,17,19,20,2,2,5,6,7,8,42,10,10,11,11,12,12,13,13,15,15,16,16,17,17,19,19,20,20,22,22,24,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,22,24,24,2,5,6,7,7,8,10,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,2,10,13,17,22,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,10,13,17,10,13,17,6,12,7,2,5,6,7,8,10,11,12,13,15,16,17,19,20,6,22,24,6,2,5,6,7,7,8,10,11,12,13,15,16,17,19,20,22,24,7,2,5,6,7,8,10,11,12,13,15,16,17,19,20,22,24,2,10,11,12,13,15,16,17,19,20,22,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,11,15,19,6,95,2,5,6,7,8,42,10,11,12,13,15,16,17,19,20,22,24,96,96,97,97,98,98,99,99,0,0,63,64,63,64,63,63,63,63,64,63,64,63,64,63,64,63,63,63,63,64,63,64,63,64,63,64,63,64,63,63,63,64,63,64,63,64,64,63,64,0,0,0,0,0,0,0,0,0,79,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,79,80,72,73,74,75,76,77,79,80,72,74,75,76,79,80,75,76,79,80,75,76,79,80,72,80,73,73,72,73,74,75,76,77,79,80,79,79,80,79,79,79,79,80,80,80,80,79,72,73,74,75,76,77,79,80,76,79,72,73,74,75,76,77,79,79,80,72,73,74,75,76,77,79,80,75,76,79,80,72,74,72,73,74,75,76,77,79,80,73,79,80,72,73,74,75,76,77,79,80,79,72,73,74,75,76,77,79,80,76,72,74,76,79,73,80,80,76,79,74,72,73,74,75,76,77,79,80,79,77,75,76,79,80,79,72,73,74,75,76,77,79,80,72,74,79,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,76,72,73,74,75,76,77,79,80,0,0,0,84,0,0,88,88,84,0,0,0,0,0,0,84,84,88,88,85,84,85,86,91,87,92,88,93,89,94,90,84,85,86,91,87,92,88,93,89,94,90,84,85,86,87,88,89,90,84,85,86,87,88,89,90,86,91,87,92,88,93,89,94,90,86,91,87,92,88,93,89,94,90,86,91,87,92,88,93,89,94,90,90,90,86,90,86,86,86,86,90,90,90,90,86,87,88,89,90,84,84,86,91,87,92,88,93,89,94,90,84,85,86,91,87,92,88,93,89,94,90,86,86,91,87,87,92,88,88,93,89,89,94,90,84,85,86,87,88,89,90,85,86,85,84,85,86,91,87,92,88,93,89,94,90,85,84,85,86,91,87,92,88,93,89,94,90,84,85,85,85,85,85,86,87,88,89,90,85,90,86,86,91,91,87,87,92,92,88,88,93,93,89,89,94,94,90,84,85,86,87,88,89,90,84,84,85,86,91,87,92,88,93,89,94,90,84,85,86,91,87,92,88,93,89,94,90,84,85,86,91,87,92,88,93,89,94,90,84,85,86,91,87,92,88,93,89,94,90],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,4],[5,5],[6,6],[7,7],[8,8],[3,9],[10,10],[11,11],[12,12],[13,13],[3,14],[15,15],[16,16],[17,17],[3,18],[19,19],[20,20],[3,21],[22,22],[3,23],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],25],0,[[],25],0,[[26,27],[[29,[2,28]]]],[[26,27],[[29,[5,28]]]],[[26,27],[[29,[6,28]]]],[[26,27],[[29,[7,28]]]],[[26,27],[[29,[8,28]]]],[[26,27],[[29,[10,28]]]],[[26,27],[[29,[11,28]]]],[[26,27],[[29,[12,28]]]],[[26,27],[[29,[13,28]]]],[[26,27],[[29,[15,28]]]],[[26,27],[[29,[16,28]]]],[[26,27],[[29,[17,28]]]],[[26,27],[[29,[19,28]]]],[[26,27],[[29,[20,28]]]],[[26,27],[[29,[22,28]]]],[[26,27],[[29,[24,28]]]],[[2,30],[[29,[31,32]]]],[[5,30],[[29,[31,32]]]],[[6,30],[[29,[31,32]]]],[[7,30],[[29,[31,32]]]],[[8,30],[[29,[31,32]]]],[[10,30],[[29,[31,32]]]],[[11,30],[[29,[31,32]]]],[[12,30],[[29,[31,32]]]],[[13,30],[[29,[31,32]]]],[[15,30],[[29,[31,32]]]],[[16,30],[[29,[31,32]]]],[[17,30],[[29,[31,32]]]],[[19,30],[[29,[31,32]]]],[[20,30],[[29,[31,32]]]],[[22,30],[[29,[31,32]]]],[[24,30],[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],0,[[],33],[34,[[29,[2]]]],[34,[[29,[5]]]],[34,[[29,[6]]]],[34,[[29,[7]]]],[34,[[29,[8]]]],[34,[[29,[10]]]],[34,[[29,[11]]]],[34,[[29,[12]]]],[34,[[29,[13]]]],[34,[[29,[15]]]],[34,[[29,[16]]]],[34,[[29,[17]]]],[34,[[29,[19]]]],[34,[[29,[20]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[10,[[29,[12,11]]]],[13,[[29,[16,15]]]],[17,[[29,[20,19]]]],[[2,2],36],[[5,5],36],[[6,6],36],[[7,7],36],[[8,8],36],[[10,10],36],[[11,11],36],[[12,12],36],[[13,13],36],[[15,15],36],[[16,16],36],[[17,17],36],[[19,19],36],[[20,20],36],[[22,22],36],[[24,24],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[4,36],[9,36],[14,36],[18,36],[21,36],[23,36],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[[2,40],41],[[2,40],41],[[5,40],41],[[6,40],41],[[7,40],41],[[8,40],41],[[42,40],41],[[10,40],41],[[10,40],41],[[11,40],41],[[11,40],41],[[12,40],41],[[12,40],41],[[13,40],41],[[13,40],41],[[15,40],41],[[15,40],41],[[16,40],41],[[16,40],41],[[17,40],41],[[17,40],41],[[19,40],41],[[19,40],41],[[20,40],41],[[20,40],41],[[22,40],41],[[22,40],41],[[24,40],41],[[24,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,22],[15,24],[[]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]]],7],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,48]],[[5,48]],[[6,48]],[[7,48]],[[8,48]],[[10,48]],[[11,48]],[[12,48]],[[13,48]],[[15,48]],[[16,48]],[[17,48]],[[19,48]],[[20,48]],[[22,48]],[[24,48]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,49]],[[10,49]],[[13,49]],[[17,49]],[[22,49]],[[24,49]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[10,[[51,[12]]]],[13,[[51,[16]]]],[17,[[51,[20]]]],[[52,6],10],[[52,8],13],[53,17],0,0,[[7,7],[[51,[25]]]],[[2,54],29],[[5,54],29],[[6,54],29],[[7,54],29],[[8,54],29],[[10,54],29],[[11,54],29],[[12,54],29],[[13,54],29],[[15,54],29],[[16,54],29],[[17,54],29],[[19,54],29],[[20,54],29],0,[22,[[51,[55]]]],[24,[[51,[55]]]],[6,56],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[7,[[58,[43]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[7,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,0,0,[[6,62],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[26,27],[[29,[63,28]]]],[[63,30],[[29,[31,32]]]],[30,[[29,[31,32]]]],[34,[[29,[63]]]],[34,[[29,[64]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[[63,40],41],[[64,40],41],[[]],[[]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[63,65],0,[[]],[[]],[[],50],[[],50],0,0,[[63,54],29],[[64,54],29],[[63,66],[[67,[64]]]],0,0,[[],[[58,[43,57]]]],[[],29],[[],29],[[],29],[[],29],[[],61],[[],61],[[64,[70,[[0,[68,69]]]]],[[29,[63,71]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[3,78],[79,79],[80,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[26,27],[[29,[75,28]]]],[[26,27],[[29,[76,28]]]],[[26,27],[[29,[79,28]]]],[[26,27],[[29,[80,28]]]],[[75,30],[[29,[31,32]]]],[[76,30],[[29,[31,32]]]],[[79,30],[[29,[31,32]]]],[[80,30],[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[[],72],[[],80],[73,3],0,[34,[[29,[72]]]],[34,[[29,[73]]]],[34,[[29,[74]]]],[34,[[29,[75]]]],[34,[[29,[76]]]],[34,[[29,[77]]]],[34,[[29,[79]]]],[34,[[29,[80]]]],[[],35],[[79,79],36],[[80,80],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[78,36],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],0,0,[[72,40],41],[[73,40],41],[[74,40],41],[[75,40],41],[[76,40],41],[[77,40],41],[[79,40],41],[[79,40],41],[[80,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[],72],[[],74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[58,[52]]]],[[79,48]],[[80,48]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,49]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[76,81],0,0,0,0,[3,73],0,0,0,0,0,[[72,54],29],[[73,54],29],[[74,54],29],[[75,54],29],[[76,54],29],[[77,54],29],[[79,54],29],[[80,54],29],0,0,[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[51,[82]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72],[74],[[],60],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[76,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27],[[29,[86,28]]]],[[26,27],[[29,[91,28]]]],[[26,27],[[29,[87,28]]]],[[26,27],[[29,[92,28]]]],[[26,27],[[29,[88,28]]]],[[26,27],[[29,[93,28]]]],[[26,27],[[29,[89,28]]]],[[26,27],[[29,[94,28]]]],[[26,27],[[29,[90,28]]]],[[86,30],[[29,[31,32]]]],[[91,30],[[29,[31,32]]]],[[87,30],[[29,[31,32]]]],[[92,30],[[29,[31,32]]]],[[88,30],[[29,[31,32]]]],[[93,30],[[29,[31,32]]]],[[89,30],[[29,[31,32]]]],[[94,30],[[29,[31,32]]]],[[90,30],[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],[30,[[29,[31,32]]]],0,[34,[[29,[90]]]],[[86,86],36],[[90,90],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[37,[[29,[38,39]]]],[[84,40],41],[[84,40],41],[[86,40],41],[[91,40],41],[[87,40],41],[[92,40],41],[[88,40],41],[[93,40],41],[[89,40],41],[[94,40],41],[[90,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[[44,[43]],[46,[33,45]]],[[29,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,31],[[51,[84]]]],[[86,48]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],85],[85,31],0,[85,51],[85,51],[[85,31],51],[[86,54],29],[[87,54],29],[[88,54],29],[[89,54],29],[[90,54],29],[85],0,[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[],[[58,[43,57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[4,"MintConsensusItem"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"MintOutputBlindSignature"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"DynInput"],[4,"MintInput"],[3,"UnknownMintInputVariantError"],[3,"MintInputV0"],[4,"MintOutput"],[3,"DynOutput"],[3,"UnknownMintOutputVariantError"],[3,"MintOutputV0"],[4,"MintOutputOutcome"],[3,"DynOutputOutcome"],[3,"UnknownMintOutputOutcomeVariantError"],[3,"MintOutputOutcomeV0"],[3,"DynInputError"],[4,"MintInputError"],[3,"DynOutputError"],[4,"MintOutputError"],[4,"Ordering"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"MintCommonInit"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[4,"Option"],[3,"Amount"],[3,"BlindedSignatureShare"],[8,"Serializer"],[8,"Error"],[3,"PublicKey"],[3,"Global"],[3,"Vec"],[3,"Message"],[3,"String"],[3,"TypeId"],[3,"AggregatePublicKey"],[3,"BackupRequest"],[3,"SignedBackupRequest"],[3,"Hash"],[3,"KeyPair"],[6,"Result"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[4,"Error"],[3,"MintGenParams"],[3,"MintGenParamsConsensus"],[3,"MintConfig"],[3,"MintConfigLocal"],[3,"MintConfigConsensus"],[3,"MintConfigPrivate"],[3,"DynClientConfig"],[3,"MintClientConfig"],[3,"FeeConsensus"],[3,"ModuleKind"],[4,"Value"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"MintOutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"ECashUserBackupSnapshot"],[3,"NonceKeyPrefix"],[3,"MintOutputOutcomePrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"],[3,"MintModuleTypes"],[13,"Default"],[13,"Default"],[13,"Default"],[13,"Default"]]},\
"fedimint_mint_server":{"doc":"","t":"DDDDLLLLLLLLLLLLLLMLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLMMMLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BackupRequest","Mint","MintInit","SignedBackupRequest","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone_into","common","consensus_decode","consensus_encode","consensus_encode_dyn","consensus_proposal","consensus_proposal","database_version","decoder","decoder","deserialize","deserialize","distributed_gen","distributed_gen","dump_database","dump_database","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_ref","get_client_config","get_client_config","get_database_migrations","handle_backup_request","handle_recover_request","id","init","init","into","into","into","into","into_request","into_request","into_request","into_request","module_kind","new","output_status","output_status","payload","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","pub_key","pub_key","request","sec_key","serialize","serialize","sign","signature","supported_api_versions","supported_api_versions","timestamp","to_bytes","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_params","verify_valid","versions","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_server"]],"d":["","Federated mint member mint","","","","","","","","Queries the database and returns all assets and …","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Constructs a new mint","Retrieve the current status of the output. Depending on …","","","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,16,1,1,16,1,21,29,16,1,21,29,1,16,16,0,21,21,21,1,1,16,16,1,21,29,16,16,16,16,21,29,16,1,21,29,16,1,21,29,21,16,16,16,16,1,1,21,16,16,16,1,21,29,16,1,21,29,16,1,1,1,21,1,1,1,1,1,1,1,1,29,1,21,29,21,29,16,16,21,21,16,16,16,16,16,1,21,29,16,1,21,29,16,1,21,29,16,16,16,29,16,16,1,21,29],"f":[0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],7],[[1,8,9,10],[[13,[[12,[11]]]]]],[[[8,[14]],9,15],[[13,[[12,[11,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[16,16],[[]],0,[[17,[20,[18,19]]],[[23,[21,22]]]],[[21,24],[[23,[25,26]]]],[24,[[23,[25,26]]]],[[1,8],[[13,[[12,[11]]]]]],[[[8,[14]],15],[[13,[[12,[11,5]]]]]],[[],27],[[],18],[[],18],[28,[[23,[21]]]],[28,[[23,[29]]]],[[30,31],[[13,[[12,[11,5]]]]]],[[16,30,31],[[13,[[12,[11]]]]]],[[[8,[14]],[3,[32,5]]],[[13,[[12,[11,5]]]]]],[[16,8,[3,[32]]],[[13,[[12,[11]]]]]],[33,[[23,[34,35]]]],[33,[[23,[34,35]]]],[[16,36],37],[[1,36],37],[[21,36],[[23,[38]]]],[[29,36],[[23,[38]]]],[[]],[[]],[[]],[[]],[[[40,[39]],[20,[18,19]]],[[23,[41]]]],[[]],[[16,42],[[44,[43]]]],[[15,42],[[23,[45,46]]]],[[],[[47,[27,5]]]],[[1,8,29],[[23,[48]]]],[[1,8,49],[[51,[50]]]],0,[[16,[52,[16]]],[[13,[[12,[11]]]]]],[[53,54,55,56],[[13,[[12,[11,5]]]]]],[[]],[[]],[[]],[[]],[[],57],[[],57],[[],57],[[],57],[[],58],[59,1],[[[8,[14]],60,15],[[13,[[12,[11,5]]]]]],[[1,8,60],[[13,[[12,[11]]]]]],0,[[[8,[14]],61,56],[[13,[[12,[11,5]]]]]],[[1,8,62,56],[[13,[[12,[11]]]]]],[[[8,[14]],63,15],[[13,[[12,[11,5]]]]]],[[1,8,64],[[13,[[12,[11]]]]]],[[1,8,65,60],[[13,[[12,[11]]]]]],[[[8,[14]],66,60,15],[[13,[[12,[11,5]]]]]],[1,[[69,[67,68]]]],0,0,0,[[21,70],23],[[29,70],23],[[21,71],[[23,[29,46]]]],0,[[],72],[16,72],0,[[],[[3,[39,5]]]],[[],73],[[]],[[16,[40,[56]],31],[[47,[56,53]]]],[[[40,[56]],31],[[47,[56,53,5]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],74],[[],74],[[],74],[[],74],[[16,56,53],44],[[56,53],[[23,[46]]]],[31,[[23,[46]]]],[[29,[77,[[0,[75,76]]]]],[[23,[21,78]]]],[[16,79],[[40,[80]]]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Mint"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"DatabaseTransaction"],[3,"Audit"],[6,"ModuleInstanceId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"NonCommittable"],[15,"u16"],[3,"MintInit"],[8,"Read"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[3,"BackupRequest"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DatabaseVersion"],[8,"Deserializer"],[3,"SignedBackupRequest"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[3,"ServerModuleConsensusConfig"],[3,"MintClientConfig"],[6,"Result"],[3,"ClientModuleConfig"],[3,"Error"],[3,"BTreeMap"],[3,"ApiError"],[3,"PublicKey"],[3,"ECashUserBackupSnapshot"],[4,"Option"],[3,"ServerModuleInitArgs"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"PeerId"],[3,"Request"],[3,"ModuleKind"],[3,"MintConfig"],[3,"OutPoint"],[3,"DynModuleConsensusItem"],[4,"MintConsensusItem"],[3,"DynInput"],[4,"MintInput"],[4,"MintOutput"],[3,"DynOutput"],[3,"Amount"],[3,"AggregatePublicKey"],[3,"HashMap"],[8,"Serializer"],[3,"KeyPair"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[3,"TypeId"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[4,"Error"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"]]},\
"fedimint_portalloc":{"doc":"A library for cooperative port allocation between multiple …","t":"GAFFFADDLLLLLLALFLLLLLLLLMMMLLMMLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLMLLLLLLLLLLFFF","n":["UnixTimstap","data","data_dir","now_ts","port_alloc","util","DataDir","LockedRoot","borrow","borrow","borrow_mut","borrow_mut","data_file_path","drop","dto","ensure_locked","ensure_root_exists","from","from","into","into","into_request","into_request","load_data","lock","lock_file","lock_file","locked","new","new","path","path","store_data","try_from","try_from","try_into","try_into","type_id","type_id","unlock","vzip","vzip","with_lock","yield","RangeData","RootData","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","default","default","deserialize","deserialize","erased_serialize","erased_serialize","expires","fmt","fmt","from","from","from_ref","from_ref","insert","into","into","into_request","into_request","keys","reclaim","serialize","serialize","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","open_lock_file","store_json_pretty_to_file","store_to_file_with"],"q":[[0,"fedimint_portalloc"],[6,"fedimint_portalloc::data"],[44,"fedimint_portalloc::data::dto"],[88,"fedimint_portalloc::util"]],"d":["","","","","","","Root directory where we keep the lock &amp; data file","A handle passed to <code>with_lock</code> argument after root was …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","local time unix timestamp","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,9,5,9,5,5,5,0,5,0,9,5,9,5,9,5,5,5,9,5,5,9,5,9,5,5,9,5,9,5,9,5,5,9,5,9,5,0,0,15,7,15,7,15,7,15,7,7,15,7,15,7,15,7,15,15,7,15,7,15,7,7,15,7,15,7,7,7,15,7,15,15,7,15,7,15,7,15,7,15,7,0,0,0],"f":[0,0,[[],[[2,[1]]]],[[],3],[4,[[2,[4]]]],0,0,0,[[]],[[]],[[]],[[]],[5,1],[5],0,[5,2],[1,2],[[]],[[]],[[]],[[]],[[],6],[[],6],[[5,3],[[2,[7]]]],[5,2],0,0,0,[[[8,[1]]],[[2,[9]]]],[[1,10],[[2,[5]]]],0,0,[[5,7],2],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[5,2],[[]],[[]],[[9,13],2],[[5,14],2],0,0,[[]],[[]],[[]],[[]],[15,15],[7,7],[[]],[[]],[[7,[16,[4]]],17],[[],15],[[],7],[18,[[11,[15]]]],[18,[[11,[7]]]],[19,[[11,[20,21]]]],[19,[[11,[20,21]]]],0,[[15,22],23],[[7,22],23],[[]],[[]],[[]],[[]],[[7,[16,[4]],3]],[[]],[[]],[[],6],[[],6],0,[[7,3],7],[[15,24],11],[[7,24],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[]],[25,[[2,[10]]]],[[25,26],2],[[25,27],[[28,[11]]]]],"c":[],"p":[[3,"PathBuf"],[6,"Result"],[15,"u64"],[15,"u16"],[3,"LockedRoot"],[3,"Request"],[3,"RootData"],[8,"Into"],[3,"DataDir"],[3,"File"],[4,"Result"],[3,"TypeId"],[8,"FnOnce"],[3,"Duration"],[3,"RangeData"],[3,"Range"],[15,"bool"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"Path"],[8,"Serialize"],[8,"Fn"],[6,"Result"]]},\
"fedimint_rocksdb":{"doc":"","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLL","n":["RocksDb","RocksDbReadOnly","RocksDbReadOnlyTransaction","RocksDbTransaction","begin_transaction","begin_transaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","commit_tx","fmt","fmt","from","from","from","from","from","inner","into","into","into","into","into_request","into_request","into_request","into_request","next_prefix","open","open_read_only","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","rocksdb","rollback_tx_to_savepoint","rollback_tx_to_savepoint","set_tx_savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_rocksdb"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,5,6,7,1,5,6,7,1,5,6,7,1,5,6,7,1,1,5,1,6,7,1,5,6,7,1,5,0,1,5,6,7,6,7,6,7,6,7,6,7,6,7,0,6,7,6,7,6,7,1,5,6,7,1,5,6,7,1,5,6,7,1,5],"f":[0,0,0,0,[1,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[4,[[3,[2]]]]]],[7,[[4,[[3,[2]]]]]],[[1,8],9],[[5,8],9],[[]],[[]],[[]],[10,1],[[]],[1,10],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[[13,[12]]],[[15,[[14,[12]]]]]],[[[17,[16]]],[[19,[1,18]]]],[[[17,[16]]],[[19,[5,18]]]],[[6,[13,[12]]],[[4,[[3,[2]]]]]],[[7,[13,[12]]],[[4,[[3,[2]]]]]],[[6,[13,[12]]],[[4,[[3,[2]]]]]],[[7,[13,[12]]],[[4,[[3,[2]]]]]],[[6,[13,[12]]],[[4,[[3,[2]]]]]],[[7,[13,[12]]],[[4,[[3,[2]]]]]],[[6,[13,[12]],[13,[12]]],[[4,[[3,[2]]]]]],[[7,[13,[12]],[13,[12]]],[[4,[[3,[2]]]]]],[[6,[13,[12]]],[[4,[[3,[2]]]]]],[[7,[13,[12]]],[[4,[[3,[2]]]]]],[[6,[13,[12]]],[[4,[[3,[2]]]]]],[[7,[13,[12]]],[[4,[[3,[2]]]]]],0,[6,[[4,[[3,[2]]]]]],[7,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[7,[[4,[[3,[2]]]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"RocksDb"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RocksDbReadOnly"],[3,"RocksDbTransaction"],[3,"RocksDbReadOnlyTransaction"],[3,"Formatter"],[6,"Result"],[6,"OptimisticTransactionDB"],[3,"Request"],[15,"u8"],[15,"slice"],[3,"Vec"],[4,"Option"],[3,"Path"],[8,"AsRef"],[3,"Error"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_server":{"doc":"","t":"RGDDIALLLLLFAAKMAMLLFMLLLLAALLMMLLLLLLLLLLLNCDNEALLLLLLLLLLLALLLLLLLALLLLLLLLLLLAALALFLLFLLLLLLLLDLLMMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLMLLLLLLRNDNELLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLDLLLLLLLMLLLLDLLLLLLLLLLLLMLLLLMMMLLLLLLLLLDDGLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLNRNDDQRRRRNEEGNRNNDDNDEQDNNDQNDDDDDDGILAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMFMMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLFLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLMMLMMMFMMMMMMMMMLLLMLLLLMMLAAALLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLDDDDDLMMMMLMLLLLLLLLLLLLLLLLLLLLLMLMLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLMMLMMMMMMMLLFLLLLLMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDENINDLLLLLLLLLLLLLLLLLLMMKMMLLLLLLLLLLLMLLMLLLLLLLLLLLLLMMMMMMMLKLKLLFMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRFFFFFFFFFFFFFDLLLLALMLMLLMFALLLLLFDGRMLLLMLLLMMLLLLMMMLLLLLLLLLMFLLLLNDDNDDNDDEDRNNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGRGGDDDLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMLMMLMLLMLLLLLLLLLLLLLLLAAAAAADDDLLLLLLLLLLMMLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLMMLLMMFLMLMLLLLLLLLLLLLLLLGGGIDGDDLLLLLLLLMLLLLKLFLLLLLLLLLLLLLLLLKLALLMMMFMMMMMLLLLLLLLLLLLLLSDNSDSSDDNEDDSLLLLLLLLLLLLLLMMMLLLLLLLLFLLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMGDDGGIGMLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLSDNDDNDNDRSSSDEDGEIGGDDNDSSSLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMKMLLLLMLMLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNDNDRDEDGDIGGDDDMLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMKLLLLLLMLMMLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLL","n":["API_ENDPOINT_TIMEOUT","ApiResult","FedimintApiHandler","FedimintServer","HasApiContext","atomic_broadcast","attach_endpoints","borrow","borrow","borrow_mut","borrow_mut","check_auth","config","consensus","context","data_dir","db","db","from","from","get_verification_hashes","handle","into","into","into_request","into_request","multiplexed","net","run","run_config_gen","runtime","settings","spawn_api","spawn_consensus_api","stop","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Everyone","Keychain","Message","Peer","Recipient","backup","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","data_provider","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","finalization_handler","fmt","fmt","from","from","from_bytes","from_ref","from_ref","into","into","into_request","into_request","keychain","network","serialize","spawner","to_bytes","to_node_index","to_owned","to_owned","to_peer_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","UnitSaver","borrow","borrow_mut","buffer","db","emit_bool","emit_bool","emit_i16","emit_i16","emit_i32","emit_i32","emit_i64","emit_i64","emit_i8","emit_i8","emit_slice","emit_slice","emit_u16","emit_u16","emit_u32","emit_u32","emit_u64","emit_u64","emit_u8","emit_u8","flush","from","into","into_request","load_session","new","try_from","try_into","type_id","units_index","vzip","write","write","write_all","write_fixedint","write_varint","BYTE_LIMIT","Batch","DataProvider","Signature","UnitData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","get_data","hash","into","into","into_request","into_request","is_valid","leftover_item","mempool_item_receiver","new","signature_receiver","size_hint","submitted_items","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FinalizationHandler","borrow","borrow_mut","data_finalized","from","into","into_request","new","sender","try_from","try_into","type_id","vzip","Keychain","bootstrap_multi","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","index","into","into_request","is_complete","keypair","new","node_count","peer_count","peer_id","peer_id","public_keys","secp","sign","tagged_hash","threshold","to_owned","try_from","try_into","type_id","verify","vzip","Hasher","Network","NetworkData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connections","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","hash","into","into","into_request","into_request","new","next_event","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Spawner","borrow","borrow_mut","clone","clone_into","default","from","from_ref","into","into_request","new","spawn","spawn_essential","to_owned","try_from","try_into","type_id","vzip","Auth","CORE_CONSENSUS_VERSION","Cancelled","ClientConfig","ConfigGenParams","Consensus","DEFAULT_BROADCAST_EXPECTED_ROUNDS_PER_SESSION","DEFAULT_BROADCAST_MAX_ROUNDS_PER_SESSION","DEFAULT_BROADCAST_ROUND_DELAY_MS","DEFAULT_MAX_CLIENT_CONNECTIONS","DistributedGen","DkgError","DkgPeerMsg","DkgResult","Done","ENV_MAX_CLIENT_CONNECTIONS","Epoch","Failed","FederationId","GlobalClientConfig","Hbbft","JsonWithKind","KeyType","Local","ModuleInitRegistry","ModuleNotFound","ParamsNotFound","PeerUrl","Private","PublicKey","ServerConfig","ServerConfigConsensus","ServerConfigLocal","ServerConfigPrivate","ServerModuleConfig","ServerModuleConsensusConfig","ServerModuleInitRegistry","TypedServerModuleConfig","add_modules","api","api_auth","api_bind","api_endpoints","api_endpoints","api_urls","attach","available_decoders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_expected_rounds_per_session","broadcast_max_rounds_per_session","broadcast_public_keys","broadcast_round_delay_ms","broadcast_secret_key","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_version","compare","config","connect","consensus","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash","consensus_json","consensus_version","decoders","decoders_strict","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributedgen","dummy","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fed_bind","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_iter","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","gen_cert_and_key","get","get_first_module_by_kind","get_first_module_by_kind_cfg","get_incoming_count","get_invite_code","get_module","get_module_cfg","get_module_cfg_by_instance_id","get_module_config","get_module_config_typed","get_module_id_by_kind","global","hash","hash","hash","identity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","io","is_kind","iter_module_instances","iter_module_instances","kind","kind","kind","kinds","local","local","local","max_connections","max_connections","meta","meta","modules","modules","modules","modules","modules_json","name","network_config","new","new","p2p_endpoints","p2p_network","p2p_urls","partial_cmp","peer_ids","private","private","redecode_raw","serde_binary_human_readable","serde_tls_cert_map","serde_tls_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","supported_api_versions","supported_api_versions_summary","tls_certs","tls_certs","tls_config","tls_config","tls_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_common","to_erased","to_fake_ln_pub_key","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_prefix","to_string","to_string","to_typed","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","value","value","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","ConfigGenApi","ConfigGenLocalConnection","ConfigGenParamsLocal","ConfigGenSettings","ConfigGenState","add_config_gen_peer","api_auth","api_bind","api_bind","api_url","auth","auth","bad_request","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","config_gen_peers","config_generated_tx","consensus_config_gen_params","context","data_dir","db","default_config_gen_params","default_params","download_token_limit","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_config_gen_params","get_peer_info","get_requested_params","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","leader_api_url","local","local_connection","max_connections","max_connections","new","new","our_id","our_name","our_peer_info","our_private_key","p2p_bind","p2p_bind","p2p_url","peers","registry","requested_params","require_status","run_dkg","server_endpoints","server_status","set_config_gen_connections","set_config_gen_params","set_password","set_request","settings","start_consensus","state","status","task_group","tls_cert","tls_private","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_leader","verified_configs","verify_config_hash","vzip","vzip","vzip","vzip","vzip","write_configs","Dkg","DkgKeys","DkgRunner","DkgStep","Messages","PeerHandleOps","Result","ThresholdKeys","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone_into","clone_into","clone_into","commitments","dkg_config","exchange_pubkeys","f1_poly","f2_poly","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","gen_g","gen_h","hash","hashed_commits","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","multi","new","new","our_id","our_id","peers","peers","pk_shares","public_key_set","public_key_set","run","run_dkg_g1","run_dkg_key","run_dkg_multi_g2","run_g1","run_g2","scalar","secret_key_share","secret_key_share","sk_shares","step","tbs","threshold","threshold_crypto","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CLIENT_CONFIG","CLIENT_INVITE_CODE_FILE","CODE_VERSION","CONSENSUS_CONFIG","DB_FILE","ENCRYPTED_EXT","JSON_EXT","LOCAL_CONFIG","PLAINTEXT_PASSWORD","PRIVATE_CONFIG","SALT_FILE","encrypted_json_read","encrypted_json_write","plaintext_display_write","plaintext_json_read","plaintext_json_write","read_server_config","write_server_config","deserialize","serialize","deserialize","serialize","deserialize","serialize","FundingVerifier","add_input","add_output","borrow","borrow_mut","debug","default","fee_amount","from","input_amount","into","into_request","output_amount","process_transaction_with_dbtx","server","try_from","try_into","type_id","verify_funding","vzip","item_message","ConsensusServer","LatestContributionByPeer","TRANSACTION_BUFFER","api_endpoints","borrow","borrow_mut","build_session_outcome","cfg","complete_session","complete_signed_session_outcome","confirm_server_config_consensus_hash","connections","db","decoders","from","into","into_request","keychain","latest_contribution_by_peer","modules","new","new_with","process_consensus_item","process_consensus_item_with_db_transaction","request_signed_session_outcome","run","run_consensus","run_session","run_single_guardian","submission_receiver","submit_module_consensus_items","try_from","try_into","type_id","vzip","AcceptedItem","AcceptedItemKey","AcceptedItemPrefix","AcceptedTransaction","AcceptedTransactionKey","AcceptedTransactionKeyPrefix","AlephUnits","AlephUnitsKey","AlephUnitsPrefix","DbKeyPrefix","DbKeyPrefixIter","GLOBAL_DATABASE_VERSION","Module","SignedSessionOutcome","SignedSessionOutcomeKey","SignedSessionOutcomePrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","get","get_global_database_migrations","idx","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Callback","MAX_PEER_OUT_OF_ORDER_MESSAGES","ModuleId","ModuleIdRef","ModuleMultiplexed","ModuleMultiplexerOutOfOrder","PeerConnectionMultiplexer","ban_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callbacks","clone","clone","clone_into","clone_into","default","deserialize","erased_serialize","fmt","from","from","from","from_ref","from_ref","into","into","into","into_request","into_request","into_request","key","msg","msgs","new","peer_bans_tx","peer_counts","receive","receive_callbacks_tx","run","send","send_requests_tx","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","api","connect","framed","peers","peers_reliable","queue","ConsensusApi","ExpiringCache","RpcHandlerCtx","api_versions_summary","await_output_outcome","await_signed_session_outcome","await_transaction","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","client_cfg","clone","clone","clone","clone_into","clone_into","clone_into","consensus_status_cache","context","context","data","db","duration","fmt","from","from","from","from_ref","from_ref","from_ref","get","get_federation_audit","get_federation_status","handle_backup_request","handle_recover_request","into","into","into","into_request","into_request","into_request","latest_contribution_by_peer","modules","new","new_module","peer_status_channels","rpc_context","server_endpoints","session_count","submission_sender","submit_transaction","supported_api_versions","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AnyConnector","ConnectResult","ConnectionListener","Connector","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","dns_sanitize","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_peer_by_cert","into","into","into","into_dyn","into_request","into_request","into_request","listen","listen","mock","new","new","our_certificate","our_private_key","our_private_key","parse_host_port","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BROKEN","FailureRate","FullyReliable","INTEGRATION_TEST","LatencyInterval","MAX","MILDLY_UNRELIABLE","MockConnector","MockNetwork","RandomlyUnreliable","StreamReliability","UnreliabilityGenerator","UnreliableDuplexStream","ZERO","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broken","clients","clients","clone","clone","clone","clone_into","clone_into","clone_into","connect_framed","connector","do_handshake","eq","equivalent","equivalent","equivalent","equivalent","failure_rate","flush_generator","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","generate","id","inner","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","latency","listen","max_millis","min_millis","new","new","new","new","new","poll_broken","poll_flush","poll_read","poll_shutdown","poll_write","random","random_fail","read_generator","reliability","shutdown_generator","sleep_future","successes","timeout","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_generator","flush_failure_rate","flush_latency","read_failure_rate","read_latency","shutdown_failure_rate","shutdown_latency","write_failure_rate","write_latency","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","encode","fmt","fmt","from","from","into","into","into_dyn","into_request","into_request","into_streaming_request","new","new","new_from_tcp","new_from_tcp","next_or_pending","ok","poll_close","poll_flush","poll_next","poll_ready","sink","start_send","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","BASE_MS","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","DelayCalculator","Disconnected","DisconnectedPeerConnectionState","Message","NetworkConfig","PING_INTERVAL","PROD_DEFAULT","PROD_MAX_RETRY_DURATION_MS","PROD_MIN_RETRY_DURATION_MS","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","PeerStatusChannelReceiver","PeerStatusChannelSender","PeerStatusChannels","PeerStatusQuery","Ping","ReconnectPeerConnections","TEST_DEFAULT","TEST_MAX_RETRY_DURATION_MS","TEST_MIN_RETRY_DURATION_MS","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","connect","connect","connection","connections","delay_calculator","deserialize","deserialize","disconnect","disconnect_err","erased_serialize","erased_serialize","failed_reconnect_counter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_all_status","identity","incoming","incoming","incoming_connections","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_retry_duration_ms","min_retry_duration_ms","new","new","next_ping","our_id","outgoing","outgoing","peer_address","peer_id","peers","peers","receive","receive","receive_connection","reconnect","reconnect_at","reconnection_delay","response_sender","run","run_io_thread","run_listen_task","send","send","send_message_connected","send_sync","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","status_query_receiver","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","Disconnected","DisconnectedPeerConnectionState","PING_INTERVAL","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","PeerStatusChannelReceiver","PeerStatusChannelSender","PeerStatusChannels","PeerStatusQuery","ReconnectPeerConnectionsReliable","ack","ban_peer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","common","connect","connect","connection","connections","delay_calculator","deserialize","disconnect","disconnect_err","erased_serialize","failed_reconnect_counter","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get_all_status","incoming","incoming","incoming_connections","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_received","msg","new","new","next_ping","our_id","outgoing","outgoing","peer_address","peer_id","peers","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","resend_buffer_contents","resend_queue","response_sender","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","send_message_connected_inner","send_ping","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","status_query_receiver","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","default","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","id","increment","into","into","into","into_request","into_request","into_request","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"fedimint_server"],[43,"fedimint_server::atomic_broadcast"],[97,"fedimint_server::atomic_broadcast::backup"],[138,"fedimint_server::atomic_broadcast::data_provider"],[186,"fedimint_server::atomic_broadcast::finalization_handler"],[199,"fedimint_server::atomic_broadcast::keychain"],[229,"fedimint_server::atomic_broadcast::network"],[265,"fedimint_server::atomic_broadcast::spawner"],[283,"fedimint_server::config"],[767,"fedimint_server::config::api"],[898,"fedimint_server::config::distributedgen"],[1001,"fedimint_server::config::io"],[1019,"fedimint_server::config::serde_binary_human_readable"],[1021,"fedimint_server::config::serde_tls_cert_map"],[1023,"fedimint_server::config::serde_tls_key"],[1025,"fedimint_server::consensus"],[1045,"fedimint_server::consensus::debug"],[1046,"fedimint_server::consensus::server"],[1081,"fedimint_server::db"],[1280,"fedimint_server::multiplexed"],[1340,"fedimint_server::net"],[1346,"fedimint_server::net::api"],[1417,"fedimint_server::net::connect"],[1485,"fedimint_server::net::connect::mock"],[1617,"fedimint_server::net::connect::mock::StreamReliability"],[1625,"fedimint_server::net::framed"],[1674,"fedimint_server::net::peers"],[1891,"fedimint_server::net::peers_reliable"],[2061,"fedimint_server::net::queue"]],"d":["How long to wait before timing out client connections","","","Main server for running Fedimint consensus and APIs","Has the context necessary for serving API endpoints","This module implements fedimints custom atomic broadcast …","Attaches <code>endpoints</code> to the <code>RpcModule</code>","","","","","","Fedimint toplevel config","The actual implementation of consensus","","Location where configs are stored","Provides interfaces for ACID-compliant data store backends","Database shared by the API and consensus","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Implementation of multiplexed peer connections","Networking for mint-to-mint and client-to-mint …","Starts the <code>ConfigGenApi</code> unless configs already exist After …","Generates the <code>ServerConfig</code>","","Module and endpoint settings necessary for starting the API","Spawns an API server","Runs the <code>ConsensusApi</code> which serves endpoints while …","Attempts to stop the API","","","","","","","","","","This keychain implements naive threshold schnorr …","The majority of these messages need to be delivered to the …","","This enum defines the intended destination of a Message.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The UnitSaver enables aleph bft to store its local …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","This function loads the aleph bft backup from disk and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","User has cancelled the DKG task","Total client config","All the parameters necessary for generating the …","Shared consensus-critical config","","","","The default maximum open connections the API can handle","","Captures an error occurring in DKG","Things that a <code>distributed_gen</code> config can send between peers","Result of running DKG","","The env var for maximum open connections the API can handle","","Error running DKG","The federation id is a copy of the authentication …","Federation-wide client config","","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","The types of keys to run distributed key generation for","Local non-consensus, not security-sensitive settings","","","","","Private for this federation member data that are security …","","All the serializable configuration for the fedimint server","","","","Config for the server-side of a particular Federation …","","","Module (server side) config, typed","","","Secret API auth string","Our bind address for our API endpoints","API endpoints for each federation member","Network addresses and names for all peer APIs","","","Get decoders for <code>modules</code> and skip unsupported ones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines how long a session is expected to run. Has to …","Maximum number of rounds permitted per session.","Public keys for the atomic broadcast to authenticate …","Influences the atomic broadcast latency, should be higher …","Secret key for the atomic broadcast to sign messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the binary code running","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","Returns the consensus hash for a given client config","","Core consensus version","","Get decoders for <code>modules</code> and fail if any is unsupported","","","","","","","","","","","","","","","Runs the distributed key gen algorithm","","Random dummy id for testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Our bind address for communicating with peers","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new config from the results of a trusted or …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Assemble from the three functionally distinct parts","","","","","","","","","","","","","","","","","","","(soft-deprecated): Get the first instance of a module of a …","","","","","","","Constructs a module config by id","Constructs a module config by name","","","","","","Our peer id (generally should not change)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that is locally configurable …","","","","How many API connections we will accept","Additional config the federation wants to transmit to the …","Additional config the federation wants to transmit to the …","","Secret material from modules","All configuration that needs to be the same for modules","Non-consensus, non-private configuration from modules","Human readable representation of <code>Self::modules</code>","The peer’s name","","","","Network addresses and names for all p2p connections","","","","","Contains all configuration that will be encrypted such as …","","See <code>DynRawFallback::redecode_raw</code>.","","","","","","","","","","","","","","","","","","Api versions supported by this server","","","Certs for TLS communication, required for peer …","","","Secret key for TLS communication, required for peer …","","","","","","","","Turn the typed config into type-erased version","Converts a federation id to a public key to which we know …","","","","","","","","","","","","","","","","Split the config into its three functionally distinct parts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)","","","","Agreed on core consensus version","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","Serves the config gen API endpoints","Our local connection info","Config gen params that are only used locally, shouldn’t …","All the info we configure prior to config gen starting","State held by the API after receiving a …","Called from <code>set_config_gen_connections</code> to add a peer’s …","Secret API auth string","Bind address for API communication","Bind address for our API connection","URL for our API connection","","Our auth string","","","","","","","","","","","","","","","","","","","","","","Configs that have been generated","Returns the peers that have called <code>add_config_gen_peer</code> on …","Tracks when the config is generated","Gets the consensus config gen params","","Directory the configs will be created in","DB not really used","Returns default config gen params that can be modified by …","The default params for the modules","Limit on the number of times a config download token can …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Validates and returns the params using our <code>request</code> and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","URL of “leader” guardian to send our connection info to","Our local connection","","How many API connections we will accept","How many API connections we will accept","","","Our peer id","Our guardian name","","Our TLS private key","Bind address for P2P communication","Bind address for our P2P connection","URL for our P2P connection","Connection info received from other guardians, unique by …","Registry for config gen","The config gen params requested by the leader","","Once configs are generated, updates status to …","","Returns the server status","Sets our connection info, possibly sending it to a leader","Sets and validates the config gen params","","","Our config gen settings configured locally","Attempts to decrypt the config files from disk using the …","In-memory state machine","Our status","Task group for running DKG","Our TLS public cert","Our TLS private key","","","","","","","","","","","","","","","","","","","","","Sends our updated peer info to the leader (if we have one)","We have verified all our peer configs","Returns the consensus config hash, tweaked by our TLS …","","","","","","Writes the configs to disk after they are generated","","","","","","","","Our secret key share of a threshold key","Create another DKG with <code>threshold</code> signatures required","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a second generator by hashing the first one to the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create multiple DKGs with the same <code>threshold</code> signatures …","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","","","","","","","Runs the DKG algorithms with our peers","","Runs the DKG algorithms for a given key and module id","","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Client configuration file","Client connection string file","Version of the server code (should be the same among peers)","Server consensus-only configurable file","Database file name","","","Server locally configurable file","Plain-text stored password, used to restart the server …","Server encrypted private keys file","Salt backup for combining with the private key","Reads an encrypted json file into a struct","Writes struct into an encrypted json file","","Reads a plaintext json file into a struct","Writes struct into a plaintext json file","Reads the server from the local, private, and consensus …","Writes the server into configuration files (private keys …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Runs the main server consensus loop","","How many txs can be stored in memory before blocking the …","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Creates a server with real network and no delays","Creates a server that can simulate network and delays","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of per-peer messages after which we will stop …","TODO: Use proper ModuleId after modularization is complete","","A <code>Msg</code> that can target a specific destination module","","A wrapper around <code>AnyPeerConnections</code> multiplexing …","","","","","","","","Callback queue from tasks that want to receive","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Cached messages per <code>ModuleId</code> waiting for callback","","Sender of peer bans","Track pending messages per peer to avoid a potential DoS","Await receipt of a message from any connected peer.","Sender of receive callbacks","","","Sender of send requests","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","Implements a connection manager for communication with …","","","Very simple cache mostly used to protect endpoints against …","A state that has context for the API, passed to each rpc …","","","","","","","","","","","Our server configuration","Cached client config","","","","","","","","","","","Database for serving the API","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Modules registered with the federation","","","","","","","For sending API events to consensus such as transactions","","","","","","","","","","","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","Sanitizes name as valid domain name","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","","","","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","Parses the host and port from a url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","","","","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","","","","","","","","","","","Calculates delays for reconnecting to peers","","","","Specifies the network configuration for …","Every how many seconds to send an empty message to our …","","Production defaults will try to reconnect fast but then …","","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","","","Keeps the references to a <code>PeerStatusChannelSender</code> for each …","","","Connection manager that automatically reconnects to peers","","For tests we don’t want low min/floor delays because …","","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Our federation member’s identity","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Every how many seconds to send an empty message to our …","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnectionsReliable</code>…","","","","Keeps the references to a <code>PeerStatusChannelSender</code> for each …","","Connection manager that automatically reconnects to peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,21,21,28,21,28,0,0,0,3,21,0,21,21,28,0,28,21,28,21,28,0,0,21,21,28,21,21,21,28,21,28,21,28,21,28,21,28,33,0,0,33,0,0,32,33,32,33,32,33,32,33,32,32,32,0,32,33,33,33,33,33,32,0,32,33,32,33,32,32,33,32,33,32,33,0,0,32,0,32,0,32,33,0,32,33,32,33,32,33,32,33,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,61,61,61,61,61,61,61,61,61,61,61,0,66,0,66,0,71,66,71,66,66,66,66,66,66,66,66,66,66,66,66,66,66,71,66,66,71,66,71,66,71,66,66,71,71,71,71,66,71,66,66,71,66,71,66,71,66,71,66,0,77,77,77,77,77,77,77,77,77,77,77,77,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,86,84,86,84,84,84,86,84,84,84,84,84,84,86,84,84,84,86,84,86,84,86,86,86,84,86,84,86,84,86,84,86,84,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,108,0,123,0,0,130,0,0,0,0,110,0,0,0,110,0,108,123,0,0,108,0,0,130,0,123,123,0,130,110,0,0,0,0,0,0,0,0,16,0,102,106,103,104,92,96,96,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,104,104,104,106,102,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,105,104,105,109,0,16,92,91,93,101,103,105,109,93,101,103,104,105,109,93,101,103,104,105,109,101,91,103,96,96,96,100,93,101,16,102,103,104,105,106,108,109,91,110,16,0,105,100,93,101,103,105,108,109,91,100,100,100,100,93,93,93,93,101,101,101,101,103,103,103,103,105,105,105,105,108,108,108,108,109,109,109,109,91,91,91,91,100,93,101,16,102,103,104,105,106,108,109,91,110,106,103,100,93,101,16,102,103,104,105,105,106,96,92,108,109,91,110,123,123,100,93,101,16,16,102,103,104,105,106,96,96,92,108,109,91,91,110,123,123,123,93,101,103,105,109,96,130,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,105,0,96,101,101,16,16,101,101,16,16,16,16,101,93,105,108,106,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,0,100,16,104,100,100,109,96,16,92,91,0,106,103,104,101,102,104,106,104,93,16,100,96,106,92,92,105,92,16,91,101,0,0,0,100,93,101,16,102,103,104,105,106,108,109,91,110,123,16,16,92,104,16,92,102,93,101,103,105,109,104,96,130,105,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,130,105,105,123,91,16,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,93,16,100,100,104,109,100,93,101,16,102,103,104,105,106,96,92,108,109,91,110,123,100,0,0,0,0,0,144,148,148,149,149,146,146,144,144,148,149,146,150,144,148,149,146,150,144,148,149,146,150,144,148,149,146,150,146,144,144,144,144,144,144,144,149,149,148,149,146,150,144,148,149,146,150,144,148,149,146,150,146,146,144,144,148,149,146,150,144,148,149,146,150,150,146,146,148,149,144,146,148,150,146,148,148,149,149,146,149,146,144,144,0,144,144,144,144,146,146,144,144,146,144,150,150,144,148,149,146,150,144,148,149,146,150,144,148,149,146,150,144,148,149,146,150,144,144,144,144,148,149,146,150,144,0,0,0,0,165,0,165,0,161,163,161,165,166,167,163,161,165,166,167,163,165,166,167,165,166,167,163,161,274,163,163,165,166,167,163,161,165,166,167,165,166,167,163,163,163,163,163,161,165,166,167,163,161,165,166,167,161,163,161,163,161,163,161,163,166,167,161,274,161,274,161,161,0,166,167,163,163,166,163,166,165,166,167,163,161,165,166,167,163,161,165,166,167,163,161,165,166,167,163,161,165,166,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,177,177,177,0,177,177,177,177,177,177,177,0,0,177,177,177,177,177,0,0,0,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,183,183,183,183,189,0,0,189,0,0,189,0,0,0,0,0,189,189,0,0,190,189,190,191,192,193,194,195,196,197,198,189,190,191,192,193,194,195,196,197,198,189,190,191,192,189,190,191,192,191,192,193,194,195,196,197,198,191,192,193,194,195,196,197,198,191,192,193,194,195,196,197,198,193,189,189,191,192,193,194,195,196,197,198,189,190,191,192,193,194,195,196,197,198,191,191,192,193,193,194,195,195,196,197,197,198,189,190,191,192,190,0,190,189,190,191,192,193,194,195,196,197,198,190,189,190,191,192,193,194,195,196,197,198,189,190,190,190,190,190,193,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,189,190,191,192,189,189,190,191,192,193,194,195,196,197,198,189,190,191,192,193,194,195,196,197,198,189,190,191,192,193,194,195,196,197,198,189,190,191,192,193,194,195,196,197,198,0,0,0,0,0,0,0,200,202,201,200,202,201,200,202,201,200,201,200,202,201,201,201,202,201,200,201,200,202,201,200,202,201,200,201,201,202,200,200,202,200,200,200,200,200,201,201,200,202,201,200,202,201,200,202,201,200,202,201,200,0,0,0,0,0,0,0,0,0,29,29,29,29,4,29,210,4,29,210,29,29,4,29,210,4,29,210,29,29,29,210,29,210,4,4,29,210,4,29,210,210,29,29,29,29,4,29,210,4,29,210,29,29,210,4,29,4,0,29,29,29,29,4,29,210,4,29,210,4,29,210,4,29,210,4,29,210,0,0,0,0,0,0,0,0,218,218,222,113,218,222,113,218,222,113,218,113,218,275,222,0,222,113,218,222,113,218,113,218,218,222,113,218,275,222,113,218,275,222,0,222,218,222,222,113,0,218,222,113,222,113,113,218,222,113,218,222,113,218,222,113,218,222,113,218,226,0,226,226,0,225,226,0,0,226,0,0,0,224,231,232,228,227,224,225,226,231,232,228,227,224,225,226,231,228,227,224,225,226,224,225,226,227,228,0,224,224,224,224,224,232,231,231,224,225,226,231,232,228,227,224,225,226,224,225,226,232,227,231,231,232,228,227,224,225,226,231,232,228,227,224,225,226,232,227,224,224,231,232,228,224,225,231,231,231,231,231,224,225,231,227,231,232,232,0,224,225,226,231,232,228,227,224,225,226,231,232,228,227,224,225,226,231,232,228,227,224,225,226,231,232,228,227,224,225,226,231,276,276,276,276,276,276,276,276,0,0,0,0,0,0,0,239,238,239,238,239,238,277,238,239,239,238,239,238,239,238,239,277,238,239,238,238,239,245,238,238,238,238,238,238,238,238,238,238,238,239,238,239,238,238,239,238,239,114,0,250,0,0,250,0,247,0,0,114,114,114,0,0,0,0,0,0,0,0,0,0,247,0,114,114,114,85,112,255,253,249,254,256,250,85,246,112,247,248,114,255,253,249,254,256,250,85,246,112,247,248,114,85,246,112,247,248,114,85,246,112,247,248,114,255,249,249,256,85,249,112,247,249,249,112,247,254,112,247,114,255,253,249,254,256,250,85,246,112,247,248,114,85,246,112,247,248,114,248,112,249,246,249,255,253,249,254,256,250,85,246,112,247,248,114,255,253,249,254,256,250,85,246,112,247,248,114,114,114,85,246,256,249,249,246,249,249,278,112,85,246,249,249,254,114,253,255,246,85,85,246,249,85,112,247,255,255,249,249,249,85,246,112,247,248,114,255,253,249,254,256,250,85,246,112,247,248,114,255,253,249,254,256,250,85,246,112,247,248,114,249,255,253,249,254,256,250,85,246,112,247,248,114,255,253,249,254,256,250,85,246,112,247,248,114,0,261,0,261,0,0,0,0,0,0,0,0,0,0,0,0,0,258,257,257,264,267,263,260,265,266,261,258,259,257,264,267,263,260,265,266,261,258,259,258,259,258,259,267,260,260,266,257,260,258,260,260,258,265,258,257,264,267,263,260,265,266,261,258,259,258,259,259,264,260,260,257,264,267,263,260,265,266,261,258,259,257,264,267,263,260,265,266,261,258,259,260,258,257,264,266,260,264,260,260,260,279,257,264,260,260,260,260,265,260,260,263,267,264,257,257,264,260,260,260,260,258,267,267,260,260,260,258,259,257,264,267,263,260,265,266,261,258,259,257,264,267,263,260,265,266,261,258,259,260,257,264,267,263,260,265,266,261,258,259,257,264,267,263,260,265,266,261,258,259,0,0,0,269,269,270,268,269,270,268,269,270,268,269,270,268,270,268,270,268,269,270,268,269,270,268,269,269,269,269,270,270,270,270,268,268,268,268,270,268,269,270,268,269,270,268,269,270,268,268,270,269,270,268,269,270,268,269,268,269,270,268,269,269,270,268,269,270,268,269,270,268,269,270,268,269,270,268,269,270,268],"f":[0,0,0,0,0,0,[[[5,[[4,[[0,[[3,[[0,[1,2]]]],1,2]]]]]],[7,[[6,[[0,[1,2]]]]]],[9,[8]]]],[[]],[[]],[[]],[[]],[10,11],0,0,[[12,[9,[8]]],[[15,[[14,[13]]]]]],0,0,0,[[]],[[]],[16,[[19,[17,18]]]],0,[[]],[[]],[[],20],[[],20],0,0,[[21,22],23],[[21,22],[[23,[16]]]],0,0,[[24,25,[5,[4]],26,27],28],[[29,27],28],[28],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[32,32],[33,33],[[]],[[]],[[34,35],[[30,[32,36]]]],[[32,37],[[30,[38,39]]]],[37,[[30,[38,39]]]],0,[40,[[30,[32]]]],[[33,33],27],[[],27],[[],27],[[],27],[[],27],[41,[[30,[42,43]]]],0,[[32,44],45],[[33,44],45],[[]],[[]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],0,0,[[32,52],30],0,[[],[[7,[46,53]]]],[17,54],[[]],[[]],[54,17],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],0,[[]],[[]],0,0,[27,[[30,[39]]]],[27,[[30,[39]]]],[55,[[30,[39]]]],[55,[[30,[39]]]],[56,[[30,[39]]]],[56,[[30,[39]]]],[57,[[30,[39]]]],[57,[[30,[39]]]],[58,[[30,[39]]]],[58,[[30,[39]]]],[[[47,[46]]],[[30,[39]]]],[[[47,[46]]],[[30,[39]]]],[59,[[30,[39]]]],[59,[[30,[39]]]],[26,[[30,[39]]]],[26,[[30,[39]]]],[60,[[30,[39]]]],[60,[[30,[39]]]],[46,[[30,[39]]]],[46,[[30,[39]]]],[61,62],[[]],[[]],[[],20],[63],[[63,60],61],[[],30],[[],30],[[],31],0,[[]],[[[47,[46]]]],[[61,[47,[46]]],[[62,[38]]]],[[[47,[46]]],[[30,[39]]]],[64,[[30,[38,39]]]],[65,[[30,[38,39]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[66,66],[[]],[67,[[30,[66,68]]]],[[[47,[46]]],[[30,[68]]]],[[26,[47,[46]]],[[30,[68]]]],[[26,67],[[30,[68]]]],[[66,[0,[69,70]]]],[[66,66],27],[[],27],[[],27],[[],27],[[],27],[[66,44],45],[[]],[[]],[[]],[71,[[15,[[14,[13]]]]]],[[66,72]],[[]],[[]],[[],20],[[],20],[66,27],0,0,[[[74,[73]],[76,[[9,[75]]]]],71],0,[66,38],0,[[[47,[46]]],[[7,[46,53]]]],[[]],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],0,[[]],[[]],[[77,66,54]],[[]],[[]],[[],20],[78,77],0,[[],30],[[],30],[[],31],[[]],0,[[79,54]],[[]],[[]],[79,79],[[]],[[79,44],45],[[]],[[]],[79,54],[[]],[[],20],[[79,[47,[46]]],27],0,[[17,[19,[17,80]],81],79],[79,82],[79,38],[79,17],0,0,0,[[79,[47,[46]]]],[[79,[47,[46]]],83],[79,38],[[]],[[],30],[[],30],[[],31],[[79,[47,[46]],54],27],[[]],0,0,0,[[]],[[]],[[]],[[]],[84,84],[[]],0,[[84,84],27],[[],27],[[],27],[[],27],[[],27],[[84,44],45],[[]],[[]],[[]],[[[47,[46]]]],[[]],[[]],[[],20],[[],20],[[[85,[32]]],86],[86,[[15,[[14,[13]]]]]],[[86,87,88]],[[]],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],0,[[]],[[]],[89,89],[[]],[[],89],[[]],[[]],[[]],[[],20],[[],89],[[89,24,[0,[13,2]]]],[[89,24,[0,[13,2]]],90],[[]],[[],30],[[],30],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,[19,[8,91]]]],0,0,0,0,0,[92,[[19,[17,93]]]],[[[96,[[95,[94]]]],[0,[[97,[[95,[94]]]],2,1]]]],[[[96,[[95,[94]]]],98],[[30,[[50,[48,49]],99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[100,100],[93,93],[101,101],[16,16],[102,102],[103,103],[104,104],[105,105],[106,106],[[[96,[107]]],[[96,[107]]]],[92,92],[108,108],[109,109],[91,91],[110,110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[105,105],111],0,[[],111],0,[[112,113,114,22],[[119,[[0,[115,107,116,117,118,2,1]]]]]],0,0,0,[[34,[50,[48,49]]],[[30,[93,36]]]],[[34,[50,[48,49]]],[[30,[101,36]]]],[[34,[50,[48,49]]],[[30,[103,36]]]],[[34,[50,[48,49]]],[[30,[105,36]]]],[[34,[50,[48,49]]],[[30,[109,36]]]],[[93,37],[[30,[38,39]]]],[[101,37],[[30,[38,39]]]],[[103,37],[[30,[38,39]]]],[[104,37],[[30,[38,39]]]],[[105,37],[[30,[38,39]]]],[[109,37],[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[101,18],0,0,[[[96,[[95,[94]]]],98],[[30,[[50,[48,49]],99]]]],[[[96,[[95,[94]]]],98],[[30,[[50,[48,49]],99]]]],[[],96],[40,[[30,[100]]]],[40,[[30,[93]]]],[40,[[30,[101]]]],[40,[[30,[16]]]],[40,[[30,[102]]]],[40,[[30,[103]]]],[40,[[30,[104]]]],[40,[[30,[105]]]],[40,[[30,[106]]]],[40,[[30,[108]]]],[40,[[30,[109]]]],[40,[[30,[91]]]],[40,[[30,[110]]]],[[92,120,114,22],[[121,[16]]]],0,[[],105],[[100,100],27],[[93,93],27],[[101,101],27],[[103,103],27],[[105,105],27],[[108,108],27],[[109,109],27],[[91,91],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],0,[103,105],[[100,44],[[30,[122]]]],[[93,44],[[30,[122]]]],[[101,44],[[30,[122]]]],[[16,44],45],[[102,44],45],[[103,44],[[30,[122]]]],[[104,44],45],[[105,44],[[30,[122]]]],[[105,44],[[30,[122]]]],[[106,44],45],[[[96,[115]],44],[[30,[122]]]],[[92,44],45],[[108,44],45],[[109,44],[[30,[122]]]],[[91,44],[[30,[122]]]],[[110,44],[[30,[122]]]],[[123,44],[[30,[122]]]],[[123,44],[[30,[122]]]],[[]],[[]],[[]],[[92,17,[19,[17,80]],81,[19,[8,91]]],16],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[[95,[94]],53]]],[[96,[[95,[94]]]]]],[[]],[[]],[[]],[[]],[[100,100,109,100],91],[[]],[[]],[124,123],[99,123],[[]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[125,[[96,[[95,[94]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[30,[105]]]],[24,[[30,[99]]]],[[96,126],9],[[101,[97,[126]]],[[30,[99]]]],[[101,[97,[126]]],[[30,[99]]]],[16,59],[16,127],[[101,59],[[30,[128,99]]]],[[101,59],[[30,[129,99]]]],[[[19,[8,100]],8],[[23,[100]]]],[[16,8],[[23,[91]]]],[[16,8],[[23,[130]]]],[[16,[97,[126]]],[[23,[8]]]],0,[[93,72]],[[105,72]],[[108,72]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[100,126],27],[16,98],[104,98],[100,126],0,0,[96,[[131,[126,53]]]],0,0,0,[[],26],0,0,0,0,0,0,0,0,0,[16,112],[[126,132],100],[[],96],0,[92,112],[92,[[19,[17,93]]]],[[105,105],[[9,[111]]]],[92,[[7,[17]]]],0,0,[[101,[50,[48,49]]],[[30,[101,36]]]],0,0,0,[[100,52],30],[[93,52],30],[[101,52],30],[[16,52],30],[[102,52],30],[[103,52],30],[[104,52],30],[[105,52],30],[[106,52],30],[[108,52],30],[[109,52],30],[[91,52],30],[[110,52],30],[123,[[9,[133]]]],[[],134],[[[19,[8,109]],120],135],[92,[[19,[17,136]]]],0,[16,113],[92,113],0,[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[104,[96,[137]]],[[30,[101,99]]]],[[[96,[137]]],[[96,[138]]]],[[],91],[[105,[140,[139]]],[[30,[80,99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,141],[[],142],[[],142],[91,[[30,[130,99]]]],[[[143,[17,92]],120],[[19,[17,16]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[16,17,120],23],[100,132],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],0,0,0,0,0,[[144,145],11],0,0,0,0,[146,[[11,[147]]]],0,[24,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,144],[148,148],[149,149],[146,146],[150,150],[[]],[[]],[[]],[[]],[[]],0,[144,[[11,[[7,[145]]]]]],0,[[144,151],[[11,[152]]]],[[144,12,[9,[8]]],[[15,[[14,[13]]]]]],0,0,[144,[[11,[151]]]],0,0,[[148,44],45],[[149,44],45],[[146,44],45],[[150,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[146,151,153],[[11,[92]]]],[146,[[19,[17,145]]]],[144,[[11,[151]]]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[146,[[11,[150]]]],0,0,[[154,149,63,[155,[16]],22],144],[149,146],0,0,[146,[[11,[145]]]],0,0,0,0,0,0,0,[[144,156],[[11,[[157,[146]]]]]],[144,11],[[],[[7,[[6,[144]]]]]],[144,156],[[144,158],11],[[144,151],11],[[144,147],11],[[146,158],11],0,[[144,147],11],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[144,11],[144,11],[144,[[11,[[19,[17,18]]]]]],[[]],[[]],[[]],[[]],[[]],[[144,16,146],11],0,0,0,0,0,0,0,0,[[[161,[[0,[116,117,118,2,107,159,160]]]],[0,[116,117,118,2,107,159,160]],38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[163,[162]],[164,[162]]],[[165,[162]]]],[[[165,[[0,[107,162]]]]],[[165,[[0,[107,162]]]]]],[[[166,[107]]],[[166,[107]]]],[167,167],[[]],[[]],[[]],0,0,[[142,80],[[15,[[14,[13]]]]]],0,0,[[[165,[[0,[115,162]]]],44],45],[[[166,[115]],44],45],[[167,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[163,[162]]],162],[[[163,[162]],[7,[162]]],18],0,[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[[7,[[0,[116,117,118,2,107,159,160]]]],38,17,[47,[17]]],[[161,[[0,[116,117,118,2,107,159,160]]]]]],[[162,17,[7,[17]],38,168]],[[[0,[116,117,118,2,107,159,160]],38,17,[47,[17]]],[[161,[[0,[116,117,118,2,107,159,160]]]]]],0,0,0,0,0,0,0,[[[161,[[0,[116,117,118,2,107,159,160]]]],8,162,[169,[110]]],[[121,[[143,[[0,[116,117,118,2,107,159,160]],[166,[162]]]]]]]],[[[0,[116,117,118,2,107,159,160,1]]],[[15,[[14,[13]]]]]],[[[169,[110]],[163,[162]],[165,[162]]],[[121,[[166,[162]]]]]],[[[7,[[0,[116,117,118,2,107,159,160,1]]]]],[[15,[[14,[13]]]]]],[[[161,[[0,[116,117,118,2,107,159,160]]]],8,[169,[110]]],[[121,[[143,[[0,[116,117,118,2,107,159,160]],[166,[170]]]]]]]],[[[161,[[0,[116,117,118,2,107,159,160]]]],8,[169,[110]]],[[121,[[143,[[0,[116,117,118,2,107,159,160]],[166,[171]]]]]]]],[17,172],0,0,0,[[[163,[162]],17,[164,[162]]],[[23,[[165,[162]]]]]],[[[166,[171]]]],0,[[[166,[170]]],167],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[173,154],[[23,[[0,[116,117]]]]]],[[[0,[116,117]],173,154],23],[[174,175],23],[154,[[23,[[0,[116,117]]]]]],[[[0,[116,117]],154],23],[[24,154],[[23,[16]]]],[[16,154,24,120],23],[40,[[30,[117]]]],[[116,52],30],[40,[[30,[[19,[17,136]]]]]],[[[19,[17,136]],52],30],[40,[[30,[176]]]],[[176,52],30],0,[[177,178]],[[177,178]],[[]],[[]],0,[[],177],0,[[]],0,[[]],[[],20],0,[[179,180,181],[[30,[182]]]],0,[[],30],[[],30],[[],31],[177,[[30,[182]]]],[[]],[73,142],0,0,0,0,[[]],[[]],[183,184],0,[[183,60,185]],[[183,60,38,74,[186,[[9,[75]]]]],[[23,[185]]]],[183,23],0,0,[183,35],[[]],[[]],[[],20],0,0,0,[[16,63,120,22],23],[[16,63,120,[187,[32]],114,22],23],[[183,60,60,73,17],23],[[183,180,73,17],23],[[183,60],185],[[183,188],23],[[183,188],23],[[183,60],23],[[183,188],23],0,[[22,63,179,[78,[73]]]],[[],30],[[],30],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[189,189],[190,190],[191,191],[192,192],[[]],[[]],[[]],[[]],[[34,35],[[30,[191,36]]]],[[34,35],[[30,[192,36]]]],[[34,35],[[30,[193,36]]]],[[34,35],[[30,[194,36]]]],[[34,35],[[30,[195,36]]]],[[34,35],[[30,[196,36]]]],[[34,35],[[30,[197,36]]]],[[34,35],[[30,[198,36]]]],[[191,37],[[30,[38,39]]]],[[192,37],[[30,[38,39]]]],[[193,37],[[30,[38,39]]]],[[194,37],[[30,[38,39]]]],[[195,37],[[30,[38,39]]]],[[196,37],[[30,[38,39]]]],[[197,37],[[30,[38,39]]]],[[198,37],[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[37,[[30,[38,39]]]],[41,[[30,[42,43]]]],[[189,44],45],[[189,44],45],[[191,44],45],[[192,44],45],[[193,44],45],[[194,44],45],[[195,44],45],[[196,44],45],[[197,44],45],[[198,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[[47,[46]],[50,[48,49]]],[[30,[51]]]],[[]],[[]],[[]],[[]],[[190,38],[[9,[189]]]],[[],199],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],190],[190,38],0,[190,9],[190,9],[[190,38],9],[[193,52],30],[190],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[],[[7,[46,53]]]],[[]],[[]],[[]],[[]],[[],142],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[200,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]],17],[[15,[[14,[13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[201,[107,107]]],[[201,[107,107]]]],[[[200,[107,107]]],[[200,[107,107]]]],[[]],[[]],[[],202],[40,[[30,[[201,[203,203]]]]]],[41,[[30,[42,43]]]],[[[201,[115,115]],44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],0,0,0,[[[119,[[201,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]]]]],[[200,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]]]],0,0,[[[200,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]],[0,[116,117,118,2,115,159,160,107]]],[[15,[[14,[13]]]]]],0,[[[119,[[201,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]]]],[202,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]],204,204,[204,[17]]],205],[[[200,[[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]]],[47,[17]],[0,[116,117,118,2,115,159,160,107]],[0,[116,117,118,2,115]]],[[15,[[14,[13]]]]]],0,[[[201,[116,116]],52],30],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[29,135],[[29,206],[[23,[[208,[207]]]]]],[[29,60],185],[[29,209]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[4,[107]]],[[4,[107]]]],[29,29],[[[210,[107]]],[[210,[107]]]],[[]],[[]],[[]],0,[[29,12,[9,[8]]],[[15,[[14,[13]]]]]],[[29,12,[9,[8]]],[[15,[[14,[13]]]]]],0,0,0,[[[4,[115]],44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[[210,[107]],211],107],[29,[[11,[212]]]],[29,[[11,[213]]]],[[29,180,214],[[23,[215]]]],[[29,180,80],[[9,[216]]]],[[]],[[]],[[]],[[],20],[[],20],[[],20],0,0,[217,[[210,[107]]]],[[],[[5,[4]]]],0,0,[[],[[7,[[6,[29]]]]]],[29,60],0,[[29,181],[[23,[209,182]]]],0,[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[218,219,220],[[30,[99]]]],[[218,[9,[[47,[136]]]]],[[30,[17,99]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[113,113],[218,218],[[]],[[]],[[221,17],[[15,[[14,[13]]]]]],[[222,221,17],[[15,[[14,[13]]]]]],[24,142],[[222,44],45],[[113,44],45],[[218,44],45],[[]],[[]],[[]],[[]],[[]],[[218,136],[[9,[17]]]],[[]],[[]],[[]],[[[0,[70,2,1,118]]],223],[[],20],[[],20],[[],20],[25,[[15,[[14,[13]]]]]],[[222,25],[[15,[[14,[13]]]]]],0,[[113,17],222],[125,218],0,0,0,[221,[[23,[142]]]],0,0,0,0,0,[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[224,224],[225,225],[226,226],[[]],[[]],[[]],[[227,221,17],[[15,[[14,[13]]]]]],[[228,17,226],227],[[17,[0,[229,230,118]]],[[30,[17,99]]]],[[224,224],27],[[],27],[[],27],[[],27],[[],27],0,0,[[231,44],45],[[224,44],45],[[225,44],45],[[226,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[232,233],[[234,[62]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[227,25],[[15,[[14,[13]]]]]],0,0,[[235,226],231],[[224,225],232],[[],228],[[217,217],224],[236,225],[[231,233],27],[[[15,[231]],233],[[234,[[30,[39]]]]]],[[[15,[231]],233,237],[[234,[62]]]],[[[15,[231]],233],[[234,[[30,[39]]]]]],[[[15,[231]],233,[47,[46]]],[[234,[[30,[38,39]]]]]],[224,217],[225,27],0,0,0,0,0,[13,9],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[238,[[0,[116,117]],230,229]]]],[[]],[[[238,[[0,[115,116,117,2]],[0,[230,2,118]],[0,[229,2,118]]]]]],[[[239,[117]],240],[[30,[9]]]],[[[239,[[0,[116,115]]]],[0,[116,115]],240],30],[[[238,[115,115,115]],44],45],[[[239,[115]],44],45],[[]],[[]],[[]],[[]],[[[0,[70,2,118]]],241],[[],20],[[],20],[[],20],[[[0,[229,230]]],[[238,[[0,[116,117]],[242,[[0,[229,230]]]],[243,[[0,[229,230]]]]]]]],[[],239],[244,[[245,[[0,[116,117]]]]]],[244,[[245,[[0,[116,117]]]]]],[[],[[15,[[14,[13,53]]]]]],[[],[[15,[[14,[13,53]]]]]],[[[15,[[238,[[0,[115,116]],[0,[230,118]],118]]]],233],[[234,[30]]]],[[[15,[[238,[[0,[115,116]],[0,[230,118]],118]]]],233],[[234,[30]]]],[[[15,[[238,[117,118,[0,[229,118]]]]]],233],[[234,[9]]]],[[[15,[[238,[[0,[115,116]],[0,[230,118]],118]]]],233],[[234,[30]]]],0,[[[15,[[238,[[0,[115,116]],[0,[230,118]],118]]]],[0,[115,116]]],30],0,[[],30],[[],30],[[],30],[[],30],[[15,233],[[234,[[9,[30]]]]]],[[],31],[[],31],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[85,[[0,[115,116,117,107,118,2,1]]]],17],[[15,[[14,[13]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[107]]],[[85,[107]]]],[[[246,[107]]],[[246,[107]]]],[112,112],[[[247,[107]]],[[247,[107]]]],[248,248],[114,114],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[249,[[0,[115,107]]]],[241,[[247,[[0,[115,107]]]]]],60],[[250,[[0,[115,107]]]]]],0,0,0,0,[40,[[30,[112]]]],[40,[[30,[[247,[203]]]]]],[[[249,[[0,[115,107]]]],60],[[250,[[0,[115,107]]]]]],[[[249,[[0,[115,107]]]],99,60],[[250,[[0,[115,107]]]]]],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],0,[[112,44],45],[[[247,[115]],44],45],[[114,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[248,[[143,[17,[23,[251]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[112,114,[187,[[0,[115,107,116,117,118,2,1]]]],22]],[[17,17,221,114,[252,[[247,[[0,[115,107,2,1]]]]]],[204,[[241,[[247,[[0,[115,107,2,1]]]]]]]],[204,[253]],22],[[246,[[0,[115,107,2,1]]]]]],0,0,0,0,0,0,[[[131,[17]]],[[7,[17]]]],0,[[[85,[[0,[115,116,117,107,118,2,1]]]]],[[15,[[14,[13]]]]]],[[[246,[[0,[115,107,2,1]]]]],[[205,[[0,[115,107,2,1]]]]]],[[[249,[[0,[115,107]]]],254,[241,[[247,[[0,[115,107]]]]]]],[[250,[[0,[115,107]]]]]],[[[249,[[0,[115,107]]]],254],[[250,[[0,[115,107]]]]]],0,[[114,60],217],0,[[[255,[[0,[115,107]]]],188]],[[[78,[[0,[115,107,2,1]]]],[74,[[0,[115,107,2,1]]]],17,17,221,114,[252,[[247,[[0,[115,107,2,1]]]]]],[204,[[241,[[247,[[0,[115,107,2,1]]]]]]]],[204,[253]],188]],[[112,[252,[[247,[[0,[115,107,116,117,118,2,1]]]]]],[143,[17,[155,[[241,[[247,[[0,[115,107,116,117,118,2,1]]]]]]]]]],188]],[[[85,[[0,[115,116,117,107,118,2,1]]]],[47,[17]],[0,[115,116,117,107,118,2,1]]],[[15,[[14,[13]]]]]],[[[246,[[0,[115,107,2,1]]]],[0,[115,107,2,1]]]],[[[249,[[0,[115,107]]]],[256,[[0,[115,107]]]],[247,[[0,[115,107]]]]],[[250,[[0,[115,107]]]]]],[[[85,[[0,[115,107,116,117,118,2,1]]]],[0,[115,107,116,117,118,2,1]],33]],[[112,52],30],[[[247,[116]],52],30],0,[[[255,[[0,[115,107]]]],188],[[9,[[255,[[0,[115,107]]]]]]]],[[[249,[[0,[115,107]]]],[256,[[0,[115,107]]]],188],[[9,[[250,[[0,[115,107]]]]]]]],[[[249,[[0,[115,107]]]],254,188],[[9,[[250,[[0,[115,107]]]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[249,[[0,[115,107]]]]],[[30,[[241,[[247,[[0,[115,107]]]]]],99]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[257,[[0,[115,116,117,107,118,2,1]]]],17],[[15,[[14,[13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[258,[107]]],[[258,[107]]]],[259,259],[[]],[[]],0,[[[260,[[0,[115,107]]]],[241,[[258,[[0,[115,107]]]]]],60],[[261,[[0,[115,107]]]]]],0,0,0,0,[40,[[30,[[258,[203]]]]]],[[[260,[[0,[115,107]]]],60],[[261,[[0,[115,107]]]]]],[[[260,[[0,[115,107]]]],99,60],[[261,[[0,[115,107]]]]]],[41,[[30,[42,43]]]],0,[[[258,[115]],44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[259,[[143,[17,[23,[251]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[112,114,[262,[[0,[115,107,116,117,118,2,1]]]],22]],[[17,17,221,114,[252,[[258,[[0,[115,107,2,1]]]]]],[204,[[241,[[258,[[0,[115,107,2,1]]]]]]]],[204,[263]],22],[[264,[[0,[115,107,2,1]]]]]],0,0,0,0,0,0,[[[131,[17]]],[[7,[17]]]],[[[257,[[0,[115,116,117,107,118,2,1]]]]],[[15,[[14,[13]]]]]],[[[264,[[0,[115,107,2,1]]]]],[[205,[[0,[115,107,2,1]]]]]],[[[260,[[0,[115,107]]]],265,[241,[[258,[[0,[115,107]]]]]]],[[261,[[0,[115,107]]]]]],[[[260,[[0,[115,107]]]],[266,[[0,[115,107]]]],[30,[[258,[[0,[115,107]]]],99]]],[[261,[[0,[115,107]]]]]],[[[260,[[0,[115,107]]]],[30,[[258,[[0,[115,107]]]],99]]],[[30,[99]]]],[[[260,[[0,[115,107]]]],265],[[261,[[0,[115,107]]]]]],0,[[[260,[[0,[115,107]]]],[241,[[258,[[0,[115,107]]]]]]],[[30,[99]]]],0,0,[[[267,[[0,[115,107]]]],188]],[[[155,[[0,[115,107,2,1]]]],[204,[[0,[115,107,2,1]]]],17,17,221,114,[252,[[258,[[0,[115,107,2,1]]]]]],[204,[[241,[[258,[[0,[115,107,2,1]]]]]]]],[204,[263]],188]],[[112,[252,[[258,[[0,[115,107,116,117,118,2,1]]]]]],[143,[17,[155,[[241,[[258,[[0,[115,107,116,117,118,2,1]]]]]]]]]],188]],[[[257,[[0,[115,116,117,107,118,2,1]]]],[47,[17]],[0,[115,116,117,107,118,2,1]]],[[15,[[14,[13]]]]]],[[[264,[[0,[115,107,2,1]]]],[0,[115,107,2,1]]],205],[[[260,[[0,[115,107]]]],265,[0,[115,107]]],[[261,[[0,[115,107]]]]]],[[[260,[[0,[115,107]]]],[266,[[0,[115,107]]]],[0,[115,107]]],[[261,[[0,[115,107]]]]]],[[[260,[[0,[115,107]]]],[266,[[0,[115,107]]]],[9,[[268,[[0,[115,107]]]]]]],[[261,[[0,[115,107]]]]]],[[[260,[[0,[115,107]]]],[266,[[0,[115,107]]]]],[[261,[[0,[115,107]]]]]],[[[258,[116]],52],30],0,[[[267,[[0,[115,107]]]],188],[[9,[[267,[[0,[115,107]]]]]]]],[[[260,[[0,[115,107]]]],[266,[[0,[115,107]]]],188],[[9,[[261,[[0,[115,107]]]]]]]],[[[260,[[0,[115,107]]]],265,188],[[9,[[261,[[0,[115,107]]]]]]]],0,[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[260,[[0,[115,107]]]]],[[30,[[241,[[258,[[0,[115,107]]]]]],99]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[269,[107]],270]],[[]],[[]],[[]],[[]],[[]],[[]],[[[269,[107]]],[[269,[107]]]],[270,270],[[[268,[107]]],[[268,[107]]]],[[]],[[]],[[]],[[270,270],111],[[[268,[271]],[268,[271]]],111],[[],111],[[],111],[[],269],[40,[[30,[270]]]],[40,[[30,[[268,[203]]]]]],[[[269,[272]],[269,[272]]],27],[[270,270],27],[[[268,[272]],[268,[272]]],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[41,[[30,[42,43]]]],[41,[[30,[42,43]]]],[[[269,[115]],44],45],[[270,44],45],[[[268,[115]],44],45],[[]],[[]],[[]],[[]],[[]],[[]],0,[270,270],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[[269,[107]]],98],0,0,[[270,270],[[9,[111]]]],[[[268,[273]],[268,[273]]],[[9,[111]]]],[[[269,[107]],107],[[268,[107]]]],0,[[270,52],30],[[[268,[116]],52],30],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[]],[[]],[[]]],"c":[425],"p":[[8,"Sync"],[8,"Send"],[8,"HasApiContext"],[3,"RpcHandlerCtx"],[3,"RpcModule"],[3,"ApiEndpoint"],[3,"Vec"],[6,"ModuleInstanceId"],[4,"Option"],[3,"ApiEndpointContext"],[6,"ApiResult"],[6,"ApiRequestErased"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"ServerConfig"],[3,"PeerId"],[3,"Hash"],[3,"BTreeMap"],[3,"Request"],[3,"FedimintServer"],[3,"TaskGroup"],[6,"Result"],[15,"str"],[4,"SocketAddr"],[15,"u32"],[15,"bool"],[3,"FedimintApiHandler"],[3,"ConsensusApi"],[4,"Result"],[3,"TypeId"],[3,"Message"],[4,"Recipient"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[8,"Write"],[15,"usize"],[3,"Error"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Serializer"],[3,"Global"],[3,"NodeIndex"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u16"],[15,"u64"],[3,"UnitSaver"],[6,"Result"],[3,"Database"],[8,"FixedInt"],[8,"VarInt"],[4,"UnitData"],[8,"Input"],[3,"Error"],[8,"Output"],[8,"Sized"],[3,"DataProvider"],[8,"Hasher"],[4,"ConsensusItem"],[3,"Receiver"],[3,"SchnorrSignature"],[3,"Receiver"],[3,"FinalizationHandler"],[3,"Sender"],[3,"Keychain"],[3,"PublicKey"],[3,"SecretKey"],[3,"NodeCount"],[3,"Message"],[3,"Hasher"],[3,"ReconnectPeerConnections"],[3,"Network"],[6,"NetworkData"],[4,"Recipient"],[3,"Spawner"],[6,"TaskHandle"],[3,"ServerModuleConfig"],[3,"ConfigGenParams"],[3,"PeerUrl"],[8,"IDynCommonModuleInit"],[8,"AsRef"],[3,"ModuleInitRegistry"],[8,"Into"],[8,"Iterator"],[3,"Error"],[3,"JsonWithKind"],[3,"ClientConfig"],[3,"ServerConfigPrivate"],[3,"GlobalClientConfig"],[3,"ServerConfigConsensus"],[3,"FederationId"],[3,"ServerConfigLocal"],[8,"Clone"],[4,"KeyType"],[3,"ServerModuleConsensusConfig"],[4,"DkgPeerMsg"],[4,"Ordering"],[3,"NetworkConfig"],[3,"TlsConfig"],[3,"DelayCalculator"],[8,"Debug"],[8,"Serialize"],[8,"DeserializeOwned"],[8,"Unpin"],[3,"PeerConnections"],[6,"ServerModuleInitRegistry"],[6,"DkgResult"],[3,"Error"],[4,"DkgError"],[3,"Cancelled"],[8,"IntoIterator"],[3,"ModuleKind"],[3,"InviteCode"],[8,"Decodable"],[3,"ClientModuleConfig"],[8,"TypedServerModuleConfig"],[3,"BTreeSet"],[4,"Value"],[8,"Error"],[3,"SupportedCoreApiVersions"],[3,"SupportedApiVersionsSummary"],[3,"Certificate"],[3,"DynServerModuleInit"],[3,"DynCommonModuleInit"],[4,"All"],[3,"Secp256k1"],[3,"FederationIdPrefix"],[3,"String"],[3,"HashMap"],[3,"ConfigGenApi"],[3,"PeerServerParams"],[3,"ConfigGenState"],[3,"ApiAuth"],[3,"ConfigGenParamsLocal"],[3,"ConfigGenSettings"],[3,"ConfigGenLocalConnection"],[3,"ConfigGenParamsRequest"],[3,"ConfigGenParamsResponse"],[3,"ConfigGenParamsConsensus"],[3,"PathBuf"],[3,"Sender"],[4,"ServerStatus"],[3,"MutexGuard"],[3,"ConfigGenConnectionsRequest"],[8,"Eq"],[8,"Hash"],[3,"DkgRunner"],[8,"DkgGroup"],[3,"Dkg"],[4,"DkgMessage"],[4,"DkgStep"],[3,"DkgKeys"],[3,"ThresholdKeys"],[8,"RngCore"],[3,"MuxPeerConnections"],[3,"G1Projective"],[3,"G2Projective"],[3,"Scalar"],[3,"LessSafeKey"],[8,"Display"],[3,"Path"],[3,"PrivateKey"],[3,"FundingVerifier"],[3,"TransactionItemAmount"],[6,"ServerModuleRegistry"],[3,"DatabaseTransaction"],[3,"Transaction"],[4,"TransactionError"],[3,"ConsensusServer"],[3,"SessionOutcome"],[3,"SignedSessionOutcome"],[3,"Sender"],[6,"PeerConnector"],[3,"TaskHandle"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"AcceptedItemKey"],[3,"AcceptedItemPrefix"],[3,"AcceptedTransactionKey"],[3,"AcceptedTransactionKeyPrefix"],[3,"SignedSessionOutcomeKey"],[3,"SignedSessionOutcomePrefix"],[3,"AlephUnitsKey"],[3,"AlephUnitsPrefix"],[6,"MigrationMap"],[3,"PeerConnectionMultiplexer"],[3,"ModuleMultiplexed"],[3,"ModuleMultiplexerOutOfOrder"],[8,"Deserialize"],[3,"Receiver"],[6,"Cancellable"],[3,"OutPoint"],[3,"DynOutputOutcome"],[3,"SerdeModuleEncoding"],[3,"TransactionId"],[3,"ExpiringCache"],[8,"FnOnce"],[3,"AuditSummary"],[3,"FederationStatus"],[3,"SignedBackupRequest"],[3,"ApiError"],[3,"ClientBackupSnapshot"],[3,"Duration"],[3,"PeerCertStore"],[3,"TcpListener"],[3,"TlsAcceptor"],[3,"SafeUrl"],[3,"TlsTcpConnector"],[6,"AnyConnector"],[3,"LatencyInterval"],[3,"FailureRate"],[4,"StreamReliability"],[3,"MockConnector"],[3,"MockNetwork"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"UnreliableDuplexStream"],[3,"UnreliabilityGenerator"],[3,"Context"],[4,"Poll"],[3,"DuplexStream"],[15,"f64"],[3,"ReadBuf"],[3,"BidiFramed"],[3,"BincodeCodec"],[3,"BytesMut"],[6,"AnyFramedTransport"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"TcpStream"],[6,"TcpBidiFramed"],[3,"PeerConnection"],[4,"PeerMessage"],[3,"PeerStatusChannels"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[4,"PeerConnectionStatus"],[6,"SharedAnyConnector"],[3,"PeerStatusQuery"],[3,"DisconnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"ConnectedPeerConnectionState"],[3,"ReconnectPeerConnectionsReliable"],[3,"PeerMessage"],[3,"PeerStatusChannels"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[6,"PeerConnector"],[3,"PeerStatusQuery"],[3,"PeerConnection"],[3,"DisconnectedPeerConnectionState"],[3,"ConnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"UniqueMessage"],[3,"MessageQueue"],[3,"MessageId"],[8,"Ord"],[8,"PartialEq"],[8,"PartialOrd"],[8,"PeerHandleOps"],[8,"Connector"],[13,"RandomlyUnreliable"],[8,"FramedTransport"],[8,"PeerSlice"],[8,"PeerSlice"]]},\
"fedimint_testing":{"doc":"","t":"AAAAAAIKKKKKAKAKDDMMMLLLLLLLLMLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFMLLMLMLLLLLLLLLLLLLSSDDDDMMLLLLLLLLMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLRRRRRFFFFFDMLLMMLLLLLLFLLLMMLLLLLDRLMLMLLLMLLMLMLLLLLLLLLMMMMLFLLLLLNRDDNENDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLMMLLMLLLLLLLLLLLLLLLLLLLLLLIKKKKAALDRMLLLLLLMMLLLLLLLLLLMLLLLLLDNNDEDNNNNNNNNMLLLLLLLLLLLLLLFLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLMMMMLLLMMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMM","n":["btc","db","federation","fixtures","gateway","ln","BitcoinTest","get_mempool_tx_fee","get_new_address","lock_exclusive","mine_block_and_get_received","mine_blocks","mock","prepare_funding_wallet","real","send_and_mine_block","FakeBitcoinFactory","FakeBitcoinTest","addresses","bitcoin","blocks","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","create_connection","default","fmt","fmt","from","from","from_ref","from_ref","get_block_count","get_block_hash","get_fee_rate","get_mempool_tx_fee","get_network","get_new_address","get_tx_block_height","get_txout_proof","inputs","into","into","into_request","into_request","into_request","into_request","lock_exclusive","mine_block","mine_block_and_get_received","mine_blocks","new","new_transaction","output_sum","pending","pending_merkle_tree","prepare_funding_wallet","proofs","register_new","scripts","send_and_mine_block","submit_transaction","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","ERROR","ERROR","REAL_BITCOIN_LOCK","RealBitcoinTest","RealBitcoinTestLocked","RealBitcoinTestNoLock","__private_field","_guard","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","deref","from","from","from","from","from_ref","get_mempool_tx_fee","get_mempool_tx_fee","get_mempool_tx_fee","get_new_address","get_new_address","get_new_address","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lock_exclusive","lock_exclusive","lock_exclusive","mine_block_and_get_received","mine_block_and_get_received","mine_block_and_get_received","mine_blocks","mine_blocks","mine_blocks","new","prepare_funding_wallet","prepare_funding_wallet","prepare_funding_wallet","rpc","send_and_mine_block","send_and_mine_block","send_and_mine_block","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BYTE_20","BYTE_32","BYTE_33","BYTE_8","STRING_64","copy_directory","get_project_root","open_temp_db_and_copy","prepare_db_migration_snapshot","validate_migrations","FederationTest","_task","borrow","borrow_mut","client_init","configs","from","id","into","into_request","into_request","invite_code","local_config_gen_params","new","new_client","new_client_with_config","primary_client","server_init","try_from","try_into","two_clients","type_id","vzip","Fixtures","TIMEOUT","bitcoin","bitcoin","bitcoin_client","bitcoin_rpc","bitcoin_server","borrow","borrow_mut","clients","cln","dyn_bitcoin_rpc","dyn_bitcoin_rpc","from","id","into","into_request","into_request","is_real_test","lnd","new_fed","new_fed_with_peers","new_gateway","new_primary","num_peers","params","primary_client","servers","spawn_ldk","test_dir","try_from","try_into","type_id","vzip","with_module","Cln","DEFAULT_GATEWAY_PASSWORD","FakeLightningBuilder","GatewayTest","Ldk","LightningNodeType","Lnd","RealLightningBuilder","_config_dir","api","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone_into","clone_into","clone_into","connect_fed","drop","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","gateway","get_gateway_id","get_rpc","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","listening_addr","new","node_pub_key","node_type","remove_client","select_client","task_group","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wait_for_gateway_state","wait_for_webserver","LightningTest","invoice","is_shared","lightning_node_type","listening_address","mock","real","unpayable_invoice","FakeLightningTest","INVALID_INVOICE_DESCRIPTION","amount_sent","borrow","borrow_mut","complete_htlc","default","fmt","from","gateway_node_pub_key","gateway_node_sec_key","info","into","into_request","into_request","invoice","is_shared","lightning_node_type","listening_address","new","pay","receiver","route_htlcs","routehints","try_from","try_into","type_id","vzip","ClnLightningTest","InvoiceRequest","InvoiceResponse","LdkLightningTest","LdkMessage","LndLightningTest","MineBlocksResponse","OpenChannelRequest","OpenChannelResponse","PayInvoiceFailureResponse","PayInvoiceRequest","PayInvoiceSuccessResponse","StopRequest","StopResponse","alias","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_balance","channel_balance","complete_htlc","complete_htlc","complete_htlc","drop","find_unused_port","fmt","fmt","fmt","fmt","from","from","from","from","info","info","info","initial_balance","initial_balance","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","invoice","is_shared","is_shared","is_shared","ldk_node_sender","lightning_node_type","lightning_node_type","lightning_node_type","listening_address","listening_address","listening_address","listening_address","lnrpc","lnrpc","network","new","new","new","node_pub_key","node_pub_key","node_pub_key","open_channel","pay","pay","pay","pubkey","pubkey","route_htlcs","route_htlcs","route_htlcs","routehints","routehints","routehints","rpc_cln","rpc_lnd","spawn_ldk_event_loop","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","amount","amount_msat","connect_address","description","expiry_secs","invoice","invoice","node_id","preimage","response_sender","response_sender","response_sender","response_sender"],"q":[[0,"fedimint_testing"],[6,"fedimint_testing::btc"],[16,"fedimint_testing::btc::mock"],[79,"fedimint_testing::btc::real"],[158,"fedimint_testing::db"],[168,"fedimint_testing::federation"],[191,"fedimint_testing::fixtures"],[226,"fedimint_testing::gateway"],[307,"fedimint_testing::ln"],[315,"fedimint_testing::ln::mock"],[343,"fedimint_testing::ln::real"],[452,"fedimint_testing::ln::real::LdkMessage"]],"d":["","","","","","","","Waits till tx is found in mempool and returns the fees","Returns a new address.","Make the underlying instance act as if it was exclusively …","Mine a block to include any pending transactions then get …","Mines a given number of blocks","","Prepare funding wallet","","Send some bitcoin to an address then mine a block to …","","","Tracks how much bitcoin was sent to an address (doesn’t …","","Simulates mined bitcoin blocks","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Simulates pending transactions in the mempool","","","Simulates the merkle tree proofs","Registers a fake bitcoin rpc factory for testing","Simulates the script history","","","","","","","","","","","","","","","","Global lock we use to isolate tests that need exclusive …","Fixture implementing bitcoin node under test by talking to …","Fixture implementing bitcoin node under test by talking to …","Fixture implementing bitcoin node under test by talking to …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","RPC used to connect to bitcoind, used for waiting for the …","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function that recursively copies all of the …","Get the project root (relative to closest Cargo.lock file)","Open a temporary database located at <code>temp_path</code> and copy …","Creates the database backup directory by appending the …","Iterates over all of the databases supplied in the …","Test fixture for a running fedimint federation","","","","","","Returns the argument unchanged.","Return first id for gateways","Calls <code>U::from(self)</code>.","","","Return first invite code for gateways","Creates the config gen params for each peer","","Create a client connected to this fed","","","","","","Create two clients, useful for send/receive tests","","","A tool for easily writing fedimint integration tests","A default timeout for things happening in tests","Get a test bitcoin fixture","","Get a client bitcoin RPC config","","Get a server bitcoin RPC config","","","","Returns the CLN lightning node","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Returns the LND lightning node","Starts a new federation with default number of peers for …","Starts a new federation with number of peers","Starts a new gateway with a given lightning node","","","","","","Spawns and returns a newly created LDK Node","If <code>FM_TEST_DIR</code> is set, use it as a base, otherwise use a …","","","","","Add a module to the fed","","","","Fixture for creating a gateway","","","","","Temporary dir that stores the gateway config","URL for the RPC","","","","","","","","","","","","","","","","","Connects to a new federation and stores the info","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Handle of the running gateway","","RPC client for communicating with the gateway admin API","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Removes a client from the gateway","","<code>TaskGroup</code> that is running the test","","","","","","","","","","","","","","","","","","","","","","","","Creates invoice from the lightning implementation","Is this a LN instance shared with other tests","","","","","Creates an invoice that is not payable","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,57,57,57,57,57,0,57,0,57,0,0,9,8,9,8,9,8,9,8,9,8,9,8,8,9,8,9,8,9,8,9,9,9,9,9,9,9,9,9,0,8,9,8,8,9,9,9,9,9,9,9,9,0,9,9,9,9,8,9,9,9,8,9,8,9,8,9,8,9,8,9,9,34,31,0,0,0,0,32,35,34,35,32,31,34,35,32,31,31,31,31,32,34,35,32,31,31,34,35,31,34,35,31,34,35,34,35,32,31,34,34,35,35,32,32,31,31,34,35,31,34,35,31,34,35,31,34,34,35,31,31,34,35,31,31,34,35,32,31,34,35,32,31,34,35,32,31,34,35,32,31,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,44,44,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,73,0,0,0,73,0,73,0,64,64,64,73,71,72,64,73,71,72,71,72,73,71,72,73,71,72,64,64,73,73,64,73,71,72,73,71,72,64,64,64,64,73,71,72,64,64,73,73,71,71,72,72,64,64,64,71,64,64,64,73,71,72,73,64,73,71,72,64,73,71,72,64,73,71,72,64,73,71,72,64,64,0,60,60,60,60,0,0,60,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,90,90,0,0,0,90,90,90,90,90,90,90,90,70,88,89,70,90,88,89,70,90,88,89,88,89,70,70,0,88,89,70,90,88,89,70,90,88,89,70,88,89,88,89,70,90,88,88,89,89,70,70,90,90,88,89,70,88,89,70,70,88,89,70,88,89,70,70,88,89,70,88,89,70,88,89,70,70,88,89,70,88,89,88,89,70,88,89,70,88,89,70,88,89,70,90,88,89,70,90,88,89,70,90,88,89,70,90,95,96,95,96,96,97,98,95,99,96,95,100,98],"f":[0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],0,[[],[[4,[[3,[2]]]]]],0,[[5,7],[[4,[[3,[2]]]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[9,9],[[]],[[]],0,[[8,10,11],[[13,[12]]]],[[],9],[[8,14],15],[[9,14],15],[[]],[[]],[[]],[[]],[9,[[4,[[3,[2]]]]]],[[9,6],[[4,[[3,[2]]]]]],[[9,16],[[4,[[3,[2]]]]]],[[9,1],[[4,[[3,[2]]]]]],[9,[[4,[[3,[2]]]]]],[9,[[4,[[3,[2]]]]]],[[9,1],[[4,[[3,[2]]]]]],[[9,1],[[4,[[3,[2]]]]]],[17,[[19,[18]]]],[[]],[[]],[[],20],[[],21],[[],21],[[],20],[9,[[4,[[3,[2]]]]]],[[[23,[1,22]],[19,[24]],[19,[17]]]],[[9,5],[[4,[[3,[2]]]]]],[[9,6],[[4,[[3,[2]]]]]],[[],9],[[[19,[25]]],17],[17,6],0,[[[26,[17]]],27],[9,[[4,[[3,[2]]]]]],0,[[],8],0,[[9,5,7],[[4,[[3,[2]]]]]],[[9,17],[[4,[[3,[2]]]]]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[]],[[]],[[9,30],[[4,[[3,[2]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[31,31],[[]],[32,33],[[]],[[]],[[]],[[]],[[]],[[34,1],[[4,[[3,[2]]]]]],[[35,1],[[4,[[3,[2]]]]]],[[31,1],[[4,[[3,[2]]]]]],[34,[[4,[[3,[2]]]]]],[35,[[4,[[3,[2]]]]]],[31,[[4,[[3,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[[],20],[[],21],[[],20],[[],21],[[],20],[[],21],[[],20],[[],21],[34,[[4,[[3,[2]]]]]],[35,[[4,[[3,[2]]]]]],[31,[[4,[[3,[2]]]]]],[[34,5],[[4,[[3,[2]]]]]],[[35,5],[[4,[[3,[2]]]]]],[[31,5],[[4,[[3,[2]]]]]],[[34,6],[[4,[[3,[2]]]]]],[[35,6],[[4,[[3,[2]]]]]],[[31,6],[[4,[[3,[2]]]]]],[[10,12],34],[34,[[4,[[3,[2]]]]]],[35,[[4,[[3,[2]]]]]],[31,[[4,[[3,[2]]]]]],0,[[34,5,7],[[4,[[3,[2]]]]]],[[35,5,7],[[4,[[3,[2]]]]]],[[31,5,7],[[4,[[3,[2]]]]]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],0,0,0,0,0,[[36,36],37],[[],[[37,[38]]]],[[39,36,40],[[13,[41]]]],[[42,43,40],13],[[42,43,40],13],0,0,[[]],[[]],0,0,[[]],[44,45],[[]],[[],20],[[],21],[44,46],[[[26,[47]],16,48],[[13,[[50,[47,49]]]]]],[[16,16,48,51,52,53],44],[44,54],[[44,55],54],0,0,[[],28],[[],28],[44],[[],29],[[]],0,0,[56,[[58,[57]]]],0,[56,59],0,[56,59],[[]],[[]],0,[56,[[3,[60]]]],[56,12],0,[[]],0,[[]],[[],21],[[],20],[[],61],[56,[[3,[60]]]],[56,44],[[56,16],44],[[56,[3,[60]],62,[63,[39]]],64],[[[0,[65,66,67]],[0,[68,66,67]],69],56],0,0,0,0,[[[58,[57]]],70],[42],[[],28],[[],28],[[],29],[[]],[[56,[0,[65,66,67]],[0,[68,66,67]],69],56],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,[[4,[[3,[2]]]]]],[72,[[4,[[3,[2]]]]]],[73,73],[71,71],[72,72],[[]],[[]],[[]],[[64,44],74],[64],[[73,14],15],[[73,14],[[28,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[64,76],[64,77],[[]],[[]],[[]],[[]],[[],20],[[],21],[[],21],[[],20],[[],21],[[],20],[[],21],[[],20],0,[[16,[63,[39]],[3,[60]],40,52,62],64],0,0,[[64,44],54],[[64,45],54],0,[[]],[[]],[[]],[[],39],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[78,43],13],[[10,[63,[39]]],13],0,[[22,[63,[6]]],[[4,[[3,[2]]]]]],[[],61],[[],73],[[],39],0,0,[[22,[63,[6]]],[[80,[79]]]],0,0,0,[[]],[[]],[[81,82],[[4,[[3,[2]]]]]],[[],81],[[81,14],15],[[]],0,0,[81,[[4,[[3,[2]]]]]],[[]],[[],20],[[],21],[[81,22,[63,[6]]],[[4,[[3,[2]]]]]],[81,61],[81,73],[81,39],[[],81],[[81,83],[[4,[[3,[2]]]]]],0,[[[3,[81]],84],[[4,[[3,[2]]]]]],[[81,85],[[4,[[3,[2]]]]]],[[],28],[[],28],[[],29],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[58,[[33,[86]]]]],22],[[[58,[[33,[87]]]]],22],[[88,82],[[4,[[3,[2]]]]]],[[89,82],[[4,[[3,[2]]]]]],[[70,82],[[4,[[3,[2]]]]]],[70],[[],[[63,[16]]]],[[88,14],15],[[89,14],15],[[70,14],15],[[90,14],15],[[]],[[]],[[]],[[]],[88,[[4,[[3,[2]]]]]],[89,[[4,[[3,[2]]]]]],[70,[[4,[[3,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[[],20],[[],21],[[],20],[[],21],[[],21],[[],20],[[],20],[[],21],[[88,22,[63,[6]]],[[4,[[3,[2]]]]]],[[89,22,[63,[6]]],[[4,[[3,[2]]]]]],[[70,22,[63,[6]]],[[4,[[3,[2]]]]]],[88,61],[89,61],[70,61],0,[88,73],[89,73],[70,73],[88,39],[89,39],[70,39],0,0,0,0,[[],88],[[],89],[[38,[58,[57]]],[[28,[70,91]]]],0,0,0,[[70,22,76,39,[3,[57]]],13],[[88,83],[[4,[[3,[2]]]]]],[[89,83],[[4,[[3,[2]]]]]],[[70,83],[[4,[[3,[2]]]]]],[[[58,[[33,[86]]]]],76],[[[58,[[33,[87]]]]],76],[[[3,[88]],84],[[4,[[3,[2]]]]]],[[[3,[89]],84],[[4,[[3,[2]]]]]],[[[3,[70]],84],[[4,[[3,[2]]]]]],[[88,85],[[4,[[3,[2]]]]]],[[89,85],[[4,[[3,[2]]]]]],[[70,85],[[4,[[3,[2]]]]]],0,0,[[[93,[92]],[94,[90]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Txid"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Address"],[15,"u64"],[3,"Amount"],[3,"FakeBitcoinFactory"],[3,"FakeBitcoinTest"],[3,"SafeUrl"],[3,"TaskHandle"],[3,"DynBitcoindRpc"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"u16"],[3,"Transaction"],[3,"OutPoint"],[3,"Vec"],[3,"Request"],[3,"Request"],[3,"Amount"],[3,"BTreeMap"],[3,"Block"],[3,"TxOut"],[15,"slice"],[3,"PartialMerkleTree"],[4,"Result"],[3,"TypeId"],[3,"Script"],[3,"RealBitcoinTestNoLock"],[3,"REAL_BITCOIN_LOCK"],[3,"Mutex"],[3,"RealBitcoinTest"],[3,"RealBitcoinTestLocked"],[3,"Path"],[6,"Result"],[3,"PathBuf"],[3,"String"],[6,"ModuleDecoderRegistry"],[3,"Database"],[15,"str"],[8,"Fn"],[3,"FederationTest"],[3,"FederationId"],[3,"InviteCode"],[3,"PeerId"],[6,"ServerModuleConfigGenParamsRegistry"],[3,"ConfigGenParams"],[3,"HashMap"],[6,"ServerModuleInitRegistry"],[6,"ClientModuleInitRegistry"],[6,"ModuleInstanceId"],[3,"ClientArc"],[3,"ClientConfig"],[3,"Fixtures"],[8,"BitcoinTest"],[3,"Arc"],[3,"BitcoinRpcConfig"],[8,"LightningTest"],[15,"bool"],[15,"u32"],[4,"Option"],[3,"GatewayTest"],[8,"IClientModuleInit"],[8,"MaybeSend"],[8,"MaybeSync"],[8,"IServerModuleInit"],[8,"ModuleInitParams"],[3,"LdkLightningTest"],[3,"RealLightningBuilder"],[3,"FakeLightningBuilder"],[4,"LightningNodeType"],[3,"FederationInfo"],[3,"Error"],[3,"PublicKey"],[3,"GatewayRpcClient"],[3,"Gateway"],[3,"Bolt11Invoice"],[6,"Result"],[3,"FakeLightningTest"],[3,"InterceptHtlcResponse"],[3,"PayInvoiceRequest"],[3,"TaskGroup"],[15,"usize"],[3,"ClnRpc"],[3,"Client"],[3,"ClnLightningTest"],[3,"LndLightningTest"],[4,"LdkMessage"],[4,"LightningRpcError"],[3,"SqliteStore"],[3,"Node"],[3,"Receiver"],[13,"OpenChannelRequest"],[13,"InvoiceRequest"],[13,"InvoiceResponse"],[13,"PayInvoiceRequest"],[13,"PayInvoiceSuccessResponse"],[13,"StopRequest"]]},\
"fedimint_wallet_client":{"doc":"","t":"NDNRNNNNNNNNNENNNNNNRNNNGNGNDNNDNDNDEDNNNNNDNNNNNNDDDDNNNRNNDDDEDEEEEDDDEEEEDENNENNNLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMFMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLALLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLMLLMLLLLLLFFMLLMLLMMFMMMLMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLALMMMMMMMMMMMMMMMMIKKEDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDEDNDDNDDNDNDDNDDDDNDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDDERNDNDLFFFLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLMFFFLLLLLLLLLLLLLLMMLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIIKKNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLMLMLLLLLLLNDNDRNDDELFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLL","n":["BelowMinRelayFee","BitcoinTransactionData","BlockCount","CONFIRMATION_TARGET","Claimed","Confirmed","Created","Default","Default","Default","Default","Deposit","Deposit","DepositState","DuplicateSignature","ErrorFinalizingPsbt","Failed","Failed","Feerate","InvalidSignature","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOut","PegOutFeeBelowConsensus","PegOutFees","PegOutSignature","PegOutSignatureItem","PegOutUnderDustLimit","PendingTransaction","ProcessPegOutSigError","Rbf","Rbf","RbfTransactionIdNotFound","RbfWithdraw","RpcError","SighashError","SpendableUTXO","Succeeded","TxWeightIncorrect","UnknownInputVariant","UnknownOutputVariant","UnknownPegInProofBlock","UnknownTransaction","UnknownWalletInputVariantError","UnknownWalletOutputOutcomeVariantError","UnknownWalletOutputVariantError","UnsignedTransaction","V0","V0","V0","WALLET_TWEAK_CHILD_ID","WaitingForConfirmation","WaitingForTransaction","WalletClientContext","WalletClientInit","WalletClientModule","WalletClientStates","WalletCommonInit","WalletConsensusItem","WalletCreationError","WalletInput","WalletInputError","WalletInputV0","WalletModuleTypes","WalletOperationMeta","WalletOperationMetaVariant","WalletOutput","WalletOutputError","WalletOutputOutcome","WalletOutputOutcomeV0","WalletOutputV0","Withdraw","Withdraw","WithdrawState","WrongNetwork","WrongNetwork","WrongSignatureCount","amount","amount","amount","amount","api","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_transaction","cfg","change","change","check_address","client_ctx","client_db","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_rbf_withdraw_output","create_sufficient_input","create_withdraw_output","db","decoder","decoder","decoder","decoder","default","deposit","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination","destination","dump_database","dump_database","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_meta","fee_rate","fees","fees","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_balance","get_deposit_address","get_deposit_address_inner","get_network","get_next_peg_in_tweak_child_id","get_rpc_config","get_withdraw_fees","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","module_api","module_kind","module_kind","module_root_secret","new","new","new_v0","new_v0","new_v0_peg_out","new_v0_rbf","next_deposit_state","next_withdraw_state","notifier","operation_id","operation_id","out_idx","output_amount","output_amount","peg_out_amount","peg_out_amount","proprietary_tweak_key","psbt","rbf","rbf","rbf_withdraw","recipient","restore","rpc","rpc","secp","secp","selected_utxos","selected_utxos","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","source","subscribe_balance_changes","subscribe_deposit_updates","subscribe_withdraw_updates","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant","variant","variant","variant","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_decoder","wallet_descriptor","wipe","withdraw","withdraw","bytes","variant","bytes","variant","address","address","amount","change","change","expires_at","fee","rbf","bytes","variant","bytes","variant","WalletFederationApi","fetch_consensus_block_count","fetch_peg_out_fees","DbKeyPrefix","DbKeyPrefixIter","NextPegInTweakIndex","NextPegInTweakIndexKey","back_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","idx","into","into","into","into_iter","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","WalletGenParams","WalletGenParamsConsensus","WalletGenParamsLocal","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_default_bitcoin_rpc","client_default_bitcoin_rpc","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_bitcoin_rpc","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","finality_delay","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","network","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","FeeRateVote","FeeRateVoteKey","FeeRateVotePrefix","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutNonce","PegOutNonceKey","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Claiming","ClaimingDepositState","Created","CreatedDepositState","DepositStateMachine","DepositStates","TRANSACTION_STATUS_FETCH_INTERVAL","TimedOut","TimedOutDepositState","WaitingForConfirmations","WaitingForConfirmationsDepositState","as_any","await_btc_transaction_confirmed","await_created_btc_transaction_submitted","await_deposit_address_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_transaction","change","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","out_idx","state","timeout_at","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_id","transition_btc_tx_confirmed","transition_deposit_timeout","transition_tx_seen","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tweak_key","tweak_key","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","compare","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_bytes","from_ref","from_str","hash","into","into_request","is_uncompressed","key","new","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","identity","into","into","into_request","into_request","new","outpoint","output_idx","proof_block","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","validate","validate_args","verify","vzip","vzip","Aborted","AbortedWithdrawState","Created","CreatedWithdrawState","RETRY_DELAY","Success","SuccessWithdrawState","WithdrawStateMachine","WithdrawStates","as_any","await_withdraw_processed","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","error","fm_outpoint","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_withdraw_processed","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_wallet_client"],[1006,"fedimint_wallet_client::WalletConsensusItem"],[1008,"fedimint_wallet_client::WalletInput"],[1010,"fedimint_wallet_client::WalletOperationMetaVariant"],[1018,"fedimint_wallet_client::WalletOutput"],[1020,"fedimint_wallet_client::WalletOutputOutcome"],[1022,"fedimint_wallet_client::api"],[1025,"fedimint_wallet_client::client_db"],[1092,"fedimint_wallet_client::config"],[1329,"fedimint_wallet_client::db"],[1766,"fedimint_wallet_client::deposit"],[1943,"fedimint_wallet_client::keys"],[1987,"fedimint_wallet_client::tweakable"],[1991,"fedimint_wallet_client::txoproof"],[2065,"fedimint_wallet_client::withdraw"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","Allows a user to bump the fees of a <code>PendingTransaction</code>","","","","","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitcoin transaction is saved as soon as we see it so …ees expressed as an increase over existing peg-out fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the child index to derive the next peg-in tweak …","","Fetches the fees that would need to be paid to make the …","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the deposit output","","","","","","","","","Attempt to increase the fee of a onchain withdraw …itcoin tx id to bump the fees for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to withdraw a given <code>amount</code> of Bitcoin to a …","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","See <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.","Points to a Bitcoin API that the client can use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Points to a Bitcoin API that the client can use to …","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Selfeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe state machine driving forward a deposit (aka peg-in).","","","","","","","","","","","","","","","","","","","","","","","The bitcoin transaction is saved as soon as we see it so …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Index of the deposit output","","","","","","","","","","","","","","","Fedimint transaction id in which the deposit is being …","","","","","","","","","","","","","","","","","","","Key pair of which the public was used to tweak the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An object that can be used as a Ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifiable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graph LR Created –&gt; Success Created –&gt; Aborted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[48,0,26,0,17,17,18,26,32,36,41,21,23,0,77,77,17,18,26,77,0,77,77,48,0,46,0,46,0,3,48,0,26,0,48,0,0,0,3,48,21,44,77,0,18,48,46,48,46,77,0,0,0,0,32,36,41,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,23,0,44,48,77,1,3,28,31,0,60,23,26,32,36,41,46,48,19,60,60,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,16,60,29,30,0,60,0,16,17,18,19,20,21,22,23,23,26,26,27,28,29,30,1,31,32,32,34,35,36,36,38,39,41,41,42,3,43,44,46,46,48,48,16,17,18,19,20,21,22,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,0,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,60,60,60,60,60,60,0,19,19,60,76,19,0,39,39,16,17,18,20,21,26,27,28,1,31,32,34,35,36,38,39,41,42,3,43,29,30,19,19,26,32,36,41,46,48,32,36,41,16,17,18,23,26,27,28,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,16,16,16,16,17,17,17,17,18,18,18,18,23,23,23,23,26,26,26,26,27,27,27,27,28,28,28,28,30,30,30,30,1,1,1,1,31,31,31,31,32,32,32,32,34,34,34,34,35,35,35,35,36,36,36,36,38,38,38,38,39,39,39,39,41,41,41,41,42,42,42,42,3,3,3,3,43,43,43,43,44,44,44,44,46,46,46,46,48,48,48,48,23,26,32,36,41,46,48,16,17,18,20,21,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,20,1,29,30,31,43,16,17,18,19,20,21,60,22,23,26,26,27,28,29,30,1,31,32,32,34,34,35,35,76,36,36,38,38,39,39,41,41,42,42,3,3,43,44,44,46,46,48,48,77,77,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,46,46,48,48,77,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,16,17,18,19,20,21,22,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,60,60,60,60,0,60,60,60,26,27,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,19,19,60,60,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,23,26,32,36,41,46,48,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,0,32,36,41,60,19,19,60,19,1,32,36,41,41,0,0,60,23,23,16,60,60,29,30,0,30,29,30,60,31,60,60,22,60,22,29,30,16,17,18,20,21,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,27,30,46,48,60,60,60,19,19,60,60,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,19,16,17,18,19,20,21,22,23,26,27,28,29,30,1,31,32,34,35,36,38,39,41,42,3,43,44,46,48,26,32,34,35,36,38,39,41,42,3,44,46,48,77,1,23,23,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,28,29,0,29,27,43,0,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,20,34,38,42,190,16,17,18,19,20,21,60,22,23,26,27,28,29,30,1,31,32,34,35,76,36,38,39,41,42,3,43,44,46,48,77,22,22,60,0,60,191,191,192,192,193,194,194,194,195,193,194,195,196,196,197,197,0,198,198,0,0,122,0,123,122,123,124,122,123,124,122,123,124,122,123,124,124,124,124,124,122,122,124,122,123,124,124,124,122,123,124,123,123,122,123,124,123,122,123,124,122,123,123,123,123,123,124,123,124,124,122,123,124,122,122,123,124,122,123,124,122,123,124,122,123,124,0,0,0,0,0,0,0,0,0,87,126,129,125,126,127,128,129,130,131,87,133,125,126,127,128,129,130,131,87,133,127,131,125,126,127,128,129,130,131,87,87,133,125,126,127,128,129,130,131,87,133,125,128,129,131,87,133,129,131,87,133,129,131,87,133,133,87,131,125,126,127,128,129,130,131,87,133,87,87,133,87,87,87,87,133,133,133,133,87,125,126,127,128,129,130,131,87,133,131,87,127,131,87,125,126,127,128,129,130,131,87,87,133,125,126,127,128,129,130,131,87,133,129,131,87,133,125,128,125,126,127,128,129,130,131,87,133,87,133,125,126,127,128,129,130,131,87,133,87,125,126,127,128,129,130,131,87,133,131,125,128,127,131,87,128,87,131,133,131,87,130,133,128,125,125,126,127,128,129,130,131,87,133,129,131,87,133,87,125,126,127,128,129,130,131,87,133,125,128,87,125,126,127,128,129,130,131,87,133,125,126,127,128,129,130,131,87,133,125,126,127,128,129,130,131,87,133,131,125,126,127,128,129,130,131,87,133,142,0,0,142,0,0,0,0,142,0,0,142,0,0,142,0,142,0,0,142,0,0,0,0,142,0,0,142,143,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,146,146,146,146,146,144,146,148,150,152,154,156,158,142,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,144,144,145,146,146,147,148,148,149,150,150,151,152,152,153,154,154,155,156,156,157,158,158,159,160,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,143,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,143,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,143,143,143,143,144,146,148,150,152,154,156,158,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,110,0,110,0,0,0,0,110,0,110,0,164,0,0,0,164,110,165,161,166,167,164,110,165,161,166,167,161,166,164,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,164,164,164,110,110,110,110,165,165,165,165,161,161,161,161,166,166,166,166,167,167,167,167,164,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,110,165,161,166,167,164,164,164,161,164,165,164,110,165,161,166,167,164,110,165,161,166,167,166,0,0,0,164,164,164,110,165,161,166,167,164,110,165,161,166,167,165,161,164,110,165,161,166,167,164,110,165,161,166,167,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,178,199,78,0,0,78,78,78,107,78,107,78,107,78,107,78,107,78,107,78,107,78,107,107,78,107,107,107,107,78,78,78,78,107,107,78,78,107,78,107,78,107,78,107,78,107,107,78,107,78,107,107,107,107,107,107,78,107,78,78,107,107,78,107,78,107,107,107,107,107,78,107,107,107,107,78,111,0,111,0,0,111,0,0,0,187,0,187,111,186,188,189,187,111,186,188,189,187,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,187,187,187,111,111,111,111,186,186,186,186,188,188,188,188,189,189,189,189,187,189,186,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,111,186,188,189,187,187,187,187,187,111,186,188,189,187,111,186,188,189,0,187,187,187,111,186,188,189,187,111,186,188,189,188,187,111,186,188,189,187,111,186,188,189],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[6,7],[[11,[[10,[8,9]]]]]],[12,[[11,[[10,[8,9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[13,14],15],0,0,[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[12,24],[12,25],[26,26],[27,27],[28,28],[29,29],[30,30],[1,1],[31,31],[32,32],[12,33],[34,34],[35,35],[36,36],[12,37],[38,38],[39,39],[12,40],[41,41],[42,42],[3,3],[43,43],[44,44],[12,45],[46,46],[12,47],[48,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[49,50],[[52,[23,51]]]],[[49,[55,[53,54]]],[[52,[26,51]]]],[[49,[55,[53,54]]],[[52,[27,51]]]],[[49,[55,[53,54]]],[[52,[28,51]]]],[[49,[55,[53,54]]],[[52,[29,51]]]],[[49,[55,[53,54]]],[[52,[30,51]]]],[[49,[55,[53,54]]],[[52,[1,51]]]],[[49,[55,[53,54]]],[[52,[31,51]]]],[[49,[55,[53,54]]],[[52,[32,51]]]],[[49,[55,[53,54]]],[[52,[34,51]]]],[[49,[55,[53,54]]],[[52,[35,51]]]],[[49,[55,[53,54]]],[[52,[36,51]]]],[[49,[55,[53,54]]],[[52,[38,51]]]],[[49,[55,[53,54]]],[[52,[39,51]]]],[[49,[55,[53,54]]],[[52,[41,51]]]],[[49,[55,[53,54]]],[[52,[42,51]]]],[[49,[55,[53,54]]],[[52,[3,51]]]],[[49,[55,[53,54]]],[[52,[43,51]]]],[[49,[55,[53,54]]],[[52,[44,51]]]],[[49,[55,[53,54]]],[[52,[46,51]]]],[[49,[55,[53,54]]],[[52,[48,51]]]],[[23,56],[[52,[57,58]]]],[[26,56],[[52,[57,58]]]],[[27,56],[[52,[57,58]]]],[[28,56],[[52,[57,58]]]],[[29,56],[[52,[57,58]]]],[[30,56],[[52,[57,58]]]],[[1,56],[[52,[57,58]]]],[[31,56],[[52,[57,58]]]],[[32,56],[[52,[57,58]]]],[[34,56],[[52,[57,58]]]],[[35,56],[[52,[57,58]]]],[[36,56],[[52,[57,58]]]],[[38,56],[[52,[57,58]]]],[[39,56],[[52,[57,58]]]],[[41,56],[[52,[57,58]]]],[[42,56],[[52,[57,58]]]],[[3,56],[[52,[57,58]]]],[[43,56],[[52,[57,58]]]],[[44,56],[[52,[57,58]]]],[[46,56],[[52,[57,58]]]],[[48,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[12,59],[60],[[12,[62,[61]],6,63],[[11,[[10,[8,9]]]]]],[[60,6,43],[[15,[[64,[41,23]]]]]],[[12,[62,[61]],6,63],[[11,[[10,[8,9]]]]]],[[60,6,13,2,1],[[15,[[64,[41,23]]]]]],0,[[],53],[[],53],[[],53],[[],53],[[],19],0,[39],[39],[65,[[52,[16]]]],[65,[[52,[17]]]],[65,[[52,[18]]]],[65,[[52,[20]]]],[65,[[52,[21]]]],[65,[[52,[26]]]],[65,[[52,[27]]]],[65,[[52,[28]]]],[65,[[52,[1]]]],[65,[[52,[31]]]],[65,[[52,[32]]]],[65,[[52,[34]]]],[65,[[52,[35]]]],[65,[[52,[36]]]],[65,[[52,[38]]]],[65,[[52,[39]]]],[65,[[52,[41]]]],[65,[[52,[42]]]],[65,[[52,[3]]]],[65,[[52,[43]]]],0,0,[[19,62,[67,[66]]],[[11,[[10,[8]]]]]],[[[62,[61]],[67,[66,9]]],[[11,[[10,[8,9]]]]]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[32,[[52,[35,34]]]],[36,[[52,[39,38]]]],[41,[[52,[3,42]]]],[[16,16],69],[[17,17],69],[[18,18],69],[[23,23],69],[[26,26],69],[[27,27],69],[[28,28],69],[[30,30],69],[[1,1],69],[[31,31],69],[[32,32],69],[[34,34],69],[[35,35],69],[[36,36],69],[[38,38],69],[[39,39],69],[[41,41],69],[[42,42],69],[[3,3],69],[[43,43],69],[[44,44],69],[[46,46],69],[[48,48],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[24,69],[25,69],[33,69],[37,69],[40,69],[45,69],[47,69],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],0,0,0,0,0,0,[[16,73],74],[[17,73],74],[[18,73],74],[[19,73],74],[[20,73],74],[[21,73],74],[[60,73],74],[[22,73],74],[[23,73],74],[[26,73],[[52,[75]]]],[[26,73],[[52,[75]]]],[[27,73],[[52,[75]]]],[[28,73],[[52,[75]]]],[[29,73],[[52,[75]]]],[[30,73],[[52,[75]]]],[[1,73],[[52,[75]]]],[[31,73],[[52,[75]]]],[[32,73],[[52,[75]]]],[[32,73],[[52,[75]]]],[[34,73],[[52,[75]]]],[[34,73],[[52,[75]]]],[[35,73],[[52,[75]]]],[[35,73],[[52,[75]]]],[[76,73],[[52,[75]]]],[[36,73],[[52,[75]]]],[[36,73],[[52,[75]]]],[[38,73],[[52,[75]]]],[[38,73],[[52,[75]]]],[[39,73],[[52,[75]]]],[[39,73],[[52,[75]]]],[[41,73],[[52,[75]]]],[[41,73],[[52,[75]]]],[[42,73],[[52,[75]]]],[[42,73],[[52,[75]]]],[[3,73],[[52,[75]]]],[[3,73],[[52,[75]]]],[[43,73],[[52,[75]]]],[[44,73],[[52,[75]]]],[[44,73],[[52,[75]]]],[[46,73],[[52,[75]]]],[[46,73],[[52,[75]]]],[[48,73],[[52,[75]]]],[[48,73],[[52,[75]]]],[[77,73],[[52,[75]]]],[[77,73],[[52,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,46],[[]],[38,46],[42,48],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,[62,[61]]],[[11,[[10,[8,9]]]]]],[[60,82,[0,[83,84,85]]],15],[[60,82,62]],[60,14],[62,86],[87,88],[[60,13,2],[[15,[1]]]],[[[80,[89]]],[[11,[[10,[8,9]]]]]],[[26,90]],[[27,90]],[[1,90]],[[31,90]],[[32,90]],[[34,90]],[[35,90]],[[36,90]],[[38,90]],[[39,90]],[[41,90]],[[42,90]],[[3,90]],[[43,90]],[[44,90]],[[46,90]],[[48,90]],[[91,92,93,94,12,95,96,[98,[97]],99],[[11,[[10,[8,9]]]]]],[[19,[100,[19]]],[[11,[[10,[8]]]]]],[37,[[102,[101]]]],[60,[[102,[101]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,103]],[[26,12]],[[32,12]],[[36,12]],[[41,12]],[[46,12]],[[48,12]],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],0,[32,[[102,[35]]]],[36,[[102,[39]]]],[41,[[102,[3]]]],0,[[],105],[[],105],0,[88,19],[[68,68],1],[106,32],[107,36],[[13,2,1],41],[[1,106],41],[[[0,[108,109]]],[[102,[110]]]],[[[0,[108,109]]],[[102,[111]]]],0,[[],6],[23,6],0,[60,[[102,[101]]]],[40,[[102,[101]]]],0,0,[[],[[112,[79]]]],0,0,0,[[60,43,[0,[83,85,84]]],[[15,[6]]]],0,[[12,[102,[113]]],[[11,[[10,[8,9]]]]]],0,0,0,0,0,0,[[16,114],52],[[17,114],52],[[18,114],52],[[20,114],52],[[21,114],52],[[26,114],52],[[27,114],52],[[28,114],52],[[29,114],52],[[30,114],52],[[1,114],52],[[31,114],52],[[32,114],52],[[34,114],52],[[35,114],52],[[36,114],52],[[38,114],52],[[39,114],52],[[41,114],52],[[42,114],52],[[3,114],52],[[43,114],52],0,0,[46,[[102,[115]]]],[48,[[102,[115]]]],[[],[[11,[[10,[8,9]]]]]],[[60,6],[[15,[[116,[17]]]]]],[[60,6],[[15,[[116,[18]]]]]],[[],117],[19,117],[[],69],[[],69],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],0,[[23,97],[[67,[[119,[23]]]]]],[59,[[67,[[119,[24]],9]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],0,0,0,0,0,0,0,[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[62,[61]],12,[121,[97]]],[[11,[[10,[8,9]]]]]],0,[[60,13,2,1,[0,[83,84,85]]],[[15,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[11,[[10,[8]]]]]],[[13,2],[[11,[[10,[8]]]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[123,123],[124,124],[[]],[[]],[[]],[[49,50],[[52,[124,51]]]],[[124,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[70,[[52,[71,72]]]],[[122,73],74],[[122,73],74],[[124,73],74],[[]],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[[]],[[]],[[123,57],[[102,[122]]]],0,[[]],[[]],[[]],[[]],[[],104],[[],104],[[],104],[[],123],[123,57],0,[123,102],[123,102],[[123,57],102],[[124,114],52],[123],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[]],[[]],[[]],[[],66],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],120],[[],120],[[],120],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[87,87],[12,132],[133,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[49,[55,[53,54]]],[[52,[129,51]]]],[[49,[55,[53,54]]],[[52,[131,51]]]],[[49,[55,[53,54]]],[[52,[87,51]]]],[[49,[55,[53,54]]],[[52,[133,51]]]],[[129,56],[[52,[57,58]]]],[[131,56],[[52,[57,58]]]],[[87,56],[[52,[57,58]]]],[[133,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[[],133],0,0,[65,[[52,[125]]]],[65,[[52,[126]]]],[65,[[52,[127]]]],[65,[[52,[128]]]],[65,[[52,[129]]]],[65,[[52,[130]]]],[65,[[52,[131]]]],[65,[[52,[87]]]],[65,[[52,[133]]]],[[],68],[[87,87],69],[[133,133],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[132,69],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],0,0,0,0,0,[[125,73],[[52,[75]]]],[[126,73],[[52,[75]]]],[[127,73],[[52,[75]]]],[[128,73],[[52,[75]]]],[[129,73],[[52,[75]]]],[[130,73],[[52,[75]]]],[[131,73],[[52,[75]]]],[[87,73],[[52,[75]]]],[[87,73],[[52,[75]]]],[[133,73],[[52,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[],125],[[],128],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[87,90]],[[133,90]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[87,12]],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[131,105],0,0,0,0,0,[[[136,[134,135,9]],137,57,14,138,88,88],128],[[[139,[135]],14,138,88],87],0,0,0,0,0,0,0,[88,125],[[125,114],52],[[126,114],52],[[127,114],52],[[128,114],52],[[129,114],52],[[130,114],52],[[131,114],52],[[87,114],52],[[133,114],52],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[102,[140]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125],[128],[[],66],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[131,141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,[55,[53,54]]],[[52,[144,51]]]],[[49,[55,[53,54]]],[[52,[145,51]]]],[[49,[55,[53,54]]],[[52,[146,51]]]],[[49,[55,[53,54]]],[[52,[147,51]]]],[[49,[55,[53,54]]],[[52,[148,51]]]],[[49,[55,[53,54]]],[[52,[149,51]]]],[[49,[55,[53,54]]],[[52,[150,51]]]],[[49,[55,[53,54]]],[[52,[151,51]]]],[[49,[55,[53,54]]],[[52,[152,51]]]],[[49,[55,[53,54]]],[[52,[153,51]]]],[[49,[55,[53,54]]],[[52,[154,51]]]],[[49,[55,[53,54]]],[[52,[155,51]]]],[[49,[55,[53,54]]],[[52,[156,51]]]],[[49,[55,[53,54]]],[[52,[157,51]]]],[[49,[55,[53,54]]],[[52,[158,51]]]],[[49,[55,[53,54]]],[[52,[159,51]]]],[[49,[55,[53,54]]],[[52,[160,51]]]],[[144,56],[[52,[57,58]]]],[[145,56],[[52,[57,58]]]],[[146,56],[[52,[57,58]]]],[[147,56],[[52,[57,58]]]],[[148,56],[[52,[57,58]]]],[[149,56],[[52,[57,58]]]],[[150,56],[[52,[57,58]]]],[[151,56],[[52,[57,58]]]],[[152,56],[[52,[57,58]]]],[[153,56],[[52,[57,58]]]],[[154,56],[[52,[57,58]]]],[[155,56],[[52,[57,58]]]],[[156,56],[[52,[57,58]]]],[[157,56],[[52,[57,58]]]],[[158,56],[[52,[57,58]]]],[[159,56],[[52,[57,58]]]],[[160,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[[146,146],69],[[],69],[[],69],[[],69],[[],69],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[70,[[52,[71,72]]]],[[142,73],[[52,[75]]]],[[142,73],[[52,[75]]]],[[144,73],[[52,[75]]]],[[145,73],[[52,[75]]]],[[146,73],[[52,[75]]]],[[147,73],[[52,[75]]]],[[148,73],[[52,[75]]]],[[149,73],[[52,[75]]]],[[150,73],[[52,[75]]]],[[151,73],[[52,[75]]]],[[152,73],[[52,[75]]]],[[153,73],[[52,[75]]]],[[154,73],[[52,[75]]]],[[155,73],[[52,[75]]]],[[156,73],[[52,[75]]]],[[157,73],[[52,[75]]]],[[158,73],[[52,[75]]]],[[159,73],[[52,[75]]]],[[160,73],[[52,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],143],[143,57],0,[143,102],[143,102],[[143,57],102],[[144,114],52],[[146,114],52],[[148,114],52],[[150,114],52],[[152,114],52],[[154,114],52],[[156,114],52],[[158,114],52],[143],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],4],[[22,97,161],162],[[22,163]],[82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[164,164],[12,24],[110,110],[165,165],[161,161],[166,166],[167,167],[[]],[[]],[[]],[[]],[[]],[[]],[[49,50],[[52,[164,51]]]],[[49,50],[[52,[110,51]]]],[[49,50],[[52,[165,51]]]],[[49,50],[[52,[161,51]]]],[[49,50],[[52,[166,51]]]],[[49,50],[[52,[167,51]]]],[[164,56],[[52,[57,58]]]],[[110,56],[[52,[57,58]]]],[[165,56],[[52,[57,58]]]],[[161,56],[[52,[57,58]]]],[[166,56],[[52,[57,58]]]],[[167,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[[164,164],69],[[110,110],69],[[165,165],69],[[161,161],69],[[166,166],69],[[167,167],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[24,69],[[164,73],74],[[110,73],74],[[165,73],74],[[161,73],74],[[166,73],74],[[167,73],74],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[164,6],[[],6],0,0,0,0,[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[168,97,164,162],164],[164,164],[[164,169,138],164],[59,[[67,[[119,[24]],9]]]],[164,[[67,[[119,[164]]]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],0,0,[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[135,135],[[]],[[135,135],170],[[],170],[[49,[55,[53,54]]],[[52,[135,51]]]],[[135,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[65,[[52,[135]]]],[[135,135],69],[[],69],[[],69],[[],69],[[],69],[70,[[52,[71,72]]]],[[135,73],[[52,[75]]]],[[135,73],[[52,[75]]]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[171,[[52,[135]]]],[[135,90]],[[]],[[],104],[135,69],0,[172,135],[[135,135],[[102,[170]]]],[[135,114],52],[[],[[67,[79,9]]]],[[],173],[[],174],[[]],[135,175],[[],176],[[],177],[[],66],[[],52],[[],52],[[135,178,[181,[[0,[179,180]]]]],135],[[],120],[[]],0,0,[56,[[52,[58]]]],[[178,[181,[[0,[179,180]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[107,107],[78,78],[[]],[[]],[[49,[55,[53,54]]],[[52,[107,51]]]],[[49,[55,[53,54]]],[[52,[78,51]]]],[[107,56],[[52,[57,58]]]],[[78,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[65,[[52,[107]]]],[[107,107],69],[[78,78],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[70,[[52,[71,72]]]],[[107,73],[[52,[75]]]],[[78,73],[[52,[75]]]],[[78,73],[[52,[75]]]],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[[]],[[107,90]],[[78,90]],[107],[[]],[[]],[[],104],[[],104],[[162,169,138,172],[[52,[107,78]]]],[107,182],0,[107,183],[[107,114],52],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[]],[[]],[[],66],0,[[],52],[[],52],[[],52],[[],52],[107,172],0,[107,184],0,[[],120],[[],120],[107,[[52,[185]]]],[107,[[52,[185]]]],[[107,[181,[[0,[179,180]]]],[139,[135]]],[[52,[78]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],4],[[97,22,6,186],[[52,[106,66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,24],[187,187],[111,111],[186,186],[188,188],[189,189],[[]],[[]],[[]],[[]],[[]],[[49,50],[[52,[187,51]]]],[[49,50],[[52,[111,51]]]],[[49,50],[[52,[186,51]]]],[[49,50],[[52,[188,51]]]],[[49,50],[[52,[189,51]]]],[[187,56],[[52,[57,58]]]],[[111,56],[[52,[57,58]]]],[[186,56],[[52,[57,58]]]],[[188,56],[[52,[57,58]]]],[[189,56],[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[56,[[52,[57,58]]]],[[187,187],69],[[111,111],69],[[186,186],69],[[188,188],69],[[189,189],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[24,69],0,0,[[187,73],74],[[111,73],74],[[186,73],74],[[188,73],74],[[189,73],74],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[[80,[79]],[55,[53,54]]],[[52,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],104],[[],104],[[],104],[[],104],[[],104],[187,6],[[],6],0,0,[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[],[[67,[79,9]]]],[[]],[[]],[[]],[[]],[[]],[[[52,[106,66]],187],187],[187,[[67,[[119,[187]]]]]],[59,[[67,[[119,[24]],9]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],0,[[],120],[[],120],[[],120],[[],120],[[],120],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"PegOutFees"],[3,"Amount"],[4,"WalletOutputV0"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"OperationId"],[3,"OutPoint"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[15,"u16"],[3,"Address"],[4,"Network"],[6,"Result"],[3,"BitcoinTransactionData"],[4,"DepositState"],[4,"WithdrawState"],[3,"WalletClientInit"],[3,"WalletOperationMeta"],[4,"WalletOperationMetaVariant"],[3,"WalletClientContext"],[4,"WalletClientStates"],[3,"DynState"],[3,"DynModuleConsensusItem"],[4,"WalletConsensusItem"],[3,"PegOutSignatureItem"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[4,"WalletOutputOutcome"],[3,"DynOutputOutcome"],[3,"UnknownWalletOutputOutcomeVariantError"],[3,"WalletOutputOutcomeV0"],[4,"WalletInput"],[3,"DynInput"],[3,"UnknownWalletInputVariantError"],[3,"WalletInputV0"],[3,"DynOutput"],[4,"WalletOutput"],[3,"UnknownWalletOutputVariantError"],[3,"Rbf"],[4,"WalletCreationError"],[3,"DynInputError"],[4,"WalletInputError"],[3,"DynOutputError"],[4,"WalletOutputError"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DynContext"],[3,"WalletClientModule"],[3,"NonCommittable"],[3,"DatabaseTransaction"],[3,"Amount"],[3,"ClientOutput"],[8,"Deserializer"],[3,"String"],[3,"Vec"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"WalletCommonInit"],[4,"ProcessPegOutSigError"],[4,"PegInProofError"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[3,"SystemTime"],[8,"Serialize"],[8,"MaybeSend"],[8,"MaybeSync"],[3,"ChildId"],[3,"WalletClientConfig"],[3,"BitcoinRpcConfig"],[3,"OsString"],[8,"Hasher"],[3,"FinalClient"],[3,"FederationId"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"DynGlobalClientContext"],[3,"Notifier"],[3,"DynGlobalApi"],[3,"ClientModuleInitArgs"],[3,"TransactionItemAmount"],[4,"Option"],[6,"ModuleInstanceId"],[3,"Request"],[3,"ModuleKind"],[3,"Txid"],[3,"PegInProof"],[8,"Stream"],[8,"Unpin"],[4,"DepositStates"],[4,"WithdrawStates"],[3,"ProprietaryKey"],[3,"DynModuleBackup"],[8,"Serializer"],[8,"Error"],[4,"UpdateStreamOrOutcome"],[3,"MultiApiVersion"],[3,"DynCommonModuleInit"],[3,"StateTransition"],[3,"TypeId"],[3,"Executor"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NextPegInTweakIndexKey"],[3,"WalletGenParams"],[3,"WalletGenParamsLocal"],[3,"WalletGenParamsConsensus"],[3,"WalletConfig"],[3,"WalletConfigLocal"],[3,"WalletConfigPrivate"],[3,"WalletConfigConsensus"],[3,"DynClientConfig"],[3,"FeeConsensus"],[3,"PeerId"],[3,"CompressedPublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[15,"u32"],[4,"Descriptor"],[4,"Value"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[3,"BlockCountVoteKey"],[3,"BlockCountVotePrefix"],[3,"FeeRateVoteKey"],[3,"FeeRateVotePrefix"],[3,"PegOutNonceKey"],[3,"WaitingForConfirmationsDepositState"],[3,"TxOutProof"],[3,"KeyPair"],[3,"DepositStateMachine"],[3,"CreatedDepositState"],[3,"ClaimingDepositState"],[3,"TimedOutDepositState"],[3,"ClientSMDatabaseTransaction"],[3,"Transaction"],[4,"Ordering"],[15,"str"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[8,"Contract"],[8,"Verification"],[8,"Signing"],[3,"Secp256k1"],[3,"OutPoint"],[3,"BlockHash"],[3,"TxOut"],[3,"ValidationErrors"],[3,"CreatedWithdrawState"],[3,"WithdrawStateMachine"],[3,"SuccessWithdrawState"],[3,"AbortedWithdrawState"],[3,"WalletModuleTypes"],[13,"Default"],[13,"Default"],[13,"Deposit"],[13,"Withdraw"],[13,"RbfWithdraw"],[13,"Default"],[13,"Default"],[8,"WalletFederationApi"],[8,"Tweakable"]]},\
"fedimint_wallet_common":{"doc":"","t":"NNRRNNNNNNNNRNNNGNGNDNNDNDNDEDNNNNDNNNNNDDDDNNNDEEEEDDEEEDENNNLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLMMFMMMMMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMMMALLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMDDDDDDDDDLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDEDNDDNDDNDNDDNDDDDNDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIIKKNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLMLMLLLLFLLL","n":["BelowMinRelayFee","BlockCount","CONFIRMATION_TARGET","CONSENSUS_VERSION","Default","Default","Default","Default","DuplicateSignature","ErrorFinalizingPsbt","Feerate","InvalidSignature","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOut","PegOutFeeBelowConsensus","PegOutFees","PegOutSignature","PegOutSignatureItem","PegOutUnderDustLimit","PendingTransaction","ProcessPegOutSigError","Rbf","Rbf","RbfTransactionIdNotFound","RpcError","SighashError","SpendableUTXO","TxWeightIncorrect","UnknownInputVariant","UnknownOutputVariant","UnknownPegInProofBlock","UnknownTransaction","UnknownWalletInputVariantError","UnknownWalletOutputOutcomeVariantError","UnknownWalletOutputVariantError","UnsignedTransaction","V0","V0","V0","WalletCommonInit","WalletConsensusItem","WalletCreationError","WalletInput","WalletInputError","WalletInputV0","WalletModuleTypes","WalletOutput","WalletOutputError","WalletOutputOutcome","WalletOutputOutcomeV0","WalletOutputV0","WrongNetwork","WrongNetwork","WrongSignatureCount","amount","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","db","decoder","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination","destination","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_rate","fees","fees","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","new","new_v0","new_v0","new_v0_peg_out","new_v0_rbf","peg_out_amount","peg_out_amount","proprietary_tweak_key","psbt","rbf","rbf","recipient","selected_utxos","selected_utxos","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","source","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant","variant","variant","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bytes","variant","bytes","variant","bytes","variant","bytes","variant","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","WalletGenParams","WalletGenParamsConsensus","WalletGenParamsLocal","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_default_bitcoin_rpc","client_default_bitcoin_rpc","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_bitcoin_rpc","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","finality_delay","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","network","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","FeeRateVote","FeeRateVoteKey","FeeRateVotePrefix","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutNonce","PegOutNonceKey","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","compare","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_bytes","from_ref","from_str","hash","into","into_request","is_uncompressed","key","new","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","identity","into","into","into_request","into_request","new","outpoint","output_idx","proof_block","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","validate","validate_args","validate_peg_in_proof","verify","vzip","vzip"],"q":[[0,"fedimint_wallet_common"],[747,"fedimint_wallet_common::WalletConsensusItem"],[749,"fedimint_wallet_common::WalletInput"],[751,"fedimint_wallet_common::WalletOutput"],[753,"fedimint_wallet_common::WalletOutputOutcome"],[755,"fedimint_wallet_common::config"],[992,"fedimint_wallet_common::db"],[1430,"fedimint_wallet_common::keys"],[1474,"fedimint_wallet_common::tweakable"],[1478,"fedimint_wallet_common::txoproof"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","Allows a user to bump the fees of a <code>PendingTransaction</code>","","","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees expressed as an increase over existing peg-out fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeitcoin tx id to bump the fees for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","See <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.","Points to a Bitcoin API that the client can use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Points to a Bitcoin API that the client can use to …","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Selfeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An object that can be used as a Ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifiable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[29,7,0,0,7,13,17,21,47,47,7,47,0,47,47,29,0,26,0,26,0,3,29,0,7,0,29,0,0,0,3,29,25,47,0,29,26,29,26,47,0,0,0,0,13,17,21,0,0,0,0,0,0,0,0,0,0,0,0,25,29,47,1,3,9,12,7,13,17,21,26,29,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,10,11,7,7,8,9,10,11,1,12,13,13,15,16,17,17,19,20,21,21,23,3,24,25,26,26,29,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,0,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,0,46,20,20,7,8,9,1,12,13,15,16,17,19,20,21,23,3,24,10,11,7,13,17,21,26,29,13,17,21,7,8,9,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,7,7,7,8,8,8,8,9,9,9,9,11,11,11,11,1,1,1,1,12,12,12,12,13,13,13,13,15,15,15,15,16,16,16,16,17,17,17,17,19,19,19,19,20,20,20,20,21,21,21,21,23,23,23,23,3,3,3,3,24,24,24,24,25,25,25,25,26,26,26,26,29,29,29,29,7,13,17,21,26,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,1,10,11,12,24,7,7,8,9,10,11,1,12,13,13,15,15,16,16,46,17,17,19,19,20,20,21,21,23,23,3,3,24,25,25,26,26,29,29,47,47,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,26,26,29,29,47,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,8,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,7,13,17,21,26,29,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,0,13,17,21,1,13,17,21,21,10,11,0,11,10,11,12,10,11,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,8,11,26,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,8,9,10,11,1,12,13,15,16,17,19,20,21,23,3,24,25,26,29,7,13,15,16,17,19,20,21,23,3,25,26,29,47,1,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,9,10,0,10,8,24,0,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,15,19,23,129,7,8,9,10,11,1,12,13,15,16,46,17,19,20,21,23,3,24,25,26,29,47,130,130,131,131,132,132,133,133,0,0,0,0,0,0,0,0,0,76,69,72,68,69,70,71,72,73,74,76,77,68,69,70,71,72,73,74,76,77,70,74,68,69,70,71,72,73,74,76,76,77,68,69,70,71,72,73,74,76,77,68,71,72,74,76,77,72,74,76,77,72,74,76,77,77,76,74,68,69,70,71,72,73,74,76,77,76,76,77,76,76,76,76,77,77,77,77,76,68,69,70,71,72,73,74,76,77,74,76,70,74,76,68,69,70,71,72,73,74,76,76,77,68,69,70,71,72,73,74,76,77,72,74,76,77,68,71,68,69,70,71,72,73,74,76,77,76,77,68,69,70,71,72,73,74,76,77,76,68,69,70,71,72,73,74,76,77,74,68,71,70,74,76,71,76,74,77,74,76,73,77,71,68,68,69,70,71,72,73,74,76,77,72,74,76,77,76,68,69,70,71,72,73,74,76,77,68,71,76,68,69,70,71,72,73,74,76,77,68,69,70,71,72,73,74,76,77,68,69,70,71,72,73,74,76,77,74,68,69,70,71,72,73,74,76,77,89,0,0,89,0,0,0,0,89,0,0,89,0,0,89,0,89,0,0,89,0,0,0,0,89,0,0,89,90,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,93,93,93,93,91,93,95,97,99,101,103,105,89,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,91,91,92,93,93,94,95,95,96,97,97,98,99,99,100,101,101,102,103,103,104,105,105,106,107,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,90,90,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,90,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,90,90,90,90,91,93,95,97,99,101,103,105,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,116,134,48,0,0,48,48,48,59,48,59,48,59,48,59,48,59,48,59,48,59,48,59,59,48,59,59,59,59,48,48,48,48,59,59,48,48,59,48,59,48,59,48,59,48,59,59,48,59,48,59,59,59,59,59,59,48,59,48,48,59,59,48,59,48,59,59,59,59,59,48,59,59,0,59,59,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5,6],[7,7],[8,8],[9,9],[10,10],[11,11],[1,1],[12,12],[13,13],[5,14],[15,15],[16,16],[17,17],[5,18],[19,19],[20,20],[21,21],[5,22],[23,23],[3,3],[24,24],[25,25],[26,26],[5,27],[5,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[30,31],[[33,[7,32]]]],[[30,31],[[33,[8,32]]]],[[30,31],[[33,[9,32]]]],[[30,31],[[33,[10,32]]]],[[30,31],[[33,[11,32]]]],[[30,31],[[33,[1,32]]]],[[30,31],[[33,[12,32]]]],[[30,31],[[33,[13,32]]]],[[30,31],[[33,[15,32]]]],[[30,31],[[33,[16,32]]]],[[30,31],[[33,[17,32]]]],[[30,31],[[33,[19,32]]]],[[30,31],[[33,[20,32]]]],[[30,31],[[33,[21,32]]]],[[30,31],[[33,[23,32]]]],[[30,31],[[33,[3,32]]]],[[30,31],[[33,[24,32]]]],[[30,31],[[33,[25,32]]]],[[30,31],[[33,[26,32]]]],[[30,31],[[33,[29,32]]]],[[7,34],[[33,[35,36]]]],[[8,34],[[33,[35,36]]]],[[9,34],[[33,[35,36]]]],[[10,34],[[33,[35,36]]]],[[11,34],[[33,[35,36]]]],[[1,34],[[33,[35,36]]]],[[12,34],[[33,[35,36]]]],[[13,34],[[33,[35,36]]]],[[15,34],[[33,[35,36]]]],[[16,34],[[33,[35,36]]]],[[17,34],[[33,[35,36]]]],[[19,34],[[33,[35,36]]]],[[20,34],[[33,[35,36]]]],[[21,34],[[33,[35,36]]]],[[23,34],[[33,[35,36]]]],[[3,34],[[33,[35,36]]]],[[24,34],[[33,[35,36]]]],[[25,34],[[33,[35,36]]]],[[26,34],[[33,[35,36]]]],[[29,34],[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],0,[[],37],[20],[20],[38,[[33,[7]]]],[38,[[33,[8]]]],[38,[[33,[9]]]],[38,[[33,[1]]]],[38,[[33,[12]]]],[38,[[33,[13]]]],[38,[[33,[15]]]],[38,[[33,[16]]]],[38,[[33,[17]]]],[38,[[33,[19]]]],[38,[[33,[20]]]],[38,[[33,[21]]]],[38,[[33,[23]]]],[38,[[33,[3]]]],[38,[[33,[24]]]],0,0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[13,[[33,[16,15]]]],[17,[[33,[20,19]]]],[21,[[33,[3,23]]]],[[7,7],40],[[8,8],40],[[9,9],40],[[11,11],40],[[1,1],40],[[12,12],40],[[13,13],40],[[15,15],40],[[16,16],40],[[17,17],40],[[19,19],40],[[20,20],40],[[21,21],40],[[23,23],40],[[3,3],40],[[24,24],40],[[25,25],40],[[26,26],40],[[29,29],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[6,40],[14,40],[18,40],[22,40],[27,40],[28,40],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],0,0,0,0,0,[[7,44],45],[[7,44],45],[[8,44],45],[[9,44],45],[[10,44],45],[[11,44],45],[[1,44],45],[[12,44],45],[[13,44],45],[[13,44],45],[[15,44],45],[[15,44],45],[[16,44],45],[[16,44],45],[[46,44],45],[[17,44],45],[[17,44],45],[[19,44],45],[[19,44],45],[[20,44],45],[[20,44],45],[[21,44],45],[[21,44],45],[[23,44],45],[[23,44],45],[[3,44],45],[[3,44],45],[[24,44],45],[[25,44],45],[[25,44],45],[[26,44],45],[[26,44],45],[[29,44],45],[[29,44],45],[[47,44],45],[[47,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,26],[19,26],[[]],[23,29],[[]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,54]],[[8,54]],[[1,54]],[[12,54]],[[13,54]],[[15,54]],[[16,54]],[[17,54]],[[19,54]],[[20,54]],[[21,54]],[[23,54]],[[3,54]],[[24,54]],[[25,54]],[[26,54]],[[29,54]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,55]],[[13,55]],[[17,55]],[[21,55]],[[26,55]],[[29,55]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,[13,[[57,[16]]]],[17,[[57,[20]]]],[21,[[57,[3]]]],[[39,39],1],[58,13],[59,17],[[60,2,1],21],[[1,58],21],0,0,[[],61],0,0,0,0,0,0,[[7,62],33],[[8,62],33],[[9,62],33],[[10,62],33],[[11,62],33],[[1,62],33],[[12,62],33],[[13,62],33],[[15,62],33],[[16,62],33],[[17,62],33],[[19,62],33],[[20,62],33],[[21,62],33],[[23,62],33],[[3,62],33],[[24,62],33],0,0,[26,[[57,[63]]]],[29,[[57,[63]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],0,[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,0,0,[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[5,75],[76,76],[77,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[30,31],[[33,[72,32]]]],[[30,31],[[33,[74,32]]]],[[30,31],[[33,[76,32]]]],[[30,31],[[33,[77,32]]]],[[72,34],[[33,[35,36]]]],[[74,34],[[33,[35,36]]]],[[76,34],[[33,[35,36]]]],[[77,34],[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[[],77],0,0,[38,[[33,[68]]]],[38,[[33,[69]]]],[38,[[33,[70]]]],[38,[[33,[71]]]],[38,[[33,[72]]]],[38,[[33,[73]]]],[38,[[33,[74]]]],[38,[[33,[76]]]],[38,[[33,[77]]]],[[],39],[[76,76],40],[[77,77],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[75,40],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],0,0,0,0,0,[[68,44],45],[[69,44],45],[[70,44],45],[[71,44],45],[[72,44],45],[[73,44],45],[[74,44],45],[[76,44],45],[[76,44],45],[[77,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[],68],[[],71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,54]],[[77,54]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,55]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[74,78],0,0,0,0,0,[[[81,[79,80]],82,35,83,84,85,85],71],[[86,83,84,85],76],0,0,0,0,0,0,0,[85,68],[[68,62],33],[[69,62],33],[[70,62],33],[[71,62],33],[[72,62],33],[[73,62],33],[[74,62],33],[[76,62],33],[[77,62],33],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[57,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68],[71],[[],66],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[74,88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,31],[[33,[91,32]]]],[[30,31],[[33,[92,32]]]],[[30,31],[[33,[93,32]]]],[[30,31],[[33,[94,32]]]],[[30,31],[[33,[95,32]]]],[[30,31],[[33,[96,32]]]],[[30,31],[[33,[97,32]]]],[[30,31],[[33,[98,32]]]],[[30,31],[[33,[99,32]]]],[[30,31],[[33,[100,32]]]],[[30,31],[[33,[101,32]]]],[[30,31],[[33,[102,32]]]],[[30,31],[[33,[103,32]]]],[[30,31],[[33,[104,32]]]],[[30,31],[[33,[105,32]]]],[[30,31],[[33,[106,32]]]],[[30,31],[[33,[107,32]]]],[[91,34],[[33,[35,36]]]],[[92,34],[[33,[35,36]]]],[[93,34],[[33,[35,36]]]],[[94,34],[[33,[35,36]]]],[[95,34],[[33,[35,36]]]],[[96,34],[[33,[35,36]]]],[[97,34],[[33,[35,36]]]],[[98,34],[[33,[35,36]]]],[[99,34],[[33,[35,36]]]],[[100,34],[[33,[35,36]]]],[[101,34],[[33,[35,36]]]],[[102,34],[[33,[35,36]]]],[[103,34],[[33,[35,36]]]],[[104,34],[[33,[35,36]]]],[[105,34],[[33,[35,36]]]],[[106,34],[[33,[35,36]]]],[[107,34],[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[[93,93],40],[[],40],[[],40],[[],40],[[],40],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[41,[[33,[42,43]]]],[[89,44],45],[[89,44],45],[[91,44],45],[[92,44],45],[[93,44],45],[[94,44],45],[[95,44],45],[[96,44],45],[[97,44],45],[[98,44],45],[[99,44],45],[[100,44],45],[[101,44],45],[[102,44],45],[[103,44],45],[[104,44],45],[[105,44],45],[[106,44],45],[[107,44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[90,35],[[57,[89]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],90],[90,35],0,[90,57],[90,57],[[90,35],57],[[91,62],33],[[93,62],33],[[95,62],33],[[97,62],33],[[99,62],33],[[101,62],33],[[103,62],33],[[105,62],33],[90],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[80,80],[[]],[[80,80],108],[[],108],[[30,31],[[33,[80,32]]]],[[80,34],[[33,[35,36]]]],[34,[[33,[35,36]]]],[38,[[33,[80]]]],[[80,80],40],[[],40],[[],40],[[],40],[[],40],[41,[[33,[42,43]]]],[[80,44],45],[[80,44],45],[[]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[]],[109,[[33,[80]]]],[[80,54]],[[]],[[],56],[80,40],0,[110,80],[[80,80],[[57,[108]]]],[[80,62],33],[[],[[65,[49,64]]]],[[],111],[[],112],[[]],[80,113],[[],114],[[],115],[[],66],[[],33],[[],33],[[80,116,[119,[[0,[117,118]]]]],80],[[],67],[[]],0,0,[34,120],[[116,[119,[[0,[117,118]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[59,59],[48,48],[[]],[[]],[[30,31],[[33,[59,32]]]],[[30,31],[[33,[48,32]]]],[[59,34],[[33,[35,36]]]],[[48,34],[[33,[35,36]]]],[34,[[33,[35,36]]]],[34,[[33,[35,36]]]],[38,[[33,[59]]]],[[59,59],40],[[48,48],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[41,[[33,[42,43]]]],[[59,44],45],[[48,44],45],[[48,44],45],[[]],[[]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[[50,[49]],[52,[37,51]]],[[33,[53]]]],[[]],[[]],[[59,54]],[[48,54]],[59],[[]],[[]],[[],56],[[],56],[[121,122,84,110],[[33,[59,48]]]],[59,123],0,[59,124],[[59,62],33],[[],[[65,[49,64]]]],[[],[[65,[49,64]]]],[[]],[[]],[[],66],0,[[],33],[[],33],[[],33],[[],33],[59,110],0,[59,125],0,[[],67],[[],67],[59,[[33,[126]]]],[59,[[33,[126]]]],[59,[[33,[127]]]],[[59,[119,[[0,[117,118]]]],[128,[80]]],[[33,[48]]]],[[]],[[]]],"c":[],"p":[[3,"PegOutFees"],[3,"Amount"],[4,"WalletOutputV0"],[8,"Any"],[15,"u16"],[3,"DynModuleConsensusItem"],[4,"WalletConsensusItem"],[3,"PegOutSignatureItem"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[4,"WalletOutputOutcome"],[3,"DynOutputOutcome"],[3,"UnknownWalletOutputOutcomeVariantError"],[3,"WalletOutputOutcomeV0"],[4,"WalletInput"],[3,"DynInput"],[3,"UnknownWalletInputVariantError"],[3,"WalletInputV0"],[4,"WalletOutput"],[3,"DynOutput"],[3,"UnknownWalletOutputVariantError"],[3,"Rbf"],[4,"WalletCreationError"],[4,"WalletInputError"],[3,"DynInputError"],[3,"DynOutputError"],[4,"WalletOutputError"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"WalletCommonInit"],[4,"ProcessPegOutSigError"],[4,"PegInProofError"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[4,"Option"],[3,"Txid"],[3,"PegInProof"],[3,"Address"],[3,"ProprietaryKey"],[8,"Serializer"],[8,"Error"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"WalletGenParams"],[3,"WalletGenParamsLocal"],[3,"WalletGenParamsConsensus"],[3,"WalletConfig"],[3,"WalletConfigLocal"],[3,"WalletConfigPrivate"],[3,"WalletConfigConsensus"],[3,"DynClientConfig"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"ModuleKind"],[3,"PeerId"],[3,"CompressedPublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[4,"Network"],[15,"u32"],[3,"BitcoinRpcConfig"],[6,"PegInDescriptor"],[4,"Value"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[3,"BlockCountVoteKey"],[3,"BlockCountVotePrefix"],[3,"FeeRateVoteKey"],[3,"FeeRateVotePrefix"],[3,"PegOutNonceKey"],[4,"Ordering"],[15,"str"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[8,"Contract"],[8,"Verification"],[8,"Signing"],[3,"Secp256k1"],[6,"Result"],[3,"TxOutProof"],[3,"Transaction"],[3,"OutPoint"],[3,"BlockHash"],[3,"TxOut"],[3,"ValidationErrors"],[3,"ValidationError"],[4,"Descriptor"],[3,"WalletModuleTypes"],[13,"Default"],[13,"Default"],[13,"Default"],[13,"Default"],[8,"Tweakable"]]},\
"fedimint_wallet_server":{"doc":"","t":"DDDLLLLLLLMLLLLLLLFMMLLCLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMLLLLLLLLLLFMMMLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["StatelessWallet","Wallet","WalletInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","available_utxos","block_count_local","block_is_known","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","cfg","clone","clone_into","common","consensus_block_count","consensus_fee_rate","consensus_nonce","consensus_proposal","consensus_proposal","create_peg_out_tx","create_tx","database_version","decoder","decoder","derive_script","descriptor","distributed_gen","distributed_gen","dump_database","dump_database","finalize_peg_out_psbt","fmt","fmt","from","from","from","from_ref","get_block_count","get_client_config","get_client_config","get_database_migrations","get_fee_rate_opt","get_wallet_value","init","init","into","into","into","into_request","into_request","into_request","module_kind","new","new_with_bitcoind","nonce_from_idx","offline_wallet","our_peer_id","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","recognize_change_utxo","remove_rbf_transactions","run_broadcast_pending_tx","secp","secp","secret_key","sign_peg_out_psbt","sign_psbt","supported_api_versions","supported_api_versions","sync_up_to_consensus_height","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","validate_config","validate_params","validate_tx","versions","vzip","vzip","vzip"],"q":[[0,"fedimint_wallet_server"]],"d":["","","","","","","","","Queries the database and returns all assets and …","","The result of last successful get_block_count","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Wrapper around <code>self.btc_rpc</code> that keeps track of the last …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","Add a change UTXO to our spendable UTXO database after it …","Removes the <code>PendingTransaction</code> and any transactions tied …","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","Given a tx created from an <code>WalletOutput</code>, validate there …","","","",""],"i":[0,0,0,1,1,1,19,1,1,1,1,1,29,19,1,29,19,1,0,1,1,19,19,0,1,1,1,1,1,1,29,19,19,1,29,29,19,19,19,19,1,19,1,29,19,1,19,1,19,19,19,1,1,19,19,29,19,1,29,19,1,19,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,29,1,29,1,29,19,19,1,19,19,19,19,29,19,1,29,19,1,29,19,1,19,19,19,29,19,29,19,1],"f":[0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],7],[[1,8,9,10],[[13,[[12,[11]]]]]],[[[8,[14]],9,15],[[13,[[12,[11,5]]]]]],[[1,8],3],0,[[1,8,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[8,18]],0,0,[19,19],[[]],0,[[1,8],[[21,[20]]]],[[1,8],22],[[1,8],[[24,[23]]]],[[[8,[14]],15],[[13,[[12,[11,5]]]]]],[[1,8],[[13,[[12,[11]]]]]],[[1,8,25,[24,[23]]],[[28,[26,27]]]],[[29,30,31,3,3,22,[24,[23]],[21,[32]]],[[28,[26,27]]]],[[],33],[[],34],[[],34],[[29,[35,[23]]],31],0,[[19,36,37],[[13,[[12,[11]]]]]],[[36,37],[[13,[[12,[11,5]]]]]],[[19,8,[3,[38]]],[[13,[[12,[11]]]]]],[[[8,[14]],[3,[38,5]]],[[13,[[12,[11,5]]]]]],[[1,26],[[28,[39,40]]]],[[19,41],42],[[1,41],42],[[]],[[]],[[]],[[]],[1,[[43,[20]]]],[[19,44],[[43,[45]]]],[[15,44],[[28,[46,47]]]],[[],[[48,[33,5]]]],[1,[[43,[[21,[22]]]]]],[[1,8],30],[[49,50,51,52],[[13,[[12,[11,5]]]]]],[[19,[53,[19]]],[[13,[[12,[11]]]]]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],55],[[56,50,51,52],[[43,[1]]]],[[56,50,18,51,52],[[28,[1,57]]]],[58,[[24,[23]]]],[1,29],0,[[1,8,59],[[13,[[12,[11]]]]]],[[[8,[14]],59,15],[[13,[[12,[11,5]]]]]],[[[8,[14]],60,52],[[13,[[12,[11,5]]]]]],[[1,8,61,52],[[13,[[12,[11]]]]]],[[1,8,62],[[13,[[12,[11]]]]]],[[[8,[14]],63,15],[[13,[[12,[11,5]]]]]],[[[8,[14]],64,59,15],[[13,[[12,[11,5]]]]]],[[1,8,65,59],[[13,[[12,[11]]]]]],[[1,8,39]],[[1,8,39]],[[50,18,66]],0,0,0,[[1,67,52,68],[[28,[40]]]],[[29,67]],[[],69],[19,69],[[1,8,20,20]],[[],70],[[]],[[19,[35,[52]],37],[[48,[52,49]]]],[[[35,[52]],37],[[48,[52,49,5]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],71],[[],71],[[],71],[[52,49],[[28,[47]]]],[[19,52,49],43],[37,[[28,[47]]]],[[29,26,25,22,72],[[28,[27]]]],[[19,73],[[35,[74]]]],[[]],[[]],[[]]],"c":[],"p":[[3,"Wallet"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"DatabaseTransaction"],[3,"Audit"],[6,"ModuleInstanceId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"NonCommittable"],[15,"u16"],[3,"BlockHash"],[15,"bool"],[3,"DynBitcoindRpc"],[3,"WalletInit"],[15,"u32"],[4,"Option"],[3,"Feerate"],[15,"u8"],[15,"array"],[4,"WalletOutputV0"],[3,"UnsignedTransaction"],[4,"WalletOutputError"],[4,"Result"],[3,"StatelessWallet"],[3,"Amount"],[3,"Script"],[3,"Rbf"],[3,"DatabaseVersion"],[3,"Decoder"],[15,"slice"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[3,"PendingTransaction"],[4,"ProcessPegOutSigError"],[3,"Formatter"],[6,"Result"],[6,"Result"],[3,"ServerModuleConsensusConfig"],[3,"WalletClientConfig"],[3,"ClientModuleConfig"],[3,"Error"],[3,"BTreeMap"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"PeerId"],[3,"ServerModuleInitArgs"],[3,"Request"],[3,"ModuleKind"],[3,"WalletConfig"],[4,"WalletCreationError"],[15,"u64"],[3,"OutPoint"],[3,"DynModuleConsensusItem"],[4,"WalletConsensusItem"],[4,"WalletInput"],[3,"DynInput"],[3,"DynOutput"],[4,"WalletOutput"],[3,"TaskHandle"],[3,"PartiallySignedTransaction"],[3,"PegOutSignatureItem"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[3,"TypeId"],[4,"Network"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"]]},\
"fedimint_wasm_tests":{"doc":"","t":"FAAFFFFFFFFFFFFF","n":["client","faucet","tests","gateway_api","generate_invoice","invite_code","pay_invoice","__wbgt_build_client_0","__wbgt_derive_chacha_key_2","__wbgt_receive_1","__wbgt_receive_and_pay_3","build_client","derive_chacha_key","receive","receive_and_pay","set_gateway"],"q":[[0,"fedimint_wasm_tests"],[3,"fedimint_wasm_tests::faucet"],[7,"fedimint_wasm_tests::tests"]],"d":["","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[1,[[3,[2]]]],0,0,[[],[[3,[4]]]],[5,[[3,[4]]]],[[],[[3,[4]]]],[6,3],[7],[7],[7],[7],[[],3],[[]],[[],3],[[],3],[2,3]],"c":[],"p":[[3,"InviteCode"],[3,"ClientArc"],[6,"Result"],[3,"String"],[15,"u64"],[15,"str"],[3,"Context"]]},\
"fedimintd":{"doc":"","t":"FFARDRDMLLMMMLLLLLLMMMLLLLLLLLLMLMFMFLMMFMLLLLLLLLLLLLLM","n":["attach_default_module_init_params","default_esplora_server","fedimintd","FM_EXTRA_DKG_META_VAR","Fedimintd","SHUTDOWN_TIMEOUT","ServerOpts","api_url","augment_args","augment_args_for_update","bind_api","bind_metrics_api","bind_p2p","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","data_dir","extra_dkg_meta","finality_delay","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into_request","into_request","network","new","p2p_url","parse_map","password","run","run","server_gen_params","server_gens","spawn_metrics_server","tokio_console_bind","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","with_default_modules","with_extra_module_inits_params","with_module","with_telemetry"],"q":[[0,"fedimintd"],[3,"fedimintd::fedimintd"]],"d":["Generates the configuration for the modules configured in …","","Module for creating <code>fedimintd</code> binary with custom modules","","<code>fedimintd</code> builder","Time we will wait before forcefully shutting down tasks","","Our API address for clients to connect to us","","","Address we bind to for exposing the API","","Address we bind to for federation communication","","","","","","","Path to folder containing federation config files","List of default meta values to use during config …","The bitcoin network that fedimint will be running on","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The bitcoin network that fedimint will be running on","","Our external address for communicating with our peers","","Password to encrypt sensitive config files","","","","","","Enable tokio console logging","","","","","","","","","","","","","","Enable telemetry logging"],"i":[0,0,0,0,0,0,0,7,7,7,7,7,7,13,7,13,7,7,7,7,7,7,13,7,7,7,7,13,7,13,7,7,13,7,0,7,0,13,13,13,0,7,13,7,13,7,13,7,7,7,13,7,13,13,13,7],"f":[[[1,2,3,4]],[3,1],0,0,0,0,0,0,[5,5],[5,5],0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,0,[[]],[[]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[[],[[11,[10]]]],[[]],[[]],[[],12],[[],12],0,[[],[[14,[13]]]],0,[15,[[14,[[17,[16,16]]]]]],0,[[7,18,19,2],14],[13,20],0,0,[[21,18],14],0,[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[7,6],[[9,[8]]]],[[7,6],[[9,[8]]]],[[]],[[]],[13,13],[[13,23,24,25],13],[[13,[0,[26,27,28]]],13],0],"c":[],"p":[[3,"BitcoinRpcConfig"],[6,"ServerModuleConfigGenParamsRegistry"],[4,"Network"],[15,"u32"],[3,"Command"],[3,"ArgMatches"],[3,"ServerOpts"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Request"],[3,"Fedimintd"],[6,"Result"],[15,"str"],[3,"String"],[3,"BTreeMap"],[3,"TaskGroup"],[6,"ServerModuleInitRegistry"],[15,"never"],[4,"SocketAddr"],[3,"TypeId"],[6,"ModuleInstanceId"],[3,"ModuleKind"],[8,"ModuleInitParams"],[8,"ServerModuleInit"],[8,"Send"],[8,"Sync"]]},\
"gateway_cli":{"doc":"","t":"NNNDENNNNNNNNMLLLLLLLLLMLLLLLLLLLLLLLLLFFMLLLLLLLLLLLLMMMMMMMMMMMMMM","n":["Address","Backup","Balance","Cli","Commands","Completion","ConnectFed","Info","LeaveFed","Restore","SetConfiguration","VersionHash","Withdraw","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","into_request","into_request","into_request","into_request","main","print_response","rpcpassword","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","amount","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","invite_code","network","num_route_hints","password","routing_fees","shell"],"q":[[0,"gateway_cli"],[54,"gateway_cli::Commands"]],"d":["Generate a new peg-in address, funds sent to it can later …","Make a backup of snapshot of all ecash","Check gateway balance","","","","Register federation with the gateway","Display high-level information about the Gateway","Leave a federation","Restore ecash from last available snapshot or from scratch","","Display CLI version hash","Claim funds from a gateway federation","The address of the gateway webserver","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","WARNING: Passing in a password from the command line may …","","","","","","","","","","","","","The address to send the funds to","The amount to withdraw","","","","","","","InviteCode code to connect to the federation","","","","",""],"i":[6,6,6,0,0,6,6,6,6,6,6,6,6,3,3,3,6,6,3,6,3,6,3,3,3,3,6,3,6,3,6,3,6,3,6,3,3,6,6,0,0,3,3,6,3,6,3,6,3,6,3,6,3,6,16,16,17,18,16,19,20,21,22,23,23,23,23,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[[]],[[]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[[],[[8,[7]]]],[9,10],[[]],[[]],[[],11],[[],12],[[],12],[[],11],[[],13],[14],0,[[],5],[[],5],[[],5],[[],5],[[],15],[[],15],[[3,2],[[5,[4]]]],[[6,2],[[5,[4]]]],[[3,2],[[5,[4]]]],[[6,2],[[5,[4]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Command"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Request"],[6,"Result"],[8,"Serialize"],[3,"TypeId"],[13,"Withdraw"],[13,"Balance"],[13,"Address"],[13,"LeaveFed"],[13,"Backup"],[13,"Restore"],[13,"ConnectFed"],[13,"SetConfiguration"],[13,"Completion"]]},\
"gateway_cln_extension":{"doc":"","t":"EDDDDNDDGGRDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLMFMLLMLLLLLLLLLLLLLLLLLLLLLLLLFLLMMLMLLFMLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ClnExtensionError","ClnExtensionOpts","ClnHtlcInterceptor","ClnRpcClient","ClnRpcService","Error","Htlc","HtlcAccepted","HtlcInterceptionSender","HtlcOutcomeSender","MAX_HTLC_PROCESSING_DURATION","Onion","RpcError","RpcWrongResponse","amount_msat","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","command","command_for_update","complete_htlc","convert_short_channel_id","deserialize","deserialize","deserialize","erased_serialize","erased_serialize","erased_serialize","fm_gateway_listen","fmt","fmt","fmt","fmt","fmt","forward_msat","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","get_node_info","get_route_hints","group_id","htlc","htlc_processing_failure","id","info","intercept_htlc","interceptor","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","main","new","new","onion","outcomes","pay_invoice","payment_hash","route_htlcs","rpc_client","scid_to_u64","sender","serialize","serialize","serialize","short_channel_id","short_channel_id","socket","source","task_group","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"gateway_cln_extension"]],"d":["","","Functional structure to filter intercepted HTLCs into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateway CLN extension service listen address","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new RPC client for a request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,22,0,0,0,0,0,0,22,22,2,25,25,40,6,25,2,3,4,22,5,40,6,25,2,3,4,22,5,2,3,4,5,2,3,4,5,2,2,25,25,6,5,2,3,4,2,3,4,25,2,3,4,22,22,3,40,6,25,2,3,4,22,22,22,5,25,25,2,3,4,5,6,6,25,4,0,2,6,5,6,40,6,25,2,3,4,22,5,40,40,6,6,25,25,2,2,3,3,4,4,22,22,5,5,0,6,5,4,5,6,2,6,6,0,5,2,3,4,2,3,6,22,6,2,3,4,5,22,40,6,25,2,3,4,22,5,40,6,25,2,3,4,22,5,40,6,25,2,3,4,22,5,25,25,40,6,25,2,3,4,22,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[6,[8,[7]]],[[11,[[10,[9]]]]]],[12,[[15,[13,14]]]],[16,[[15,[2]]]],[16,[[15,[3]]]],[16,[[15,[4]]]],[17,[[15,[18,19]]]],[17,[[15,[18,19]]]],[17,[[15,[18,19]]]],0,[[2,20],21],[[3,20],21],[[4,20],21],[[22,20],21],[[22,20],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[14,22],[[]],[23,22],[[]],[24,[[15,[25,26]]]],[24,[[15,[25,26]]]],[[]],[[]],[[]],[[]],[[6,[8,[27]]],[[11,[[10,[9]]]]]],[[6,[8,[28]]],[[11,[[10,[9]]]]]],[[],[[30,[29]]]],0,[[],31],0,[6,[[15,[22]]]],[[5,4],31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],8],[[],32],[[],8],[[],8],[[],32],[[],32],[[],8],[[],32],[[],8],[[],32],[[],8],[[],8],[[],32],[[],32],[[],8],[[],[[15,[14]]]],[[],[[15,[22]]]],[[],5],0,0,[[6,[8,[33]]],[[11,[[10,[9]]]]]],0,[[6,[8,[27]]],[[11,[[10,[9]]]]]],[6,[[15,[34,22]]]],[35,13],0,[[2,36],15],[[3,36],15],[[4,36],15],0,0,0,[22,[[30,[37]]]],0,[[]],[[]],[[]],[[]],[[],38],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[25,24],[[15,[26]]]],[[25,24],[[15,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Command"],[3,"Htlc"],[3,"Onion"],[3,"HtlcAccepted"],[3,"ClnHtlcInterceptor"],[3,"ClnRpcService"],[3,"InterceptHtlcResponse"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"str"],[15,"u64"],[3,"Error"],[4,"Result"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[4,"ClnExtensionError"],[3,"RpcError"],[3,"ArgMatches"],[3,"ClnExtensionOpts"],[6,"Error"],[3,"EmptyRequest"],[3,"GetRouteHintsRequest"],[3,"Id"],[4,"Option"],[4,"Value"],[3,"Request"],[3,"PayInvoiceRequest"],[3,"ClnRpc"],[3,"ShortChannelId"],[8,"Serializer"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"ClnRpcClient"]]},\
"gatewayd":{"doc":"","t":"F","n":["main"],"q":[[0,"gatewayd"]],"d":["Fedimint Gateway Binary"],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[3,"Error"],[4,"Result"]]},\
"hkdf":{"doc":"This crate implements the RFC5869 hash based key …","t":"ISQDQSKKCLLLLLLLLKKLKLALKLMLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitcoinHash","DISPLAY_BACKWARD","Engine","Hkdf","Inner","LEN","all_zeros","as_inner","bitcoin_hashes","borrow","borrow_mut","clone","clone_into","derive","derive_hmac","engine","from","from_engine","from_inner","from_prk","from_slice","hash","hashes","into","into_inner","new","prk","to_owned","try_from","try_into","type_id","Hash160","Ripemd160","Sha1","Sha256","Sha256d","Sha512","Siphash24","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","engine","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine_to_u64","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u64","hash","hash","hash","hash","hash","hash","hash","hash_to_u64_with_keys","hash_with_keys","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"hkdf"],[31,"hkdf::hashes"]],"d":["Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","Implements the RFC5869 hash based key derivation function …","The byte array that represents the hash internally.","Length of the hash, in bytes.","Returns an all zero hash.","Unwraps the hash and returns a reference to the underlying …","","","","","","Run HKDF-expand to generate new key material","Run HKDF-expand to generate new key material with …","Constructs a new engine.","Returns the argument unchanged.","Produces a hash from the current state of a given engine.","Constructs a hash from the underlying byte array.","Construct the HKDF from a pseudo random key that has the …","Copies a byte slice into a hash object.","Hashes some bytes.","","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","Run HKDF-extract and keep the resulting pseudo random key …","","","","","","Output of the Bitcoin HASH160 hash function.","Output of the RIPEMD160 hash function.","Output of the SHA1 hash function.","Output of the SHA256 hash function.","Output of the SHA256d hash function.","Output of the SHA256 hash function.","Output of the SipHash24 hash function.","","","","","","","","","","","","","","","","","","","","","","Returns the (little endian) 64-bit integer representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Produces a hash as <code>u64</code> from the current state of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a hash from its (little endian) 64-bit integer …","","","","","","","","Hashes the given data directly to u64 with an engine with …","Hashes the given data with an engine with the provided …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,0,2,2,2,2,0,3,3,3,3,3,3,2,3,2,2,3,2,2,0,3,2,3,3,3,3,3,3,0,0,0,0,0,0,0,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,12,12,13,13,14,14,15,15,16,16,17,17,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,12,13,14,15,16,17,18,12,13,14,15,16,17,18,13,17,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,12,13,14,15,16,17,18,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[2]],[5,[4]]],[[6,[4]]]],[[[3,[2]],[5,[4]]],[[7,[2]]]],[[]],[[]],[[]],[[]],[[[7,[2]]],[[3,[2]]]],[[[5,[4]]],[[9,[8]]]],[[[5,[4]]]],0,[[]],[[]],[[[5,[4]],[10,[[5,[4]]]]],[[3,[2]]]],0,[[]],[[],9],[[],9],[[],11],0,0,0,0,0,0,0,[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[12],[13],[14],[15],[16],[17],[18],[12,[[5,[4]]]],[13,[[5,[4]]]],[14,[[5,[4]]]],[15,[[5,[4]]]],[16,[[5,[4]]]],[17,[[5,[4]]]],[18,[[5,[4]]]],[18,19],[[]],[12,[[5,[4]]]],[[]],[13,[[5,[4]]]],[[]],[14,[[5,[4]]]],[[]],[15,[[5,[4]]]],[16,[[5,[4]]]],[[]],[[]],[17,[[5,[4]]]],[18,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],20],[[13,13],20],[[14,14],20],[[15,15],20],[[16,16],20],[[17,17],20],[[18,18],20],[[],12],[12],[13],[14],[15],[16],[17],[18],[21,[[9,[12]]]],[21,[[9,[13]]]],[21,[[9,[14]]]],[21,[[9,[15]]]],[21,[[9,[16]]]],[21,[[9,[17]]]],[21,[[9,[18]]]],[[],22],[[],22],[[12,12],23],[[13,13],23],[[14,14],23],[[15,15],23],[[16,16],23],[[17,17],23],[[18,18],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[12,24],[[9,[25]]]],[[12,24],[[9,[25]]]],[[12,24],[[9,[25]]]],[[13,24],[[9,[25]]]],[[13,24],[[9,[25]]]],[[13,24],[[9,[25]]]],[[14,24],[[9,[25]]]],[[14,24],[[9,[25]]]],[[14,24],[[9,[25]]]],[[15,24],[[9,[25]]]],[[15,24],[[9,[25]]]],[[15,24],[[9,[25]]]],[[16,24],[[9,[25]]]],[[16,24],[[9,[25]]]],[[16,24],[[9,[25]]]],[[17,24],[[9,[25]]]],[[17,24],[[9,[25]]]],[[17,24],[[9,[25]]]],[[18,24],[[9,[25]]]],[[18,24],[[9,[25]]]],[[18,24],[[9,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[30,12],[22,13],[31,14],[32,15],[22,16],[22,17],[33,18],[33,19],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[[5,[4]]],[[9,[12,8]]]],[[[5,[4]]],[[9,[13,8]]]],[[[5,[4]]],[[9,[14,8]]]],[[[5,[4]]],[[9,[15,8]]]],[[[5,[4]]],[[9,[16,8]]]],[[[5,[4]]],[[9,[17,8]]]],[[[5,[4]]],[[9,[18,8]]]],[[[5,[4]]],[[9,[12,8]]]],[[[5,[4]]],[[9,[13,8]]]],[[[5,[4]]],[[9,[14,8]]]],[[[5,[4]]],[[9,[15,8]]]],[[[5,[4]]],[[9,[16,8]]]],[[[5,[4]]],[[9,[17,8]]]],[[[5,[4]]],[[9,[18,8]]]],[34,[[9,[12]]]],[34,[[9,[13]]]],[34,[[9,[14]]]],[34,[[9,[15]]]],[34,[[9,[16]]]],[34,[[9,[17]]]],[34,[[9,[18]]]],[19,18],[[12,35]],[[13,35]],[[14,35]],[[15,35]],[[16,35]],[[17,35]],[[18,35]],[[19,19,[5,[4]]],19],[[19,19,[5,[4]]],18],[[12,[36,[[5,[4]]]]]],[[13,[36,[[5,[4]]]]]],[[14,[36,[[5,[4]]]]]],[[15,[36,[[5,[4]]]]]],[[16,[36,[[5,[4]]]]]],[[17,[36,[[5,[4]]]]]],[[18,[36,[[5,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[14],[15],[16],[17],[18],[[12,12],[[10,[20]]]],[[13,13],[[10,[20]]]],[[14,14],[[10,[20]]]],[[15,15],[[10,[20]]]],[[16,16],[[10,[20]]]],[[17,17],[[10,[20]]]],[[18,18],[[10,[20]]]],[[12,37],9],[[13,37],9],[[14,37],9],[[15,37],9],[[16,37],9],[[17,37],9],[[18,37],9],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11]],"c":[],"p":[[8,"Clone"],[8,"BitcoinHash"],[3,"Hkdf"],[15,"u8"],[15,"slice"],[15,"array"],[3,"Hmac"],[4,"Error"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Sha512"],[3,"Hash160"],[3,"Ripemd160"],[3,"Sha1"],[3,"Sha256"],[3,"Sha256d"],[3,"Siphash24"],[15,"u64"],[4,"Ordering"],[8,"Deserializer"],[3,"HashEngine"],[15,"bool"],[3,"Formatter"],[3,"Error"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[15,"str"],[8,"Hasher"],[8,"SliceIndex"],[8,"Serializer"],[3,"String"]]},\
"ln_gateway":{"doc":"","t":"NNNNRRRRRNNNNGRDNEDDERNNENNNDRRGNGNNMMLLLLLLLLLLLLLLLLLLMLAMMLLLLLLLLLLMALLLMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAALLMMMLLMMMMLLALMLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLALLLLLLLFMMMMMMMMDLLLLLLLLLLLLLMMLLLLLLMEDDNDDNDNDDNDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLMLMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAMMMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIDQDLMLLLLLLLLLLLKLLLLLLLKKMLLLLLLLLLMLMLKLLLKLMLLLLLLLLLLLDDMLLLLLLLLLLMLLLLLLLLLLLLMLMLMLLLLLLMMMLLLLLLLLLLEDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLDGRMLLLLLLLLLLLMLMLLLLLLMLLLLNNNNNNNNDGIIERDGLLLLLLKLLLLLKLLMLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLMLKLKLKLLLLLLLLLLLLLLLLLLMMMMMMMNDNDDNNDDDEDINDDNQNDNDNNDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMAAMFFLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLNDDEGNDLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLFFFFFFFFFFFFNNNNNNRDDDEEEEDRNNNNNNNENNNNDMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLMMMMLLMLLAMMMMLLLMLLLLMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMNEDNNNDDENENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNDDDDDEDNNNNNNNNNNEDENDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMF","n":["ClientStateMachineError","Cln","Configuring","Connected","DB_FILE","DEFAULT_FEES","DEFAULT_MODULE_KINDS","DEFAULT_NETWORK","DEFAULT_NUM_ROUTE_HINTS","DatabaseError","Disconnected","Disconnected","FederationError","FederationToClientMap","GW_ANNOUNCEMENT_TTL","Gateway","GatewayConfigurationError","GatewayError","GatewayOpts","GatewayParameters","GatewayState","INITIAL_SCID","Initializing","InvalidMetadata","LightningMode","LightningRpcError","Lnd","OutgoingPaymentError","PrettyInterceptHtlcRequest","ROUTE_HINT_RETRIES","ROUTE_HINT_RETRY_SLEEP","Result","Running","ScidToFederationMap","UnexpectedState","UnsupportedNetwork","api_addr","api_addr","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id_generator","check_federation_network","client","client_builder","clients","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command","command_for_update","data_dir","db","deserialize","dump_database","erased_serialize","fees","fees","fetch_lightning_node_info","fetch_lightning_route_hints","fetch_lightning_route_hints_try","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","gateway_db","gateway_id","gateway_lnrpc","gateway_parameters","get_gateway_configuration","get_gateway_id","group_id","handle_address_msg","handle_backup_msg","handle_balance_msg","handle_connect_federation","handle_disconnect","handle_get_info","handle_htlc_stream","handle_leave_federation","handle_pay_invoice_msg","handle_restore_msg","handle_set_configuration_msg","handle_withdraw_msg","has_subcommand","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","lightning_builder","listen","listen","lnd","lnrpc_client","load_clients","make_federation_info","mode","network","network","new_with_custom_registry","new_with_default_modules","num_route_hints","num_route_hints","password","password","register_clients_timer","remove_client","rpc","run","scid_to_federation","select_client","serialize","set_gateway_state","source","start_gateway","start_webserver","state","state_machine","to_gateway_parameters","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","utils","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_new_password","lightning_alias","lightning_network","lightning_public_key","lnrpc","cln_extension_addr","lnd_macaroon","lnd_rpc_addr","lnd_tls_cert","GatewayClientBuilder","borrow","borrow_mut","build","clone","clone_into","fmt","from","from_ref","into","into_request","into_request","load_configs","new","primary_module","registry","save_config","to_owned","try_from","try_into","type_id","vzip","work_dir","DbKeyPrefix","DbKeyPrefixIter","FederationConfig","FederationConfig","FederationIdKey","FederationIdKeyPrefix","FederationRegistration","GatewayConfiguration","GatewayConfiguration","GatewayConfigurationKey","GatewayPublicKey","GatewayPublicKey","PreimageAuthentication","PreimageAuthentication","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","id","idx","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","iter","len","marker","mint_channel_id","network","next","next_back","nth","num_route_hints","partial_cmp","password","payment_hash","routing_fees","serialize","serialize","size_hint","timelock_delta","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","EmptyRequest","EmptyResponse","GetNodeInfoResponse","GetRouteHintsRequest","GetRouteHintsResponse","InterceptHtlcRequest","InterceptHtlcResponse","PayInvoiceRequest","PayInvoiceResponse","action","alias","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_lightning_client","gateway_lightning_server","get_route_hints_response","htlc_id","htlc_id","incoming_amount_msat","incoming_chan_id","incoming_chan_id","incoming_expiry","intercept_htlc_response","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","max_delay","max_fee_msat","network","num_route_hints","outgoing_amount_msat","payment_hash","payment_hash","preimage","pub_key","route_hints","short_channel_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GatewayLightningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","complete_htlc","connect","fmt","from","from_ref","get_node_info","get_route_hints","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","pay_invoice","route_htlcs","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GatewayLightning","GatewayLightningServer","RouteHtlcsStream","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","call","clone","clone","clone_into","clone_into","complete_htlc","fmt","fmt","from","from","from_arc","from_ref","from_ref","get_node_info","get_route_hints","inner","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","pay_invoice","poll_ready","poll_ready","poll_ready","route_htlcs","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","cltv_expiry_delta","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","hops","htlc_maximum_msat","htlc_maximum_msat","htlc_minimum_msat","htlc_minimum_msat","into","into","into_request","into_request","into_request","into_request","proportional_millionths","short_channel_id","src_node_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Action","Cancel","Cancel","Forward","Forward","Settle","Settle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","merge","preimage","reason","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","GatewayLndClient","HtlcSubscriptionSender","LND_PAYMENT_TIMEOUT_SECONDS","address","borrow","borrow_mut","cancel_htlc","complete_htlc","connect","fmt","from","info","into","into_request","into_request","lnd_sender","lookup_payment","macaroon","new","pay","route_htlcs","routehints","send_lnd_response","spawn_interceptor","tls_cert","try_from","try_into","type_id","vzip","FailedPayment","FailedToCompleteHtlc","FailedToConnect","FailedToGetInvoice","FailedToGetNodeInfo","FailedToGetRouteHints","FailedToOpenChannel","FailedToRouteHtlcs","GatewayLightningBuilder","HtlcResult","ILnRpcClient","LightningBuilder","LightningRpcError","MAX_LIGHTNING_RETRIES","NetworkLnRpcClient","RouteHtlcStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone_into","clone_into","complete_htlc","complete_htlc","connect","connection_url","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_ref","from_ref","info","info","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lightning_mode","new","pay","pay","route_htlcs","route_htlcs","routehints","routehints","serialize","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","Backup","BackupPayload","Balance","BalancePayload","ConnectFedPayload","ConnectFederation","DepositAddress","DepositAddressPayload","FederationInfo","GatewayInfo","GatewayRequest","GatewayRequestInner","GatewayRequestTrait","Info","InfoPayload","LeaveFedPayload","PayInvoice","Response","Restore","RestorePayload","SetConfiguration","SetConfigurationPayload","Shutdown","Withdraw","WithdrawPayload","address","amount","balance_msat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federations","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","gateway_state","handle","impl_gateway_request_trait","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","lightning_alias","lightning_pub_key","network","network","num_route_hints","password","request","route_hints","routing_fees","rpc_client","rpc_server","sender","serde_hex_deserialize","serde_hex_serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadStatus","Error","GatewayRpcClient","GatewayRpcError","GatewayRpcResult","RequestError","Response","backup","base_url","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","call","chunk","client","connect_federation","content_length","error_for_status","error_for_status_ref","extensions","extensions_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_balance","get_deposit_address","get_info","headers","headers_mut","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_body","is_builder","is_connect","is_decode","is_redirect","is_request","is_status","is_timeout","json","leave_federation","new","password","remote_addr","res","restore","set_configuration","source","source","status","status","text","text_with_charset","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upgrade","url","url","url","url_mut","version","vzip","vzip","vzip","vzip","with_password","with_url","withdraw","without_url","address","backup","balance","connect_fed","get_gateway_id","info","leave_fed","pay_invoice","restore","run_webserver","set_configuration","withdraw","Canceled","Complete","Created","Fail","Funding","FundingFailed","GW_ANNOUNCEMENT_TTL","GatewayClientContext","GatewayClientInit","GatewayClientModule","GatewayClientStateMachines","GatewayExtPayStates","GatewayExtReceiveStates","GatewayMeta","Htlc","INITIAL_REGISTER_BACKOFF_DURATION","OfferDoesNotExist","Pay","Pay","Preimage","Preimage","Receive","Receive","ReceiveError","RefundError","RefundSuccess","RouteHtlcError","Success","SwapParameters","all_clients","all_clients","all_clients","all_scids","all_scids","all_scids","amount_msat","as_any","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complete","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_funding_incoming_contract_output_from_htlc","create_funding_incoming_contract_output_from_swap","create_sufficient_input","decoder","decoder","decoder","deserialize","deserialize","deserialize","deserialize","dump_database","dump_database","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_db","gateway_db","gateway_db","gateway_handle_direct_swap","gateway_handle_intercepted_htlc","gateway_pay_bolt11_invoice","gateway_subscribe_ln_pay","gateway_subscribe_ln_receive","get_balance","handle_cli_command","htlc_id","incoming_amount_msat","incoming_chan_id","incoming_expiry","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lightning_alias","lightning_alias","ln_decoder","lnrpc","lnrpc","lnrpc","mint_channel_id","mint_channel_id","module_api","module_kind","module_kind","node_pub_key","node_pub_key","notifier","notifier","operation_id","operation_id","outgoing_amount_msat","output_amount","output_amount","pay","payment_hash","payment_hash","redeem_key","redeem_key","register_with_federation","register_with_federation_inner","restore","secp","serialize","serialize","serialize","serialize","short_channel_id","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","timelock_delta","timelock_delta","timelock_delta","to_bytes","to_bytes","to_bytes","to_dyn_common","to_gateway_registration_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","contract_id","error","error","error_message","out_points","preimage","preimage","error","error","error","error_message","out_points","CompleteHtlc","CompleteHtlcError","CompleteHtlcState","FailedToCompleteHtlc","Failure","Failure","GatewayCompleteCommon","GatewayCompleteStateMachine","GatewayCompleteStates","HtlcFinished","HtlcOutcome","IncomingContractNotFunded","Success","WaitForPreimage","WaitForPreimageState","as_any","await_complete_htlc","await_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","htlc_id","incoming_chan_id","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","outcome","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_complete_htlc","transition_success","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CancelContract","Canceled","CancelledContract","ClaimOutgoingContract","Failed","GatewayPayCancelContract","GatewayPayClaimOutgoingContract","GatewayPayCommon","GatewayPayInvoice","GatewayPayStateMachine","GatewayPayStates","GatewayPayWaitForSwapPreimage","InvalidOutgoingContract","InvalidOutgoingContract","InvoiceAlreadyPaid","InvoiceExpired","InvoiceMissingAmount","LightningPayError","MissingContractData","NotOurKey","OfferDoesNotExist","OutgoingContractDoesNotExist","OutgoingContractError","OutgoingPaymentError","OutgoingPaymentErrorType","PayInvoice","PaymentParameters","Preimage","SwapFailed","TimeoutTooClose","Underfunded","WaitForSwapPreimage","as_any","await_get_payment_parameters","await_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage","buy_preimage_over_lightning","buy_preimage_via_direct_swap","check_swap_to_federation","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract","contract","contract_id","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","error_type","federation_id","fetch_parameters_and_pay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","max_delay","max_send_amount","operation_id","operation_id","operation_id","operation_id","pay_invoice_payload","preimage","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transition_canceled","transition_claim_outgoing_contract","transition_claim_outgoing_contract","transitions","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_outgoing_account","verify_preimage_authentication","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract_id","error","error","error_message","txid","contract_id","contract_id","error","lightning_error","swap_error","retry"],"q":[[0,"ln_gateway"],[221,"ln_gateway::GatewayState"],[225,"ln_gateway::LightningMode"],[229,"ln_gateway::client"],[252,"ln_gateway::db"],[503,"ln_gateway::gateway_lnrpc"],[707,"ln_gateway::gateway_lnrpc::gateway_lightning_client"],[737,"ln_gateway::gateway_lnrpc::gateway_lightning_server"],[796,"ln_gateway::gateway_lnrpc::get_route_hints_response"],[846,"ln_gateway::gateway_lnrpc::intercept_htlc_response"],[931,"ln_gateway::lnd"],[960,"ln_gateway::lnrpc_client"],[1047,"ln_gateway::lnrpc_client::LightningRpcError"],[1054,"ln_gateway::rpc"],[1327,"ln_gateway::rpc::rpc_client"],[1433,"ln_gateway::rpc::rpc_server"],[1445,"ln_gateway::state_machine"],[1768,"ln_gateway::state_machine::GatewayExtPayStates"],[1775,"ln_gateway::state_machine::GatewayExtReceiveStates"],[1780,"ln_gateway::state_machine::complete"],[1994,"ln_gateway::state_machine::pay"],[2380,"ln_gateway::state_machine::pay::GatewayPayStates"],[2385,"ln_gateway::state_machine::pay::OutgoingContractError"],[2386,"ln_gateway::state_machine::pay::OutgoingPaymentErrorType"],[2390,"ln_gateway::utils"]],"d":["","","","","","","","","","","","","","","How long a gateway announcement stays valid","","","","","<code>GatewayParameters</code> is a helper struct that can be derived …","","LND HTLC interceptor can’t handle SCID of 0, so start …","","","","","","","","","","","","","","","Public URL from which the webserver API is reachable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to folder containing gateway config and data files","","","","","Configured gateway routing fees Format: &lt;base_msat&gt;,&lt;…","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","This function will return a <code>GatewayConfiguration</code> one of two","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Gateway webserver listen address","","","","","","","Bitcoin network this gateway will be running on","","","","Number of route hints to return in invoices","","Gateway webserver authentication password","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map <code>gateway_lnrpc</code> protobuf types to rust types","","","","","","","","","","","","","","","","","","","LND macaroon file path","LND RPC address","LND TLS cert file path","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The alias of the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>GetRouteHintsResponse</code>.","The index of the incoming htlc in the incoming channel","The index of the incoming htlc in the incoming channel","The incoming HTLC amount in millisatoshi. This amount …","The id of the incoming channel","The id of the incoming channel","The incoming HTLC expiry Determines block height when the …","Nested message and enum types in <code>InterceptHtlcResponse</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The network the node is on. Valid values are “main” | …","","The outgoing HTLC amount in millisatoshi This is the …","","The HTLC payment hash. Value is not guaranteed to be …","The preimage of the invoice","The public key of the associated lightning node","The route hints to the associated lightning node","The short channel id of the HTLC. Use this value to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GatewayLightning is a service that provides limited access …","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","GetNodeInfo returns the public key and alias of the …","GetRouteHints returns the route hints to the associated …","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","PayInvoice attempts to pay an invoice using the associated …","RouteHtlcs opens a bi-directional stream for the client to …","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","GatewayLightning is a service that provides limited access …","Server streaming response type for the RouteHtlcs method.","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","GetNodeInfo returns the public key and alias of the …","GetRouteHints returns the route hints to the associated …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","PayInvoice attempts to pay an invoice using the associated …","","","","RouteHtlcs opens a bi-directional stream for the client to …","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Flat routing fee in millisatoshis.","","","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Hops that make up a route hint to the associated lightning …","Returns the value of <code>htlc_maximum_msat</code>, or the default …","The maximum value in msat available for routing with a …","Returns the value of <code>htlc_minimum_msat</code>, or the default …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Liquidity-based routing fee in millionths of a routed …","The short_channel_id of this channel.","The node_id of the non-target end of the route.","","","","","","","","","","","","","Request to complete an intercepted HTLC with failure …","","Request to just forward the HTLC without failing or …","","Request to complete an intercepted HTLC with success …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","Returns the encoded length of the message without a length …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Decodes an instance of the message from a buffer, and …","The preimage for settling an intercepted HTLC","The reason for the cancellation of an intercepted HTLC","","","","","","","","","","","","","","","","","","","","","","","","LND client","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>ILnRpcClient</code> that wraps around <code>GatewayLightningClient</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get the public key and alias of the lightning node","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Attempt to pay an invoice using the lightning node","","","","Get route hints to the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about one of the feds we are connected to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unique identifier of the fed","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Errors that may occur when processing a <code>Request</code>.","","","","","A Response to a submitted <code>Request</code>.","","","","","","","","","","","Get the full response body as <code>Bytes</code>.","","Stream a chunk of the response body.","","","Get the content-length of this response, if known.","Turn a response into an error if the server returned an …","Turn a reference to a response into an error if the server …","Returns a reference to the associated extensions.","Returns a mutable reference to the associated extensions.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the <code>Headers</code> of this <code>Response</code>.","Get a mutable reference to the <code>Headers</code> of this <code>Response</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the error is related to the request or …","Returns true if the error is from a type Builder.","Returns true if the error is related to connect","Returns true if the error is related to decoding the …","Returns true if the error is from a <code>RedirectPolicy</code>.","Returns true if the error is related to the request","Returns true if the error is from …","Returns true if the error is related to a timeout.","Try to deserialize the response body as JSON.","","","","Get the remote address used to get this <code>Response</code>.","","","","","","Returns the status code, if the error was generated from a …","Get the <code>StatusCode</code> of this <code>Response</code>.","Get the full response text.","Get the full response text given a specific encoding.","","","","","","","","","","","","","","","Consumes the response and returns a future for a possible …","Returns a possible URL related to this error.","Get the final <code>Url</code> of this <code>Response</code>.","","Returns a mutable reference to the URL related to this …","Get the HTTP <code>Version</code> of this <code>Response</code>.","","","","","","Add a url related to this error (overwriting any existing)","","Strip the related url from this error (if, for example, it …","Generate deposit address","Backup a gateway actor state","Display gateway ecash note balance","Connect a new federation","","Display high-level information about the Gateway","Leave a federation","","","","","Withdraw from a gateway federation.","","","","","","","","","","Client side Lightning module <strong>for the gateway</strong>.","","The high-level state of a reissue operation started with …","The high-level state of an intercepted HTLC operation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Attempt buying preimage from this federation in order to …","Attempt fulfill HTLC by buying preimage from the federation","Pay lightning invoice on behalf of federation user","","Subscribe to updates when the gateway is handling an …","","","The index of the incoming htlc in the incoming channel","The incoming HTLC amount in millisatoshi.","The id of the incoming channel","The incoming HTLC expiry","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The outgoing HTLC amount in millisatoshi","","","","The HTLC payment hash.","","","","Register gateway with federation","","","","","","","","The short channel id of the HTLC.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that completes the incoming payment by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes the Lightning payment on …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies that the supplied <code>preimage_auth</code> is the same as the","","","","","","","","","","","","","","","","","","","","","","Run the supplied closure <code>op_fn</code> up to <code>max_attempts</code> times. …"],"i":[26,8,7,7,0,0,0,0,0,26,7,26,26,0,0,0,26,0,0,0,0,0,7,26,0,26,8,26,0,0,0,0,7,0,26,26,32,6,32,32,8,8,23,32,6,7,2,8,26,23,32,6,7,2,8,26,2,2,0,2,2,6,7,2,8,6,7,2,8,32,32,32,0,8,2,8,32,6,0,2,2,23,6,7,7,8,26,26,23,32,6,7,2,8,26,26,26,26,26,32,8,32,8,6,7,2,8,2,2,0,2,2,2,32,2,2,2,2,2,2,2,2,2,2,2,2,8,23,32,6,7,2,8,26,23,23,32,32,6,6,7,7,2,2,8,8,26,26,26,2,32,6,0,0,2,2,32,32,6,2,2,32,6,32,6,2,2,0,2,2,2,8,2,26,2,2,2,0,32,6,7,2,8,23,7,26,23,32,6,7,2,8,26,23,32,6,7,2,8,26,23,32,6,7,2,8,26,0,32,8,32,8,0,23,32,6,7,2,8,26,0,254,254,254,254,255,256,256,256,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,81,0,0,81,0,81,0,0,81,0,81,82,81,82,83,91,74,84,85,34,86,81,82,83,91,74,84,85,34,86,81,82,83,74,84,85,34,86,81,82,83,74,84,85,34,86,83,83,83,91,74,84,85,34,86,83,91,74,84,85,34,86,83,91,74,84,85,34,86,74,34,83,74,84,85,34,86,83,83,83,83,74,74,74,74,84,84,84,84,85,85,85,85,34,34,34,34,86,86,86,86,74,34,74,81,81,83,91,74,84,85,34,86,81,82,83,91,74,84,85,34,86,83,83,91,74,84,84,85,85,34,86,86,81,82,83,74,84,85,34,86,82,83,83,82,81,82,83,91,74,84,85,34,86,82,81,81,82,82,83,83,91,91,74,74,84,84,85,85,34,34,86,86,74,81,82,82,74,34,82,82,82,34,83,34,86,34,74,34,82,74,83,83,91,91,74,84,84,85,85,34,86,86,81,82,83,74,84,85,34,86,81,81,82,83,91,74,84,85,34,86,81,82,83,91,74,84,85,34,86,81,82,83,91,74,84,85,34,86,81,82,83,91,74,84,85,34,86,0,0,0,0,0,0,0,0,0,110,106,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,0,0,0,109,110,109,109,110,109,0,103,104,105,106,107,108,109,110,111,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,107,107,107,106,105,109,107,109,108,106,111,109,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,103,104,105,106,107,108,109,110,111,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,131,0,132,132,135,132,135,132,132,132,132,135,132,135,132,131,135,132,135,132,132,135,132,131,131,132,135,132,132,132,135,135,132,132,132,132,132,132,132,131,132,132,132,131,132,132,135,132,135,132,135,132,135,132,135,132,132,0,0,142,142,143,142,143,142,143,142,143,142,143,142,142,143,142,143,142,143,142,143,142,143,142,143,143,142,142,142,142,142,143,142,142,143,143,142,142,142,142,143,142,143,142,143,142,143,142,143,0,0,148,0,148,0,148,145,146,147,148,145,146,147,148,145,146,147,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,145,146,146,147,147,148,148,148,145,146,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,0,0,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,30,161,160,30,161,160,64,160,30,160,30,160,19,161,161,161,30,30,30,30,30,30,30,30,30,30,30,30,161,30,161,160,30,30,160,19,161,30,161,160,30,30,161,161,160,160,160,161,19,161,19,161,19,161,30,30,30,160,30,30,161,160,30,161,160,30,161,160,30,161,160,257,258,259,260,261,262,263,162,0,162,0,0,162,162,0,0,0,0,0,0,162,0,0,162,163,162,0,162,0,162,162,0,55,55,3,44,50,46,41,53,42,39,55,3,47,54,162,164,44,50,46,41,53,42,39,55,3,47,54,162,164,44,50,42,39,55,3,54,44,50,42,39,55,3,54,3,44,50,46,41,53,42,39,55,3,47,54,3,47,44,50,46,41,53,42,39,55,3,47,54,50,41,53,42,39,55,3,47,47,44,50,46,41,53,42,39,55,3,47,54,162,164,44,50,46,41,53,42,39,55,3,47,54,162,164,44,50,42,39,55,3,54,47,47,164,0,44,50,46,41,53,42,39,55,3,47,54,162,164,44,44,50,50,46,46,41,41,53,53,42,42,39,39,55,55,3,3,47,47,54,54,162,162,164,164,44,47,47,47,54,54,54,164,47,54,0,0,164,0,0,44,50,46,41,53,42,39,55,3,47,54,163,44,46,41,53,42,39,55,54,44,50,42,39,55,3,54,44,50,46,41,53,42,39,55,3,47,54,162,164,44,50,46,41,53,42,39,55,3,47,54,162,164,44,50,46,41,53,42,39,55,3,47,54,162,164,47,44,50,46,41,53,42,39,55,3,47,54,162,164,174,0,0,0,0,174,0,169,169,175,169,171,174,175,169,171,174,171,169,171,169,169,171,171,171,171,171,175,175,171,174,174,175,169,171,171,174,174,169,169,169,171,171,175,175,169,171,174,175,175,169,169,171,171,174,174,175,175,175,175,175,175,175,175,171,169,169,169,171,171,169,169,175,174,175,171,171,171,175,174,175,169,171,174,175,169,171,174,175,169,171,174,171,175,171,171,175,171,175,169,171,174,169,175,169,175,0,0,0,0,0,0,0,0,0,0,0,0,196,201,196,196,197,197,0,0,0,0,0,0,0,0,0,0,196,198,201,196,197,198,201,0,197,197,203,196,0,199,200,206,199,200,206,205,206,201,199,206,206,196,197,198,199,200,206,201,203,204,205,196,197,198,199,200,206,201,203,204,205,206,206,196,197,198,199,200,201,201,203,204,205,196,197,198,199,200,201,203,204,205,0,201,203,204,201,203,204,201,203,204,206,206,206,206,206,206,199,199,206,196,197,198,203,199,199,196,197,201,203,204,196,196,196,196,197,197,197,197,201,201,201,201,203,203,203,203,204,204,204,204,201,196,197,198,203,199,206,196,197,198,199,200,206,201,203,203,204,205,196,197,198,199,200,206,201,203,204,205,201,203,204,196,197,198,199,200,201,203,204,205,199,200,206,206,206,206,206,206,206,206,204,204,204,204,199,199,206,206,196,197,198,199,200,206,201,203,204,205,201,196,196,197,197,198,198,199,199,200,200,206,206,201,201,203,203,204,204,205,205,199,206,200,199,200,206,199,206,206,199,199,199,206,200,206,201,201,204,206,206,0,204,205,200,206,206,206,206,200,196,197,198,203,204,206,199,199,206,206,199,200,206,201,203,204,199,206,196,197,198,199,200,201,203,204,205,203,201,201,196,197,198,199,200,206,201,203,204,204,205,205,196,197,198,199,200,206,201,203,204,205,196,197,198,199,200,206,201,203,204,205,196,197,198,199,200,206,201,203,204,205,206,264,265,266,266,267,268,267,269,270,271,270,269,235,0,0,234,235,233,0,0,0,235,0,234,233,235,0,236,238,237,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,235,232,236,236,237,233,238,234,235,232,236,237,233,238,236,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,234,235,232,236,237,233,238,234,234,234,234,235,235,235,235,232,232,232,232,236,236,236,236,237,237,237,237,233,233,233,233,238,238,238,238,236,234,234,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,235,232,236,237,233,238,232,232,234,235,232,236,237,233,238,234,234,235,235,232,232,236,236,237,237,233,233,238,238,236,236,232,238,234,236,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,237,238,236,236,237,238,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,235,232,236,237,233,238,234,235,232,236,237,233,238,244,244,245,244,244,0,0,0,0,0,0,0,245,246,246,245,245,246,245,245,244,246,0,0,0,244,0,244,246,245,245,244,243,247,249,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,247,247,247,247,244,242,243,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,243,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,28,248,249,250,28,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,244,244,244,242,242,242,242,243,243,243,243,245,245,245,245,246,246,246,246,28,28,28,28,247,247,247,247,241,241,241,241,248,248,248,248,249,249,249,249,250,250,250,250,243,244,242,243,245,246,28,247,241,248,249,250,250,28,249,247,244,242,243,245,245,246,246,28,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,244,242,242,243,243,245,245,246,246,28,28,247,247,241,241,248,248,249,249,250,250,241,241,241,243,243,242,249,247,248,244,242,243,245,246,28,247,241,248,249,250,243,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,245,246,28,250,248,249,243,243,247,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,244,242,243,245,246,28,247,241,248,249,250,247,247,244,242,243,245,246,28,247,241,248,249,250,272,272,273,273,272,274,275,276,277,278,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,3,4],5],0,0,0,[6,6],[7,7],[2,2],[8,8],[[]],[[]],[[]],[[]],[[],1],[[],1],0,0,[9,[[10,[8]]]],[[11,[13,[12]]],[[15,[14]]]],[16,[[10,[17,18]]]],0,0,[[[20,[19]]],5],[[[20,[19]],21],[[5,[[13,[22]]]]]],[[19,21],[[5,[[13,[22]]]]]],[[23,24],25],[[6,24],25],[[7,24],25],[[7,24],25],[[8,24],25],[[26,24],25],[[26,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[27,26],[[]],[[[15,[28]]],26],[29,26],[30,26],[31,[[10,[32,33]]]],[31,[[10,[8,33]]]],[31,[[10,[32,33]]]],[31,[[10,[8,33]]]],[[]],[[]],[[]],[[]],0,0,0,0,[2,[[35,[34]]]],[36,37],[[],[[35,[38]]]],[[2,39],[[5,[40]]]],[[2,41],5],[[2,42],[[5,[43]]]],[[2,44],[[5,[3]]]],[[2,45]],[[2,46],[[5,[47]]]],[[2,48,49]],[[2,50],5],[[2,51],[[5,[52]]]],[[2,53],5],[[2,54],5],[[2,55],[[5,[56]]]],[57,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],[26,61],0,0,0,0,0,[[2,[20,[19]],37,12],5],[[2,62,63],3],0,0,0,[[[20,[64]],65,66,67,[35,[12]],[35,[4]],68,21,36],[[69,[2]]]],[[],[[69,[2]]]],0,0,0,0,[[2,45]],[[2,63],[[5,[62]]]],0,[[2,45],[[69,[70]]]],0,[[2,63],[[5,[62]]]],[[8,71],10],[[2,7]],[26,[[35,[72]]]],[[2,45],5],[[2,45]],0,0,[32,6],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],0,[[32,31],[[10,[33]]]],[[8,31],[[10,[33]]]],[[32,31],[[10,[33]]]],[[8,31],[[10,[33]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,[35,[34]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[65,74,37,12,[20,[19]],75,76,[35,[62]],36],[[5,[62]]]],[65,65],[[]],[[65,24],25],[[]],[[]],[[]],[[],60],[[],59],[[65,11],[[5,[[13,[74]]]]]],[[77,78,79],65],0,0,[[65,74,[11,[80]]],5],[[]],[[],10],[[],10],[[],73],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,81],[82,82],[83,83],[74,74],[84,84],[85,85],[34,34],[86,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],87],[[],87],[[88,89],[[10,[83,90]]]],[[88,89],[[10,[91,90]]]],[[88,89],[[10,[74,90]]]],[[88,89],[[10,[84,90]]]],[[88,89],[[10,[85,90]]]],[[88,89],[[10,[34,90]]]],[[88,89],[[10,[86,90]]]],[[83,92],[[10,[93,94]]]],[[91,92],[[10,[93,94]]]],[[74,92],[[10,[93,94]]]],[[84,92],[[10,[93,94]]]],[[85,92],[[10,[93,94]]]],[[34,92],[[10,[93,94]]]],[[86,92],[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[9,[[10,[74]]]],[9,[[10,[34]]]],[[83,83],58],[[74,74],58],[[84,84],58],[[85,85],58],[[34,34],58],[[86,86],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],0,[[81,24],25],[[81,24],25],[[83,24],25],[[91,24],25],[[74,24],25],[[84,24],25],[[85,24],25],[[34,24],25],[[86,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,93],[[35,[81]]]],[[83,101]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],0,[[],82],[82,93],0,0,0,[82,35],[82,35],[[82,93],35],0,[[83,83],[[35,[87]]]],0,0,0,[[74,71],10],[[34,71],10],[82],0,[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103],[104],[105],[106],[107],[108],[109],[110],[111],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],103],[[],104],[[],105],[[],106],[[],107],[[],108],[[],109],[[],110],[[],111],[103,93],[104,93],[105,93],[106,93],[107,93],[108,93],[109,93],[110,93],[111,93],[[103,103],58],[[104,104],58],[[105,105],58],[[106,106],58],[[107,107],58],[[108,108],58],[[109,109],58],[[110,110],58],[[111,111],58],[[103,24],25],[[104,24],25],[[105,24],25],[[106,24],25],[[107,24],25],[[108,24],25],[[109,24],25],[[110,24],25],[[111,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[114,[[113,[112]]]],115],[[114,[[113,[112]]]]]],[[]],[[]],[[[114,[116]]],[[114,[116]]]],[[]],[[[114,[[113,[112]]]],[117,[110]]],[[10,[[118,[104]],119]]]],[[[121,[120]]],[[10,[[114,[122]],123]]]],[[[114,[124]],24],25],[[]],[[]],[[[114,[[113,[112]]]],[117,[103]]],[[10,[[118,[106]],119]]]],[[[114,[[113,[112]]]],[117,[105]]],[[10,[[118,[111]],119]]]],0,[[]],[[],59],[[],60],[[[114,[[113,[112]]]],93],[[114,[[113,[112]]]]]],[[[114,[[113,[112]]]],93],[[114,[[113,[112]]]]]],[[[113,[112]]],[[114,[[113,[112]]]]]],[[[114,[[113,[112]]]],[117,[107]]],[[10,[[118,[108]],119]]]],[[[114,[[113,[112]]]],[117,[103]]],[[10,[[118,[[125,[109]]]],119]]]],[[[114,[[113,[112]]]],115],[[114,[[113,[112]]]]]],[[]],[[],10],[[],10],[[],73],[[]],[[[127,[[126,[112]]]],[113,[112]],128],[[114,[[129,[[127,[[126,[112]]]],[113,[112]],128]]]]]],[[[113,[112]],130],[[114,[[113,[112]]]]]],0,0,0,0,[[[132,[131]],115],[[132,[131]]]],0,[[]],[[]],[[]],[[]],[126],[[[132,[131]],[126,[[0,[133,134]]]]]],[126],[[[135,[131]]],[[135,[131]]]],[[[132,[131]]],[[132,[131]]]],[[]],[[]],[[[59,[110]]],[[137,[[15,[136]]]]]],[[[135,[124]],24],25],[[[132,[[0,[124,131]]]],24],25],[[]],[[]],[[[20,[131]]],[[132,[131]]]],[[]],[[]],[[[59,[103]]],[[137,[[15,[136]]]]]],[[[59,[105]]],[[137,[[15,[136]]]]]],0,[[]],[[]],[[],138],[[],139],[[],59],[[],60],[[],60],[[],59],[[[132,[131]],93],[[132,[131]]]],0,[[[132,[131]],93],[[132,[131]]]],0,[131,[[132,[131]]]],[[[59,[107]]],[[137,[[15,[136]]]]]],[140,[[141,[10]]]],[140,[[141,[10]]]],[[[132,[131]],140],[[141,[10]]]],[[[59,[103]]],[[137,[[15,[136]]]]]],[[[132,[131]],115],[[132,[131]]]],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[]],[[]],[[131,128],[[129,[[132,[131]],128]]]],0,0,0,[[]],[[]],[[]],[[]],[142],[143],[142,142],[143,143],[[]],[[]],0,[[],142],[[],143],[142,93],[143,93],[[142,142],58],[[143,143],58],[[142,24],25],[[143,24],25],[[]],[[]],[[]],[[]],0,[142,144],0,[142,144],0,[[]],[[]],[[],59],[[],60],[[],59],[[],60],0,0,0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145],[146],[147],[145,145],[146,146],[147,147],[148,148],[[]],[[]],[[]],[[]],[[],145],[[],146],[[],147],[[148,149]],[145,93],[146,93],[147,93],[148,93],[[145,145],58],[[146,146],58],[[147,147],58],[[148,148],58],[[145,24],25],[[146,24],25],[[147,24],25],[[148,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[[35,[148]],21,150,151,152],[[10,[153]]]],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[154,[156,[155]]],[[10,[30]]]],[[157,110],[[137,[[15,[136]]]]]],[[12,12,12],[[10,[158,30]]]],[[157,24],25],[[]],[157,[[137,[[15,[136]]]]]],[[]],[[],60],[[],59],0,[[157,[13,[95]],158],[[10,[[35,[12]],30]]]],0,[[12,12,12,[35,[[156,[155]]]]],157],[[157,107],[[137,[[15,[136]]]]]],[[[15,[157]],45],[[137,[[15,[136]]]]]],[[157,93],[[137,[[15,[136]]]]]],[[[156,[155]],155],[[10,[30]]]],[[157,45,[156,[155]],[159,[155]],[156,[[10,[109,119]]]]],[[10,[30]]]],0,[[],10],[[],10],[[],73],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[137,[[15,[136]]]]]],[160,[[137,[[15,[136]]]]]],[30,30],[160,160],[[]],[[]],[110,[[137,[[15,[136]]]]]],[[161,110],[[137,[[15,[136]]]]]],[67,[[10,[[114,[122]],30]]]],0,[[88,89],[[10,[30,90]]]],[[30,92],[[10,[93,94]]]],[92,[[10,[93,94]]]],[9,[[10,[30]]]],[[30,30],58],[[],58],[[],58],[[],58],[[],58],[16,[[10,[17,18]]]],[[30,24],25],[[30,24],25],[[161,24],25],[[]],[[]],[[]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[]],[[]],[[],[[137,[[15,[136]]]]]],[161,[[137,[[15,[136]]]]]],[[]],[[]],[[]],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],0,[67,161],[107,[[137,[[15,[136]]]]]],[[161,107],[[137,[[15,[136]]]]]],[[15,45],[[137,[[15,[136]]]]]],[[[15,[161]],45],[[137,[[15,[136]]]]]],[93,[[137,[[15,[136]]]]]],[[161,93],[[137,[[15,[136]]]]]],[[30,71],10],[[],[[13,[95,102]]]],[[]],[[]],[[],12],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[50,50],[42,42],[39,39],[55,55],[3,3],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9,[[10,[44]]]],[9,[[10,[50]]]],[9,[[10,[46]]]],[9,[[10,[41]]]],[9,[[10,[53]]]],[9,[[10,[42]]]],[9,[[10,[39]]]],[9,[[10,[55]]]],[9,[[10,[3]]]],[9,[[10,[47]]]],[9,[[10,[54]]]],[[3,3],58],[[47,47],58],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],0,0,0,0,0,0,0,0,0,[[44,24],25],[[50,24],25],[[46,24],25],[[41,24],25],[[53,24],25],[[42,24],25],[[39,24],25],[[55,24],25],[[3,24],25],[[47,24],25],[[54,24],25],[[162,24],25],[[[164,[[0,[124,163]]]],24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[164,[163]],2,45,165]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,[9,[[10,[166]]]],[[167,71],10],[[44,71],10],[[50,71],10],[[46,71],10],[[41,71],10],[[53,71],10],[[42,71],10],[[39,71],10],[[55,71],10],[[3,71],10],[[47,71],10],[[54,71],10],[[[168,[5]]],162],[[44,[168,[5]]],162],[[46,[168,[5]]],162],[[41,[168,[5]]],162],[[53,[168,[5]]],162],[[42,[168,[5]]],162],[[39,[168,[5]]],162],[[55,[168,[5]]],162],[[54,[168,[5]]],162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[169,41],170],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[171,136],[[169,67,172],[[10,[173,174]]]],[171,136],0,[[169,44],[[170,[3]]]],[171,[[35,[144]]]],[171,[[10,[171,175]]]],[171,[[10,[171,175]]]],[171,176],[171,176],[[175,24],[[10,[177]]]],[[175,24],[[10,[177]]]],[[171,24],[[10,[177]]]],[[174,24],25],[[174,24],25],[[]],[[]],[[[180,[[179,[178]]]]],171],[[]],[[]],[175,174],[[169,42],[[170,[43]]]],[[169,39],[[170,[40]]]],[169,[[170,[47]]]],[171,[[182,[181]]]],[171,[[182,[181]]]],0,[[]],[[]],[[]],[[]],[[],59],[[],60],[[],60],[[],59],[[],59],[[],60],[[],60],[[],59],[175,58],[175,58],[175,58],[175,58],[175,58],[175,58],[175,58],[175,58],[171,136],[[169,50],170],[[67,[35,[12]]],169],0,[171,[[35,[66]]]],0,[[169,53],170],[[169,54],170],[175,[[35,[72]]]],[174,[[35,[72]]]],[175,[[35,[183]]]],[171,183],[171,136],[[171,57],136],[[],12],[[],12],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[171,136],[175,[[35,[184]]]],[171,184],0,[175,[[35,[184]]]],[171,185],[[]],[[]],[[]],[[]],[[169,[35,[12]]],169],[[175,184],175],[[169,55],[[170,[186]]]],[175,175],[[[187,[2]],[188,[39]]],[[10,[189,26]]]],[[[187,[2]],[188,[41]]],[[10,[189,26]]]],[[[187,[2]],[188,[42]]],[[10,[189,26]]]],[[[187,[2]],[188,[44]]],[[10,[189,26]]]],[[[187,[2]]],[[10,[189,26]]]],[[[187,[2]],[188,[46]]],[[10,[189,26]]]],[[[187,[2]],[188,[50]]],[[10,[189,26]]]],[[[187,[2]],[188,[51]]],[[10,[189,26]]]],[[[187,[2]],[188,[53]]],[[10,[189,26]]]],[[[35,[34]],66,2,45],190],[[[187,[2]],[188,[54]]],[[10,[189,26]]]],[[[187,[2]],[188,[55]]],[[10,[189,26]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],191],[[],191],[[],192],[[193,194],[[137,[[15,[136,102]]]]]],[195,[[137,[[15,[136,102]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[195,202],[203,203],[204,204],[205,205],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[88,89],[[10,[201,90]]]],[[88,89],[[10,[203,90]]]],[[88,89],[[10,[204,90]]]],[[201,92],[[10,[93,94]]]],[[203,92],[[10,[93,94]]]],[[204,92],[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[206],[195,207],[[195,[11,[208]],193,43],[[137,[[15,[136,102]]]]]],[[206,204],[[10,[209]]]],[[206,205],[[10,[209]]]],[[195,[11,[208]],193,43],[[137,[[15,[136,102]]]]]],[[],97],[[],97],[[],97],[9,[[10,[196]]]],[9,[[10,[197]]]],[9,[[10,[198]]]],[9,[[10,[203]]]],[[199,11,[13,[12]]],[[137,[[15,[136]]]]]],[[[11,[208]],[13,[12,102]]],[[137,[[15,[136,102]]]]]],[[196,196],58],[[197,197],58],[[201,201],58],[[203,203],58],[[204,204],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[202,58],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],0,0,[[196,24],25],[[197,24],25],[[198,24],25],[[199,24],25],[[200,24],25],[[206,24],25],[[201,24],25],[[203,24],25],[[203,24],25],[[204,24],25],[[205,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[206,205],[[69,[193]]]],[[206,204],[[69,[193]]]],[[206,51],[[69,[193]]]],[[206,193],[[69,[[210,[196]]]]]],[[206,193],[[69,[[210,[197]]]]]],[[195,[11,[208]]],[[137,[[15,[136,102]]]]]],[[[96,[211]]],[[137,[[15,[136,102]]]]]],0,0,0,0,[[199,[212,[199]]],[[137,[[15,[136]]]]]],[[213,63,214,36,195,215,216,[218,[217]],219],[[137,[[15,[136,102]]]]]],[206,[[35,[220]]]],[221,[[35,[220]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[201,79]],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[],59],[[],60],[[],60],[[],59],[[],59],[[],60],[[],59],[[],60],0,0,0,0,0,0,0,0,0,[[],222],[[],222],0,0,0,0,[[],193],[201,193],0,[223,[[35,[220]]]],[206,[[35,[220]]]],0,0,0,0,0,[[206,67,[13,[22]],224,37],69],[[206,63,225],69],[[195,[35,[226]]],[[137,[[15,[136,102]]]]]],0,[[196,71],10],[[197,71],10],[[198,71],10],[[203,71],10],0,[[],[[137,[[15,[136,102]]]]]],[[],227],[199,227],[[],58],[[],58],0,0,0,[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],228],[[206,[13,[22]],224,67,37],225],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[201,[[13,[[229,[201]]]]]],[207,[[13,[[229,[202]],102]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[109,[[10,[204]]]],[[],10],[230,[[10,[205]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[208]],195,[231,[217]]],[[137,[[15,[136,102]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],191],[[200,232,233],[[10,[234]]]],[[200,232],[[10,[52,234]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[234,234],[235,235],[232,232],[236,236],[195,202],[237,237],[233,233],[238,238],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[88,89],[[10,[234,90]]]],[[88,89],[[10,[235,90]]]],[[88,89],[[10,[232,90]]]],[[88,89],[[10,[236,90]]]],[[88,89],[[10,[237,90]]]],[[88,89],[[10,[233,90]]]],[[88,89],[[10,[238,90]]]],[[234,92],[[10,[93,94]]]],[[235,92],[[10,[93,94]]]],[[232,92],[[10,[93,94]]]],[[236,92],[[10,[93,94]]]],[[237,92],[[10,[93,94]]]],[[233,92],[[10,[93,94]]]],[[238,92],[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[9,[[10,[234]]]],[[234,234],58],[[235,235],58],[[232,232],58],[[236,236],58],[[237,237],58],[[233,233],58],[[238,238],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[202,58],[16,[[10,[17,18]]]],[[234,24],25],[[234,24],25],[[235,24],25],[[232,24],25],[[236,24],25],[[237,24],25],[[233,24],25],[[238,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[],60],[[],59],[236,193],[[],193],0,0,[[234,71],10],0,[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[[10,[52,234]],232],236],[[[10,[234]],232],236],[236,[[13,[[229,[236]]]]]],[207,[[13,[[229,[202]],102]]]],[[237,200,232],[[13,[[229,[236]]]]]],[[238,200,232],[[13,[[229,[236]]]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],191],[[217,239,200],[[10,[28]]]],[[200,63,193,240],[[10,[52,28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[200,240,241,242,51],243],[[200,241,240,242],243],[[62,230,240,242],243],[[200,230],[[35,[62]]]],[244,244],[242,242],[195,202],[243,243],[245,245],[246,246],[28,28],[247,247],[241,241],[248,248],[249,249],[250,250],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[88,89],[[10,[244,90]]]],[[88,89],[[10,[242,90]]]],[[88,89],[[10,[243,90]]]],[[88,89],[[10,[245,90]]]],[[88,89],[[10,[246,90]]]],[[88,89],[[10,[28,90]]]],[[88,89],[[10,[247,90]]]],[[88,89],[[10,[241,90]]]],[[88,89],[[10,[248,90]]]],[[88,89],[[10,[249,90]]]],[[88,89],[[10,[250,90]]]],[[244,92],[[10,[93,94]]]],[[242,92],[[10,[93,94]]]],[[243,92],[[10,[93,94]]]],[[245,92],[[10,[93,94]]]],[[246,92],[[10,[93,94]]]],[[28,92],[[10,[93,94]]]],[[247,92],[[10,[93,94]]]],[[241,92],[[10,[93,94]]]],[[248,92],[[10,[93,94]]]],[[249,92],[[10,[93,94]]]],[[250,92],[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],[92,[[10,[93,94]]]],0,0,0,0,0,[9,[[10,[244]]]],[9,[[10,[242]]]],[9,[[10,[243]]]],[9,[[10,[245]]]],[9,[[10,[246]]]],[9,[[10,[28]]]],[9,[[10,[247]]]],[9,[[10,[241]]]],[9,[[10,[248]]]],[9,[[10,[249]]]],[9,[[10,[250]]]],[[244,244],58],[[242,242],58],[[243,243],58],[[245,245],58],[[246,246],58],[[28,28],58],[[247,247],58],[[241,241],58],[[248,248],58],[[249,249],58],[[250,250],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[202,58],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],[16,[[10,[17,18]]]],0,0,0,[[217,51,200,242],243],[[244,24],25],[[242,24],25],[[243,24],25],[[245,24],25],[[245,24],25],[[246,24],25],[[246,24],25],[[28,24],25],[[28,24],25],[[247,24],25],[[241,24],25],[[248,24],25],[[249,24],25],[[250,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[[96,[95]],[99,[97,98]]],[[10,[100]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],[[],59],[[],60],0,0,0,[243,193],[[],193],0,0,0,0,[[244,71],10],[[242,71],10],[[243,71],10],[[245,71],10],[[246,71],10],[[28,71],10],[[247,71],10],[[241,71],10],[[248,71],10],[[249,71],10],[[250,71],10],0,[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[],[[13,[95,102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[251,240,217,200,242,28],243],[[251,217,200,242,240,52],243],[[242,[10,[52,28]],240],243],[207,[[13,[[229,[202]],102]]]],[243,[[13,[[229,[243]]]]]],[[247,217,200,242],[[13,[[229,[243]]]]]],[[248,217,200,242],[[13,[[229,[243]]]]]],[[249,200,242],[[13,[[229,[243]]]]]],[[250,217,200,242],[[13,[[229,[243]]]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[240,252,144,144],[[10,[241,245]]]],[[200,253,253,240],[[10,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[12,165,224,21],[[10,[27]]]]],"c":[],"p":[[3,"Command"],[3,"Gateway"],[3,"FederationInfo"],[4,"Network"],[6,"Result"],[3,"GatewayParameters"],[4,"GatewayState"],[4,"LightningMode"],[8,"Deserializer"],[4,"Result"],[3,"DatabaseTransaction"],[3,"String"],[3,"Vec"],[8,"Iterator"],[3,"Box"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"ILnRpcClient"],[3,"Arc"],[15,"u32"],[3,"RouteHint"],[3,"PrettyInterceptHtlcRequest"],[3,"Formatter"],[6,"Result"],[4,"GatewayError"],[3,"Error"],[3,"OutgoingPaymentError"],[3,"FederationError"],[4,"LightningRpcError"],[3,"ArgMatches"],[3,"GatewayOpts"],[6,"Error"],[3,"GatewayConfiguration"],[4,"Option"],[3,"Database"],[3,"PublicKey"],[3,"Id"],[3,"DepositAddressPayload"],[3,"Address"],[3,"BackupPayload"],[3,"BalancePayload"],[3,"Amount"],[3,"ConnectFedPayload"],[3,"TaskGroup"],[3,"InfoPayload"],[3,"GatewayInfo"],[6,"RouteHtlcStream"],[3,"TaskHandle"],[3,"LeaveFedPayload"],[3,"PayInvoicePayload"],[3,"Preimage"],[3,"RestorePayload"],[3,"SetConfigurationPayload"],[3,"WithdrawPayload"],[3,"Txid"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Request"],[6,"Response"],[3,"ClientArc"],[3,"FederationId"],[8,"LightningBuilder"],[3,"GatewayClientBuilder"],[4,"SocketAddr"],[3,"SafeUrl"],[3,"RoutingFees"],[6,"Result"],[3,"TaskShutdownToken"],[8,"Serializer"],[8,"Error"],[3,"TypeId"],[3,"FederationConfig"],[6,"FederationToClientMap"],[6,"ScidToFederationMap"],[3,"PathBuf"],[6,"ClientModuleInitRegistry"],[6,"ModuleInstanceId"],[3,"Committable"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"FederationIdKey"],[3,"GatewayPublicKey"],[3,"GatewayConfigurationKey"],[3,"PreimageAuthentication"],[4,"Ordering"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"FederationIdKeyPrefix"],[8,"Write"],[15,"usize"],[3,"Error"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[3,"Global"],[3,"EmptyRequest"],[3,"EmptyResponse"],[3,"GetRouteHintsRequest"],[3,"GetNodeInfoResponse"],[3,"PayInvoiceRequest"],[3,"PayInvoiceResponse"],[3,"InterceptHtlcRequest"],[3,"InterceptHtlcResponse"],[3,"GetRouteHintsResponse"],[6,"BoxBody"],[8,"GrpcService"],[3,"GatewayLightningClient"],[4,"CompressionEncoding"],[8,"Clone"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[3,"Endpoint"],[8,"TryInto"],[3,"Channel"],[3,"Error"],[8,"Debug"],[3,"Streaming"],[3,"Request"],[8,"Service"],[8,"Interceptor"],[3,"InterceptedService"],[3,"Uri"],[8,"GatewayLightning"],[3,"GatewayLightningServer"],[8,"Body"],[8,"Send"],[3,"_Inner"],[8,"Future"],[3,"Pin"],[3,"IntoMakeService"],[3,"IntoMakeServiceWithConnectInfo"],[3,"Context"],[4,"Poll"],[3,"RouteHintHop"],[3,"RouteHint"],[15,"u64"],[3,"Settle"],[3,"Cancel"],[3,"Forward"],[4,"Action"],[8,"BufMut"],[4,"WireType"],[8,"Buf"],[3,"DecodeContext"],[3,"DecodeError"],[3,"CircuitKey"],[3,"ForwardHtlcInterceptResponse"],[3,"Sender"],[3,"GatewayLndClient"],[3,"Client"],[3,"Receiver"],[3,"GatewayLightningBuilder"],[3,"NetworkLnRpcClient"],[4,"GatewayRequest"],[8,"GatewayRequestTrait"],[3,"GatewayRequestInner"],[8,"Fn"],[8,"Decodable"],[8,"Encodable"],[3,"Sender"],[3,"GatewayRpcClient"],[6,"GatewayRpcResult"],[3,"Response"],[8,"Serialize"],[8,"DeserializeOwned"],[4,"GatewayRpcError"],[3,"Error"],[3,"Extensions"],[3,"Error"],[3,"Body"],[8,"Into"],[3,"Response"],[3,"HeaderValue"],[3,"HeaderMap"],[3,"StatusCode"],[3,"Url"],[3,"Version"],[3,"TransactionId"],[3,"Extension"],[3,"Json"],[8,"IntoResponse"],[6,"Result"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"OperationId"],[3,"OutPoint"],[15,"u16"],[4,"GatewayExtPayStates"],[4,"GatewayExtReceiveStates"],[4,"GatewayMeta"],[3,"GatewayClientInit"],[3,"GatewayClientContext"],[4,"GatewayClientStateMachines"],[3,"DynState"],[4,"ReceiveError"],[3,"Htlc"],[3,"SwapParameters"],[3,"GatewayClientModule"],[3,"DynContext"],[3,"NonCommittable"],[4,"IncomingSmError"],[4,"UpdateStreamOrOutcome"],[3,"OsString"],[3,"ClientModuleInitArgs"],[3,"FinalClient"],[3,"ClientModuleConfig"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"DynGlobalClientContext"],[3,"Notifier"],[3,"DynGlobalApi"],[3,"TransactionItemAmount"],[3,"DynInput"],[3,"ModuleKind"],[3,"DynOutput"],[3,"Duration"],[3,"LightningGatewayAnnouncement"],[3,"DynModuleBackup"],[3,"MultiApiVersion"],[3,"DynCommonModuleInit"],[3,"StateTransition"],[3,"Bolt11Invoice"],[3,"Executor"],[3,"GatewayCompleteCommon"],[4,"HtlcOutcome"],[4,"CompleteHtlcError"],[4,"GatewayCompleteStates"],[3,"GatewayCompleteStateMachine"],[3,"WaitForPreimageState"],[3,"CompleteHtlcState"],[3,"ContractId"],[3,"OutgoingContractAccount"],[3,"PaymentParameters"],[3,"GatewayPayCommon"],[3,"GatewayPayStateMachine"],[4,"GatewayPayStates"],[4,"OutgoingContractError"],[4,"OutgoingPaymentErrorType"],[3,"GatewayPayInvoice"],[3,"GatewayPayClaimOutgoingContract"],[3,"GatewayPayWaitForSwapPreimage"],[3,"GatewayPayCancelContract"],[3,"ClientSMDatabaseTransaction"],[3,"KeyPair"],[3,"Hash"],[13,"Running"],[13,"Cln"],[13,"Lnd"],[13,"FailedToGetNodeInfo"],[13,"FailedToGetRouteHints"],[13,"FailedPayment"],[13,"FailedToRouteHtlcs"],[13,"FailedToCompleteHtlc"],[13,"FailedToOpenChannel"],[13,"FailedToGetInvoice"],[13,"OfferDoesNotExist"],[13,"Canceled"],[13,"Fail"],[13,"Success"],[13,"Preimage"],[13,"RefundSuccess"],[13,"RefundError"],[13,"FundingFailed"],[13,"Canceled"],[13,"Failed"],[13,"InvalidOutgoingContract"],[13,"OutgoingContractDoesNotExist"],[13,"InvalidOutgoingContract"],[13,"LightningPayError"],[13,"SwapFailed"]]},\
"recoverytool":{"doc":"","t":"NNDDENNDDENMLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLFLLLLLLLLLLLLLMFMMLMLMMLMLLLMLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLMMMM","n":["Direct","Epochs","ImportableWallet","ImportableWalletMin","Key","Private","Public","RecoveryTool","SecretKeyInjector","TweakSource","Utxos","amount_sat","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","command","command_for_update","compare","config","descriptor","descriptor","descriptor","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","get_db","group_id","has_subcommand","hash","hash160","hash256","input_tweaks_output_present","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_uncompressed","key","main","network","outpoint","partial_cmp","password","pk","public","readonly","ripemd160","secret","serialize","serialize","sha256","strategy","to_compressed_public_key","to_hash160","to_hash256","to_owned","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tweak_descriptor","tweak_parser","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","db","db","legacy","tweak"],"q":[[0,"recoverytool"],[140,"recoverytool::TweakSource"]],"d":["Derive the wallet descriptor using a single tweak","Derive all wallet descriptors of tweaks that were ever …","A UTXO with its Bitcoin Core importable descriptor","A Bitcoin Core importable descriptor","<code>MiniscriptKey</code> that is either a WIF-encoded private key or …","","","Tool to recover the on-chain wallet of a Fedimint …","Miniscript <code>Translator</code> that replaces a public key with a …","","Derive all wallet descriptors of confirmed UTXOs in the …","","","","","","","","","","","","","","","","","","","","","","","","","","Directory containing server config files","Wallet descriptor, can be used instead of –cfg","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Wallet secret key, can be used instead of config together …","","Network to operate on, has to be specified if –cfg isn’…","","","The password that encrypts the configs","","","Open the database in read-only mode, useful for debugging, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to database","Path to database","Extract UTXOs from a database without module partitioning",""],"i":[2,2,0,0,0,3,3,0,0,0,2,13,10,10,2,2,10,2,13,14,3,15,10,2,13,14,3,15,2,3,2,3,3,10,10,3,10,10,13,14,3,3,3,3,3,13,14,10,2,13,14,3,3,15,10,2,13,14,3,15,10,2,10,2,2,3,0,10,2,3,15,15,0,10,2,13,14,3,15,10,2,13,14,3,15,3,10,0,10,13,3,10,15,15,10,15,15,13,14,15,10,3,3,3,2,3,3,3,3,3,10,2,13,14,3,15,10,2,13,14,3,15,0,0,10,2,13,14,3,15,10,2,10,2,10,2,13,14,3,15,43,44,43,45],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[3,3],4],[[],1],[[],1],[[],4],0,0,0,0,[[3,3],5],[[],5],[[],5],[[],5],[[],5],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[[10,11],12],[[2,11],12],[[13,11],12],[[14,11],12],[[3,11],12],[[3,11],12],[[15,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[9,[10,17]]]],[16,[[9,[2,17]]]],[16,[[9,[10,17]]]],[16,[[9,[2,17]]]],[[]],[[]],[[5,18,19],20],[[],[[22,[21]]]],[23,5],[[3,24]],[15,9],[15,9],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[3,5],0,[[],27],0,0,[[3,3],[[22,[4]]]],0,[[15,28],[[9,[3]]]],0,0,[15,9],0,[[13,29],9],[[14,29],9],[15,9],0,[3,28],[[],30],[[],31],[[]],[[]],[3,32],[[],33],[[],34],[[],35],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[36,37,[39,[38]],40],[[41,[3]]]],[23,[[27,[[39,[38]]]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[10,16],[[9,[17]]]],[[2,16],[[9,[17]]]],[[10,16],[[9,[17]]]],[[2,16],[[9,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0],"c":[],"p":[[3,"Command"],[4,"TweakSource"],[4,"Key"],[4,"Ordering"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"Result"],[3,"RecoveryTool"],[3,"Formatter"],[6,"Result"],[3,"ImportableWallet"],[3,"ImportableWalletMin"],[3,"SecretKeyInjector"],[3,"ArgMatches"],[6,"Error"],[3,"Path"],[6,"ModuleDecoderRegistry"],[3,"Database"],[3,"Id"],[4,"Option"],[15,"str"],[8,"Hasher"],[8,"Iterator"],[3,"Request"],[6,"Result"],[3,"CompressedPublicKey"],[8,"Serializer"],[3,"Hash"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"String"],[6,"PegInDescriptor"],[3,"SecretKey"],[15,"u8"],[15,"array"],[4,"Network"],[4,"Descriptor"],[3,"TypeId"],[13,"Utxos"],[13,"Epochs"],[13,"Direct"]]},\
"tbs":{"doc":"Threshold Blind Signatures","t":"IQDDDDDIDDDDDDDLLLLLLLLLLLLLLLKFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLALLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOALLLLLALLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLMMMMLLLLLRFFDMLLLMLLLLFLLLLLLAAOAFFFFFF","n":["Aggregatable","Aggregate","AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FromRandom","Message","MessagePoint","PubKeyPoint","PublicKeyShare","Scalar","SecretKeyShare","Signature","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","aggregate","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_le_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_valid_shares","conditional_negate","conditional_negate","conditional_negate","conditional_select","conditional_select","conditional_select","ct_eq","ct_eq","ct_eq","dealer_keygen","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double","double","encode_compressed","encode_compressed","encode_compressed","encode_compressed","encode_compressed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_bytes_wide","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_hash","from_random","from_random","from_raw","from_repr","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","hash","identity","identity","identity","identity","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into","into","invert","invert","is_identity","is_identity","is_identity","is_identity","is_odd","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","multiplicative_generator","neg","neg","neg","neg","neg","neg","neg","one","one","pairing_with","pairing_with","point_impl","poly","pow","pow_vartime","random","random","root_of_unity","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","sqrt","sqrt","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_le_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_repr","to_string","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","zero","zero","zeroize","zeroize","zeroize","HASH_TAG","hash_bytes_to_curve","hash_to_curve","Poly","_pd","borrow","borrow_mut","coefficients","coefficients","evaluate","fmt","from","from","interpolate_zero","into","random","try_from","try_into","type_id","vzip","g1","g2","impl_serde_g","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize"],"q":[[0,"tbs"],[402,"tbs::hash"],[405,"tbs::poly"],[422,"tbs::serde_impl"],[426,"tbs::serde_impl::g1"],[428,"tbs::serde_impl::g2"],[430,"tbs::serde_impl::scalar"]],"d":["","","","","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …","","Represents an element of the scalar field $\\\\mathbb{F}_q$ …","","","Adds <code>rhs</code> to <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines a sufficient amount of valid blinded signature …","","","","","","","","","","<code>threshold</code>: how many signature shares are needed to produce …","","","","","","","","","","","","","Doubles this field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Attempts to convert a little-endian byte representation of …","","","","","Converts a 512-bit little endian integer into a <code>Scalar</code> by …","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","<strong>IMPORTANT</strong>: <code>from_bytes</code> includes a tag in the hash, this …","","","Converts from an integer represented in little endian into …","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element, not …","","Attempts to deserialize an uncompressed element, not …","","Returns a fixed generator of the group. See <code>notes::design</code> …","","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","","","","Returns the identity of the group: the point at infinity.","","Returns the identity of the group: the point at infinity.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the multiplicative inverse of this element, …","","Returns true if this element is the identity (the point at …","","","Returns true if this element is the identity (the point at …","","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","","","","","","","","","","","","","","","","","","","","","Multiplies <code>rhs</code> by <code>self</code>, returning the result.","","","","","","","","","","","","Negates <code>self</code>.","","","","","","","Returns one, the multiplicative identity.","","","","","","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","","","","","","","","","","","","","","","","Computes the square root of this element, if it exists.","Squares this element.","","Subtracts <code>rhs</code> from <code>self</code>, returning the result.","","","","","","","","","","","","","","","","Converts an element of <code>Scalar</code> into a byte representation in","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns zero, the additive identity.","","","","","","","<strong>IMPORTANT</strong>: the byte hashing fn includes a tag, this doesn…","","","","","","","","","Returns the argument unchanged.","","Interpolates the constant factor of a polynomial defined …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,52,0,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,1,2,4,1,2,4,1,2,4,0,1,2,4,12,13,14,8,9,15,16,17,7,1,1,9,15,16,17,7,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,1,2,2,4,4,12,13,14,8,9,15,16,17,7,1,1,2,2,2,4,4,4,7,1,2,4,2,4,1,2,4,2,4,7,51,1,1,1,2,2,4,4,2,2,4,4,2,2,4,4,0,12,14,9,15,16,17,7,2,2,4,4,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,1,2,2,4,4,1,2,4,2,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,1,1,2,2,4,4,1,1,2,4,0,0,1,1,8,1,1,0,12,13,14,8,9,15,16,17,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,2,4,2,4,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,13,1,1,2,4,2,2,4,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,0,0,12,13,14,8,9,15,16,17,7,1,2,4,2,4,2,4,1,1,1,2,4,0,0,0,0,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[6],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[10]]]],[12,12],[13,13],[14,14],[8,8],[9,9],[15,15],[16,16],[17,17],[7,7],[1,1],[2,2],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,6],16],[19],[19],[19],[[1,1,19],1],[[2,2,19],2],[[4,4,19],4],[[1,1],19],[[2,2],19],[[4,4],19],[[6,6]],[[],1],[[],2],[[],4],[20,[[21,[12]]]],[20,[[21,[13]]]],[20,[[21,[14]]]],[20,[[21,[8]]]],[20,[[21,[9]]]],[20,[[21,[15]]]],[20,[[21,[16]]]],[20,[[21,[17]]]],[20,[[21,[7]]]],[1,1],[1,1],[9,[[23,[22]]]],[15,[[23,[22]]]],[16,[[23,[22]]]],[17,[[23,[22]]]],[7,[[23,[22]]]],[[12,12],24],[[13,13],24],[[14,14],24],[[8,8],24],[[9,9],24],[[15,15],24],[[16,16],24],[[17,17],24],[[7,7],24],[[1,1],24],[[2,2],24],[[4,4],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[12,25],26],[[13,25],26],[[14,25],26],[[8,25],26],[[9,25],26],[[15,25],26],[[16,25],26],[[17,25],26],[[7,25],26],[[1,25],[[21,[27]]]],[[1,25],[[21,[27]]]],[[2,25],[[21,[27]]]],[[2,25],[[21,[27]]]],[[4,25],[[21,[27]]]],[[4,25],[[21,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,1],[3,2],[3,2],[[]],[5,4],[5,4],[[]],[[[29,[22]]],7],[[[23,[22]]],[[30,[1]]]],[[],[[30,[2]]]],[[],[[30,[4]]]],[[],[[30,[2]]]],[[],[[30,[4]]]],[[[23,[22]]],1],[[[23,[22]]],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[[[23,[22]]],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[31,7],[32],[32,1],[[[23,[28]]],1],[[],[[30,[1]]]],[[[23,[22]]],[[30,[2]]]],[[],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[[],[[30,[4]]]],[[[23,[22]]],[[30,[2]]]],[[],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[[],[[30,[4]]]],[[],2],[[],2],[[],4],[[],4],0,[[12,33]],[[14,33]],[[9,33]],[[15,33]],[[16,33]],[[17,33]],[[7,33]],[[],2],[[],2],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[30,[1]]]],[1,[[30,[1]]]],[2,19],[2,19],[4,19],[4,19],[1,19],[2,19],[4,19],[2,19],[4,19],[[1,1],1],[[1,1],1],[[1,5]],[[1,3],3],[[1,2],3],[[1,3]],[[1,4],5],[[1,3],3],[[1,1],1],[[1,5],5],[[1,5],5],[[1,2],3],[[1,2]],[[1,1],1],[[1,5],5],[[1,4],5],[[1,3],3],[[1,4],5],[[1,2],3],[[1,4]],[[1,1],1],[[2,1]],[[2,1],3],[[2,1],3],[[2,1],3],[[4,1],5],[[4,1],5],[[4,1]],[[4,1],5],[[1,1]],[[1,1]],[[],1],[1,1],[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[[],1],[[],1],[2],[4],0,0,[[1,[23,[28]]],1],[[1,[23,[28]]],1],[[],8],[32,1],[[],1],0,[[12,34],21],[[13,34],21],[[14,34],21],[[8,34],21],[[9,34],21],[[15,34],21],[[16,34],21],[[17,34],21],[[7,34],21],[[9,13],15],[1,[[30,[1]]]],[1,[[30,[1]]]],[1,1],[1,1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[35,1],[1,[[23,[22]]]],[2],[4],[2,[[23,[22]]]],[4,[[23,[22]]]],[2],[4],[1,[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,12],[1],[[],36],[[],36],[[],36],[2],[2,[[23,[22]]]],[4],[4,[[23,[22]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[8,16],17],[[7,17,14],24],[[9,15,12],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],0,[[[29,[22]]],38],[31,38],0,0,[[]],[[]],[[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]],40]]],[[44,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]]]]]],0,[[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]],40]],[45,[40]]],[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]]]],40]]]],[[[43,[[0,[39,39]],39]],25],26],[[]],[[[46,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]]]]],[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]],40]]]],[[[0,[35,47]]],[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,49,50]]]]]]]]]]]]]]]]]]]],[[]],[[6,32],[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,51,40]]]],51,40]]]],51,40]]]],51,40]],40]]]],[[],21],[[],21],[[],37],[[]],0,0,0,0,[20,[[21,[2]]]],[[2,34],21],[20,[[21,[4]]]],[[4,34],21],[20,[[21,[1]]]],[[1,34],21]],"c":[],"p":[[3,"Scalar"],[3,"MessagePoint"],[3,"G1Projective"],[3,"PubKeyPoint"],[3,"G2Projective"],[15,"usize"],[3,"Message"],[3,"BlindingKey"],[3,"BlindedMessage"],[3,"Lsb0"],[3,"BitArray"],[3,"PublicKeyShare"],[3,"SecretKeyShare"],[3,"AggregatePublicKey"],[3,"BlindedSignatureShare"],[3,"BlindedSignature"],[3,"Signature"],[8,"IntoIterator"],[3,"Choice"],[8,"Deserializer"],[4,"Result"],[15,"u8"],[15,"array"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u64"],[15,"slice"],[3,"CtOption"],[8,"Digest"],[8,"RngCore"],[8,"Hasher"],[8,"Serializer"],[8,"Iterator"],[3,"String"],[3,"TypeId"],[8,"Group"],[8,"Debug"],[8,"Copy"],[8,"MulAssign"],[8,"AddAssign"],[3,"Poly"],[3,"Iter"],[8,"Into"],[3,"Vec"],[8,"Clone"],[8,"Field"],[8,"Mul"],[8,"Add"],[8,"FromRandom"],[8,"Aggregatable"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};

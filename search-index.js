var searchIndex = new Map(JSON.parse('[\
["devimint",{"doc":"","t":"EEEEEEECQECCCECCEQHCCCCGFPPPPGPPNNNNNNNNNNNNHNNNNNHONNNNNNNNNNNNHNNNNNNNNNNNOONOHHHHNONNNNNNNNNNNNNNNNHNNNHOOFFINOONNNNONOONNNNHNOONOONOOONNNNNNNNOONONOONOONNNNNNNNNOONONNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFPFFFSGFFFPOOOOOONNOONNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFFONNNNNONNNNNNNONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNONHHNNNNNNNNNNNNNNNNNNONNNHHFOONNNNNNNNNNNNNNONNNNNNNNNPPPPPPPPGPPPPPPPPPFGFGPPNNNNNNONNNNNNNNNNHHHHHHONNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNHHHHOOHOOOOHHOHHHHHONNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNHOOOOOOSSFFFFSSSSFFSSSSFFFRSSFFFFKSSSSSFFFFFFFSFKNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONNNHHHHHNNNHHHNNHNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFFKNNNNNNNNQNNNNNNNNNNNNNNHNMNNNNNNNNHNNNNFFOONNNNNNNNNNNNNNNNNNNNNN","n":["DevFed","ExternalDaemons","Gatewayd","LightningNode","Lightningd","LightningdProcessHandle","Lnd","cli","cmd","dev_fed","devfed","envs","external","external_daemons","federation","gatewayd","open_channel","poll_eq","run_devfed_test","tests","util","vars","version_constants","Cmd","CommonArgs","DevFed","Env","ExternalDaemons","Rpc","RpcCmd","RunUi","Wait","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cleanup_on_exit","clone","clone_into","command","command_for_update","default","exec_user_command","fed_size","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","group_id","handle_command","has_subcommand","has_subcommand","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","link_test_dir","link_test_dir_suffix","mk_test_dir","offline_nodes","random_test_dir_suffix","rpc_command","run_ui","setup","test_dir","test_dir","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_test_dir_link","vzip","vzip","vzip","write_ready_file","exec","exec","DevFed","DevJitFed","JitArc","bitcoind","bitcoind","bitcoind","borrow","borrow","borrow_mut","borrow_mut","channel_opened","cln","cln","cln","clone","clone","clone_into","clone_into","dev_fed","electrs","electrs","electrs","esplora","esplora","esplora","fed","fed","fed","fed_epoch_generated","finalize","from","from","from_ref","from_ref","from_ref","from_ref","gw_cln","gw_cln","gw_cln","gw_cln_registered","gw_cln_registered","gw_lnd","gw_lnd","gw_lnd","gw_lnd_registered","gw_lnd_registered","inner","internal_client","internal_client_gw_registered","into","into","into_request","into_request","into_request","into_request","lnd","lnd","lnd","new","start_time","to_dev_fed","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FM_BACKWARDS_COMPATIBILITY_TEST_ENV","FM_BITCOIND_BASE_EXECUTABLE_ENV","FM_BITCOIN_CLI_BASE_EXECUTABLE_ENV","FM_BITCOIN_RPC_URL_ENV","FM_BTC_CLIENT_ENV","FM_CLIENT_DIR_ENV","FM_CLN_SOCKET_ENV","FM_DATA_DIR_ENV","FM_DEVIMINT_CMD_INHERIT_STDERR_ENV","FM_ELECTRS_BASE_EXECUTABLE_ENV","FM_ESPLORA_BASE_EXECUTABLE_ENV","FM_FAUCET_BASE_EXECUTABLE_ENV","FM_FAUCET_BIND_ADDR_ENV","FM_FEDIMINTD_BASE_EXECUTABLE_ENV","FM_FEDIMINT_CLI_BASE_EXECUTABLE_ENV","FM_FEDIMINT_DBTOOL_BASE_EXECUTABLE_ENV","FM_FED_SIZE_ENV","FM_GATEWAYD_BASE_EXECUTABLE_ENV","FM_GATEWAY_API_ADDR_ENV","FM_GATEWAY_CLI_BASE_EXECUTABLE_ENV","FM_GATEWAY_DATA_DIR_ENV","FM_GATEWAY_LISTEN_ADDR_ENV","FM_GWCLI_CLN_ENV","FM_GWCLI_LND_ENV","FM_GWID_CLN_ENV","FM_GWID_LND_ENV","FM_INVITE_CODE_ENV","FM_LIGHTNINGD_BASE_EXECUTABLE_ENV","FM_LIGHTNING_CLI_BASE_EXECUTABLE_ENV","FM_LIGHTNING_CLI_ENV","FM_LINK_TEST_DIR_ENV","FM_LNCLI_BASE_EXECUTABLE_ENV","FM_LNCLI_ENV","FM_LND_BASE_EXECUTABLE_ENV","FM_LOAD_TEST_TOOL_BASE_EXECUTABLE_ENV","FM_LOGS_DIR_ENV","FM_MINT_CLIENT_ENV","FM_OFFLINE_NODES_ENV","FM_PASSWORD_ENV","FM_PORT_GW_LND_ENV","FM_RECOVERYTOOL_BASE_EXECUTABLE_ENV","FM_TEST_DIR_ENV","Bitcoind","Cln","Electrs","Esplora","ExternalDaemons","GATEWAY_CLN_EXTENSION","LightningNode","Lightningd","LightningdProcessHandle","Lnd","Lnd","_bitcoind","_bitcoind","_bitcoind","_process","_process","_process","await_block_processing","await_block_processing","bitcoind","bitcoind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","client","cln","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","drop","electrs","esplora","external_daemons","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_to_address","get_balances","get_block_count","get_blockchain_info","get_jsonrpc_client","get_new_address","get_raw_transaction","get_tx_out_proof","get_txout_proof","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoices_client_lock","lightning_client_lock","lnd","mine_blocks","mine_blocks_no_wait","name","new","new","new","new","new","new_bitcoin_rpc","open_channel","poll_ready","process","process","pub_key","pub_key","request","rpc","send_to","send_to_address","start","start","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_client","wallet_client","Client","Federation","Fedimintd","_bitcoind","await_all_peers","await_block_sync","await_deposit","await_gateways_registered","balance","bitcoind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_federation_id","client","client_config","client_dir","client_name_lock","clients_dir","clone","clone","clone","clone_into","clone_into","clone_into","cmd","config","create","degrade_federation","finalize_mempool_tx","fork_client","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_deposit_addr","get_finality_delay","internal_client","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","invite_code_for","invite_code_static","join_federation","members","mine_then_wait_blocks_sync","name","new","new","new_forked","new_joined_client","num_members","open_or_create","pegin_client","pegin_gateway","process","restart_all_staggered_with_bin","run_dkg","set_config_gen_params","start_all_servers","start_server","terminate","terminate_all_servers","terminate_server","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_gateway","vars","vzip","vzip","vzip","wait_server_status","attach_default_module_init_params","Gatewayd","_process","addr","borrow","borrow_mut","clone","clone_into","cmd","connect_fed","from","from_ref","from_ref","gateway_id","get_pegin_addr","into","into_request","into_request","ln","new","restart_with_bin","set_lightning_node","stop_lightning_node","to_owned","try_from","try_into","type_id","vzip","CannotReplayTransaction","CliTests","FedimintCli","Fedimintd","FmPay","GatewayRebootTest","Gatewayd","GuardianBackup","LatencyTest","LatencyTests","LightningReconnectTest","LnReceive","LnSend","LoadTestToolTest","ReconnectTest","RecoverytoolTests","Reissue","Restore","Stats","TestCmd","UpgradeClients","UpgradeTest","UpgradeTests","WasmTestSetup","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","avg","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cannot_replay_tx_test","cli_load_test_tool_test","cli_tests","cli_tests_backup_and_restore","do_try_create_and_pay_invoice","finish_hold_invoice_payment","fm_pay_client","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","guardian_backup_test","gw_reboot_test","handle_command","has_subcommand","has_subcommand","has_subcommand","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","latency_tests","lightning_gw_reconnect_test","ln_invoice","ln_pay","ln_receive_client","ln_send_client","log_binary_versions","max","median","min","p90","reconnect_test","recoverytool_test","reissue_client","run_ln_circular_load_test","run_standard_load_test","start_hold_invoice_payment","stats_for","stress_test_fed","sum","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","upgrade_tests","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","vzip","vzip","wait_session","binary","exec","type","paths","paths","paths","BITCOIND_FALLBACK","BITCOIN_CLI_FALLBACK","BitcoinCli","Bitcoind","ClnLightningCli","Command","DEFAULT_POLL_TIMEOUT","DEFAULT_VERSION","ELECTRS_FALLBACK","ESPLORA_FALLBACK","Electrs","Esplora","FAUCET_FALLBACK","FEDIMINTD_FALLBACK","FEDIMINT_CLI_FALLBACK","FEDIMINT_DBTOOL_FALLBACK","Faucet","FedimintCli","FedimintdCmd","Fut","GATEWAYD_FALLBACK","GATEWAY_CLI_FALLBACK","GatewayCli","GatewayClnCli","GatewayLndCli","Gatewayd","JsonValueExt","LIGHTNINGD_FALLBACK","LIGHTNING_CLI_FALLBACK","LNCLI_FALLBACK","LND_FALLBACK","LOAD_TEST_TOOL_FALLBACK","Lightningd","LnCli","Lnd","LoadTestTool","ProcessHandle","ProcessHandleInner","ProcessManager","RECOVERYTOOL_FALLBACK","Recoverytool","ToCmdExt","arg","args_debug","assert_error","assert_error_contains","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","clone","clone","clone_into","clone_into","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","command_debug","drop","env","envs","expect_err_json","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_bitcoin_cli_path","get_command_str_for_alias","get_fedimint_cli_path","get_fedimint_dbtool_cli_path","get_gateway_cli_path","get_lightning_cli_path","get_lncli_path","globals","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_backwards_compatibility_test","is_running","kill_on_drop","name","new","out_json","out_string","parse_clap_version","parse_map","poll","poll_simple","poll_with_timeout","run","run_inner","run_with_logging","send_sigkill","send_signal","send_sigterm","spawn_daemon","terminate","to_command","to_owned","to_owned","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash_to_version","version_or_default","version_or_default","version_or_default","version_or_default","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FM_API_URL","FM_BIND_API","FM_BIND_METRICS_API","FM_BIND_P2P","FM_BITCOIN_RPC_KIND","FM_BITCOIN_RPC_URL","FM_BTC_CLIENT","FM_BTC_DIR","FM_CLIENT_BASE_DIR","FM_CLIENT_DIR","FM_CLN_DIR","FM_CLN_EXTENSION_LISTEN_ADDRESS","FM_CLN_SOCKET","FM_DATA_DIR","FM_DATA_DIR","FM_DB_TOOL","FM_ELECTRS_DIR","FM_ESPLORA_DIR","FM_FAUCET_BIND_ADDR","FM_FED_SIZE","FM_GATEWAY_API_ADDR","FM_GATEWAY_FEES","FM_GATEWAY_LIGHTNING_ADDR","FM_GATEWAY_PASSWORD","FM_GWCLI_CLN","FM_GWCLI_LND","FM_LIGHTNING_CLI","FM_LNCLI","FM_LND_DIR","FM_LND_MACAROON","FM_LND_RPC_ADDR","FM_LND_TLS_CERT","FM_LOGS_DIR","FM_MINT_CLIENT","FM_MINT_RPC_CLIENT","FM_OFFLINE_NODES","FM_P2P_URL","FM_PORT_BTC_P2P","FM_PORT_BTC_RPC","FM_PORT_BTC_ZMQ_PUB_RAW_BLOCK","FM_PORT_BTC_ZMQ_PUB_RAW_TX","FM_PORT_CLN","FM_PORT_CLN_EXTENSION","FM_PORT_ELECTRS","FM_PORT_ELECTRS_MONITORING","FM_PORT_ESPLORA","FM_PORT_FAUCET","FM_PORT_FEDIMINTD_BASE","FM_PORT_GW_CLN","FM_PORT_GW_LND","FM_PORT_LND_LISTEN","FM_PORT_LND_REST","FM_PORT_LND_RPC","FM_READY_FILE","FM_ROCKSDB_WRITE_BUFFER_SIZE","FM_TEST_BITCOIND_RPC","FM_TEST_DIR","FM_TEST_FAST_WEAK_CRYPTO","FM_TMP_DIR","FM_USE_UNKNOWN_MODULE","Fedimintd","Global","ToEnvVar","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","declare_vars","from","from","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","mkdir","new","to_env_value","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utf8","vars","vars","vzip","vzip","VERSION_0_3_0","VERSION_0_3_0_ALPHA","__private_field","__private_field","borrow","borrow","borrow_mut","borrow_mut","deref","deref","from","from","into","into","into_request","into_request","into_request","into_request","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"devimint"],[23,"devimint::cli"],[107,"devimint::cli::Cmd"],[109,"devimint::devfed"],[180,"devimint::envs"],[222,"devimint::external"],[399,"devimint::federation"],[496,"devimint::federation::config"],[497,"devimint::gatewayd"],[524,"devimint::tests"],[657,"devimint::tests::TestCmd"],[660,"devimint::tests::UpgradeTest"],[663,"devimint::util"],[991,"devimint::vars"],[1093,"devimint::version_constants"],[1119,"anyhow"],[1120,"core::future::future"],[1121,"core::ops::function"],[1122,"clap_builder::builder::command"],[1123,"fedimint_core::task"],[1124,"std::ffi::os_str"],[1125,"alloc::vec"],[1126,"anyhow"],[1127,"clap_builder"],[1128,"core::result"],[1129,"clap_builder::util::id"],[1130,"core::option"],[1131,"tonic::request"],[1132,"tonic::request"],[1133,"alloc::string"],[1134,"core::any"],[1135,"std::path"],[1136,"bitcoin::hash_types::newtypes"],[1137,"bitcoincore_rpc_json"],[1138,"bitcoincore_rpc_json"],[1139,"bitcoin::hash_types::newtypes"],[1140,"fedimint_tonic_lnd"],[1141,"tokio::sync::mutex"],[1142,"fedimint_tonic_lnd"],[1143,"bitcoincore_rpc::client"],[1144,"bitcoin::util::amount"],[1145,"fedimint_tonic_lnd"],[1146,"fs_lock"],[1147,"fedimint_core"],[1148,"fedimint_core::api"],[1149,"alloc::collections::btree::map"],[1150,"fedimint_server::config"],[1151,"std::collections::hash::map"],[1152,"fedimint_core::module"],[1153,"fedimint_core::config"],[1154,"bitcoin::network::constants"],[1155,"bitcoin_hashes::sha256"],[1156,"core::fmt"],[1157,"core::fmt"],[1158,"core::time"],[1159,"alloc::string"],[1160,"core::ops::function"],[1161,"core::iter::traits::collect"],[1162,"semver"],[1163,"core::ops::control_flow"],[1164,"std::process"],[1165,"tokio::process"],[1166,"nix::sys::signal"],[1167,"serde::de"],[1168,"core::iter::traits::iterator"]],"d":["","","","","","","","","easy syntax to create a Command","","","","","","","","","","","","","","","","","Spins up bitcoind, cln w/ gateway, lnd w/ gateway, a …","","Spins up bitcoind, cln, lnd, electrs, esplora, and opens a …","Rpc commands to the long running devimint instance. Could …","","Runs bitcoind, spins up FM_FED_SIZE worth of fedimints","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a link to the test dir under this path","","","Run degraded federation with FM_OFFLINE_NODES shutdown","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Like <code>Self::internal_client</code> but will check and wait for a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make <code>devimint</code> print stderr of called commands directly on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the total number of blocks in the chain.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Poll until bitcoind rpc responds for basic commands","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client that can has wallet initialized, can generate …","","<code>fedimint-cli</code> instance (basically path with client state: …","","","","","","","","","","","","","","","","","Built in <code>Client</code>, already joined","","","","","","","","","","","","","Create a <code>Client</code> that starts with a fresh state.","","Mines enough blocks to finalize mempool transactions, then …","Fork the built-in client of <code>Federation</code> and give it a name","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Built-in, default, internal <code>Client</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Read the invite code from the client data dir","","","Client to join a federation","","","","","","Create a <code>Client</code> that starts with a state that is a copy of …","New <code>Client</code> that already joined <code>self</code>","","Open or create a <code>Client</code> that starts with a fresh state.","","","","Coordinated shutdown of all peers that restart using the …","","","Starts all peers not currently running.","","","Terminates all running peers.","","","","","","","","","","","","","","","","","","","","Duplicate default fedimint module setup","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","Restarts the gateway using the provided <code>bin_path</code>, which is …","","","","","","","","<code>devfed</code> then tests that spent ecash cannot be double spent","<code>devfed</code> then tests a bunch of the fedimint-cli commands","","","","<code>devfed</code> then reboot gateway daemon for both CLN and LND. …","","Restore guardian from downloaded backup","","<code>devfed</code> then checks the average latency of reissuing ecash, …","<code>devfed</code> then pegin CLN &amp; LND nodes and gateways. Kill the …","","","<code>devfed</code> then calls binary <code>fedimint-load-test-tool</code>. See …","<code>devfed</code> then kills and restarts most of the Guardian nodes …","<code>devfed</code> then tests if the recovery tool is able to do a …","","","","","Clients reused for upgrade tests","","Test upgrade paths for a given binary","<code>devfed</code> then spawns faucet for wasm tests","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kills process when all references to ProcessHandle are …","","","","","","","","Run the command expecting an error, which is parsed using …","Returns an Err if the command doesn’t return an error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the json error if the command has a non-zero exit …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if running backwards-compatibility tests","","","","","Run the command and get its output as json.","Run the command and get its output as string.","Parses a version string returned from clap ex: fedimintd …","","Retry until <code>f</code> succeeds or default timeout is reached","","Retry until <code>f</code> succeeds or timeout is reached","Run the command ignoring its output.","","Run the command logging the output and error","","","","Logs to $FM_LOGS_DIR/{name}.{out,err}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps a version hash to a release version","Returns the fedimintd version from clap or default min …","Returns the gatewayd version from clap or default min …","Returns the fedimint-cli version from clap or default min …","Returns the gateway-cli version from clap or default min …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,17,16,16,0,16,17,9,9,16,17,16,17,9,16,17,9,16,17,0,9,9,9,9,9,0,9,9,16,17,9,16,17,9,16,17,9,9,9,0,16,17,9,16,17,9,9,16,16,17,17,9,9,9,9,0,0,0,0,9,9,9,9,16,17,9,16,17,9,16,17,9,16,17,9,16,17,0,9,16,17,0,129,130,0,0,0,5,35,5,35,5,35,5,5,5,35,5,35,5,35,5,0,5,35,5,5,35,5,5,35,5,5,5,35,5,35,35,5,5,5,35,5,5,5,5,35,5,5,5,131,5,5,35,5,35,35,5,5,5,35,5,5,5,5,35,5,35,5,35,5,35,5,35,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,42,41,36,37,33,36,37,34,41,28,34,43,28,33,34,41,42,36,37,43,28,33,34,41,42,36,37,33,41,28,33,34,41,42,36,37,33,34,41,42,36,37,43,28,28,0,43,28,33,34,41,42,36,37,33,33,34,34,41,41,42,42,36,36,37,37,33,33,33,33,33,33,33,33,33,33,43,28,33,34,41,42,36,37,43,43,28,28,33,33,34,34,41,41,42,42,36,36,37,37,41,41,28,33,33,42,33,34,41,36,37,33,0,33,34,41,34,41,34,34,33,33,34,41,43,34,41,33,34,41,42,36,37,43,28,33,34,41,42,36,37,43,28,33,34,41,42,36,37,43,28,33,34,41,42,36,37,43,28,33,34,41,42,36,37,33,33,0,0,0,27,38,38,40,38,40,38,38,40,27,38,40,27,38,38,38,40,40,40,38,40,27,38,40,27,40,0,40,38,38,38,38,40,27,38,38,40,40,27,27,40,38,38,38,40,27,38,38,40,40,27,27,38,38,38,40,38,38,40,38,27,40,38,38,40,38,38,27,38,0,0,38,38,27,38,38,38,40,27,38,40,27,38,40,27,38,40,27,40,38,38,40,27,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,86,86,85,85,84,86,85,86,0,86,86,84,84,86,86,86,84,84,0,0,0,0,86,86,84,85,86,84,85,86,81,81,87,84,85,86,81,87,84,85,86,0,0,0,0,0,0,87,81,81,87,84,85,86,84,85,86,84,85,86,0,0,0,84,85,86,81,87,84,85,86,81,81,87,87,84,84,85,85,86,86,0,0,0,0,87,87,0,81,81,81,81,0,0,87,0,0,0,0,0,81,81,81,87,84,85,86,81,87,84,85,86,81,87,84,85,86,84,85,86,84,85,86,0,81,81,81,81,87,84,85,86,0,132,133,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,113,61,26,61,26,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,65,65,113,65,65,65,61,113,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,61,61,26,26,0,0,0,0,0,0,0,26,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,65,65,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,61,61,113,113,26,26,0,61,65,113,26,65,65,0,0,0,0,0,65,65,65,0,0,0,26,61,0,61,26,123,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,0,96,97,98,100,65,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,61,113,26,69,69,69,69,32,32,32,32,32,32,32,32,32,32,69,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,69,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,32,69,32,69,32,69,32,69,0,32,69,32,32,69,69,32,69,32,69,32,32,69,69,0,32,125,32,69,32,69,32,69,32,69,0,32,69,32,69,0,0,127,128,127,128,127,128,127,128,127,128,127,128,127,127,128,128,127,128,127,128,127,128,127,128],"f":"``````````````````{e{{d{b}}}{{h{}{{f{{d{b}}}}}}}{{l{j}{{f{c}}}}}}`````````````{nn}00000{ce{}{}}00000{{eA`}{{d{b}}}{}{{h{}{{f{{d{c}}}}}}}}{AbAb}{{ce}b{}{}}{{}n}0{{}Ab}{{{Af{Ad}}}{{d{bAh}}}}`{cc{}}00{Aj{{An{AbAl}}}}{Aj{{An{B`Al}}}}{Aj{{An{BbAl}}}}21033{{}{{Bf{Bd}}}}{{B`Ab}{{d{b}}}}{BhBj}0==={c{{Bl{e}}}{}{}}{c{{Bn{e}}}{}{}}0101``{Ab{{d{C`}}}}`{{}Cb}{{BbAb}{{d{b}}}}{Cd{{d{{Cj{{Af{Cf}}Ch}}}}}}{Ab{{d{{Cj{CdA`}}}}}}{AbC`}`{ce{}{}}{c{{An{e}}}{}{}}00000{cCl{}}00{{AbAj}{{An{bAl}}}}{{B`Aj}{{An{bAl}}}}{{BbAj}{{An{bAl}}}}210{{CnCn}{{d{bAh}}}}666{{D`{d{c}}}{{d{c}}}{}}`````{j{{d{Db}}}}``8888`{j{{d{Dd}}}}``{DfDf}{jj}{{ce}b{}{}}0{Cd{{d{Df}}}}{j{{d{Dh}}}}``{j{{d{Dj}}}}``{j{{d{Dl}}}}```{{jCd}{{d{b}}}}{cc{}}00000{j{{d{Dn}}}}``0`0``0``{j{{d{E`}}}}0{ce{}{}}0{c{{Bl{e}}}{}{}}{c{{Bn{e}}}{}{}}10{j{{d{Eb}}}}``{Cd{{d{j}}}}`{{jCd}{{d{Df}}}}55{c{{An{e}}}{}{}}000{cCl{}}077```````````````````````````````````````````````````````````{Dd{{d{b}}}}{Eb{{d{b}}}}``9999999999999999```{DbDb}{DdDd}{EbEb}{EdEd}{DhDh}{DjDj}{{ce}b{}{}}00000{Efb}``{Cd{{d{Ch}}}}{cc{}}0000000000000000000{{DbEhEj}{{d{{Af{El}}}}}}{Db{{d{En}}}}{Db{{d{Eh}}}}{Db{{d{F`}}}}{DbFb}{Db{{d{Ej}}}}{{DbFd}{{d{Cb}}}}{{Db{Ff{Fd}}{Bf{El}}}{{d{{Af{Fh}}}}}}1{Fj{{d{b}}}}{ce{}{}}0000000{c{{Bl{e}}}{}{}}{c{{Bn{e}}}{}{}}01100110100110{Eb{{d{{Fn{Fl}}}}}}{Eb{{d{{Fn{G`}}}}}}`{{DbEh}{{d{b}}}}{{DbEh}{{d{Eh}}}}{EdGb}{Cd{{d{Db}}}}{{CdDb}{{d{Dd}}}}{{CdDb}{{d{Eb}}}}{{CdDb}{{d{Dh}}}}{{CdDb}{{d{Dj}}}}{{BhGd}{{d{Fj}}}}{{CdDbDdEb}{{d{b}}}}{Db{{d{b}}}}``{Dd{{d{Cb}}}}{Eb{{d{Cb}}}}{{Ddc}dGf}`{{DbCbEh}{{d{Fd}}}}{{DbEjGh}{{d{Fd}}}}{{CdCn}{{d{Gj}}}}{Cd{{d{{Cj{GjGl}}}}}}{Ef{{d{b}}}}{Dd{{d{b}}}}{Eb{{d{b}}}}{ce{}{}}00000{c{{An{e}}}{}{}}000000000000000{cCl{}}000000022222222{Db{{d{Db}}}}`````{Dl{{d{b}}}}{Dl{{d{Eh}}}}{{E`Bh}{{d{b}}}}2{E`{{d{Eh}}}}`777777{DlCb}`{Dl{{d{Gn}}}}{E`C`}{Bh{{d{H`}}}}{{}C`}{DlDl}{E`E`}{CfCf}{{ce}b{}{}}00{E`Hb}`{Bh{{d{E`}}}}{{DlCd}{{d{b}}}}?{{DlBh}{{d{E`}}}}{cc{}}00000000{E`{{d{{Cj{CbCb}}}}}}{Dl{{d{HdAh}}}}{Dl{{d{E`}}}}{ce{}{}}00{c{{Bl{e}}}{}{}}{c{{Bn{e}}}{}{}}0101{Dl{{d{Cb}}}}{Hf{{d{Cb}}}}{{}{{d{Cb}}}}{{E`Cb}{{d{b}}}}`{{DlEh}{{d{b}}}}`{{CdDbHh}{{d{Dl}}}}{{CdDbHhHj}{{d{Cf}}}}{{E`Bh}{{d{E`}}}}?{DlHh}{Bh{{d{E`}}}}{{DlEhE`}{{d{b}}}}{{DlEhDn}{{d{b}}}}`{{DlCdC`}{{d{b}}}}{{{Hn{HfHl}}{Ib{HfI`}}}{{d{b}}}}{{HlIdIf}{{d{b}}}}{{DlCd}{{d{b}}}}{{DlCdHh}{{d{b}}}}{Cf{{d{b}}}}{Dl{{d{b}}}}{{DlHh}{{d{b}}}}{ce{}{}}00{c{{An{e}}}{}{}}00000{cCl{}}00{{E`Dn}{{d{b}}}}`333{{HlIh}{{d{b}}}}{{IjIfIlHd}b}```55{DnDn}{{ce}b{}{}}{DnHb}{{DnDl}{{d{b}}}}{cc{}}00{Dn{{d{Cb}}}}{{DnBh}{{d{Cb}}}}<{c{{Bl{e}}}{}{}}{c{{Bn{e}}}{}{}}`{{CdEd}{{d{Dn}}}}{{DnCdC`}{{d{b}}}}{{DnEd}b}{Dn{{d{b}}}}{ce{}{}}{c{{An{e}}}{}{}}0{cCl{}}2````````````````````````{nn}00000`3333333333{Df{{d{b}}}}00{{DlE`}{{d{b}}}}{{DnE`DdEb}{{d{b}}}}{{E`CbEbIn{J`{Fh}}}{{d{b}}}}`{{JbJd}Jf}{cc{}}0000{Aj{{An{JhAl}}}}{Aj{{An{JjAl}}}}{Aj{{An{JlAl}}}}210{{DfCd}{{d{b}}}}0{{JlAb}{{d{b}}}}{BhBj}00?????{c{{Bn{e}}}{}{}}{c{{Bl{e}}}{}{}}10010110{{DfJh{Bf{Jn}}}{{d{b}}}}5{{E`K`CbCb}{{d{Kb}}}}{{E`CbCbBj}{{d{Cb}}}}``{{}{{d{b}}}}````8{Df{{d{b}}}}`{{CnBh}{{d{b}}}}0{{E`DnCbEb}{{d{{Cj{{J`{Fh}}InCb}}}}}}{{{Af{Kd}}}Jb}{{Df{Bf{Jn}}}{{d{b}}}}`{cCb{}}{c{{An{e}}}{}{}}000000000{cCl{}}0000{{JhAj}{{An{bAl}}}}{{JjAj}{{An{bAl}}}}{{JlAj}{{An{bAl}}}}210{{CdJj}{{d{b}}}}{cBj{}}00{ce{}{}}0000{E`{{d{b}}}}````````````````````````````````````````````````{{Hbc}HbKf}`{{Hbc}{{d{b}}}{{Kj{Kh}{{f{Bj}}}}}}{{HbBh}{{d{b}}}}444444444444444444444444444444444444444444`{GjGj}{CdCd}{{ce}b{}{}}0{{{Kn{}{{Kl{c}}}}}c{}}{L`Hb}{LbHb}{LdHb}{LfHb}{LhHb}{LjHb}{LlHb}{LnHb}{M`Hb}{MbHb}{MdHb}{MfHb}{MhHb}{MjHb}{MlHb}{MnHb}{N`Hb}`{HbCb}{Nbb}{{Hbce}Hb{{Nf{Nd}}}{{Nf{Nd}}}}{{Hbg}Hb{{Nf{Nd}}}{{Nf{Nd}}}{{Nj{}{{Nh{{Cj{ce}}}}}}}}{Hb{{d{Kh}}}}{{GjJd}Jf}{{NbJd}Jf}{cc{}}000000000000000000000000{{}{{Af{Cb}}}}{{{Ff{Bh}}{Ff{Bh}}}{{Af{Cb}}}}11111`{ce{}{}}00000000000000000000{c{{Bn{e}}}{}{}}{c{{Bl{e}}}{}{}}1001010101011001010110010101011001100110{{}Bj}{GjBj}{{HbBj}Hb}`{D`Cd}<{Hb{{d{Cb}}}}{BhNl}{Bh{{d{{Hn{CbCb}}}}}}{{Bhg}{{d{c}}}{}{{h{}{{f{{d{c{Nn{AhAh}}}}}}}}}{{Kj{}{{f{e}}}}}}{{Bhg}{{d{c}}}{}{{h{}{{f{{d{cAh}}}}}}}{{Kj{}{{f{e}}}}}}{{BhKdg}{{d{c}}}{}{{h{}{{f{{d{c{Nn{AhAh}}}}}}}}}{{Kj{}{{f{e}}}}}}{Hb{{d{b}}}}{{HbBj}{{d{O`}}}}{{HbCb}{{d{b}}}}{Obb}{{ObOd}b}1{{CdBhHb}{{d{Gj}}}}{Gj{{d{b}}}}{{{Af{Cb}}}Hb}{ce{}{}}0{Of{{d{c}}}Oh}{c{{An{e}}}{}{}}00000000000000000000000000000000000000000{cCl{}}00000000000000000000{Bh{{d{Nl}}}}{{}Nl}000555555555555555555555```````````````````````````````````````````````````````````````5555{D`D`}{HjHj}{{ce}b{}{}}0`{cc{}}00000{{CnHhHh}{{d{D`}}}}{{D`I`}{{d{Hj}}}};;{c{{Bl{e}}}{}{}}{c{{Bn{e}}}{}{}}10{C`{{d{C`}}}}4{Oj{{Bf{Cb}}}}??====<<{CnBh}{D`{{`{{Ol{}{{Nh{{Cj{BhCb}}}}}}}}}}{Hj{{`{{Ol{}{{Nh{{Cj{BhCb}}}}}}}}}}{ce{}{}}0````0000{OnNl}{A`Nl}<<229889{c{{An{e}}}{}{}}000{cCl{}}044","c":[],"p":[[1,"unit"],[8,"Result",1119],[17,"Output"],[10,"Future",1120],[5,"DevJitFed",109],[10,"FnOnce",1121],[5,"Command",1122],[5,"TaskGroup",1123],[5,"CommonArgs",23],[5,"OsString",1124],[5,"Vec",1125],[5,"Error",1119],[5,"ArgMatches",1126],[8,"Error",1127],[6,"Result",1128],[6,"Cmd",23],[6,"RpcCmd",23],[5,"Id",1129],[6,"Option",1130],[1,"str"],[1,"bool"],[5,"Request",1131],[5,"Request",1131],[5,"PathBuf",1132],[5,"String",1133],[5,"ProcessManager",663],[5,"Fedimintd",399],[5,"ExternalDaemons",222],[1,"tuple"],[5,"TypeId",1134],[5,"Path",1132],[5,"Global",991],[5,"Bitcoind",222],[5,"Lightningd",222],[5,"DevFed",109],[5,"Electrs",222],[5,"Esplora",222],[5,"Federation",399],[5,"Gatewayd",497],[5,"Client",399],[5,"Lnd",222],[6,"LightningNode",222],[5,"LightningdProcessHandle",222],[1,"u64"],[5,"Address",1135],[5,"BlockHash",1136],[5,"GetBalancesResult",1137],[5,"GetBlockchainInfoResult",1137],[5,"Client",1138],[5,"Txid",1136],[1,"slice"],[1,"u8"],[5,"Client",1139],[8,"InvoicesClient",1140],[5,"MappedMutexGuard",1141],[8,"LightningClient",1140],[6,"LightningNodeType",1142],[6,"Auth",1139],[10,"IntoRequest",1143],[5,"Amount",1144],[5,"ProcessHandle",663],[5,"Client",1140],[5,"ClientConfig",1145],[5,"FileLock",1146],[5,"Command",663],[1,"u32"],[5,"PeerId",1147],[1,"usize"],[5,"Fedimintd",991],[5,"DynGlobalApi",1148],[5,"BTreeMap",1149],[5,"ConfigGenParams",1150],[5,"HashMap",1151],[5,"ApiAuth",1152],[8,"ServerModuleConfigGenParamsRegistry",1145],[6,"ServerStatus",1148],[5,"BitcoinRpcConfig",1153],[6,"Network",1154],[5,"Hash",1155],[1,"array"],[5,"Stats",524],[5,"Formatter",1156],[8,"Result",1156],[6,"LatencyTest",524],[6,"UpgradeTest",524],[6,"TestCmd",524],[5,"UpgradeClients",524],[5,"Amount",1147],[5,"LnInvoiceResponse",1157],[5,"Duration",1158],[10,"ToString",1133],[6,"Value",1159],[10,"Fn",1121],[17,"Fut"],[10,"ToCmdExt",663],[5,"FedimintdCmd",663],[5,"Gatewayd",663],[5,"FedimintCli",663],[5,"LoadTestTool",663],[5,"GatewayCli",663],[5,"GatewayClnCli",663],[5,"GatewayLndCli",663],[5,"LnCli",663],[5,"ClnLightningCli",663],[5,"BitcoinCli",663],[5,"Bitcoind",663],[5,"Lightningd",663],[5,"Lnd",663],[5,"Electrs",663],[5,"Esplora",663],[5,"Recoverytool",663],[5,"Faucet",663],[5,"ProcessHandleInner",663],[5,"OsStr",1124],[10,"AsRef",1160],[17,"Item"],[10,"IntoIterator",1161],[5,"Version",1162],[6,"ControlFlow",1163],[5,"Output",1164],[5,"Child",1165],[6,"Signal",1166],[10,"JsonValueExt",663],[10,"DeserializeOwned",1167],[10,"ToEnvVar",991],[10,"Iterator",1168],[5,"VERSION_0_3_0_ALPHA",1093],[5,"VERSION_0_3_0",1093],[15,"ExternalDaemons",107],[15,"DevFed",107],[8,"JitArc",109],[15,"UpgradeTests",657],[15,"WasmTestSetup",657],[15,"LatencyTests",657],[15,"Fedimintd",660],[15,"FedimintCli",660],[15,"Gatewayd",660]],"b":[]}],\
["faucet",{"doc":"","t":"FFNNOOONNNNONNNNNNNNNNNHNONNNNNNOOHNNNNNNNNNNNNN","n":["Cmd","Faucet","augment_args","augment_args_for_update","bind_addr","bitcoin","bitcoind_rpc","borrow","borrow","borrow_mut","borrow_mut","cln_socket","clone","clone_into","command","command_for_update","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","generate_invoice","get_invite_code","group_id","gw_lnd_port","into","into","into_request","into_request","into_request","into_request","invite_code","ln_rpc","main","new","pay_invoice","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip"],"q":[[0,"faucet"],[48,"clap_builder::builder::command"],[49,"clap_builder::parser::matches::arg_matches"],[50,"clap_builder"],[51,"core::result"],[52,"alloc::string"],[53,"anyhow"],[54,"core::option"],[55,"clap_builder::util::id"],[56,"tonic::request"],[57,"tonic::request"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,5,5,5,2,5,5,2,5,2,5,2,2,5,5,5,2,5,5,2,2,2,0,5,5,5,2,5,5,2,2,5,2,0,2,2,2,5,2,5,2,5,2,5,5,5,2],"f":"``{bb}0```{ce{}{}}000`{dd}{{ce}f{}{}}{{}b}0{cc{}}0{h{{n{jl}}}}011{{dA`}{{Ad{Ab}}}}{{{Af{Ab}}}{{Ad{Ab}}}}{{}{{Af{Ah}}}}`88{c{{Aj{e}}}{}{}}{c{{Al{e}}}{}{}}10``{{}{{Ad{f}}}}{j{{Ad{d}}}}{{dAb}{{Ad{f}}}}={c{{n{e}}}{}{}}000{cAn{}}0{{jh}{{n{fl}}}}0{ce{}{}}0","c":[],"p":[[5,"Command",48],[5,"Faucet",0],[1,"unit"],[5,"ArgMatches",49],[5,"Cmd",0],[8,"Error",50],[6,"Result",51],[1,"u64"],[5,"String",52],[8,"Result",53],[6,"Option",54],[5,"Id",55],[5,"Request",56],[5,"Request",56],[5,"TypeId",57]],"b":[]}],\
["fedimint_aead",{"doc":"","t":"FFSFNNOHNNNNNNNNNNNHNNNHHHCNNNNNNNNNHHOONNNNNNNNHNNNNNNNNNNNNNNNNS","n":["Aad","LessSafeKey","NONCE_LEN","UnboundKey","algorithm","algorithm","algorithm","argon2","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decrypt","empty","encode_hex","encode_hex_upper","encrypt","encrypted_read","encrypted_write","envs","eq","fmt","fmt","fmt","from","from","from","from","from","get_encryption_key","get_random_nonce","inner","inner","into","into","into","new","new","open_in_place","open_in_place_separate_tag","open_within","random_salt","seal_in_place_append_tag","seal_in_place_separate_tag","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","FM_TEST_FAST_WEAK_CRYPTO_ENV"],"q":[[0,"fedimint_aead"],[65,"fedimint_aead::envs"],[66,"ring::aead"],[67,"argon2"],[68,"core::convert"],[69,"core::clone"],[70,"anyhow"],[71,"core::iter::traits::collect"],[72,"alloc::vec"],[73,"std::path"],[74,"core::cmp"],[75,"core::fmt"],[76,"core::fmt"],[77,"core::fmt"],[78,"ring::aead::nonce"],[79,"ring::error"],[80,"ring::aead"],[81,"alloc::string"],[82,"core::convert"]],"d":["The additionally authenticated data (AAD) for an opening …","Immutable keys for use in situations where <code>OpeningKey</code>/…","All the AEADs we support use 96-bit nonces.","An AEAD key without a designated role or nonce sequence.","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","Constructs Argon2 with default params, easier if the weak …","","","","","","","","","","","","Decrypts a <code>ciphertext</code> using <code>key</code>.","Construct an empty <code>Aad</code>.","","","Encrypt <code>plaintext</code> using <code>key</code>.","Reads encrypted data from a file","Write <code>data</code> encrypted to a <code>file</code> with a random <code>nonce</code> that …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct the <code>Aad</code> from the given bytes.","Returns the argument unchanged.","Key used to encrypt and authenticate data stored on the …","Get a random nonce.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a <code>UnboundKey</code>.","Constructs a <code>LessSafeKey</code>.","Like <code>super::OpeningKey::open_in_place()</code>, except it accepts …","Like open_in_place, except the authentication tag is …","Like <code>super::OpeningKey::open_within()</code>, except it accepts an","Generates a B64-encoded random salt string of the …","Like <code>super::SealingKey::seal_in_place_append_tag()</code>, except …","Like <code>super::SealingKey::seal_in_place_separate_tag()</code>, …","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,3,3,0,5,1,5,3,1,5,3,5,3,5,3,0,5,5,5,0,0,0,0,5,1,5,3,1,1,5,5,3,0,0,1,3,1,5,3,1,3,3,3,3,0,3,3,5,3,1,5,3,1,5,3,1,5,3,1,5,3,0],"f":"````{bd}{fd}`{{}h}{{{j{c}}}{{n{l}}}{{A`{{n{l}}}}}}{ce{}{}}00000{{{j{c}}}{{j{c}}}Ab}{ff}{{ce}Ad{}{}}0{{{n{l}}f}{{Af{{n{l}}}}}}{{}{{j{{Ah{l}}}}}}{ce{}{{Al{Aj}}}}0{{{An{l}}f}{{Af{{An{l}}}}}}{{fB`}{{Af{{An{l}}}}}}{{{An{l}}fB`}{{Af{Ad}}}}`{{{j{c}}{j{c}}}BbBd}{{bBf}{{Bj{AdBh}}}}{{{j{c}}Bf}{{Bj{AdBh}}}Bl}{{fBf}{{Bj{AdBh}}}}{{{Bn{d}}}b}{cc{}}0{c{{j{c}}}{{A`{{n{l}}}}}}1{{C`C`}{{Af{f}}}}{{}Cb}``{ce{}{}}00{{d{n{l}}}{{Bj{bCd}}}}{bf}{{fCb{j{c}}{n{l}}}{{Bj{{n{l}}Cd}}}{{A`{{n{l}}}}}}{{fCb{j{c}}Cf{n{l}}{Cj{Ch}}}{{Bj{{n{l}}Cd}}}{{A`{{n{l}}}}}}{{fCb{j{c}}{n{l}}{Cj{Ch}}}{{Bj{{n{l}}Cd}}}{{A`{{n{l}}}}}}{{}Cl}{{fCb{j{c}}e}{{Bj{AdCd}}}{{A`{{n{l}}}}}{{Cn{{n{l}}}}{D`{l}}}}{{fCb{j{c}}{n{l}}}{{Bj{CfCd}}}{{A`{{n{l}}}}}}88{c{{Bj{e}}}{}{}}00000{cDb{}}00:::`","c":[],"p":[[5,"UnboundKey",0],[5,"Algorithm",66],[5,"LessSafeKey",0],[5,"Argon2",67],[5,"Aad",0],[1,"u8"],[1,"slice"],[10,"AsRef",68],[10,"Clone",69],[1,"unit"],[8,"Result",70],[1,"array"],[1,"char"],[10,"FromIterator",71],[5,"Vec",72],[5,"PathBuf",73],[1,"bool"],[10,"PartialEq",74],[5,"Formatter",75],[5,"Error",75],[6,"Result",76],[10,"Debug",75],[5,"Okm",77],[1,"str"],[5,"Nonce",78],[5,"Unspecified",79],[5,"Tag",66],[1,"usize"],[5,"RangeFrom",80],[5,"String",81],[10,"AsMut",68],[10,"Extend",71],[5,"TypeId",82]],"b":[]}],\
["fedimint_bip39",{"doc":"BIP39 client secret support crate","t":"FNNNNNNNNNNNNNN","n":["Bip39RootSecretStrategy","borrow","borrow_mut","consensus_decode","consensus_encode","fmt","from","into","into_request","random","to_root_secret","try_from","try_into","type_id","vzip"],"q":[[0,"fedimint_bip39"],[15,"fedimint_core::encoding"],[16,"core::result"],[17,"std::io"],[18,"std::io::error"],[19,"std::io"],[20,"core::fmt"],[21,"rand_core"],[22,"rand_core"],[23,"core::any"]],"d":["BIP39 root secret encoding strategy allowing retrieval of …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":"`{ce{}{}}0{c{{d{eb}}}f{}}{{ce}{{j{h}}}{}l}{{nA`}Ab}{cc{}}4{c{{Ad{e}}}{}{}}{ce{AfAh}{}}{cAj{}}{c{{d{e}}}{}{}}0{cAl{}}9","c":[],"p":[[5,"DecodeError",15],[6,"Result",16],[10,"Read",17],[1,"usize"],[8,"Result",18],[10,"Write",17],[5,"Bip39RootSecretStrategy",0],[5,"Formatter",19],[8,"Result",19],[5,"Request",20],[10,"RngCore",21],[10,"CryptoRng",21],[5,"DerivableSecret",22],[5,"TypeId",23]],"b":[]}],\
["fedimint_bitcoind",{"doc":"","t":"FFFPKKSPSSIFSSOCNNNNNNNNNNNNHMNNNCCNNNNNNNNNNNMNMNMNNNMNMNMNMNOOONNNNNNNNNHNMNONNNNNNNNNNNNNNNNNNMNFFNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BITCOIN_RPC_REGISTRY","DynBitcoindRpc","DynBitcoindRpcFactory","Err","IBitcoindRpc","IBitcoindRpcFactory","MAINNET_GENESIS_BLOCK_HASH","Ok","RETRY_SLEEP_MAX_MS","RETRY_SLEEP_MIN_MS","Result","RetryClient","SIGNET_GENESIS_BLOCK_HASH","TESTNET_GENESIS_BLOCK_HASH","__private_field","bitcoincore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_bitcoind","create_connection","deref","deref","deref","electrum","esplora","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","get_block_count","get_block_count","get_block_hash","get_block_hash","get_fee_rate","get_fee_rate","get_mut","get_mut","get_network","get_network","get_script_history","get_script_history","get_tx_block_height","get_tx_block_height","get_txout_proof","get_txout_proof","inner","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","new","register_bitcoind","retry_call","submit_transaction","submit_transaction","task_handle","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","watch_script_history","watch_script_history","BitcoinClient","BitcoindFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","from_url_to_url_auth","get_block_count","get_block_hash","get_fee_rate","get_network","get_script_history","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","ElectrumClient","ElectrumFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","get_block_count","get_block_hash","get_fee_rate","get_network","get_script_history","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","is_already_submitted_error","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","EsploraClient","EsploraFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","get_block_count","get_block_hash","get_fee_rate","get_network","get_script_history","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history"],"q":[[0,"fedimint_bitcoind"],[99,"fedimint_bitcoind::bitcoincore"],[133,"fedimint_bitcoind::electrum"],[167,"fedimint_bitcoind::esplora"],[200,"fedimint_core::envs"],[201,"fedimint_core::task"],[202,"fedimint_core::util"],[203,"alloc::string"],[204,"alloc::collections::btree::map"],[205,"std::sync::mutex"],[206,"core::fmt"],[207,"core::fmt"],[208,"alloc::boxed"],[209,"core::pin"],[210,"core::marker"],[211,"core::marker"],[212,"bitcoin::blockdata::script"],[213,"bitcoin::hash_types::newtypes"],[214,"tonic::request"],[215,"core::ops::function"],[216,"bitcoin::blockdata::transaction"],[217,"core::result"],[218,"core::any"],[219,"bitcoincore_rpc::client"],[220,"serde_json::value"],[221,"serde_json::map"]],"d":["Global factories for creating bitcoin RPCs","","","Contains the error value","Trait that allows interacting with the Bitcoin blockchain","Trait for creating new bitcoin RPC clients","","Contains the success value","","","<code>Result&lt;T, Error&gt;</code>","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","","","","","","","","","","","","","","","","","Create a bitcoin RPC of a given kind","Creates a new bitcoin RPC client connection","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the current block count","","Returns the block hash at a given height","","Estimates the fee rate for a given confirmation target. …","","","","Returns the Bitcoin network the node is connected to","","Get script transaction history","","Check if a transaction is included in a block","","Returns a proof that a tx is included in the bitcoin …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Register a new factory for creating bitcoin RPCs","Retries with an exponential backoff from <code>RETRY_SLEEP_MIN_MS</code>…","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","","","","Watches for a script and returns any transactions …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Parses errors from electrum-client to determine if the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,6,0,0,0,6,0,0,0,0,0,0,9,0,9,1,2,15,9,1,2,15,1,2,1,2,0,7,9,1,2,0,0,1,2,15,9,1,1,2,2,15,1,2,19,15,19,15,19,15,1,2,19,15,19,15,19,15,19,15,1,2,15,9,1,2,15,9,1,2,15,15,0,15,19,15,15,1,2,9,1,2,15,9,1,2,15,9,1,2,15,9,1,2,15,19,15,0,0,36,37,36,37,36,36,37,36,37,0,37,37,37,37,37,37,37,36,37,36,37,37,37,36,37,36,37,36,37,36,37,37,0,0,41,40,41,40,40,41,40,41,40,41,41,41,41,41,41,41,41,40,41,40,0,41,41,41,40,41,40,41,40,41,40,41,0,0,45,46,45,46,45,45,46,45,46,46,46,46,46,46,46,46,45,46,45,46,46,46,45,46,45,46,45,46,45,46,46],"f":"````````````````{ce{}{}}0000000{bb}{dd}{{ce}f{}{}}0{{hj}{{l{d}}}}{{nA`j}{{l{d}}}}{Ab{{Ah{{Af{Adb}}}}}}{bc{}}{dc{}}``{{bAj}Al}{{dAj}Al}{{{An{c}}Aj}AlB`}{cc{}}{cb{nBbBd}}11{cd{BfBbBd}}222{Bf{{Bl{{Bj{Bh}}}}}}{{{An{c}}}{{Bl{{Bj{Bh}}}}}{BfBnC`}}{{BfCb}{{Bl{{Bj{Bh}}}}}}{{{An{c}}Cb}{{Bl{{Bj{Bh}}}}}{BfBnC`}}{{BfCd}{{Bl{{Bj{Bh}}}}}}{{{An{c}}Cd}{{Bl{{Bj{Bh}}}}}{BfBnC`}}{b{{Cf{c}}}{}}{d{{Cf{c}}}{}}76{{BfCh}{{Bl{{Bj{Bh}}}}}}{{{An{c}}Ch}{{Bl{{Bj{Bh}}}}}{BfBnC`}}{{BfCj}{{Bl{{Bj{Bh}}}}}}{{{An{c}}Cj}{{Bl{{Bj{Bh}}}}}{BfBnC`}}10```{ce{}{}}000{c{{Cl{e}}}{}{}}000{{cj}{{An{c}}}{}}{{Adb}f}{{{An{c}}i}{{l{e}}}{}{}{{Bh{}{{Cn{{l{e}}}}}}}{{D`{}{{Cn{g}}}}}}{{BfDb}{{Bl{{Bj{Bh}}}}}}{{{An{c}}Db}{{Bl{{Bj{Bh}}}}}{BfBnC`}}`66{c{{Dd{e}}}{}{}}0000000{cDf{}}0008888<;``8888{{DhA`j}{{l{d}}}}{{DhAj}Al}{{DjAj}Al}{cc{}}0{A`{{l{{Dn{AdDl}}}}}}{Dj{{Bl{{Bj{Bh}}}}}}{{DjCb}{{Bl{{Bj{Bh}}}}}}{{DjCd}{{Bl{{Bj{Bh}}}}}}2{{DjCh}{{Bl{{Bj{Bh}}}}}}{{DjCj}{{Bl{{Bj{Bh}}}}}}0{ce{}{}}0{c{{Cl{e}}}{}{}}0{A`{{l{Dj}}}}{{DjDb}{{Bl{{Bj{Bh}}}}}}????>>335``3333{{E`A`j}{{l{d}}}}{{EbAj}Al}{{E`Aj}Al}=={Eb{{Bl{{Bj{Bh}}}}}}{{EbCb}{{Bl{{Bj{Bh}}}}}}{{EbCd}{{Bl{{Bj{Bh}}}}}}2{{EbCh}{{Bl{{Bj{Bh}}}}}}{{EbCj}{{Bl{{Bj{Bh}}}}}}0;;::{{{Ef{AdEd}}}Eh}{A`{{l{Eb}}}}{{EbDb}{{Bl{{Bj{Bh}}}}}}{c{{Dd{e}}}{}{}}000{cDf{}}0{ce{}{}}07``0000{{EjA`j}{{l{d}}}}{{EjAj}Al}{{ElAj}Al}{cc{}}0{El{{Bl{{Bj{Bh}}}}}}{{ElCb}{{Bl{{Bj{Bh}}}}}}{{ElCd}{{Bl{{Bj{Bh}}}}}}2{{ElCh}{{Bl{{Bj{Bh}}}}}}{{ElCj}{{Bl{{Bj{Bh}}}}}}099{c{{Cl{e}}}{}{}}0{A`{{l{El}}}}{{ElDb}{{Bl{{Bj{Bh}}}}}}>>>>==<<4","c":[],"p":[[5,"DynBitcoindRpcFactory",0],[5,"DynBitcoindRpc",0],[1,"unit"],[5,"BitcoinRpcConfig",200],[5,"TaskHandle",201],[8,"Result",0],[10,"IBitcoindRpcFactory",0],[5,"SafeUrl",202],[5,"BITCOIN_RPC_REGISTRY",0],[5,"String",203],[5,"BTreeMap",204],[5,"Mutex",205],[5,"Formatter",206],[8,"Result",206],[5,"RetryClient",0],[10,"Debug",206],[10,"MaybeSend",201],[10,"MaybeSync",201],[10,"IBitcoindRpc",0],[10,"Future",207],[5,"Box",208],[5,"Pin",209],[10,"Sync",210],[10,"Send",210],[1,"u64"],[1,"u16"],[6,"Option",211],[5,"Script",212],[5,"Txid",213],[5,"Request",214],[17,"Output"],[10,"Fn",215],[5,"Transaction",216],[6,"Result",217],[5,"TypeId",218],[5,"BitcoindFactory",99],[5,"BitcoinClient",99],[6,"Auth",219],[1,"tuple"],[5,"ElectrumFactory",133],[5,"ElectrumClient",133],[6,"Value",220],[5,"Map",221],[1,"bool"],[5,"EsploraFactory",167],[5,"EsploraClient",167]],"b":[]}],\
["fedimint_build",{"doc":"","t":"HCHHSS","n":["call_cmd","envs","set_code_version","set_code_version_inner","FEDIMINT_BUILD_CODE_VERSION_ENV","FORCE_GIT_HASH_ENV"],"q":[[0,"fedimint_build"],[4,"fedimint_build::envs"],[6,"alloc::string"],[7,"core::result"]],"d":["","","","","Env variable the cargo will set during crate build to pass …","Env variable to set to force git hash during build process"],"i":[0,0,0,0,0,0],"f":"{{b{d{b}}}{{h{ff}}}}`{{}j}{{}{{h{jf}}}}``","c":[],"p":[[1,"str"],[1,"slice"],[5,"String",6],[6,"Result",7],[1,"unit"]],"b":[]}],\
["fedimint_cli",{"doc":"","t":"PGPPFKGIIKPGPPPPPPPPPPGPGPFGPGPPPFPPPPPPPPPPFPPFPPFFPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNONNONCNNNNNNNNCNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHNNMMHONOOMOOONHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNONNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPPPPGPPPPPPFPPPPPPFGGFPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHHHHNONNNNNNNNNNNNOOOOONNNNONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNHOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFFNNNNNNNNONNNNOONNNNNNNNNNSSSH","n":["Admin","AdminCmd","Api","Audit","CliError","CliOptionExt","CliOutput","CliOutputResult","CliResult","CliResultExt","Client","Command","Completion","ConfigDecrypt","ConfigDecrypt","ConfigEncrypt","ConfigEncrypt","ConsensusConfigGenParams","Decode","DecodeInviteCode","DecodeTransaction","DecodeTransaction","DecodeType","Dev","DevCmd","Dkg","DkgAdminArgs","DkgAdminCmd","Encode","EncodeType","EpochCount","Err","Err","FedimintCli","GetConfigGenPeers","GetDefaultConfigGenParams","GetVerifyConfigHash","GuardianConfigBackup","InviteCode","InviteCode","InviteCode","InviteCode","JoinFederation","JoinFederation","LnInvoiceResponse","Notes","Notes","OOBNotesJson","Ok","Ok","Opts","PayRequest","Raw","RunDkg","SessionCount","SetConfigGenConnections","SetConfigGenParams","SetPassword","StartConsensus","Status","UntypedApiOutput","VersionHash","VersionHash","WaitBlockCount","WaitBlockCount","WaitComplete","WsStatus","admin_client","admin_client_from_id","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cli_args","client","client_join","client_open","client_recover","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command_for_update","data_dir","data_dir","data_dir_create","db_locked","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","envs","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","federation_id_prefix","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","group_id","group_id","handle_admin_dkg_command","handle_command","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","load_or_generate_mnemonic","load_rocks_db","make_client_builder","map_err_cli","map_err_cli_msg","metadata_from_clap_cli","module_inits","new","notes","notes","ok_or_cli_msg","operation_id","our_id","password","run","salt_from_file_path","serialize","serialize","serialize","serialize","serialize","subcommand","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","utils","validate_ip","validate_ip","validate_ipv4","validate_ipv4","validate_ipv6","validate_ipv6","verbose","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_default_modules","with_module","ws","ws_admin_client","count","federation_id","hash","invite_code","joined","reached","transaction","url","value","invite_code","peer","shell","invite_code","notes","count","decode_type","encode_type","hex_string","in_file","in_file","method","out_file","out_file","params","password","password","password","peer_id","salt_file","salt_file","leader_api_url","meta_json","modules_json","our_name","federation_id","notes_json","peer","url","Active","AwaitDeposit","AwaitInvoice","AwaitLnPay","Backup","ClientCmd","Combine","Config","DepositAddress","DiscoverVersion","Id","Info","InfoResponse","Kind","ListGateways","ListOperations","LnInvoice","LnPay","Module","ModuleInfo","ModuleSelector","ModuleStatus","PayInvoiceResponse","PrintSecret","Reissue","Restore","Spend","Split","UnsupportedByClient","Validate","Withdraw","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contract_id","denominations_msat","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","get_gateway","get_invoice","get_note_summary","handle_command","has_subcommand","id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","kind","meta","network","operation_id","preimage","serialize","serialize","serialize","serialize","status","to_owned","to_owned","to_owned","to_owned","to_owned","total_amount_msat","total_num_notes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_ln_payment","address","allow_overpay","amount","amount","amount","amount","args","description","expiry_time","finish_in_background","force_internal","force_internal","gateway_id","gateway_id","include_invite","invite_code","limit","lnurl_comment","metadata","mnemonic","module","no_update","oob_notes","oob_notes","oob_notes","oob_notes","operation_id","operation_id","operation_id","payment_info","timeout","timeout","Locked","LockedBuilder","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","inner","into","into","into_request","into_request","lock","lock","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_db","FM_CLIENT_DIR_ENV","FM_OUR_ID_ENV","FM_PASSWORD_ENV","parse_peer_id"],"q":[[0,"fedimint_cli"],[383,"fedimint_cli::CliOutput"],[392,"fedimint_cli::Command"],[395,"fedimint_cli::DecodeType"],[397,"fedimint_cli::DevCmd"],[413,"fedimint_cli::DkgAdminCmd"],[417,"fedimint_cli::EncodeType"],[421,"fedimint_cli::client"],[575,"fedimint_cli::client::ClientCmd"],[607,"fedimint_cli::db_locked"],[634,"fedimint_cli::envs"],[637,"fedimint_cli::utils"],[638,"fedimint_core::config"],[639,"fedimint_core::api"],[640,"core::result"],[641,"fedimint_core"],[642,"clap_builder::builder::command"],[643,"fedimint_core::module"],[644,"fedimint_core::api"],[645,"bip39"],[646,"std::path"],[647,"serde::de"],[648,"erased_serde::ser"],[649,"erased_serde::ser"],[650,"core::fmt"],[651,"core::fmt"],[652,"clap_builder"],[653,"clap_builder::util::id"],[654,"core::option"],[655,"tonic::request"],[656,"fedimint_core::db"],[657,"fedimint_client"],[658,"core::convert"],[659,"alloc::vec"],[660,"alloc::collections::btree::map"],[661,"anyhow"],[662,"std::path"],[663,"core::any"],[664,"fedimint_client::module::init"],[665,"core::marker"],[666,"core::marker"],[667,"fedimint_ln_common"],[668,"fedimint_core"],[669,"serde_json::value"],[670,"fedimint_ln_client"],[671,"fedimint_ln_common::contracts"],[672,"core::future::future"],[673,"alloc::boxed"],[674,"core::pin"],[675,"fedimint_core::db"]],"d":["","","Send direct method call to the API. If you specify –…","Show an audit across all modules","Cli error","Extension trait to make turning <code>Option</code>s into <code>CliError</code>/…","Type of output the cli produces","<code>Result</code> with <code>CliError</code> as <code>Error</code> and <code>CliOutput</code> as <code>Ok</code>","<code>Result</code> with <code>CliError</code> as <code>Error</code>","Extension trait making turning Results/Errors into <code>CliError</code>…","","","","","","","","","Decode invite code or ecash notes string into a JSON …","","","Decode a transaction hex string and print it to stdout","","","","","","","Encode an invite code or ecash notes into binary","","","Contains the error value","Contains the error value","","","","","Download guardian config to back it up","","Config enabling client to establish websocket connection …","Decode an invite code string into a JSON representation","Encode connection info from its constituent parts","","Join a federation using it’s InviteCode","","Decode a string of ecash notes into a JSON representation","Encode a JSON string of notes to an ecash string","","Contains the success value","Contains the success value","","","","","Gets the current fedimint AlephBFT block count","","","","","Show the status according to the <code>status</code> endpoint","","","Print the latest Git commit hash this bin. was built with.","","Wait for the fed to reach a consensus block count","Wait for all state machines to complete","Allow to access the <code>status</code> endpoint in a pre-dkg phase","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working directory of the client containing the config …","Get and create if doesn’t exist the data dir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Map error into <code>CliError</code> wrapping the original error message","Map error into <code>CliError</code> using custom error message <code>msg</code>","Convert clap arguments to backup metadata","","Build a new <code>fedimintd</code> with a custom version hash","","","","","Peer id of the guardian","Guardian password for authentication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Activate more verbose logging, for full control use the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encrypted config file","Plaintext config file","JSON-RPC method to call","Plaintext config file output","Encrypted config file output","JSON-RPC parameters for the request","The password that encrypts the configs","The password that encrypts the configs","Guardian password in case authenticated API endpoints are …","Which server to send request to","Encryption salt file, otherwise defaults to the salt file …","Encryption salt file, otherwise defaults to the salt file …","URL of “leader” guardian to send our connection info to","Guardian-defined key-value pairs that will be passed to …","Set the params (if leader) or just the local params (if …","Our guardian name","","","","","","Wait for deposit on previously generated address","Wait for incoming invoice to be paid","Wait for a lightning payment to complete","Upload the (encrypted) snapshot of mint notes to federation","","Combines two or more serialized e-cash notes strings","Returns the client config","Generate a new deposit address, funds sent to it can later …","Discover the common api version to use to communicate with …","","Display wallet info (holdings, tiers)","","","List registered gateways","","Create a lightning invoice to receive payment via gateway","Pay a lightning invoice or lnurl via a gateway","Call a module subcommand","","","","","Print the secret key of the client","Reissue notes received from a third party to avoid double …","Restore the previously created backup of mint notes (with …","Prepare notes to send to a third party as a payment","Splits a string containing multiple e-cash notes (e.g. …","","Verifies the signatures of e-cash notes, but <em>not</em> if they …","Withdraw funds from the federation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns a gateway to be used for a lightning operation. If …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the exact amount cannot be represented, return e-cash …","The amount of e-cash to spend","","Amount to pay, used for lnurl","","","","","Will return immediately after funding the payment","","","","","If the necessary information to join the federation the …","","","Invoice comment/description, used on lnurl","Backup metadata, encoded as <code>key=value</code> (use …","","Module selector (either module id or module kind)","Don’t fetch the registered gateways from the federation","","","","","","","","Lightning invoice or lnurl","After how many seconds we will try to reclaim the e-cash …","How long the client should watch the address for incoming …","Locked version of database","Builder for <code>Locked</code>","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a <code>Self</code> by acquiring a lock file","","","","","","","","","Create <code>Locked</code> by giving it the database to wrap","","","",""],"i":[13,0,20,14,0,0,0,0,0,0,13,0,13,29,20,29,20,16,20,29,29,20,0,13,0,14,0,0,20,0,29,76,77,0,16,16,16,14,29,13,17,19,29,13,0,17,19,0,76,77,0,0,29,16,20,16,16,16,16,14,29,29,13,29,20,20,16,1,1,1,15,1,15,13,14,16,17,19,20,13,14,16,17,19,20,1,9,29,4,1,13,14,15,16,17,18,19,20,25,21,9,29,4,1,13,14,15,16,17,18,19,20,25,21,9,0,9,9,9,1,13,14,15,16,17,18,19,20,21,1,13,14,15,16,17,18,19,20,21,1,1,1,1,1,1,0,18,25,21,29,4,18,25,21,0,29,4,18,25,21,4,18,29,4,4,14,15,16,17,18,19,20,25,21,9,29,4,4,1,13,14,15,16,17,18,19,20,25,21,1,13,14,15,16,17,19,20,1,13,14,15,16,17,19,20,1,1,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,1,15,9,9,13,14,16,17,19,20,9,29,4,1,13,14,15,16,17,18,19,20,25,21,9,29,4,1,13,14,15,16,17,18,19,20,25,21,25,21,0,1,9,42,42,0,9,9,18,25,48,21,1,1,9,0,29,4,18,25,21,15,1,13,14,15,16,17,18,19,20,21,29,4,9,29,4,1,13,14,15,16,17,18,19,20,25,21,9,29,4,1,13,14,15,16,17,18,19,20,25,21,9,29,4,1,13,14,15,16,17,18,19,20,25,21,1,13,14,15,16,17,19,20,1,13,14,15,16,17,19,20,0,29,4,29,4,29,4,1,9,29,4,1,13,14,15,16,17,18,19,20,25,21,9,9,15,15,78,79,80,81,82,83,84,79,85,86,87,88,89,90,91,92,93,94,95,96,97,95,96,97,95,96,97,97,95,96,98,99,99,98,100,101,100,100,56,57,57,57,57,0,57,57,57,57,55,57,0,55,57,57,57,57,57,0,0,0,0,57,57,57,57,57,56,57,57,57,57,55,56,65,57,58,59,55,56,65,57,58,59,55,56,57,58,59,55,56,57,58,59,59,58,58,59,56,65,58,59,56,65,58,59,58,55,56,57,58,59,55,56,65,57,58,59,57,57,55,55,56,56,57,57,58,58,59,59,55,0,0,0,0,57,65,55,56,65,57,58,59,55,56,65,57,58,59,65,58,58,59,59,56,65,58,59,65,55,56,57,58,59,58,58,55,56,65,57,58,59,55,56,65,57,58,59,55,56,65,57,58,59,57,57,55,56,65,57,58,59,0,102,103,103,104,105,102,106,104,104,105,104,105,104,105,103,107,108,105,109,107,106,110,111,112,113,114,115,116,117,105,103,118,0,0,68,74,68,74,68,68,74,68,68,74,68,74,68,74,68,74,74,68,74,68,74,68,74,68,74,0,0,0,0],"f":"```````````````````````````````````````````````````````````````````{{bd}{{j{fh}}}}{{ld}{{j{fh}}}}{nn}000000000000000{b{{j{A`h}}}}{ce{}{}}000000000000000000000000000``{{AbbAd}{{j{Afh}}}}{{Abb}{{j{Afh}}}}{{AbbAhAd}{{j{Afh}}}}{bb}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{{ce}Bl{}{}}000000000{{}n}`0{b{{j{Bnh}}}}`0`{c{{j{Bd}}}C`}{c{{j{Cb}}}C`}{c{{j{Bj}}}C`}{{cCd}{{j{BlCf}}}{}}0000`{{cCd}{{j{BlCh}}}{}}0000``{{CjCl}Cn}{{hCl}Cn}0{{AlCl}Cn}{{AnCl}Cn}{{B`Cl}Cn}{{BbCl}Cn}{{BdCl}Cn}{{BfCl}Cn}{{BhCl}Cn}{{CbCl}Cn}{{BjCl}Cn}{cc{}}0{D`h}111111111111{Db{{j{bDd}}}}{Db{{j{AjDd}}}}{Db{{j{AlDd}}}}{Db{{j{AnDd}}}}{Db{{j{B`Dd}}}}{Db{{j{BbDd}}}}{Db{{j{BfDd}}}}{Db{{j{BhDd}}}}7654321099999999999999999999{{}{{Dh{Df}}}}0{{AbbAn}{{j{Cjh}}}}{{Abb}{{j{Cjh}}}}{DjDl}00000{ce{}{}}0000000000000{c{{Dn{e}}}{}{}}0000000000000``{E`{{j{Ahh}}}}{b{{j{E`h}}}}{{Abb}{{j{Ebh}}}}{Ed{{j{ch}}}{}}{{Edc}{{j{eh}}}{{Eh{Ef}}}{}}{{{Ej{Ef}}}{{j{{El{EfEf}}h}}}}`{Dj{{En{Ab}}}}``{{F`c}{{j{eh}}}{{Eh{Ef}}}{}}```{AbBl}{FbBn}{{Cjc}jFd}{{hc}jFd}{{Bdc}jFd}{{Cbc}jFd}{{Bjc}jFd}`{ce{}{}}000000000{cEf{}}0{c{{j{e}}}{}{}}000000000000000000000000000{cFf{}}0000000000000{{bDb}{{j{BlDd}}}}{{AjDb}{{j{BlDd}}}}{{AlDb}{{j{BlDd}}}}{{AnDb}{{j{BlDd}}}}{{B`Db}{{j{BlDd}}}}{{BbDb}{{j{BlDd}}}}{{BfDb}{{j{BlDd}}}}{{BhDb}{{j{BlDd}}}}76543210`{cDl{}}00000`<<<<<<<<<<<<<<{AbAb}{{Abc}Ab{FhFjFl}}`{An{{j{fh}}}}`````````````````````````````````````````````````````````````````````{nn}0{ce{}{}}00000000000{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{{ce}Bl{}{}}0000``{c{{j{Gd}}}C`}{c{{j{Gf}}}C`}{{cCd}{{j{BlCf}}}{}}000{{cCd}{{j{BlCh}}}{}}000`{{FnCl}Cn}{{G`Cl}Cn}{{GbCl}Cn}{{GdCl}Cn}{{GfCl}Cn}{cc{}}00000{Db{{j{GbDd}}}}01111111111{Dj{{j{Fnc}}}{}}{{Af{Dh{Gh}}Dl}{{En{{Dh{Gj}}}}}}{{Dj{Dh{Gl}}{Dh{Ef}}}{{En{Gn}}}}{Af{{En{H`}}}}{{GbAf}{{En{H`}}}}{DjDl}`{ce{}{}}00000{c{{Dn{e}}}{}{}}00000`````{{G`c}jFd}{{Hbc}jFd}{{Gdc}jFd}{{Gfc}jFd}`55555``{c{{j{e}}}{}{}}00000000000{cFf{}}00000{{GbDb}{{j{BlDd}}}}0888888{{AfHdHfDl}{{En{{Dh{H`}}}}}}``````````````````````````````````{{{Hh{c}}}{{Hn{{Hl{Hj}}}}}I`}::::{{{Hh{c}}Cl}CnIb}{cc{}}0`<<;;``{Fb{{En{Id}}}}777766=={{Idc}{{Hh{c}}}{}}```{Dj{{j{lIf}}}}","c":[],"p":[[5,"Opts",0],[5,"ClientConfig",638],[5,"DynGlobalApi",639],[5,"CliError",0],[6,"Result",640],[5,"PeerId",641],[5,"Command",642],[5,"ApiAuth",643],[5,"FedimintCli",0],[5,"InviteCode",639],[8,"ClientHandleArc",644],[5,"Mnemonic",645],[6,"Command",0],[6,"AdminCmd",0],[5,"DkgAdminArgs",0],[6,"DkgAdminCmd",0],[6,"DecodeType",0],[5,"OOBNotesJson",0],[6,"EncodeType",0],[6,"DevCmd",0],[5,"LnInvoiceResponse",0],[1,"unit"],[5,"PathBuf",646],[10,"Deserializer",647],[5,"PayRequest",0],[10,"Serializer",648],[6,"ErrorImpl",648],[5,"Error",649],[6,"CliOutput",0],[5,"Formatter",650],[8,"Result",650],[5,"FederationError",639],[5,"ArgMatches",651],[8,"Error",652],[5,"Id",653],[6,"Option",654],[1,"str"],[1,"bool"],[5,"Request",655],[5,"Database",656],[5,"ClientBuilder",644],[10,"CliResultExt",0],[5,"String",657],[10,"Into",658],[5,"Vec",659],[5,"BTreeMap",660],[8,"Result",661],[10,"CliOptionExt",0],[5,"Path",646],[10,"Serializer",662],[5,"TypeId",663],[10,"ClientModuleInit",664],[10,"Send",665],[10,"Sync",665],[6,"ModuleSelector",421],[6,"ModuleStatus",421],[6,"ClientCmd",421],[5,"InfoResponse",421],[5,"PayInvoiceResponse",421],[5,"PublicKey",666],[5,"LightningGateway",667],[5,"Amount",641],[5,"Bolt11Invoice",668],[6,"Value",669],[5,"ModuleInfo",421],[6,"PayType",670],[5,"ContractId",671],[5,"Locked",607],[10,"Future",672],[5,"Box",673],[5,"Pin",674],[10,"IRawDatabase",656],[10,"Debug",650],[5,"LockedBuilder",607],[5,"ParseIntError",675],[8,"CliResult",0],[8,"CliOutputResult",0],[15,"EpochCount",383],[15,"DecodeInviteCode",383],[15,"VersionHash",383],[15,"InviteCode",383],[15,"JoinFederation",383],[15,"WaitBlockCount",383],[15,"DecodeTransaction",383],[15,"UntypedApiOutput",383],[15,"JoinFederation",392],[15,"InviteCode",392],[15,"Completion",392],[15,"InviteCode",395],[15,"Notes",395],[15,"WaitBlockCount",397],[15,"Decode",397],[15,"Encode",397],[15,"DecodeTransaction",397],[15,"ConfigDecrypt",397],[15,"ConfigEncrypt",397],[15,"Api",397],[15,"SetConfigGenConnections",413],[15,"SetConfigGenParams",413],[15,"InviteCode",417],[15,"Notes",417],[15,"Withdraw",575],[15,"Spend",575],[15,"LnInvoice",575],[15,"LnPay",575],[15,"Module",575],[15,"Restore",575],[15,"ListOperations",575],[15,"Backup",575],[15,"ListGateways",575],[15,"Reissue",575],[15,"Validate",575],[15,"Split",575],[15,"Combine",575],[15,"AwaitInvoice",575],[15,"AwaitLnPay",575],[15,"AwaitDeposit",575],[15,"DepositAddress",575]],"b":[[163,"impl-Debug-for-CliError"],[164,"impl-Display-for-CliError"]]}],\
["fedimint_client",{"doc":"Client library for fedimintd","t":"GIFFFFIFFFGFPPPKIIFIPPSPFNMNNNOOOMNNOONNONNNNCNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNMNOMNHONNNNNNNNNONNNCNOONOMNNNONNNNENNNNNNNCONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNHNNNNNNNNNNNNNNNNONOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNCNOONCOMNOOOONNNNONNNOCOOOONOOOONNNNONNOCNNNNNCQNNNNOOHHNONNNNNNONNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNFFFTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNFFPFFPFFPFFPPPPPFFIFFFFFPPPGFPFFPPPPGGGPFFFFFFPPFPPPPHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHONNNOONNOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOSHPGPFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNMNHONNNNNNNNNNNNNNNONNNNNNNNNNONHOONONNNNNNNNNNNNNNNNNNNNNNOONNNNNMNNRFFFKIRFFKRRIROONNNOMNMNNMNNNNNNNNNNNNOOONNNNNNNMMMNMNOMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMNNCOOMMNNNNNNNNNNNNNNNNNNNNNNNNONOOMMNOOCNNOMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNKFIFFKRNNOONNOONNMNNNNNNNNNNOONNNNOONNOONNOOMNNNOONNNNNNMNNMMONNNNNNNNOONNOOMNNOONNOONONOOMNNCMMNONNNNNNNNNNNNNNRKFNNNNNNNMNNONNNNNNMNNNNNNNNNNMMMNONOMMNNNNNNPFKKGPFMNNNNNNNMNNNNNNNONNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNOOFFPPGNNNNNNNHNNNNNONNNNNNNNNNNNNNNNNNNNNONNONNONNNNNNNNNNNNNNNNNKRFKSSNNMNMNMMNNHNNMNMNNNNNFFFFKFFFFKFFFRFFFFKFOMOOMOOOOCOMMCOOOOOOOOOCMMOOOOCOOOOMMOCOFNNONNNNONNNNNNPFFGFFFFFPIFFGFPFFFFFFFPSFNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONOOOOOOOOOOOONNOOONOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOFFFONNNNNNOONNNNOONNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNKFFKKRFKFIIOMMNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONMMNNOOOONNNNNOMMNNONNNNNNNNNNNNNNNNKRMPFFPSPPSFFGCOOOOOCOOHPFFPFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNONOOHOONNNNNNNNNNNNNNNNNNNNNNNPPSPSPSFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNN","n":["AddStateMachinesError","AddStateMachinesResult","AdminCreds","Client","ClientBuilder","ClientHandle","ClientHandleArc","ClientModuleInstance","ClientStrong","ClientWeak","DiscoverCommonApiVersionMode","DynGlobalClientContext","Err","Fast","Full","IGlobalClientContext","InstancelessDynClientInput","InstancelessDynClientOutput","ModuleGlobalClientContext","ModuleGlobalContextGen","Ok","Other","SUPPORTED_CORE_API_VERSIONS","StateAlreadyExists","TransactionUpdates","add_state_machine","add_state_machine_dyn","add_state_machine_dyn","add_state_machines","admin_api_from_id","admin_creds","alloc","alloc","api","api","api","api","api","api_clone","as_inner","auth","await_primary_module_output","await_primary_module_outputs","await_tx_accepted","await_tx_accepted","backup","backup_to_federation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_up_state","build","build_stopped","builder","channel_penalty_msat","claim_input","claim_input_dyn","claim_input_dyn","client","client_config","client_config","client_decoders","client_recovery_progress_receiver","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","config","config_decoded","context_gen","create_backup","db","db","db","db","db_no_decoders","db_no_decoders","decoders","decoders","decoders","decoders","decoders","deref","deref","deref","deref","derivable_secret","discover_common_api_version","discover_common_api_version_static","downgrade","download_backup_from_federation","download_backup_from_federation","download_backup_from_federation_static","drop","envs","executor","federation_id","federation_id","federation_meta","federation_root_secret","finalize_and_submit_transaction","finalize_and_submit_transaction_inner","finalize_transaction","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_existing","from_ref","from_ref","from_ref","from_ref","fund_output","fund_output_dyn","fund_output_dyn","get_active_operations","get_backup_id","get_backup_id_static","get_balance","get_config","get_config_from_db","get_config_json","get_decoded_client_secret","get_decoded_client_secret","get_derived_backup_encryption_key","get_derived_backup_encryption_key_static","get_derived_backup_signing_key","get_derived_backup_signing_key_static","get_first_instance","get_first_module","get_internal_payment_markers","get_meta","get_metadata","get_module","get_module_client_dyn","get_mut","has_active_states","has_module","has_pending_recoveries","id","init","inner","inner","inner","inner","input","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_initialized","join","keys","load_and_refresh_common_api_version_static","load_decodable_client_secret","load_decodable_client_secret_opt","load_existing_config","load_init_state","load_or_generate_client_secret","load_previous_backup","meta","meta_service","meta_service","meta_service","migrate_database","module","module","module_api","module_api","module_inits","module_inits","module_instance_id","modules","new","new","new_fake","open","operation","operation_exists","operation_exists_dbtx","operation_log","operation_log","oplog","output","peer_id","phantom","phantom","primary_module","primary_module_instance","primary_module_instance","ptr","ptr","recover","refresh_common_api_version_static","restart","root_secret","root_secret","root_secret_encoding","run_module_recoveries_task","secp_ctx","secret","set_admin_creds","set_metadata","set_metadata_dbtx","shutdown","shutdown_inner","sm","sm_enum_variant_translation","source","spawn_module_recoveries_task","start_executor","start_executor","state_machines","state_machines","states_add_instance","states_to_instanceless_dyn","stopped","stopped","store_encodable_client_secret","store_last_backup","subscribe_balance_changes","subscribe_to_recovery_progress","supported_api_versions_summary_static","task_group","task_group","to_owned","to_owned","to_owned","to_owned","to_string","transaction","transaction_builder_balance","transaction_update_stream","transaction_update_stream","transaction_update_stream","transaction_updates","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_module","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_stream","upgrade","upload_backup","validate_backup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_all_active_state_machines","wait_for_all_recoveries","wait_for_module_kind_recovery","with_meta_service","with_module","with_module_inits","with_primary_module","ClientBackup","EncryptedClientBackup","Metadata","PADDING_ALIGNMENT","PER_MODULE_SIZE_LIMIT_BYTES","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","decrypt_with","deserialize","do_erased_serialize","empty","encrypt_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_bytes","from_bytes","from_json_serialized","from_raw","from_ref","from_ref","from_ref","get_alignment_size","into","into","into","into_backup_request","into_raw","into_request","into_request","into_request","is_empty","is_empty","len","metadata","modules","serialize","session_count","to_bytes","to_bytes","to_json_deserialized","to_json_value","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_and_fallback_module_backups","vzip","vzip","vzip","CachedApiVersionSet","CachedApiVersionSetKey","ChronologicalOperationLog","ChronologicalOperationLogKey","ChronologicalOperationLogKeyPrefix","ClientConfig","ClientConfigKey","ClientConfigKeyPrefix","ClientInitState","ClientInitStateKey","ClientInitStatePrefix","ClientInviteCode","ClientLastBackup","ClientMetaField","ClientMetaServiceInfo","ClientMetadata","ClientMetadataKey","ClientMetadataPrefix","ClientMigrationFn","ClientModuleRecovery","ClientModuleRecoveryPrefix","ClientModuleRecoveryState","ClientRecoverySnapshot","ClientRecoverySnapshotPrefix","ClientSecret","CommonApiVersionCache","Complete","DbKeyPrefix","DbKeyPrefixIter","EncodedClientSecret","EncodedClientSecretKey","EncodedClientSecretKeyPrefix","ExternalReservedEnd","ExternalReservedStart","Fresh","Fresh","InitMode","InitModeComplete","InitState","InternalReservedStart","LastBackupKey","MetaFieldKey","MetaFieldPrefix","MetaFieldValue","MetaServiceInfo","MetaServiceInfoKey","ModuleGlobalPrefix","OperationLog","OperationLogKey","Pending","Recover","Recover","UserData","apply_migrations_client","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","creation_time","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","does_require_recovery","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_active_states","get_inactive_states","id","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_complete","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_done","is_pending","iter","last_updated","len","marker","migrate_state","module_instance_id","next","next_back","nth","operation_id","operation_id","partial_cmp","partial_cmp","progress","remove_old_and_persist_new_active_states","remove_old_and_persist_new_inactive_states","revision","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","snapshot","FM_DISCOVER_API_VERSION_TIMEOUT_ENV","get_discover_api_version_timeout","Background","FetchKind","Initial","LegacyMetaSource","MetaService","MetaSource","MetaValue","MetaValues","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_revision","default","eq","equivalent","equivalent","equivalent","equivalent","fetch","fetch","fetch_meta_overrides","fetch_time","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_field","get_field_from_db","initial_fetch_waiter","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","meta_update_notify","new","parse_meta_value_static","reqwest","revision","save_meta_values","source","subscribe_to_field","subscribe_to_updates","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_continuously","value","values","vzip","vzip","vzip","vzip","vzip","wait_for_update","wait_for_update","wait_initialization","Backup","ClientContext","ClientContextSelfRef","ClientDbTxContext","ClientModule","ClientModuleRegistry","Common","DynClientModule","FinalClient","IClientModule","Init","ModuleStateMachineContext","StateGenerator","States","_marker","_marker","add_operation_log_entry","add_state_machines","add_state_machines_dbtx","alloc","as_any","as_ref","await_primary_module_output","await_primary_module_output","await_primary_module_outputs","backup","backup","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_penalty_msat","client","client","client","client_ctx","clone","clone","clone","clone_into","clone_into","clone_into","context","context","create_exact_output","create_exact_output","create_sufficient_input","create_sufficient_input","dbtx","decoder","decoder","decoders","decoders","default","deref","deref","finalize_and_submit_transaction","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","get","get_balance","get_balance","get_config","get_internal_payment_markers","get_invite_code","get_mut","get_operation","get_own_active_states","global_api","global_db","handle_cli_command","handle_cli_command","has_active_states","init","inner","inner","input_amount","input_amount","input_from_dyn","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","kind","leave","make_client_input","make_client_output","make_dyn","make_dyn_input","make_dyn_output","make_dyn_state","manual_operation_start","map_dyn","module_autocommit","module_autocommit_2","module_db","module_db","module_dbtx","module_instance_id","module_instance_id","output_amount","output_amount","output_from_dyn","phantom","ptr","recovery","self_ref","set","state","subscribe_balance_changes","subscribe_balance_changes","supports_backup","supports_backup","supports_being_primary","supports_being_primary","to_owned","to_owned","to_owned","transaction_updates","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ClientModuleInit","ClientModuleInitArgs","ClientModuleInitRegistry","ClientModuleRecoverArgs","DynClientModuleInit","IClientModuleInit","Module","admin_auth","admin_auth","admin_auth","admin_auth","api","api","api","api","api_version","api_version","as_common","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","cfg","cfg","cfg","clone","clone_into","context","context","context","context","core_api_version","core_api_version","core_api_version","core_api_version","db","db","db","db","decoder","deref","federation_id","federation_id","federation_id","federation_id","fmt","from","from","from","from","from_ref","get_database_migrations","get_database_migrations","get_mut","init","init","inner","into","into","into","into_request","into_request","into_request","module_api","module_api","module_api","module_api","module_api_version","module_api_version","module_api_version","module_api_version","module_kind","module_root_secret","module_root_secret","module_root_secret","module_root_secret","notifier","notifier","notifier","notifier","num_peers","num_peers","peer_num","peer_num","progress_tx","recover","recover","recover_from_history","recovery","supported_api_versions","supported_api_versions","task_group","task_group","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_recovery_progress","vzip","vzip","vzip","Init","RecoveryFromHistory","RecoveryFromHistoryCommon","borrow","borrow_mut","clone","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","delete_dbtx","deserialize","do_erased_serialize","end_session","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","finalize_dbtx","fmt","from","from_bytes","from_ref","handle_input","handle_output","handle_session","handle_transaction","into","into_request","load_dbtx","load_finalized","new","new","next_session","serialize","start_session","store_dbtx","store_finalized","to_bytes","to_owned","try_from","try_into","type_id","vzip","Default","DynModuleBackup","IModuleBackup","ModuleBackup","NoModuleBackup","NoModuleBackup","RecoveryProgress","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","complete","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_ref","from_ref","from_ref","from_typed","inner","into","into","into","into_dyn","into_request","into_request","into_request","is_done","is_none","module_instance_id","module_instance_id","none","to_bytes","to_bytes","to_bytes","to_complete","to_owned","to_owned","to_owned","to_string","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","bytes","variant","OperationLog","OperationLogEntry","Outcome","UpdateStream","UpdateStreamOrOutcome","add_operation_log_entry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","caching_operation_update_stream","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","db","deserialize","do_erased_serialize","erased_serialize","fmt","fmt","from","from","from","from_bytes","from_ref","get_operation","get_operation_inner","into","into","into","into_request","into_request","into_request","into_stream","list_operations","meta","meta","new","operation_module_kind","operation_module_kind","optimistically_set_operation_outcome","outcome","outcome","outcome_or_updates","serialize","set_operation_outcome","to_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DeriveableSecretClientExt","Encoding","PlainRootSecretStrategy","RootSecretStrategy","TYPE_BACKUP","TYPE_MODULE","borrow","borrow_mut","consensus_decode","consensus_decode","consensus_encode","consensus_encode","derive_backup_secret","derive_module_secret","fmt","from","get_default_client_secret","into","into_request","random","random","to_root_secret","to_root_secret","try_from","try_into","type_id","vzip","ActiveStateKeyBytes","ActiveStateKeyPrefix","ActiveStateMeta","ClientSMDatabaseTransaction","Context","DynContext","DynState","Executor","ExecutorBuilder","IState","InactiveStateKeyBytes","InactiveStateKeyPrefix","InactiveStateMeta","ModuleContext","ModuleNotifier","Notifier","NotifierSender","OperationState","State","StateTransition","_pd","as_any","broadcast","broadcast","clone","created_at","created_at","db","db","dbtx","dbtx","erased_eq_no_instance_id","erased_hash_no_instance_id","executor","exited_at","inner","inner","module_contexts","module_instance","module_instance","module_instance_id","module_instance_id","module_instance_id","notifier","operation_id","operation_id","operation_id","operation_id","operation_id","sender","state","state","state","state","transition","transitions","transitions","trigger","util","valid_module_ids","ClientSMDatabaseTransaction","borrow","borrow_mut","dbtx","from","global_tx","into","into_request","module_instance","module_tx","new","try_from","try_into","type_id","vzip","Active","ActiveModuleOperationStateKeyPrefix","ActiveOperationStateKeyPrefix","ActiveOrInactiveState","ActiveStateKey","ActiveStateKeyBytes","ActiveStateKeyPrefix","ActiveStateKeyPrefixBytes","ActiveStateMeta","ActiveStates","ContextGen","Executor","ExecutorBuilder","ExecutorDbPrefixes","ExecutorInner","Inactive","InactiveModuleOperationStateKeyPrefix","InactiveOperationStateKeyPrefix","InactiveStateKey","InactiveStateKeyBytes","InactiveStateKeyPrefix","InactiveStateKeyPrefixBytes","InactiveStateMeta","InactiveStates","MAX_DB_ATTEMPTS","TransitionForActiveState","add_state_machines","add_state_machines_dbtx","alloc","await_active_state","await_inactive_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","client_task_group","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contains_active_state","contains_inactive_state","context","created_at","created_at","db","default","default","drop","exited_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_state","from_state","get_active_state","get_active_states","get_active_states","get_inactive_states","get_transition_for","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inactive","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_active","meta","module_contexts","module_contexts","module_instance","module_instance","module_instance_id","module_instance_id","notifier","notifier","operation_id","operation_id","operation_id","operation_id","operation_id","operation_id","operation_id","operation_id","outcome","phantom","ptr","run","run_state_machines_executor_inner","shutdown_executor","sm_update_rx","sm_update_tx","start_executor","state","state","state","state","state","stop_executor","stop_executor","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_fn","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_module_ids","valid_module_ids","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module_dyn","with_valid_module_id","dyn_state","dyn_state","meta","ModuleNotifier","Notifier","NotifierSender","_pd","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","clone","clone","clone_into","clone_into","db","db","fmt","from","from","from","from_ref","from_ref","into","into","into","into_request","into_request","into_request","module_instance","module_notifier","new","notify","notify","sender","sender","subscribe","subscribe_all_operations","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Context","DynContext","DynState","IContext","IState","ModuleContext","OperationState","State","StateTransition","StateTransitionFunction","TriggerFuture","alloc","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_typed","from_typed","hash","hash","inner","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","is_terminal","module_instance_id","module_instance_id","module_instance_id","new","operation_id","operation_id","operation_id","operation_id","operation_id","phantom","ptr","state","to_bytes","to_bytes","to_owned","to_owned","to_owned","transition","transitions","transitions","transitions","transitions","trigger","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","MapStateTransitions","State","map","Accepted","ClientInput","ClientOutput","Created","LOG_TARGET","NonRetryableError","Rejected","TRANSACTION_SUBMISSION_MODULE_INSTANCE","TransactionBuilder","TxSubmissionContext","TxSubmissionStates","builder","input","inputs","keys","output","outputs","sm","state_machines","state_machines","tx_submission_sm_decoder","Balanced","ClientInput","ClientOutput","Overfunded","TransactionBuilder","TransactionBuilderBalance","Underfunded","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from_ref","from_ref","from_ref","input","inputs","into","into","into","into","into_dyn","into_dyn","into_request","into_request","into_request","into_request","keys","new","output","outputs","state_gen_to_dyn","state_machines","state_machines","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_input","with_inputs","with_output","with_outputs","Accepted","Created","LOG_TARGET","NonRetryableError","RETRY_INTERVAL","Rejected","TRANSACTION_SUBMISSION_MODULE_INSTANCE","TxSubmissionContext","TxSubmissionStates","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","from","from","from_bytes","from_ref","from_ref","hash","into","into","into_dyn","into_dyn","into_request","into_request","operation_id","operation_id","to_bytes","to_owned","to_owned","transitions","transitions","trigger_created_accepted","trigger_created_rejected","try_from","try_from","try_into","try_into","tx_submission_sm_decoder","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_client"],[361,"fedimint_client::backup"],[448,"fedimint_client::db"],[1042,"fedimint_client::db::InitMode"],[1043,"fedimint_client::envs"],[1045,"fedimint_client::meta"],[1147,"fedimint_client::module"],[1307,"fedimint_client::module::init"],[1419,"fedimint_client::module::init::recovery"],[1465,"fedimint_client::module::recovery"],[1561,"fedimint_client::module::recovery::NoModuleBackup"],[1563,"fedimint_client::oplog"],[1627,"fedimint_client::secret"],[1654,"fedimint_client::sm"],[1714,"fedimint_client::sm::dbtx"],[1729,"fedimint_client::sm::executor"],[2108,"fedimint_client::sm::executor::ActiveOrInactiveState"],[2111,"fedimint_client::sm::notifier"],[2164,"fedimint_client::sm::state"],[2286,"fedimint_client::sm::util"],[2289,"fedimint_client::transaction"],[2310,"fedimint_client::transaction::builder"],[2388,"fedimint_client::transaction::sm"],[2450,"fedimint_core::task"],[2451,"fedimint_core::task"],[2452,"core::future::future"],[2453,"core::pin"],[2454,"fedimint_core::db"],[2455,"alloc::vec"],[2456,"fedimint_core"],[2457,"fedimint_core::config"],[2458,"fedimint_core::api"],[2459,"anyhow"],[2460,"fedimint_core::api"],[2461,"fedimint_core::core"],[2462,"fedimint_core"],[2463,"core::result"],[2464,"fedimint_derive_secret"],[2465,"fedimint_core::db"],[2466,"lightning::routing::scoring"],[2467,"fedimint_core::core"],[2468,"fedimint_core::core"],[2469,"fedimint_core::encoding"],[2470,"core::option"],[2471,"fedimint_core::api"],[2472,"core::ops::function"],[2473,"core::clone"],[2474,"fedimint_core::transaction"],[2475,"core::ops::range"],[2476,"core::fmt"],[2477,"core::fmt"],[2478,"secp256k1::key"],[2479,"fedimint_core::config"],[2480,"secp256k1::key"],[2481,"fedimint_core::task"],[2482,"tokio::sync::watch"],[2483,"tokio::sync::watch"],[2484,"fedimint_core::encoding"],[2485,"futures_core::stream"],[2486,"fedimint_core::module::version"],[2487,"core::any"],[2488,"std::io"],[2489,"std::io::error"],[2490,"std::io"],[2491,"erased_serde::ser"],[2492,"erased_serde::ser"],[2493,"fedimint_core::core"],[2494,"serde::ser"],[2495,"fedimint_core::db"],[2496,"core::time"],[2497,"core::marker"],[2498,"reqwest::async_impl::client"],[2499,"core::fmt"],[2500,"fedimint_core::core"],[2501,"fedimint_core::module"],[2502,"fedimint_core::db"],[2503,"core::ops::function"],[2504,"rand_core"],[2505,"tokio::sync::mpsc::unbounded"],[2506,"core::hash"],[2507,"secp256k1::context"],[2508,"secp256k1::context"]],"d":["","","Admin (guardian) identification and authentication","Main client type","Used to configure, assemble and build <code>Client</code>","User handle to <code>Client</code>","","Resources particular to a module instance","Internal self-reference to <code>Client</code>","Like <code>ClientStrong</code> but using a <code>Weak</code> handle to <code>Client</code>","","Global state and functionality provided to all state …","Contains the error value","Get the response from only a few peers, or until a timeout","Try to get a response from all peers, or until a timeout","","","","Global state given to a specific client module and state. …","","Contains the success value","","List of core api versions supported by the implementation. …","","See <code>Client::transaction_updates</code>","Allows adding state machines from inside a transition to …","Adds a state machine to the executor.","","","","","","","Returns a reference to the client’s federation API …","","","Module-specific API","","","","Authentication details","Waits for an output from the primary module to reach its …","Waits for outputs from the primary module to reach its …","Waits for the transaction to be accepted or rejected as …","","Client backup","Prepare an encrypted backup and send it to federation for …","","","","","","","","","","","","","","","","","","","","","","","","","Not sure why I couldn’t just directly call <code>Box::new</code> ins …","Build a <code>Client</code> but do not start the executor","Build a <code>Client</code> but do not start the executor","Initialize a client builder that can be configured to …","","Creates a transaction that with an output of the primary …","This function is mostly meant for internal use, you are …","","","","","","Updates about client recovery progress","","","","","","","","","","","","","Create a backup, include provided <code>metadata</code>","Database keys used by the client","","Module-specific DB","","","","","","","","","","","","","","","Query the federation for API version support and then …","","","Download most recent valid backup found from the Federation","Download most recent valid backup found from the Federation","","Environment variables","","","","","Re-derive client’s root_secret using the federation ID. …","Add funding and/or change to the transaction builder as …","","Adds funding to a transaction or removes over-funding via …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a transaction with the supplied output and funding …","This function is mostly meant for internal use, you are …","","","Backup id derived from the root secret key (public key …","","Balance available to the client for spending","Returns the config with which the client was initialized.","","Returns the config of the client in JSON format.","Fetches the encoded client secret from the database and …","","","Static version of <code>Self::get_derived_backup_encryption_key</code> …","","Static version of <code>Self::get_derived_backup_signing_key</code> for …","Returns the instance id of the first module of the given …","Returns a reference to a typed module client instance by …","","","Get the client <code>Metadata</code>","Returns a reference to the module, panics if not found","","","","","","Instance id of the module","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Join a new Federation","","Load the common api versions to use from cache and start a …","","","","","","","Management of meta fields","Get the meta manager to read meta fields.","","","","Module client interface definitions","","Returned a reference client’s module API client, so that …","","","","","","","Create","","","","","","","","Operation log subsystem of the client","","Guardian’s own <code>peer_id</code>","","","Get the primary module","","","","","Join a (possibly) previous joined Federation","","Restart the client","","","Returns the data from which the client’s root secret is …","","","Secret handling &amp; derivation","","Set the client <code>Metadata</code>","Set the client <code>Metadata</code>","Shutdown the client.","","Client state machine interfaces and executor implementation","","","","","","","","","","","","","","Returns a stream that yields the current client balance …","Subscribe to recover progress for all the modules.","<code>SupportedApiVersionsSummary</code> that the client and its …","Get the <code>TaskGroup</code> that is tied to Client’s lifetime.","","","","","","","Structs and interfaces to construct Fedimint transactions","Determines if a transaction is underfunded, overfunded or …","","","","Returns a stream of transaction updates for the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upload <code>backup</code> to federation","Validate backup before sending it to federation","","","","","","","","","","","","","","Wait for all module recoveries to finish","","","Make module generator available when reading the config","Replace module generator registry entirely","Uses this module with the given instance id as the primary …","Client state backup","Encrypted version of <code>ClientBackup</code>.","Backup metadata","","“32kiB is enough for any module backup” –dpc","","","","","","","","","","","","","","","","","","","","","","Create empty metadata","Encrypt with a key and turn into <code>EncryptedClientBackup</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create metadata as json from typed <code>val</code>","","","","","Align an ecoded message size up for better privacy","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Is metadata empty","","","Application metadata","Module specific-backup (if supported)","","Session count taken right before taking the backup used to …","","","Attempt to deserialize metadata as typed json","Attempt to deserialize metadata as untyped json (…","","","","","","","","","","","","","Validate and fallback invalid parts of the backup","","","","","","","Key used to lookup operation log entries in chronological …","","","","","","Does the client modules need to run recovery before being …","","","","","","","Client metadata that will be stored/restored on …","","<code>ClientMigrationFn</code> is a function that modules can implement …","","","","","","","","Client initialization was complete","","An iterator over the variants of DbKeyPrefix","","","","Prefixes between 0xb1..=0xcf shall all be considered …","Prefixes between 0xb1..=0xcf shall all be considered …","Should only be used with freshly generated root secret","","Client initialization mode","Like <code>InitMode</code>, but without no longer required data.","The state of the client initialization","0xd0.. reserved for Fedimint internal use","Last valid backup the client attempted to make","","","","","","Per-module instance data","","","Client data initialization might still require some work …","Should be used with root secrets provided by the user to …","","Arbitrary data of the applications integrating Fedimint …","<code>apply_migrations_client</code> iterates from the on disk database …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reads all active states from the database and returns …","Reads all inactive states from the database and returns …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Migrates a particular state by looping over all active and …","","","","","","","","","","Persists new active states by first removing all current …","Persists new inactive states by first removing all current …eta source can retry infinitely.","","Meta source should return fast, retry less. This blocks …","Legacy non-meta module config source uses client config …","Service for managing the caching of meta fields.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the value for the meta field.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Tries to parse <code>str_value</code> as JSON. In the special case that …","","","","","NOTE: this subscription never ends even after update task …","NOTE: this subscription never ends even after update task …","","","","","","","","","","","","","","","","","","","","Update all source in background.","","","","","","","","Wait for next change in this source.","","Wait until Meta Service is initialized, after this …","Data stored in regular backups so that restoring doesn’t …","A Client context for a <code>ClientModule</code> <code>M</code>","A reference back to itself that the module cacn get from …","A context of a database transaction started with …","Fedimint module client","","Common module types shared between client and server","","A final, fully initialized <code>crate::Client</code>","Type-erased version of <code>ClientModule</code>","","Data and API clients available to state machine …","","All possible states this client can submit to the executor","","","","","","","","","","Waits for the funds from an output created by …","See <code>crate::Client::await_primary_module_outputs</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an output of <strong>exactly</strong> <code>amount</code> that will pay into the …","","Creates an input of <strong>at least</strong> a given <code>min_amount</code> from the …","","","","","","","","","See <code>crate::Client::finalize_and_submit_transaction</code>","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Get a temporary <code>ClientStrong</code>","","Returns the balance held by this module and available for …","","","Returns an invite code for the federation that points to …","","","","Get a reference to a global Api handle","","","","","","","","Returns the amount represented by the input and the fee …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Leave the federation","Turn a typed <code>ClientInput</code> into a dyn version","Turn a typed <code>ClientOutput</code> into a dyn version","Turn a <code>typed</code> into a dyn version","Turn a typed input into a dyn version","Turn a typed output into a dyn version","","This method starts n state machines with given operation …","","An <code>Database::autocommit</code> on module’s own database …","","","","Get a reference to <code>DatabaseTransaction</code> isolated database …","","","Returns the amount represented by the output and the fee …","","","","","","Get a reference back to client module from the <code>Self</code>","","","","Returns a stream that will output the updated module …","","","","Does this module support being a primary module","","","","See <code>crate::Client::transaction_updates</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>ClientContext</code> for later use","Get the <code>ClientContext</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Retrieves the database migrations from the module to be …","","Initialize a <code>ClientModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Recover the state of the client module, optionally from an …","Run recover of a module from federation consensus history","","Api versions of the corresponding server side module’s …","See <code>ClientModuleInit::supported_api_versions</code>","","","","","","","","","","","","","","","","","<code>ClientModuleInit</code> of this recovery logic.","Module specific logic for …","Common state tracked during recovery from history","","","","","","","","Delete the recovery state from the database","","","","","","","","","","Finalize the recovery converting the tracked state to final","","Returns the argument unchanged.","","","Handle transaction input, adjusting the current state","Handle transaction output, adjusting the current state","Handle session outcome, adjusting the current state","Handle session outcome, adjusting the current state","Calls <code>U::from(self)</code>.","","Try to load the existing state previously stored with …","Read the finalization status","New empty state to start recovery from","","","","","Store the current recovery state in the database","Store finalization status","","","","","","","","","","","A backup type for modules without a backup implementation. …","","Progress of the recovery","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents an operation triggered by a user, typically …","","","Either a stream of operation updates if the operation hasn…","","","","","","","","Wraps an operation update stream such that the last update …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a stream no matter if the operation is finished. …","Returns the last <code>limit</code> operations. To fetch the next page, …","Returns the meta data of the operation. This is a JSON …","","","Returns the kind of the module that generated the operation","","Tries to set the outcome of an operation, but only logs an …","Returns the last state update of the operation, if any was …","","Returns an a <code>UpdateStreamOrOutcome</code> enum that can be …","","Sets the outcome of an operation","","","","","","","","","","","","","","","","Type representing the secret","Just uses 64 random bytes and derives the secret from them","Trait defining a way to generate, serialize and …","","","","","Deserialization function for the external encoding","","Serialization function for the external encoding","","","","","Returns the argument unchanged.","Convenience function to derive fedimint-client root secret …","Calls <code>U::from(self)</code>.","","Random generation function for the external secret type","","Conversion function from the external encoding to the …","","","","","","","","","A transaction that acts as isolated for module code but …","Additional data made available to state machines of a …","A shared context for a module client state machine","A type-erased state of a state machine belonging to a …","Executor that drives forward state machines under its …","Builder to which module clients can be attached and used …","Object-safe version of <code>State</code>","","","","Additional resources made available in this module’s …","State transition notifier for a specific module instance …","State transition notifier owned by the modularized client …","Notifier send handle that can be shared to places where we …","","Implementors act as state machines that can be executed","Represents one or multiple possible state transitions …","<code>S</code> limits the type of state that can be subscribed to the …","","Broadcast channel used to send state transitions to all …","","Clone state","","","Database used to load all states that happened before …","Database used to load all states that happened before …","","","","","","","","","","","","","","","Helper to notify modules about state transitions","Operation this state machine belongs to. See <code>OperationId</code> …","Operation this state machine belongs to. See <code>OperationId</code> …","","","","","State machine state interface","","","","State transition function that, using the output of the …","All possible transitions from the current state to other …","All possible transitions from the state","Future that will block until a state transition is …","","","A transaction that acts as isolated for module code but …","","","","Returns the argument unchanged.","Returns the non-isolated database transaction only …","Calls <code>U::from(self)</code>.","","","Returns the isolated database transaction for the module.","","","","","","","","","","A state that is able to make progress eventually","","","","","See <code>ActiveStateKey</code>","","Executor that drives forward state machines under its …","Builder to which module clients can be attached and used …","Prefixes for executor DB entries","","","","","A past or final state of a state machine","","","","","See <code>InactiveStateKey</code>","After how many attempts a DB transaction is aborted with …","","Adds a number of state machines to the executor …","Adds a number of state machines to the executor atomically …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build <code>Executor</code> and spawn background task in <code>tasks</code> …","Creates an <code>ExecutorBuilder</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Mostly used for testing</strong>","<strong>Mostly used for testing</strong>","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the <code>Notifier</code> that can be used to …","","","","","","","","","","","","","","","","","Any time executor should notice state machine update (e.g. …","Starts the background thread that runs the state machines. …","","","","","","See <code>Executor::stop_executor</code>.","Stops the background task that runs the state machines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow executor being built to run state machines …","Allow executor being built to run state machines …","Allow executor to build state machines associated with the …","","","","State transition notifier for a specific module instance …","State transition notifier owned by the modularized client …","Notifier send handle that can be shared to places where we …","<code>S</code> limits the type of state that can be subscribed to the …","","","","","","","Broadcast channel used to send state transitions to all …","","","","","","Database used to load all states that happened before …","Database used to load all states that happened before …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new notifier for a specific module instance that …","","Notify all subscribers of a state transition","Notify all subscribers of a state transition","Create a <code>NotifierSender</code> handle that lets the owner trigger …","","Subscribe to state transitions belonging to an operation …","Subscribe to all state transitions belonging to the module …","","","","","","","","","","","","","","","Additional data made available to state machines of a …","A shared context for a module client state machine","A type-erased state of a state machine belonging to a …","Something that can be a <code>DynContext</code> for a state machine","Object-safe version of <code>State</code>","Additional resources made available in this module’s …","","Implementors act as state machines that can be executed","Represents one or multiple possible state transitions …","","","","","","","","","","","","","","","Clone state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","<code>true</code> if this state allows no further transitions","","","","Creates a new <code>StateTransition</code> where the <code>trigger</code> future …","Operation this state machine belongs to. See <code>OperationId</code> …","Operation this state machine belongs to. See <code>OperationId</code> …","","","","","","","","","","","","State transition function that, using the output of the …","All possible transitions from the current state to other …","All possible transitions from the state","","","Future that will block until a state transition is …","","","","","","","","","","","","","","","","","","","","The transaction has been accepted in consensus","","","The transaction has been created and potentially already …","","","The transaction has been rejected by a quorum on submission","Reserved module instance id used for client-internal state …","","","State machine to (re-)submit a transaction until it is …","","","","","","","State machine for submitting transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction has been accepted in consensus","The transaction has been created and potentially already …","","","","The transaction has been rejected by a quorum on submission","Reserved module instance id used for client-internal state …","","State machine to (re-)submit a transaction until it is …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,62,62,0,0,0,0,0,3,74,0,74,0,1,7,12,13,33,33,255,54,7,13,12,56,13,13,22,100,13,13,27,1,0,13,62,56,13,27,100,33,74,1,12,22,51,52,62,56,13,27,100,33,74,1,12,22,51,52,0,33,33,13,56,1,7,12,12,7,12,0,13,1,12,51,52,1,12,51,52,13,13,33,13,13,0,13,56,13,33,33,7,13,33,12,13,56,1,22,51,0,13,13,22,13,33,13,22,0,13,13,13,13,33,13,13,13,13,74,74,1,12,22,51,52,62,56,13,27,100,33,74,74,1,1,1,12,22,51,52,33,1,12,51,52,1,7,12,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,1,13,13,13,56,33,1,22,51,52,43,62,56,13,27,100,33,74,1,12,22,51,52,62,56,13,27,100,33,74,1,12,22,51,52,13,33,43,13,13,13,33,33,13,13,0,13,13,33,33,0,56,7,12,13,33,12,13,33,22,1,33,12,13,13,13,13,0,78,100,255,54,13,13,33,255,54,33,13,22,13,13,13,13,13,0,33,13,13,22,22,0,0,74,13,13,22,43,78,0,0,33,33,13,13,13,13,13,13,13,1,12,51,52,74,0,13,7,13,12,13,62,56,13,27,100,33,74,1,12,22,51,52,13,62,56,13,27,100,33,74,1,12,22,51,52,62,56,13,27,100,33,74,1,12,22,51,52,27,52,13,13,62,56,13,27,100,33,74,1,12,22,51,52,13,13,13,33,33,33,33,0,0,0,55,55,32,55,111,32,55,111,32,55,111,32,55,111,55,32,32,55,32,55,111,32,32,32,55,32,55,32,32,32,32,55,55,55,55,32,32,55,32,55,111,32,55,32,32,32,55,111,55,32,55,111,111,32,32,55,111,32,111,111,55,55,32,55,32,55,32,32,32,55,111,32,55,111,32,55,111,32,55,111,55,32,55,111,0,0,131,0,0,131,0,0,131,0,0,131,131,131,131,131,0,0,0,0,0,0,0,0,131,131,89,0,0,131,0,0,131,131,86,147,0,0,0,131,0,0,0,0,0,0,131,131,0,89,86,147,131,0,132,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,131,132,133,134,135,136,137,131,132,133,134,135,136,137,135,136,135,136,139,140,141,133,142,143,144,145,146,86,147,89,148,149,150,134,151,135,136,137,152,153,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,133,141,133,144,145,146,148,149,150,89,135,136,135,135,135,135,136,136,136,136,141,133,144,145,146,148,149,150,131,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,139,139,140,141,141,133,133,142,142,143,144,144,145,145,146,146,86,147,89,148,148,149,150,150,134,151,151,135,135,136,137,152,152,153,131,132,133,134,135,136,137,132,0,0,144,132,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,89,132,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,134,89,131,153,132,132,0,150,132,132,132,141,133,135,136,134,0,0,153,141,133,144,145,146,148,149,150,132,139,139,140,140,141,141,133,133,154,142,142,143,144,144,155,145,145,156,146,146,157,86,147,89,148,148,149,149,150,150,158,134,151,151,135,135,136,136,137,152,152,153,131,132,133,134,135,136,137,131,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,131,132,139,140,141,133,154,142,143,144,155,145,156,146,157,86,147,89,148,149,150,158,134,151,135,136,137,152,153,256,0,0,161,0,161,0,0,0,0,0,92,161,162,163,164,92,161,162,163,164,161,162,163,164,161,162,163,164,92,164,161,161,161,161,161,165,164,0,163,161,162,163,164,92,161,162,163,164,161,162,163,164,92,92,92,92,161,162,163,164,92,161,162,163,164,92,92,0,164,162,92,92,92,92,161,162,163,164,92,161,162,163,164,92,161,162,163,164,92,161,162,163,164,92,163,162,92,161,162,163,164,165,164,92,57,0,0,0,0,0,57,0,0,0,57,57,0,57,183,186,170,170,170,102,85,95,85,57,183,85,57,183,186,170,184,95,183,186,170,184,95,186,183,186,170,170,183,184,95,183,184,95,57,85,85,57,85,57,170,85,57,183,170,184,186,95,183,183,95,183,186,170,184,95,95,183,184,95,184,85,57,183,183,183,95,183,183,183,183,85,57,183,0,257,95,57,85,183,183,186,170,184,95,183,186,170,184,95,57,57,183,183,183,183,183,183,183,183,183,183,183,183,170,183,186,57,85,183,102,102,0,183,184,257,85,57,85,57,85,57,183,184,95,183,183,186,170,184,95,183,186,170,184,95,183,186,170,184,95,183,186,170,184,95,0,0,0,0,0,0,112,198,200,198,200,198,200,198,200,198,200,202,44,44,198,200,44,198,200,44,198,200,198,200,44,44,198,200,198,200,198,200,198,200,198,200,198,200,202,44,198,200,198,200,44,198,200,44,44,44,202,112,44,112,202,44,198,200,44,198,200,44,198,200,198,200,198,200,198,200,202,198,200,198,200,198,200,198,200,200,200,198,198,200,202,112,200,0,112,202,198,198,44,198,200,44,198,200,44,198,200,44,200,198,200,44,212,0,0,211,211,211,211,211,211,211,212,211,211,211,211,211,211,211,211,211,212,211,211,211,211,212,212,212,212,211,211,212,212,212,211,211,211,211,212,212,211,211,211,211,211,211,216,0,0,0,0,216,0,214,216,209,216,96,209,216,96,214,209,216,216,96,209,216,96,96,209,216,96,209,216,96,209,216,96,209,209,209,216,209,209,209,209,216,216,216,216,214,216,209,216,96,96,209,216,96,209,216,96,209,209,216,96,209,209,209,216,96,216,209,216,96,96,96,209,209,96,209,216,96,96,209,216,96,96,96,209,216,96,209,216,96,209,216,96,209,216,96,258,258,0,0,217,217,0,94,217,94,188,217,94,188,0,94,94,188,188,188,94,188,188,188,94,188,217,94,188,188,94,94,94,217,94,188,217,94,188,217,94,188,188,94,188,188,94,188,188,188,188,94,188,94,217,94,188,217,94,188,217,94,188,217,94,188,0,259,0,0,0,0,221,221,259,221,259,221,220,220,221,221,0,221,221,259,221,259,221,221,221,221,221,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,207,8,206,207,8,189,227,206,207,0,2,8,8,0,227,226,185,228,2,207,232,233,185,0,4,8,232,233,109,245,0,232,233,109,225,4,8,225,0,228,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,242,0,0,0,0,0,0,0,0,260,0,0,0,0,0,242,0,0,0,0,0,0,0,260,0,0,226,226,261,226,226,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,228,226,241,226,189,229,230,227,226,189,229,230,227,231,232,229,233,189,234,235,227,231,232,236,237,238,189,234,229,233,239,240,230,235,227,231,232,236,237,238,189,234,229,233,239,240,230,235,227,226,226,241,189,227,241,228,189,241,227,241,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,231,231,232,232,189,234,229,229,233,233,235,227,226,189,229,230,227,231,229,241,241,226,241,241,226,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,189,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,242,243,241,228,237,240,232,233,226,241,231,232,236,237,229,233,239,240,243,261,261,241,241,241,241,241,226,243,231,232,229,233,241,226,231,231,232,232,236,237,238,189,234,234,229,229,233,233,239,240,230,235,235,227,226,189,229,230,227,243,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,241,228,260,241,243,226,228,231,232,236,237,238,189,234,229,233,239,240,230,235,227,242,228,228,228,262,263,262,0,0,0,207,245,206,207,245,206,207,206,207,206,207,206,207,206,207,207,245,206,207,206,207,245,206,207,245,206,207,207,206,206,245,206,206,245,207,207,206,207,245,206,207,245,206,207,245,206,207,245,206,207,0,0,0,0,0,4,0,0,0,0,0,264,8,246,109,225,15,185,109,225,15,185,109,8,15,185,109,109,15,185,109,15,109,15,109,15,109,15,185,15,15,109,15,15,15,15,109,109,109,109,8,109,8,109,15,185,109,225,15,185,109,15,109,15,185,15,185,109,15,185,15,109,185,225,15,185,109,109,225,15,185,109,15,15,185,185,225,4,8,109,109,109,264,264,109,15,109,15,185,109,225,4,8,109,109,225,225,15,185,109,225,15,185,109,225,15,185,109,225,15,185,109,0,250,250,108,0,0,108,0,108,108,0,0,0,0,0,40,65,40,76,65,0,40,76,0,107,0,0,107,0,0,107,40,76,65,107,40,76,65,107,65,40,76,65,40,76,65,65,107,107,107,107,107,107,40,76,65,107,40,76,65,40,65,40,76,65,107,40,76,40,76,65,107,40,65,76,65,0,40,76,40,76,65,40,76,65,107,40,76,65,107,40,76,65,107,40,76,65,107,65,65,65,65,108,108,0,108,0,108,0,0,0,254,108,254,108,254,108,254,108,108,254,108,108,108,108,108,108,108,108,108,108,108,254,108,254,108,108,254,108,108,254,108,254,108,254,108,108,108,108,254,108,108,108,108,108,254,108,254,108,0,254,108,254,108],"f":"`````````````````````````{{bdc}f{hjl}}{{nd{Ab{A`}}}{{Af{{Ab{Ad}}}}}}{{Ahd{Ab{A`}}}{{Af{{Ab{Ad}}}}}}{{AjAl{B`{An}}}f}{{BbBd}{{Bh{Bf}}}}```{nBf}{AjBj}{AhBf}``{AjBf}{Bl{{Bn{Aj}}}}`{{AjC`Cb}{{Bh{Cd}}}}{{AjC`{B`{Cb}}}{{Bh{Cd}}}}{{CfCh}{{Cn{CjCl}}}}{{bCh}{{Cn{CjCl}}}}`{{AjD`}{{Bh{Cj}}}}{ce{}{}}00000000000000000000000{c{{Ab{A`}}}A`}{{DbDdBdDf}{{Bh{Bl}}}}{{DbDdBd}{{Bh{Bl}}}}{DhDb}{{cDjDlDlDn}Dj{}}{{bd{E`{ce}}}{{Eb{Ch{B`{Cb}}}}}{Edjl}{A`jl}}{{ndEf}{{Af{{Ab{Ad}}}}}}{{AhdEf}{{Af{{Ab{Ad}}}}}}`{nBd}{AhBd}{{{Ej{Eh}}c}El{{Fd{}{{En{{Eb{F`Fb}}}}}}}}`{bb}{AhAh}{FfFf}{FhFh}{{ce}Cj{}{}}000{AjBd}`{{BdEl}{{Cn{BdFj}}}}{{{Bn{Aj}}}Fl}{{AjD`}{{Bh{Fn}}}}`{AjDh}``{DbDh}`{nEl}{AjEl}{{DbBd}El}{AhEl}`{{{G`{c}}}eGb{}}{bc{}}{Blc{}}{Ffc{}}`{{Aj{Gf{Gd}}}{{Bh{Gh}}}}{{BdGjBfGl}{{Bh{Gh}}}}{BlFh}{Aj{{Bh{{Gf{Fn}}}}}}{{DbDdBd}{{Bh{{Gf{Fn}}}}}}{{BfDdEl}{{Bh{{Gf{Fn}}}}}}{BlCj}``{AjGn}``{{DdBd}Dd}{{AjC`H`eHb}{{Bh{{Eb{Ch{B`{Cb}}}}}}}{Hdj}{{Hh{Ch{B`{Cb}}}{{Hf{c}}}}Hjjl}}{{AjAlC`Hb}{{Bh{{Eb{Ch{B`{Cb}}}}}}}}{{AjAlC`Hb}{{Bh{{Eb{Hl{B`{An}}{Hn{Dj}}}}}}}}{{AjI`}Ib}{{IdI`}Ib}0{{bI`}Ib}{{AhI`}Ib}{{BlI`}Ib}{{FfI`}Ib}{{FhI`}Ib}{cc{}}000000{IfId}{{{Bn{c}}}bn}{cb{njl}}33333{AjDb}4444{{bd{Ih{ce}}}{{Bh{{Eb{Ch{B`{Cb}}}}}}}{Ijjl}{A`jl}}{{ndIl}{{Af{{Ab{Ad}}}}}}{{AhdIl}{{Af{{Ab{Ad}}}}}}{Aj{{In{C`}}}}{AjJ`}{DdJ`}{AjCd}{AjBd}{Dh{{Gf{Bd}}}}{AjJb}{Dh{{Bh{c}}}Jd}{Aj{{Bh{c}}}Jd}{AjJf}{DdJf}{AjJh}{DdJh}{{AjFb}{{Gf{F`}}}}{Aj{{G`{c}}}Gb}{Aj{{Bh{{Eb{J`Dj}}}}}}{{AjH`}{{Gf{Cl}}}}{AjD`}{{AjF`}Jj}{{AjF`}{{Bh{Jj}}}}{b{{Gf{c}}}{}}{{AjC`}Df}{{AjF`}Df}{AjDf}`{{DbDdBdJl}{{Bh{Bl}}}}`````{ce{}{}}00000000000{c{{Jn{e}}}{}{}}00000000000{DhDf}{{DbDdBd}{{Bh{Bl}}}}`{{Bd{Ej{Eh}}BfDhK`}{{Bh{Gh}}}}{Dh{{Bh{c}}}Jd}{Dh{{Bh{{Gf{c}}}}}Jd}{Db{{Bh{Bd}}}}{DhKb}{Dh{{Bh{{Kf{Kd}}}}}}{Aj{{Gf{Fn}}}}`{Aj{{Bn{Kh}}}}``{{DbDhEl}{{Bh{Cj}}}}``{nKj}{AhKj}````{DhDb}{{{Bn{Aj}}}Bl}{{}b}{{DbDd}{{Bh{Bl}}}}`{{AjC`}Df}{{AlC`}Df}{AjKl}``````{AjKn}````{{DbDdBd{Gf{Fn}}}{{Bh{Bl}}}}{{Bd{Ej{Eh}}BfDhGl}{{Bh{Gh}}}}{Bl{{Bh{Bl}}}}{AjDd}`{Aj{{Bh{c}}}Jd}{{Dh{Ld{{Lb{F`L`}}}}{Lb{F`{Af{{Ab{Ad}}}}}}{Lb{F`{Lf{L`}}}}}Cj}``{{DbLh}Cj}{{AjD`}Cj}{{AlD`}Cj}{BlCj}0``{Id{{Gf{Lj}}}}{{Aj{Ld{{Lb{F`L`}}}}{Lb{F`{Af{{Ab{Ad}}}}}}{Lb{F`{Lf{L`}}}}}Cj}{{{Bn{Aj}}}Cj}3``{{F`{Ll{{Ab{A`}}}}}{{Ll{An}}}}{{{Ll{c}}}{{Ll{{Ab{A`}}}}}{A`jl}}{DbCj}`{{Dhc}{{Bh{Cj}}}Ln}{{AjFn}Cj}{Aj{{M`{Cd}}}}{Aj{{`{{Mb{}{{En{{Eb{F`L`}}}}}}}}}}{{BdGj}Md}{AjK`}`{ce{}{}}000{cCl{}}`{{AjHb}Mf}{n{{Af{{Ab{Ad}}}}}}{{AjC`}{{M`{{Mj{Mh}}}}}}{Ah{{Af{{Ab{Ad}}}}}}{{AjC`}Cf}{c{{Cn{e}}}{}{}}00000000000{{AjF`}{{Gf{Jj}}}}111111111111{cMl{}}00000000000`{Fh{{Gf{Ff}}}}{{AjMn}{{Bh{Cj}}}}0;;;;;;;;;;;;{Aj{{Bh{Cj}}}}0{{AjFb}{{Bh{Cj}}}}{{Db{Bn{Kh}}}Cj}{{Dbc}CjN`}{{DbGj}Cj}{{DbF`}Cj}`````{ce{}{}}00000{D`D`}{FnFn}{MnMn}{{ce}Cj{}{}}00{{cEl}{{Cn{FnFj}}}Nb}{{cEl}{{Cn{D`Fj}}}Nb}{{D`c}{{Cn{GdNd}}}Nf}{{Fnc}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}0{{MnJfEl}{{Bh{Fn}}}}{c{{Cn{D`}}}Nh}{{cNj}{{Cn{CjNl}}}{}}{{}D`}{{FnJf}{{Bh{Mn}}}}{{D`D`}Df}{{FnFn}Df}{{ce}Df{}{}}0000000{{cNj}{{Cn{CjNn}}}{}}{{D`I`}Ib}{{FnI`}Ib}{cc{}}00{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}0{cD`Hd}{{{B`{Kd}}}D`}333{GdGd}{ce{}{}}00{{MnJh}{{Bh{Oj}}}}{D`{{B`{Kd}}}}{c{{Jn{e}}}{}{}}00{D`Df}{MnDf}{MnGd}``{{D`c}CnOl}`{c{{B`{Kd}}}{}}0{D`{{Bh{c}}}On}{D`{{Bh{A`}}}}:::{c{{Cn{e}}}{}{}}00000{cMl{}}00{{Fn{Gf{Fn}}}Fn}===`````````````````````````````````````````````````````{{DhClAb{Lb{AbAd}}F`El}{{Cn{CjIf}}}}`>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{AA`AA`}{AAbAAb}{{ce}Cj{}{}}000000{{AnAn}AAd}{{AA`AA`}AAd}{{ce}AAd{}{}}0{{cEl}{{Cn{AAfFj}}}Nb}{{cEl}{{Cn{AAhFj}}}Nb}{{cEl}{{Cn{AAjFj}}}Nb}{{cEl}{{Cn{AjFj}}}Nb}{{cEl}{{Cn{AAlFj}}}Nb}{{cEl}{{Cn{AAnFj}}}Nb}{{cEl}{{Cn{AB`Fj}}}Nb}{{cEl}{{Cn{ABbFj}}}Nb}{{cEl}{{Cn{ABdFj}}}Nb}{{cEl}{{Cn{JlFj}}}Nb}{{cEl}{{Cn{ABfFj}}}Nb}{{cEl}{{Cn{KbFj}}}Nb}{{cEl}{{Cn{ABhFj}}}Nb}{{cEl}{{Cn{ABjFj}}}Nb}{{cEl}{{Cn{ABlFj}}}Nb}{{cEl}{{Cn{AlFj}}}Nb}{{cEl}{{Cn{ABnFj}}}Nb}{{cEl}{{Cn{AnFj}}}Nb}{{cEl}{{Cn{AA`Fj}}}Nb}{{cEl}{{Cn{AAbFj}}}Nb}{{cEl}{{Cn{AC`Fj}}}Nb}{{cEl}{{Cn{ACbFj}}}Nb}{{AAfc}{{Cn{GdNd}}}Nf}{{AAhc}{{Cn{GdNd}}}Nf}{{AAjc}{{Cn{GdNd}}}Nf}{{Ajc}{{Cn{GdNd}}}Nf}{{ACdc}{{Cn{GdNd}}}Nf}{{AAlc}{{Cn{GdNd}}}Nf}{{AAnc}{{Cn{GdNd}}}Nf}{{AB`c}{{Cn{GdNd}}}Nf}{{ACfc}{{Cn{GdNd}}}Nf}{{ABbc}{{Cn{GdNd}}}Nf}{{AChc}{{Cn{GdNd}}}Nf}{{ABdc}{{Cn{GdNd}}}Nf}{{ACjc}{{Cn{GdNd}}}Nf}{{Jlc}{{Cn{GdNd}}}Nf}{{ABfc}{{Cn{GdNd}}}Nf}{{Kbc}{{Cn{GdNd}}}Nf}{{ABhc}{{Cn{GdNd}}}Nf}{{ABjc}{{Cn{GdNd}}}Nf}{{ABlc}{{Cn{GdNd}}}Nf}{{AClc}{{Cn{GdNd}}}Nf}{{Alc}{{Cn{GdNd}}}Nf}{{ABnc}{{Cn{GdNd}}}Nf}{{Anc}{{Cn{GdNd}}}Nf}{{AA`c}{{Cn{GdNd}}}Nf}{{AAbc}{{Cn{GdNd}}}Nf}{{AC`c}{{Cn{GdNd}}}Nf}{{ACbc}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}00000000000000000000000000`{{cNj}{{Cn{CjNl}}}{}}0000000{Kb{{Gf{{Gf{Fn}}}}}}{{AnAn}Df}{{AA`AA`}Df}{{ce}Df{}{}}0000000{{cNj}{{Cn{CjNn}}}{}}0000000{{AfI`}Ib}0{{AhI`}Ib}{{AAfI`}Ib}{{AAhI`}Ib}{{AAjI`}Ib}{{AjI`}Ib}{{ACdI`}Ib}{{AAlI`}Ib}{{AAnI`}Ib}{{AB`I`}Ib}{{ACfI`}Ib}{{ABbI`}Ib}{{AChI`}Ib}{{ABdI`}Ib}{{ACjI`}Ib}{{JlI`}Ib}{{ABfI`}Ib}{{KbI`}Ib}{{ABhI`}Ib}{{ABjI`}Ib}{{ABlI`}Ib}{{AClI`}Ib}{{AlI`}Ib}{{ABnI`}Ib}{{AnI`}Ib}{{AA`I`}Ib}{{AAbI`}Ib}{{AC`I`}Ib}{{ACbI`}Ib}{cc{}}0000000000000000000000000000{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}0000000000000000000000000000000001111111{{AhGd}{{Gf{Af}}}}{{AlF`}{{B`{{Eb{{B`{Kd}}C`}}}}}}0``{ce{}{}}0000000000000000000000000000{KbKb}1{c{{Jn{e}}}{}{}}0000000000000000000000000000{AlDf}{KbDf}{{}Ah}`{AhGd}`{{F`{B`{{Eb{{B`{Kd}}C`}}}}{B`{{Eb{{B`{Kd}}C`}}}}El{ACn{{O`{Kd}}F`El}{{Hf{{Bh{{Gf{An}}}}}}}}}{{Bh{{Gf{{Eb{{B`{An}}{B`{An}}}}}}}}}}`{Ah{{Gf{c}}}{}}0{{AhGd}{{Gf{c}}}{}}``{{AnAn}{{Gf{AAd}}}}{{AA`AA`}{{Gf{AAd}}}}`{{Al{B`{An}}{B`{{Eb{{B`{Kd}}C`}}}}F`}Cj}0`{{AAjc}CnOl}{{Ajc}CnOl}{{AB`c}CnOl}{{ABbc}CnOl}{{ABdc}CnOl}{{ABhc}CnOl}{{ABjc}CnOl}{{ABlc}CnOl}{Ah{{Eb{Gd{Gf{Gd}}}}}}{c{{B`{Kd}}}{}}00000000000000000000000000000000000000000{ce{}{}}000000{cCl{}}{c{{Cn{e}}}{}{}}000000000000000000000000000000000000000000000000000000000{cMl{}}000000000000000000000000000033333333333333333333333333333``{{}AD`}````````4444444444{ADbADb}{ADdADd}{{{ADf{c}}}{{ADf{c}}}Hj}{ADhADh}{{ce}Cj{}{}}000{{{Kh{c}}Al}{{Gf{Dj}}}{ADjADl}}{{}ADh}{{ADbADb}Df}{{ce}Df{}{}}000{{ADjAjADb{Gf{Dj}}}{{Af{{Ab{Ad}}}}}}{{ADhAjADb{Gf{Dj}}}{{Af{{Ab{Ad}}}}}}{{ADnAjH`}{{Bh{{Lb{AnAAb}}}}}}`{{ADbI`}Ib}{{ADdI`}Ib}{{{ADf{c}}I`}IbAE`}{{ADhI`}Ib}{cc{}}00000000{{{Kh{c}}DhH`}{{Gf{{ADf{e}}}}}{ADjADl}On}0`{ce{}{}}0000{c{{Jn{e}}}{}{}}0000`{c{{Bn{Kh}}}{ADlADjADl}}{H`{{Bh{c}}}On}``{{{Kh{c}}AjADd}Cj{ADjADl}}`{{{Kh{c}}DhH`}{{`{{Mb{}{{En{{Gf{{ADf{e}}}}}}}}}}}{ADjADl}On}{{{Kh{c}}}{{`{{Mb{}{{En{Cj}}}}}}}{ADjADl}}6666{c{{Cn{e}}}{}{}}000000000{cMl{}}0000{{{Kh{c}}Aj}AEb{ADjADl}}``99999{ADj{{Af{{Ab{Ad}}}}}}{ADh{{Af{{Ab{Ad}}}}}}{{{Kh{c}}}Cj{ADjADl}}````````````````{{{AEd{c}}C`H`e}CjGbHd}{{{AEd{c}}{B`{An}}}fGb}0`{JjAEf}{KnJj}{{JjC`Cb}{{Af{{Ab{Ad}}}}}}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}C`Cb}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{{AFn{c}}C`{B`{Cb}}}{{Bh{Cd}}}Gb}{{JjF`}{{Af{{Ab{Ad}}}}}}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{ce{}{}}000000000{{cDjDlDlDn}Dj{}}```{{{AEd{c}}}{{AFn{c}}}Gb}{{{AFn{c}}}{{AFn{c}}}{}}{AG`AG`}{KnKn}{{ce}Cj{}{}}00{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}}iN`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{JjF`}AGb}{{JjF`AlC`Cd}{{Af{{Ab{Ad}}}}}}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}AlC`Cd}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}10`{JjOb}{{}Ob}{{{AFn{c}}}ElGb}{{{AEd{c}}}ElGb}{{}AG`}{{{AGd{c}}}eGb{}}{Knc{}}{{{AFn{c}}C`H`gHb}{{Bh{{Eb{Ch{B`{Cb}}}}}}}Gb{Hdj}{{Hh{Ch{B`{Cb}}}{{Hf{e}}}}Hjjl}}{{{AFn{c}}I`}Ib{}}{{KnI`}Ib}{cc{}}000{cKn{Jjjl}}1111{AG`Ff}{{JjF`Al}{{Af{{Ab{Ad}}}}}}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}Al}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{{AFn{c}}}BdGb}{{{AFn{c}}}{{Bh{{Eb{J`Dj}}}}}Gb}{{{AFn{c}}}AGfGb}{Kn{{Gf{c}}}{}}{{{AFn{c}}C`}{{Bh{AGh}}}Gb}{{{AFn{c}}}{{B`{{Eb{AGj}}}}}Gb}{{{AFn{c}}}BfGb}{{{AFn{c}}}DhGb}{{Jj{O`{AGl}}}{{Af{{Ab{Ad}}}}}}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}{O`{AGl}}}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{{AFn{c}}C`}DfGb}```{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}}{{Gf{AGn}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{JjAH`}{{Gf{AGn}}}}{{{AFn{c}}AH`}GfGb}{ce{}{}}0000{c{{Jn{e}}}{}{}}0000{{}Fb}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}Al}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{{AFn{c}}{E`{eg}}}E`Gb{{AFl{}{{AFj{AH`}}}}}{{AFl{}{{AFj{An}}}}}}{{{AFn{c}}{Ih{eg}}}IhGb{{AFl{}{{AFj{AHb}}}}}{{AFl{}{{AFj{An}}}}}}{{{AFn{c}}e}{}GbAFl}{{{AFn{c}}}AH`Gb}{{{AFn{c}}}AHbGb}{{{AFn{c}}e}AnGbA`}{{{AFn{c}}C`H`e{B`{An}}}{{Bh{Cj}}}Gb{HdAE`}}{{{AFn{c}}g}{{`{{Fd{}{{En{}}}}}}}GbAFl{{AHd{}{{En{e}}}}}}{{{AFn{c}}i{Gf{Gd}}}{{Cn{e{AHf{g}}}}}Gb{}{}{{Hh{{AEd{c}}AHh}{{Hf{{AHj{{Cn{eg}}}}}}}}l}}{{{AFn{c}}g{Gf{Gd}}}{{Bh{e}}}Gb{}{{Hh{{AEd{c}}AHh}{{Hf{{AHj{{Bh{e}}}}}}}}l}}{{{AFn{c}}}DhGb}`{{{AEd{c}}}AlGb}``{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}}{{Gf{AGn}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{{JjAHb}{{Gf{AGn}}}}{{{AFn{c}}AHb}GfGb}```{{{AFn{c}}}{{AGd{c}}}Gb}{{AG`Fh}Cj}`{Jj{{Af{{Ab{Ad}}}}}}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}}{{Af{{Ab{Ad}}}}}N`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}{JjDf}{{{Gb{}{{AEh{c}}{AEj{e}}{AEl{g}}{AEn{i}}{AF`{k}}}}}DfN`AFbAFdAFf{{h{}{{AFh{i}}}}{AFl{}{{AFj{An}}}}}}10{ce{}{}}00{{{AFn{c}}C`}CfGb}{c{{Cn{e}}}{}{}}000000000{cMl{}}000033333```````{{{AHl{c}}}{{Gf{AHn}}}N`}{{{AI`{c}}}{{Gf{AHn}}}N`}``{{{AHl{c}}}BfN`}{{{AI`{c}}}BfN`}``{{{AHl{c}}}AIbN`}{{{AI`{c}}}AIbN`}{AIdAIf}{EhAId}{EhAIf}<<<<<<{{{AHl{c}}}{}N`}{{{AI`{c}}}{}N`}``{EhEh}{{ce}Cj{}{}}{{{AHl{c}}}AFnN`}{{{AI`{c}}}AFnN`}``:9``{{{AHl{c}}}DhN`}{{{AI`{c}}}DhN`}``{AIdOb}{Ehc{}}{{{AHl{c}}}GnN`}{{{AI`{c}}}GnN`}``{{EhI`}Ib}{cc{}}00{cEh{AIdjl}}1{AId{{Lb{AbAd}}}}{{{N`{}{{AIh{c}}}}}{{Lb{AbAd}}}Gb}{Eh{{Gf{c}}}{}}{{{N`{}{{AIh{c}}}}{AHl{{N`{}{{AIh{c}}}}}}}{{Af{{Ab{Ad}}}}}Gb}{{AIdAG`GnGdAIjDhF`AIbAIbDdAIlBf{Gf{AHn}}K`}{{Af{{Ab{Ad}}}}}}`{ce{}{}}00{c{{Jn{e}}}{}{}}00{{{AHl{c}}}KjN`}{{{AI`{c}}}KjN`}``{{{AHl{c}}}AIbN`}{{{AI`{c}}}AIbN`}``{AIdFb}{{{AHl{c}}}DdN`}{{{AI`{c}}}DdN`}``{{{AHl{c}}}AInN`}{{{AI`{c}}}AInN`}``{{{AI`{c}}}AJ`N`}`{{{AHl{c}}}GdN`}``{{AIdAG`GnAJ`AIjDhF`AIbAIbDdAIlBf{Gf{AHn}}{Gf{AJb}}{Ld{L`}}}{{Af{{Ab{Ad}}}}}}{{{N`{}{{AIh{c}}}}{AI`{{N`{}{{AIh{c}}}}}}Gf}{{Af{{Ab{Ad}}}}}Gb}{{{AI`{c}}Gf}{{Bh{Cj}}}N`}`{{{N`{}{{AIh{c}}}}}AJdGb}{AIdAJd}{{{AHl{c}}}K`N`}`{ce{}{}}{c{{Cn{e}}}{}{}}00000{cMl{}}00{{{AI`{c}}L`}CjN`}333```33{AJfAJf}{{ce}Cj{}{}}{{cEl}{{Cn{AJfFj}}}Nb}{{AJfc}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}{{{AJh{}{{AEh{c}}}}Al}{{Af{{Ab{Ad}}}}}N`}{c{{Cn{AJf}}}Nh}{{cNj}{{Cn{CjNl}}}{}}`{{AJfAJf}Df}{{ce}Df{}{}}000{{cNj}{{Cn{CjNn}}}{}}{{{AJh{}{{AEh{c}}}}AEd}{{Af{{Ab{Ad}}}}}N`}{{AJfI`}Ib}{cc{}}{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}1{{{AJh{}{{AEh{c}}}}AFnGd}{{Af{{Ab{Ad}}}}}N`}{{{AJh{}{{AEh{c}}}}AFnCb}{{Af{{Ab{Ad}}}}}N`}{{{AJh{}{{AEh{c}}}}AFnDj{B`{AJj}}}{{Af{{Ab{Ad}}}}}N`}{{{AJh{}{{AEh{c}}}}AFnHl}{{Af{{Ab{Ad}}}}}N`}{ce{}{}}{c{{Jn{e}}}{}{}}{{Al{AI`{c}}}{{Af{{Ab{Ad}}}}}{}}{Al{{Af{{Ab{Ad}}}}}}{{{AI`{c}}Gf}{{Af{{Ab{Ad}}}}}{}}{{DjDjDj}AJf}`{{AJfc}CnOl}`{{{AJh{}{{AEh{c}}}}AlAJf}{{Af{{Ab{Ad}}}}}N`}{{AlDf}{{Af{{Ab{Ad}}}}}}{c{{B`{Kd}}}{}}9{c{{Cn{e}}}{}{}}0{cMl{}};```````{AJlAEf}{cAEf{}}======{{AJlF`}AJb}{AJbAJb}{{cAJn}AJb{}}{AK`AK`}{L`L`}{{ce}Cj{}{}}00`{{cEl}{{Cn{AJbFj}}}Nb}{{cEl}{{Cn{AK`Fj}}}Nb}{{cEl}{{Cn{L`Fj}}}Nb}{{AJbc}{{Cn{GdNd}}}Nf}{{AK`c}{{Cn{GdNd}}}Nf}{{L`c}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}00{AJbc{}}0{{AJbAJb}Df}{{AK`AK`}Df}{{ce}Df{}{}}0000000{{AJlAJb}Df}{{cAJb}Df{}}{{AJbI`}Ib}{{AK`I`}Ib}{{L`I`}Ib}0{cc{}}00{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}00{{F`{Ab{AJl}}}AJb}222{{F`c}AJb{AJljl}}`{ce{}{}}00{{AK`F`}c{}}{c{{Jn{e}}}{}{}}00{L`Df}0{AJbF`}`{{}L`}{c{{B`{Kd}}}{}}00{L`L`}777{cCl{}}`{c{{Cn{e}}}{}{}}00000{cMl{}}00:::```````{{KlAlC`H`c}CjHd};;;;;;{{DhC`e}{{M`{c}}}{HjHdAE`jl}{{Mb{}{{En{c}}}}j}}{KlKl}{{ce}Cj{}{}}{{cEl}{{Cn{AGhFj}}}Nb}{{AGhc}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}`{c{{Cn{AGh}}}Nh}{{cNj}{{Cn{CjNl}}}{}}{{cNj}{{Cn{CjNn}}}{}}{{KlI`}Ib}{{AGhI`}Ib}{cc{}}00{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}1{{KlC`}{{Gf{AGh}}}}{{AlC`}{{Gf{AGh}}}}{ce{}{}}00{c{{Jn{e}}}{}{}}00{{{AKb{c}}}{{M`{c}}}{jl}}{{KlGd{Gf{Aj}}}{{B`{{Eb{AjAGh}}}}}}{AGhcOn}`{DhKl}{AGhH`}`{{DhC`c}Cj{HdAE`}}{AGh{{Gf{c}}}On}`{{AGhDhC`g}{{AKb{c}}}{HjHdOnAE`jl}{{Mb{}{{En{c}}}}j}{{AKd{}{{Hf{e}}}}}}{{AGhc}CnOl}{{DhC`c}{{Bh{Cj}}}{HdAE`}}{c{{B`{Kd}}}{}}<{c{{Cn{e}}}{}{}}00000{cMl{}}00>>>``````>>{c{{Cn{eFj}}}Nb{}}0{{ce}{{AKf{Gd}}}{}Nf}0{AKhDd}{{AKhF`}Dd}{{AKjI`}Ib}{cc{}}{{DdGn}Dd}{ce{}{}}{c{{Jn{e}}}{}{}}{ce{AKlAKn}{}}0{cDd{}}0<<;3`````````````````````{A`AEf}``{{A`F`}An}``````{{A`An}Df}{{A`AL`}Cj}```````````{{{h{}{{AFh{c}}}}}C`AFf}{A`C`}`````````{{{h{}{{AFh{c}}}}cb}{{B`{{ALb{{h{}{{AFh{c}}}}}}}}}AFf}{{A`AGbb}{{B`{{ALb{An}}}}}}````;;`={dAl}<;`0{{AlF`}d}{c{{Cn{e}}}{}{}}0{cMl{}}?``````````````````````````{{ALd{B`{An}}}{{Bh{Cj}}}}{{ALdAl{B`{An}}}f}`{{ALdAn}AGj}{{ALdAn}ALf}{ce{}{}}000000000000000000000000000000000000000{{ALhDhAIlK`}ALd}{{}ALh}`{ALdALd}{AGjAGj}{ALjALj}{ALlALl}{ALfALf}{{ce}Cj{}{}}0000{{cEl}{{Cn{ALnFj}}}Nb}{{cEl}{{Cn{AM`Fj}}}Nb}{{cEl}{{Cn{ALjFj}}}Nb}{{cEl}{{Cn{AMbFj}}}Nb}{{cEl}{{Cn{AGjFj}}}Nb}{{cEl}{{Cn{AMdFj}}}Nb}{{cEl}{{Cn{AMfFj}}}Nb}{{cEl}{{Cn{ALfFj}}}Nb}{{ALnc}{{Cn{GdNd}}}Nf}{{AM`c}{{Cn{GdNd}}}Nf}{{AMhc}{{Cn{GdNd}}}Nf}{{AMjc}{{Cn{GdNd}}}Nf}{{AMlc}{{Cn{GdNd}}}Nf}{{AGjc}{{Cn{GdNd}}}Nf}{{AMdc}{{Cn{GdNd}}}Nf}{{ALjc}{{Cn{GdNd}}}Nf}{{AMbc}{{Cn{GdNd}}}Nf}{{AMnc}{{Cn{GdNd}}}Nf}{{AN`c}{{Cn{GdNd}}}Nf}{{ALlc}{{Cn{GdNd}}}Nf}{{AMfc}{{Cn{GdNd}}}Nf}{{ALfc}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}0000000000000{{ALdF`c}Dfh}0````{{}ALh}{{}AGj}{ANbCj}`{{ANbI`}Ib}{{ALdI`}Ib}{{ALhI`}Ib}{{ALnI`}Ib}{{AM`I`}Ib}{{AMhI`}Ib}{{AMjI`}Ib}{{AMlI`}Ib}{{AGjI`}Ib}{{AMdI`}Ib}{{ALjI`}Ib}{{AMbI`}Ib}{{AMnI`}Ib}{{AN`I`}Ib}{{ALlI`}Ib}{{AMfI`}Ib}{{ALfI`}Ib}{{ANdI`}Ib}{cc{}}0000000000000000000{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}0000000000011111{AnALn}{AnALj}{{ANbAn}{{Gf{AGj}}}}{ANb{{B`{{Eb{AnAGj}}}}}}{ALd{{B`{{Eb{AnAGj}}}}}}{ANb{{B`{{Eb{AnALf}}}}}}{{ANbAnAGj{Bn{Hh}}}{{B`{{AHj{ANf}}}}}}`{ce{}{}}0000000000000000000{AGjALf}{c{{Jn{e}}}{}{}}0000000000000000000{ANdDf}```````{ALdAIl}````````````{{ANb{Bn{Hh}}{ANh{An}}}Cj}{{ANb{Bn{Hh}}{ANh{An}}}{{Bh{Cj}}}}```{{ALd{Bn{Hh}}}Cj}`````{ANb{{Gf{Cj}}}}{ALd{{Gf{Cj}}}}{c{{B`{Kd}}}{}}0000000000000000000:::::`{c{{Cn{e}}}{}{}}000000000000000000000000000000000000000{cMl{}}0000000000000000000``<<<<<<<<<<<<<<<<<<<<{{ALhF`c}Cj{{AFl{}{{AFj{AGb}}}}}}{{ALhAGb}Cj}{{ALhF`}Cj}```````??????``{AIlAIl}{{{AIn{c}}}{{AIn{c}}}Hj}{{ce}Cj{}{}}0``{{{AIn{c}}I`}IbAE`}{cc{}}0000{ce{}{}}00{c{{Jn{e}}}{}{}}00`{{AIlF`}{{AIn{c}}}{}}{DhAIl}{{ANjAn}Cj}{{AIlAn}Cj}{AIlANj}`{{{AIn{c}}C`}{{M`{c}}}h}{{{AIn{c}}}{{M`{c}}}h}88{c{{Cn{e}}}{}{}}00000{cMl{}}00:::````````````{A`AEf}{ANlAEf}{cAEf{}}========{{A`F`}An}{AnAn}{AGbAGb}{{{Mj{c}}}{{Mj{c}}}h}{{cAJn}An{}}{{ce}Cj{}{}}00{{cEl}{{Cn{AnFj}}}Nb}{{cEl}{{Cn{{Mj{e}}Fj}}}Nbh}{{Anc}{{Cn{GdNd}}}Nf}{{{Mj{c}}e}{{Cn{GdNd}}}hNf}{{cNf}{{Cn{GdNd}}}{}}0{Anc{}}{AGbc{}}1{{AnAn}Df}{{{Mj{c}}{Mj{c}}}Dfh}{{ce}Df{}{}}0000000{{A`An}Df}{{cAn}Df{}}{{A`AL`}Cj}{{cAL`}Cj{}}{{AnI`}Ib}{{AGbI`}Ib}{{{Mj{c}}I`}IbAE`}{cc{}}000{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}0{{F`{Ab{A`}}}An}{{F`{Bn{ANl}}}AGb}333{{F`c}AnA`}{{F`c}AGb{ANljl}}{{Anc}CjAL`}{{{Mj{c}}e}CjANnAL`}`{ce{}{}}000{{{Mj{c}}F`}eh{}}{c{{Jn{e}}}{}{}}000{{AnAGbb}Df}{AnF`}{AGbF`}`{{ei}{{ALb{g}}}{HdOnAO`}{{Ad{}{{Hf{c}}}}j}{jlHj}{{Hh{dcg}{{Hf{{AHj{g}}}}}}jlHj}}{{{h{}{{AFh{c}}}}}C`AFf}{A`C`}{cC`{}}{{{Mj{c}}}C`h}````{c{{B`{Kd}}}{}}0;;;`{{{h{}{{AFh{c}}}}cb}{{B`{{ALb{{h{}{{AFh{c}}}}}}}}}AFf}{{A`AGbb}{{B`{{ALb{An}}}}}}{{{Mj{c}}eb}{{B`{{ALb{{Mj{c}}}}}}}h{}}{{cAGbb}{{B`{{ALb{An}}}}}{}}`{c{{Cn{e}}}{}{}}0000000{cMl{}}000{ce{}{}}000``{{{AOd{}{{AOb{c}}}}gi}{{B`{{ALb{e}}}}}{jl}{jl}{{Hh{c}{{Hf{e}}}}Hjjl}{{Hh{e}{{Hf{c}}}}Hjjl}}````````````````````{{}Ob}```````22222222{{Hb{AOf{c}}e}{{Eb{Hl{B`{An}}}}}{AOhAOj}{AKlAKn}}{{{E`{ce}}}{{E`{ce}}}HjHj}{{{Ih{ce}}}{{Ih{ce}}}HjHj}{HbHb}{{ce}Cj{}{}}00{{}Hb}{{MfMf}Df}{{ce}Df{}{}}000{{MfI`}Ib}{cc{}}000000``<<<<{{{E`{ce}}F`}E`{{AFl{}{{AFj{AH`}}}}}{{AFl{}{{AFj{An}}}}}}{{{Ih{ce}}F`}Ih{{AFl{}{{AFj{AHb}}}}}{{AFl{}{{AFj{An}}}}}}{c{{Jn{e}}}{}{}}000`7``{{{Ll{c}}F`}{{Ll{An}}}{{AFl{}{{AFj{An}}}}}}``{ce{}{}}00{c{{Cn{e}}}{}{}}0000000{cMl{}}0002222{{HbE`}Hb}{{Hb{B`{E`}}}Hb}{{HbIh}Hb}{{Hb{B`{Ih}}}Hb}`````````{cAEf{}}07777{AOlAOl}{MhMh}{{cAJn}An{}}{{ce}Cj{}{}}0{{cEl}{{Cn{MhFj}}}Nb}{{Mhc}{{Cn{GdNd}}}Nf}{{cNf}{{Cn{GdNd}}}{}}{{MhMh}Df}{{ce}Df{}{}}000{{cAn}Df{}}{{cAL`}Cj{}}{{AOlI`}Ib}{{MhI`}Ib}{cc{}}0{{{O`{Kd}}{Of{ObOd}}}{{Cn{cOh}}}{}}11{{Mhc}CjAL`}{ce{}{}}0{{AOlF`}c{}}{{MhF`}c{}}{c{{Jn{e}}}{}{}}0{cC`{}}{MhC`}{c{{B`{Kd}}}{}}66{{cAGbb}{{B`{{ALb{An}}}}}{}}{{Mhcb}{{B`{{ALb{Mh}}}}}{}}{{Chb}Cj}{{Hlb}Cl}{c{{Cn{e}}}{}{}}000{{}Ob}{cMl{}}0==","c":[],"p":[[5,"DynGlobalClientContext",0],[5,"ClientSMDatabaseTransaction",1714],[8,"AddStateMachinesResult",0],[10,"State",2164],[10,"MaybeSend",2450],[10,"MaybeSync",2450],[10,"IGlobalClientContext",0],[10,"IState",2164],[5,"Box",2451],[10,"Future",2452],[5,"Pin",2453],[5,"ModuleGlobalClientContext",0],[5,"Client",0],[5,"DatabaseTransaction",2454],[5,"DynState",2164],[5,"Vec",2455],[5,"PeerId",2456],[5,"ClientConfig",2457],[5,"DynGlobalApi",2458],[8,"Result",2459],[10,"IGlobalFederationApi",2458],[5,"ClientHandle",0],[5,"Arc",2460],[5,"OperationId",2461],[5,"OutPoint",2456],[5,"Amount",2456],[5,"TransactionUpdates",0],[5,"TransactionId",2456],[1,"unit"],[5,"String",2462],[6,"Result",2463],[5,"Metadata",361],[5,"ClientBuilder",0],[5,"DerivableSecret",2464],[1,"bool"],[5,"Database",2454],[1,"u64"],[5,"NodeId",2465],[5,"ChannelUsage",2466],[5,"ClientInput",2310],[1,"tuple"],[10,"IInput",2461],[8,"InstancelessDynClientInput",0],[5,"DynClientModuleInit",1307],[5,"ModuleInitRegistry",2457],[8,"ModuleDecoderRegistry",2467],[17,"Item"],[8,"ModuleInstanceId",2461],[5,"ModuleKind",2461],[10,"Iterator",2468],[5,"ClientStrong",0],[5,"ClientWeak",0],[5,"DecodeError",2469],[8,"ModuleGlobalContextGen",0],[5,"ClientBackup",361],[5,"ClientModuleInstance",0],[10,"ClientModule",1147],[1,"usize"],[6,"Option",2470],[5,"ApiVersionSet",2458],[8,"ClientModuleInitRegistry",1307],[6,"DiscoverCommonApiVersionMode",0],[5,"FederationId",2457],[1,"str"],[5,"TransactionBuilder",2310],[10,"Serialize",2471],[17,"Output"],[10,"Fn",2472],[10,"Clone",2473],[5,"Transaction",2474],[5,"Range",2475],[5,"Formatter",2476],[8,"Result",2476],[6,"AddStateMachinesError",0],[5,"Error",2459],[5,"ClientOutput",2310],[10,"IOutput",2461],[8,"InstancelessDynClientOutput",0],[5,"HashSet",2477],[5,"PublicKey",2478],[5,"JsonClientConfig",2457],[10,"Decodable",2469],[5,"LessSafeKey",2479],[5,"KeyPair",2478],[10,"IClientModule",1147],[6,"InitMode",448],[5,"Request",2480],[5,"TaskGroup",2450],[6,"InitState",448],[1,"u8"],[1,"array"],[5,"MetaService",1045],[5,"DynModuleApi",2458],[5,"OperationLog",1563],[5,"DynClientModule",1147],[5,"RecoveryProgress",1465],[5,"BTreeMap",2481],[5,"Sender",2482],[5,"Receiver",2482],[5,"AdminCreds",0],[10,"Error",2483],[8,"StateGenerator",1147],[10,"Encodable",2469],[8,"BoxStream",2484],[10,"Stream",2485],[5,"SupportedApiVersionsSummary",2486],[6,"TransactionBuilderBalance",2310],[6,"TxSubmissionStates",2388],[5,"OperationState",2164],[5,"TypeId",2487],[5,"EncryptedClientBackup",361],[10,"ClientModuleInit",1307],[10,"Read",2488],[5,"Error",2489],[10,"Write",2488],[10,"Deserializer",2490],[10,"Serializer",2491],[6,"ErrorImpl",2491],[5,"Error",2492],[1,"slice"],[5,"Decoder",2461],[6,"DecodingMode",2467],[5,"ModuleRegistry",2467],[6,"DecodingError",2454],[5,"SignedBackupRequest",2493],[10,"Serializer",2471],[10,"DeserializeOwned",2490],[6,"Value",2494],[5,"DatabaseVersion",2454],[8,"ClientMigrationFn",448],[6,"DbKeyPrefix",448],[5,"DbKeyPrefixIter",448],[5,"ChronologicalOperationLogKey",448],[5,"ClientModuleRecoveryState",448],[5,"MetaFieldKey",448],[5,"MetaFieldPrefix",448],[5,"MetaFieldValue",448],[6,"Ordering",2495],[5,"EncodedClientSecretKey",448],[5,"EncodedClientSecretKeyPrefix",448],[5,"OperationLogKey",448],[5,"CachedApiVersionSetKey",448],[5,"CachedApiVersionSet",448],[5,"ClientConfigKey",448],[5,"ClientMetadataKey",448],[5,"ClientInitStateKey",448],[6,"InitModeComplete",448],[5,"ClientRecoverySnapshot",448],[5,"ClientRecoverySnapshotPrefix",448],[5,"ClientModuleRecovery",448],[5,"LastBackupKey",448],[5,"MetaServiceInfoKey",448],[5,"MetaServiceInfo",448],[5,"ChronologicalOperationLogKeyPrefix",448],[5,"ClientConfigKeyPrefix",448],[5,"ClientMetadataPrefix",448],[5,"ClientInitStatePrefix",448],[5,"ClientModuleRecoveryPrefix",448],[1,"fn"],[5,"Duration",2496],[6,"FetchKind",1045],[5,"MetaValues",1045],[5,"MetaValue",1045],[5,"LegacyMetaSource",1045],[10,"MetaSource",1045],[10,"Sized",2497],[5,"Client",2498],[10,"Debug",2476],[1,"never"],[5,"ClientDbTxContext",1147],[10,"Any",2487],[17,"Init"],[17,"Common"],[17,"Backup"],[17,"ModuleStateMachineContext"],[17,"States"],[10,"ModuleCommon",2499],[10,"ModuleBackup",1465],[10,"Context",2164],[17,"ModuleContext"],[17,"DynType"],[10,"IntoDynInstance",2461],[5,"ClientContext",1147],[5,"FinalClient",1147],[5,"DynContext",2164],[5,"ClientContextSelfRef",1147],[5,"InviteCode",2458],[5,"OperationLogEntry",1563],[5,"ActiveStateMeta",1729],[5,"OsString",2500],[5,"TransactionItemAmount",2499],[5,"DynInput",2461],[5,"DynOutput",2461],[10,"IntoIterator",2501],[6,"AutocommitError",2454],[8,"PhantomBound",2454],[8,"BoxFuture",2484],[5,"ClientModuleInitArgs",1307],[5,"ApiAuth",2499],[5,"ClientModuleRecoverArgs",1307],[5,"ApiVersion",2486],[10,"IClientModuleInit",1307],[10,"IDynCommonModuleInit",2499],[17,"Module"],[5,"ClientModuleConfig",2457],[5,"Notifier",2111],[5,"ModuleNotifier",2111],[5,"NumPeers",2456],[5,"DynModuleBackup",1465],[5,"MultiApiVersion",2486],[5,"RecoveryFromHistoryCommon",1419],[10,"RecoveryFromHistory",1419],[5,"AcceptedItem",2502],[10,"IModuleBackup",1465],[1,"u16"],[6,"NoModuleBackup",1465],[6,"UpdateStreamOrOutcome",1563],[10,"FnOnce",2472],[8,"Result",2489],[10,"DeriveableSecretClientExt",1627],[5,"PlainRootSecretStrategy",1627],[10,"RngCore",2503],[10,"CryptoRng",2503],[10,"Hasher",2504],[5,"StateTransition",2164],[5,"Executor",1729],[5,"InactiveStateMeta",1729],[5,"ExecutorBuilder",1729],[5,"InactiveStateKey",1729],[5,"InactiveStateKeyPrefix",1729],[5,"ActiveStateKey",1729],[5,"ActiveStateKeyBytes",1729],[5,"InactiveStateKeyBytes",1729],[5,"ActiveStateKeyPrefixBytes",1729],[5,"InactiveStateKeyPrefixBytes",1729],[5,"ActiveOperationStateKeyPrefix",1729],[5,"ActiveModuleOperationStateKeyPrefix",1729],[5,"ActiveStateKeyPrefix",1729],[5,"InactiveOperationStateKeyPrefix",1729],[5,"InactiveModuleOperationStateKeyPrefix",1729],[5,"ExecutorInner",1729],[6,"ActiveOrInactiveState",1729],[5,"TransitionForActiveState",1729],[5,"UnboundedReceiver",2505],[5,"NotifierSender",2111],[10,"IContext",2164],[10,"Hash",2504],[10,"Send",2497],[17,"State"],[10,"MapStateTransitions",2286],[5,"Secp256k1",2506],[10,"Signing",2507],[10,"Verification",2507],[5,"TxSubmissionContext",2388],[8,"ClientHandleArc",0],[15,"Recover",1042],[8,"ClientModuleRegistry",1147],[15,"Default",1561],[10,"RootSecretStrategy",1627],[6,"ExecutorDbPrefixes",1729],[8,"ContextGen",1729],[15,"Active",2108],[15,"Inactive",2108],[8,"StateTransitionFunction",2164]],"b":[[130,"impl-Debug-for-AddStateMachinesError"],[131,"impl-Display-for-AddStateMachinesError"],[145,"impl-From%3CArc%3CT%3E%3E-for-DynGlobalClientContext"],[146,"impl-From%3CI%3E-for-DynGlobalClientContext"],[683,"impl-Display-for-DbKeyPrefix"],[684,"impl-Debug-for-DbKeyPrefix"],[1325,"impl-AsRef%3Cdyn+IClientModuleInit%3E-for-DynClientModuleInit"],[1326,"impl-AsRef%3Cdyn+IDynCommonModuleInit+%2B+Send+%2B+Sync%3E-for-DynClientModuleInit"],[1514,"impl-Display-for-RecoveryProgress"],[1515,"impl-Debug-for-RecoveryProgress"]]}],\
["fedimint_core",{"doc":"Fedimint Core library","t":"PFPGKGTRFRTPPFKFGFSEEFSPTQQQQNNCMNCCXNNNMNNNNQCNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNCCNNNNNNNNQNNNNNNNQQQNNCCNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNQQNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNMNNNNNNNNNNNNNNCQQNNNNNNNNNNMNNNNNNNNNNCNQQCQQQQQQQHONCNONNNNNNQQQQQCNNCHNONNQNNNNNNQECNNNNCNCCCCNNNNNNNNNNNNNNNNNNNNMNCNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNCNNNNNNNNNHNFFFFFONNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOCNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNHHCCHHPFPSPPPPPPFFPPPPPKFPFIFFFKKKPPPFGKIPPPPGIGGFIFPPPPPIGPPFPPPFMNMNNNMNMNMNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNMOMNNNNNNNNNNONNNNNNNNNNNNNNHMNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNMNNNNNMNONMNMNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOOONNNNNNOOONNOOOOONNNNNNNMNNNNMNOMNNNNNNNNNOMNMNOMNMNMNNNMNMNOMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOMNNNNNNNNNNNNNNNNNNNMNNOOOOOOOFFFNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHCCCHHHHHHSPFFPIFRRPGKGGIPFPPPFFPPFPKFFRRSSSPPKFPPPFRPKFIFIPGKKONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMMNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOOONHOONOOOONNNNNNONNCCNNNNNNNNNNNNNNNNMNONNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOMOONNNNNNNNNNNNNNNNNNHHFNNHNNNNNNHNNNNNKIFFFFFFFFFRFGKKKKKKKKKKFFSSSSKIFGFKKKPOONMMMMMMMNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNCNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFFNNNNNNNNNNNNNNNNNNNONNNNOONNNOONNNNNNNNNNFKMMMNNNNMMNNNNNNONNMMMMNNNNNPGFFPPPPFFTFKKKKKFKFPFFGFGKKKKKKKKRSGTTFPPPIFFIRIPGRRKPPNNHHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNHHHHMNONNNNNNNNNNNNNNNNNNHMNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNHNNNMNOONONOOOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOCOHHNNNNNNCOOMNNONNONNNNOOMMNNNNNNOOMNNNMNNNMNNNMNNNMNNNMNNNMNNMNHMNMNNNNNNMNNNNNCMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOFFGPFPFFNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOONNNNNNNONNNNNNNNNNNNNONNNNNNONNNNNNSFFNNNNNOONNNNNNNNNNNNNNHHNNNNNNNNNSFPFFFFFPSPGFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHNNNNNNNNNNFFKYFPKGKYSPFCCNNNNNNNNNNCONNNNNNNNHHHHNNNNMNNNHHMNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHQQQONNNNNNNNNNNONNNNHNCNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHHQSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFSSSSSNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNONGPPPNNNNNNNNNNNNNNNNNNNNNNNNNOOFFFKFMNNNNNNNNNNHNNNNNHHHNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNCHHCFNNNNNNNNONNNNNNNFFFFFIFTRRRRKRFTFFIIKKRRRFTKFKFFRRRTRRFRFKKFRFFFFKTOOOOOQMMNNCMOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONMOOOMNNOONOMMNNNNNNNNNMMNNNMMNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNMONONNMMOONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOMNONNNNNNNONOMOONONMMMOCNONNNNMMNOMNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMCMNNNNNNNNNNNNNNNNFFFFNNNNNNNNNHNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNOOOOOONOONNNNNNNNNNNNNNNNNNNNNNGPIEFPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNOOONNNNNNNNNNNNFFFFFFFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCKKFFMMNNNNNNNNNCNNNNNNNNNMMMMNNNNNNNNNFNNNNNNHONONONNONNPFFPFFGKPPFFFFNNNNNNNNNNNNNNNNNNOOHHHOOOOOOOOONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOFFFONNHHNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNOOHHHHNNNNNNNNNNNNNNNNFFOHHOOOHHHHHFPPPFFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFPKKPFFFFFFNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNCONNNNNONNOONNNNHNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCPIFFIIGPNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNONNNFNNNNONNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNONNNNNOONNONONNNNNNNNNPPPPTPPIFGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNOOONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOFNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNRKIIFFFKRFFNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNOOONNOOOOOOONMMNNNNNNHNNNONNNNNNNNNNNNNNNNNNNNNNNNCNNONNNNNNNNNNNNNNNNNNNNHHHHFGPNNNNNNNNNNNNNNNNNNONNNNNHNNNNNNNNNNNNNNNFNNNNNNNONNNNN","n":["All","Amount","Amount","BitcoinAmountOrAll","BitcoinHash","CoreError","DISPLAY_BACKWARD","Engine","Feerate","Inner","LEN","MismatchingVariant","NotANumber","NumPeers","NumPeersExt","OutPoint","ParseAmountError","PeerId","SATS_PER_BITCOIN","ServerModule","Tiered","TransactionId","WITNESS_SCALE_FACTOR","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_define_with_instance_id_inner","_dyn_newtype_impl_deref_mut","add","add_assign","admin_client","all_zeros","all_zeros","amount","api","apply","as_bits","as_byte_slice","as_hash","as_inner","as_inner","as_ref","as_slice_of","as_usize","async_trait_maybe_send","backup","base32_len","bitcoin_migration","bls12_381_serde","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","check_base32","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","config","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","db","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_as_encodable_hex","div","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_newtype_define","dyn_newtype_display_passthrough","dyn_newtype_impl_dyn_clone_passthrough","encode_hex","encode_hex_upper","encoding","endpoint_constants","engine","engine","ensure_sats_precision","envs","epoch","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extensible_associated_module_type","fedimint_build_code_version_env","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_utils","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bitcoins","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_msats","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_sats","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","hash","hash","hex","impl_db_lookup","impl_db_record","index","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","macros","max_evil","maybe_add_send","maybe_add_send_sync","module","module_plugin_dyn_newtype_clone_passthrough","module_plugin_dyn_newtype_define","module_plugin_dyn_newtype_display_passthrough","module_plugin_dyn_newtype_encode_decode","module_plugin_dyn_newtype_eq_passthrough","module_plugin_static_trait_define","module_plugin_static_trait_define_config","msats","msats","mul","net","one_honest","out_idx","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl_common","plugin_types_trait_impl_config","push_db_key_items","push_db_pair_items","push_db_pair_items_no_serde","query","rem","rem_assign","runtime","sats","sats_f64","sats_per_kvb","sats_round_down","saturating_sub","serde_as_encodable_hex","serialize","serialize","serialize","serialize","serialize","serialize","serialize_as_encodable_hex","server","session_outcome","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","time","timing","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_usize","total","total","transaction","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_sats","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight_to_vbytes","write_base32","ConfigGenConnectionsRequest","ConfigGenParamsConsensus","ConfigGenParamsRequest","ConfigGenParamsResponse","PeerServerParams","api_url","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","leader_api_url","meta","meta","modules","modules","name","our_current_id","our_name","p2p_url","peers","serde_tls_cert","serialize","serialize","serialize","serialize","serialize","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","serde","as_msat","deserialize","serialize","Api","ApiVersionSet","AwaitingPassword","BECH32_HRP","ConfigGenFailed","Connected","ConsensusRunning","Core","Default","Disconnected","DynGlobalApi","DynModuleApi","Err","Err","Err","Err","Federation","FederationApiExt","FederationError","FederationId","FederationPeer","FederationResult","FederationStatus","GlobalFederationApiWithCache","GuardianConfigBackup","IGlobalFederationApi","IModuleFederationApi","IRawFederationApi","InvalidPeerId","InvalidResponse","InvalidVout","InviteCode","InviteCodeData","JsonRpcClient","JsonRpcResult","Ok","Ok","Ok","Ok","OutputOutcomeError","OutputOutcomeResult","PeerConnectionStatus","PeerError","PeerResponse","PeerResult","PeerStatus","ReadyForConfigGen","Rejected","ResponseDeserialization","ResponseDeserialization","Rpc","SerdeOutputOutcome","ServerStatus","SetupRestarted","SharingConfigGenParams","StatusResponse","Timeout","VerifiedConfigs","VerifyingConfigs","WsFederationApi","add_config_gen_peer","add_config_gen_peer","all_peers","all_peers","all_peers","as_ref","audit","audit","auth","auth","await_block","await_block","await_block_raw","await_output_outcome","await_session_lru","await_transaction","await_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_status","consensus_config_gen_params","consensus_config_gen_params","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","default","default","default","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_outcome","discover_api_version_set","discover_api_version_set","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","download_backup","download_backup","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation","federation_id","flagged","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_config","from_config","from_endpoints","from_invite_code","from_invite_code","from_pre_peer_id_endpoint","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_single_endpoint","from_str","general","general","get_config_gen_peers","get_config_gen_peers","get_default_config_gen_params","get_default_config_gen_params","get_general_error","get_mut","get_mut","get_peer_errors","get_session_status","get_session_status","get_session_status_lru","get_session_status_raw","get_verify_config_hash","get_verify_config_hash","guardian_config_backup","guardian_config_backup","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_connected","is_rejected","last_contribution","module_id","modules","new","new","new","new_with_client","new_with_essential_num_guardians","peer","peer","peer_id","peer_ids","peers","peers","peers","peers","peers_flagged","peers_offline","peers_online","report_if_important","report_if_important","report_if_important","request","request_admin","request_admin_no_auth","request_current_consensus","request_raw","request_raw","request_raw","request_single_peer","request_with_strategy","restart_federation_setup","restart_federation_setup","result","run_dkg","run_dkg","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","server_config_consensus_hash","server_config_consensus_hash","session_count","session_count","session_count","set_config_gen_connections","set_config_gen_connections","set_config_gen_params","set_config_gen_params","set_password","set_password","source","source","start_consensus","start_consensus","status","status","status_by_peer","submit_transaction","submit_transaction","tar_archive_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_backup","upload_backup","url","url","verified_configs","verified_configs","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module","with_module","bytes","peer","url","variant","out_idx","outputs_num","peer_id","ClientBackupKey","ClientBackupKeyPrefix","ClientBackupSnapshot","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","do_erased_serialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","into","into","into","into_request","into_request","into_request","serialize","serialize","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","bitcoin29_to_bitcoin30_address","bitcoin29_to_bitcoin30_amount","bitcoin29_to_bitcoin30_hash160_hash","bitcoin29_to_bitcoin30_message","bitcoin29_to_bitcoin30_network","bitcoin29_to_bitcoin30_outpoint","bitcoin29_to_bitcoin30_public_key","bitcoin29_to_bitcoin30_ripemd160_hash","bitcoin29_to_bitcoin30_schnorr_signature","bitcoin29_to_bitcoin30_secp256k1_public_key","bitcoin29_to_bitcoin30_secp256k1_secret_key","bitcoin29_to_bitcoin30_sha256_hash","bitcoin29_to_bitcoin30_txid","bitcoin30_to_bitcoin29_address","bitcoin30_to_bitcoin29_amount","bitcoin30_to_bitcoin29_message","bitcoin30_to_bitcoin29_network","bitcoin30_to_bitcoin29_outpoint","bitcoin30_to_bitcoin29_schnorr_signature","bitcoin30_to_bitcoin29_script","bitcoin30_to_bitcoin29_secp256k1_public_key","bitcoin30_to_bitcoin29_secp256k1_secret_key","bitcoin30_to_bitcoin29_txid","g1","g2","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize","ALEPH_BFT_UNIT_BYTE_LIMIT","Cancelled","ClientConfig","ClientModuleConfig","Commit","CommonModuleInitRegistry","ConfigGenModuleParams","Consensus","Consensus","DistributedGen","DkgError","DkgGroup","DkgMessage","DkgPeerMsg","DkgResult","Done","EmptyGenParams","Err","Extract","Failed","FederationId","FederationIdPrefix","G1","G2","GlobalClientConfig","HashedCommit","ISupportedDkgMessage","JsonClientConfig","JsonWithKind","Local","Local","META_FEDERATION_NAME_KEY","META_OVERRIDE_URL_KEY","META_VETTED_GATEWAYS_KEY","Module","ModuleDecodeError","ModuleInitParams","ModuleInitRegistry","ModuleNotFound","Ok","ParamsNotFound","PeerUrl","Private","PublicKey","SGroup","ServerModuleConfig","ServerModuleConfigGenParamsRegistry","ServerModuleConsensusConfig","ServerModuleInitRegistry","Share","SupportedDkgMessage","TypedServerModuleConfig","TypedServerModuleConsensusConfig","api_endpoints","attach","available_decoders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_federation_id","calculate_federation_id","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","config","config","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash","consensus_json","consensus_version","de_int_key","decoders","decoders_strict","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","download_from_invite_code","dummy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_array","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_erased","from_iter","from_msg","from_msg","from_msg","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","from_typed","from_typed","get","get_first_module_by_kind","get_first_module_by_kind_cfg","get_module","get_module_cfg","global","global","hash","hash","hash","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","is_kind","is_kind","kind","kind","kind","kind","kind","kind","kinds","load_from_file","local","local","meta","meta","modules","modules","name","new","new","new","parse","partial_cmp","partial_cmp","private","redecode_raw","redecode_raw","serde_binary_human_readable","serde_commit","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","source","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_common","to_common","to_erased","to_fake_ln_pub_key","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_prefix","to_string","to_string","to_string","to_typed","to_typed","try_download_client_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","value","value","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","deserialize","serialize","Wrap","borrow","borrow_mut","deserialize","deserialize","do_erased_serialize","erased_serialize","from","into","into_request","serialize","serialize","try_from","try_into","type_id","vzip","ClientConfig","DecodeFn","Decoder","DecoderBuilder","DynClientConfig","DynInput","DynInputError","DynModuleConsensusItem","DynOutput","DynOutputError","DynOutputOutcome","DynType","DynUnknown","FinalizationError","IClientConfig","IInput","IInputError","IModuleConsensusItem","IOutput","IOutputError","IOutputOutcome","Input","InputError","IntoDynInstance","IntoDynNever","KeyPair","LEGACY_HARDCODED_INSTANCE_ID_LN","LEGACY_HARDCODED_INSTANCE_ID_MINT","LEGACY_HARDCODED_INSTANCE_ID_WALLET","MODULE_INSTANCE_ID_GLOBAL","ModuleConsensusItem","ModuleInstanceId","ModuleKind","Never","OperationId","Output","OutputError","OutputOutcome","SomethingWentWrong","_never","_phantom","add_xonly_tweak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","as_str","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_str","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","consensus_decode","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode_complete","decode_fns","decode_fns","decode_partial","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","display_secret","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_static_str","from_str","from_str","from_typed","from_typed","from_typed","from_typed","from_typed","from_typed","from_typed","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","inner","inner","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","new","new_global","new_random","partial_cmp","partial_cmp","partial_cmp","public_key","secret_bytes","secret_key","serialize","serialize","serialize","server","sign_schnorr","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_decodable_type","x_only_public_key","BACKUP_REQUEST_MAX_PAYLOAD_SIZE_BYTES","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","deserialize","deserialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","DynServerModule","IServerModule","api_endpoints","as_any","audit","borrow","borrow_mut","clone","clone_into","consensus_proposal","decoder","deref","fmt","from","from","from_ref","get_mut","inner","into","into_request","output_status","process_consensus_item","process_input","process_output","to_owned","try_from","try_into","type_id","vzip","AltTest","AutocommitError","BaseDatabase","BaseDatabaseTransaction","Borrowed","ClientBackup","ClosureError","CommitFailed","CommitTracker","Committable","DB_PREFIX","Database","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyWithNotify","DatabaseLookup","DatabaseRecord","DatabaseTransaction","DatabaseValue","DatabaseVersion","DatabaseVersion","DatabaseVersionKey","DatabaseVersionKeyV0","DbKeyPrefix","DbKeyPrefixIter","DecodingError","IDatabase","IDatabaseTransaction","IDatabaseTransactionOps","IDatabaseTransactionOpsCore","IDatabaseTransactionOpsCoreTyped","IRawDatabase","IRawDatabaseExt","IRawDatabaseTransaction","Key","MODULE_GLOBAL_PREFIX","MaybeRef","NOTIFY_ON_MODIFY","NOTIFY_ON_MODIFY","NonCommittable","Other","Owned","PercentTestKey","PhantomBound","PrefixDatabase","PrefixDatabaseTransaction","PrefixStream","Record","ServerMigrationFn","Test","TestDbKeyPrefix","Transaction","Value","WithDecoders","WrongLength","WrongPrefix","adapt_prefix_stream","add_notification_key","apply_migrations","apply_migrations_server","autocommit","back_idx","begin_transaction","begin_transaction","begin_transaction","begin_transaction","begin_transaction","begin_transaction_nc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capability","channel_penalty_msat","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_tracker","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx_result","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","create_database_version","decode_key_expect","decode_value","decode_value_expect","decoders","decoders","decoders","deref","deref_mut","do_erased_serialize","do_erased_serialize","do_erased_serialize","drop","ensure_global","ensure_global","ensure_isolated","ensure_isolated","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","expect_write_conflict","find_by_prefix","find_by_prefix","find_by_prefix_sorted_descending","find_by_prefix_sorted_descending","find_by_prefix_sorted_descending","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future_returns_shortly","get","get_full_key","get_full_key","get_value","get_value","has_writes","idx","ignore_uncommitted","ignore_uncommitted","increment","inner","inner","inner","insert_entry","insert_entry","insert_new_entry","insert_new_entry","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_database","into_inner","into_iter","into_nc","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_committed","is_global","is_global","iter","len","marker","mem_impl","module_decoders","module_instance_id_or_global","module_instance_id_to_byte_prefix","new","new","new","new_from_arc","next","next_back","notifications","notifications","notifications","notify","notify","notify","notify_queue","nth","on_commit","on_commit_hooks","other","partial_cmp","payment_path_failed","payment_path_successful","prefix","prefix","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","probe_failed","probe_successful","raw","raw","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_get_bytes","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","raw_remove_entry","raw_remove_entry","register","register","register","remove_by_prefix","remove_by_prefix","remove_current_db_version_if_exists","remove_entry","remove_entry","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","serialize","serialize","serialize","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","size_hint","strong_count","test_utils","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_ref","to_ref_nc","to_ref_with_prefix","to_ref_with_prefix_module_id","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_db","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_check","wait_key_exists","warn_uncommitted","with_decoders","with_prefix","with_prefix","with_prefix_module_id","with_prefix_module_id","wrong_length","wrong_prefix","attempts","attempts","error","last_error","expected","expected","found","found","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseOperation","Delete","DummyError","Insert","MemDatabase","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","db","default","default","default","dump_db","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","key","key","new","num_pending_operations","num_savepoint_operations","old_value","old_value","operations","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","rollback_tx_to_savepoint","savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","NOTIFY_BUCKETS","Notifications","NotifyQueue","add","borrow","borrow","borrow_mut","borrow_mut","buckets","buckets","default","default","fmt","fmt","from","from","into","into","into_request","into_request","new","new","notify","register","slot_index_for_hash","slot_index_for_key","submit_queue","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ALT_MODULE_PREFIX","AltDbPrefixTestPrefix","AltTest","AltTestKey","DbPrefixTestPrefix","DbPrefixTestPrefixV0","PercentPrefixTestPrefix","PercentTestKey","PercentTestKey","TEST_MODULE_PREFIX","Test","TestDbKeyPrefix","TestKey","TestKeyV0","TestVal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","cmp","cmp","compare","compare","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expect_write_conflict","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","future_returns_shortly","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","migrate_test_db_version_0","partial_cmp","partial_cmp","partial_cmp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_db","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BigSize","CountWrite","Decodable","Decodable","DecodeError","Decoded","DynEncodable","DynRawFallback","Encodable","Encodable","MAX_DECODE_SIZE","Raw","ReadBytesFromFiniteReaderOpts","as_hex","bls12_381","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc","chunk_size","clone","clone","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode","consensus_decode_bytes","consensus_decode_bytes_from_finite_reader","consensus_decode_bytes_static","consensus_decode_bytes_static_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_hex","consensus_decode_vec","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_bytes","consensus_encode_bytes_static","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_to_hex","consensus_encode_to_len","consensus_encode_to_vec","consensus_hash","count","count","decoded","deserialize","do_erased_serialize","emit_bool","emit_bool","emit_i16","emit_i16","emit_i32","emit_i32","emit_i64","emit_i64","emit_i8","emit_i8","emit_slice","emit_slice","emit_u16","emit_u16","emit_u32","emit_u32","emit_u64","emit_u64","emit_u8","emit_u8","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","expect_decoded","expect_decoded_ref","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_err","from_ref","from_ref","from_str","hash","horribe_array_transmute_workaround","impl_encode_decode_num_as_bigsize","impl_encode_decode_num_as_plain","impl_encode_decode_tuple","inner","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","len","new_custom","partial_cmp","read","read","read_bytes_from_finite_reader","redecode_raw","secp256k1","serialize","threshold_crypto","tls","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write","write","write","write_all","write_fixedint","write_varint","module_instance_id","raw","deserialize","serialize","impl_encode_decode_bridge","ACCOUNT_ENDPOINT","ADD_CONFIG_GEN_PEER_ENDPOINT","AUDIT_ENDPOINT","AUTH_ENDPOINT","AWAIT_ACCOUNT_ENDPOINT","AWAIT_BLOCK_HEIGHT_ENDPOINT","AWAIT_INCOMING_CONTRACT_ENDPOINT","AWAIT_OFFER_ENDPOINT","AWAIT_OUTGOING_CONTRACT_CANCELLED_ENDPOINT","AWAIT_OUTPUT_OUTCOME_ENDPOINT","AWAIT_PREIMAGE_DECRYPTION","AWAIT_PREIMAGE_ENDPOINT","AWAIT_SESSION_OUTCOME_ENDPOINT","AWAIT_SIGNED_SESSION_OUTCOME_ENDPOINT","AWAIT_TRANSACTION_ENDPOINT","BACKUP_ENDPOINT","BLOCK_COUNT_ENDPOINT","BLOCK_COUNT_LOCAL_ENDPOINT","CLIENT_CONFIG_ENDPOINT","CONFIG_GEN_PEERS_ENDPOINT","CONSENSUS_BLOCK_COUNT_ENDPOINT","CONSENSUS_CONFIG_GEN_PARAMS_ENDPOINT","DEFAULT_CONFIG_GEN_PARAMS_ENDPOINT","FEDERATION_ID_ENDPOINT","GET_DECRYPTED_PREIMAGE_STATUS","GUARDIAN_CONFIG_BACKUP_ENDPOINT","INVITE_CODE_ENDPOINT","LIST_GATEWAYS_ENDPOINT","MODULES_CONFIG_JSON_ENDPOINT","OFFER_ENDPOINT","OUTGOING_CONTRACT_EXPIRATION_ENDPOINT","PEG_OUT_FEES_ENDPOINT","RECOVER_ENDPOINT","REGISTER_GATEWAY_ENDPOINT","REMOVE_GATEWAY_CHALLENGE_ENDPOINT","REMOVE_GATEWAY_ENDPOINT","RESTART_FEDERATION_SETUP_ENDPOINT","RUN_DKG_ENDPOINT","SERVER_CONFIG_CONSENSUS_HASH_ENDPOINT","SESSION_COUNT_ENDPOINT","SESSION_STATUS_ENDPOINT","SET_CONFIG_GEN_CONNECTIONS_ENDPOINT","SET_CONFIG_GEN_PARAMS_ENDPOINT","SET_PASSWORD_ENDPOINT","START_CONSENSUS_ENDPOINT","STATUS_ENDPOINT","SUBMIT_TRANSACTION_ENDPOINT","VERIFIED_CONFIGS_ENDPOINT","VERIFY_CONFIG_HASH_ENDPOINT","VERSION_ENDPOINT","BitcoinRpcConfig","FEDIMINT_BUILD_CODE_VERSION_ENV","FM_BITCOIND_COOKIE_FILE_ENV","FM_BITCOIN_RPC_KIND_ENV","FM_BITCOIN_RPC_URL_ENV","FM_USE_UNKNOWN_MODULE_ENV","borrow","borrow_mut","clone","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","deserialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_env_vars","from_ref","hash","into","into_request","is_env_var_set","kind","serialize","to_bytes","to_owned","try_from","try_into","type_id","url","vzip","ConsensusItem","Default","Module","Transaction","borrow","borrow_mut","clone","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_bytes","from_ref","hash","into","into_request","to_bytes","to_owned","try_from","try_into","type_id","vzip","bytes","variant","AbbreviateDebug","AbbreviateHexBytes","AbbreviateJson","AbbreviatedDebug","OptStacktrace","abbreviated_fmt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_penalty_msat","deref","floor_char_boundary","fmt","fmt","fmt","fmt","fmt","fmt_abbreviated_object","fmt_abbreviated_str","fmt_abbreviated_vec","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","rust_log_full_enabled","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","serde","deserialize","serialize","tests","Data","borrow","borrow_mut","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","inner","into","into_request","serialize","try_from","try_into","type_id","vzip","ApiAuth","ApiEndpoint","ApiEndpointContext","ApiError","ApiRequest","ApiRequestErased","ApiVersion","CONSENSUS_VERSION","ClientConfig","ClientConfig","Common","Common","CommonModuleInit","ConsensusItem","CoreConsensusVersion","DATABASE_VERSION","DynCommonModuleInit","DynServerModuleInit","HandlerFn","HandlerFnReturn","IDynCommonModuleInit","IServerModuleInit","Init","Input","InputError","InputMeta","KIND","ModuleCommon","ModuleConsensusVersion","ModuleInit","MultiApiVersion","MultiApiVersionIter","Output","OutputError","OutputOutcome","PATH","Param","Params","PeerHandle","Response","SerdeModuleEncoding","ServerModule","ServerModuleInit","ServerModuleInitArgs","State","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","TransactionItemAmount","TypedApiEndpoint","ZERO","_marker","amount","amount","api","api","api_endpoint","api_endpoints","as_common","as_ref","as_ref","audit","audit","auth","auth","bad_request","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","cfg","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","commit_tx_result","consensus_proposal","core","core_consensus","core_consensus","database_version","db","db","db","db","dbtx","dbtx","decoder","decoder","decoder","decoder","decoder_builder","default","deref","deref","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_typed","get_client_config","get_client_config","get_database_migrations","get_database_migrations","get_mut","get_mut","handle","handler","has_auth","has_auth","hash","hash","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","major","major","major","message","minor","minor","minor","module_consensus","module_kind","module_kind","modules","new","new","new","new","new","not_found","num_peers","num_peers","our_peer_id","our_peer_id","output_status","params","params","parse_params","path","peer_ids","process_consensus_item","process_input","process_output","pub_key","registry","request_auth","request_auth","serialize","serialize","serialize","server_error","supported_api_versions","supported_api_versions","task_group","task_group","to_dyn_common","to_json","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_typed","to_typed","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner_known_module_kind","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unauthorized","validate_config","validate_config","validate_params","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_exists","wait_value_matches","with_auth","with_auth","Audit","AuditItem","AuditSummary","ModuleSummary","add_items","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_net_assets","clone","clone","clone_into","clone_into","create_empty_module_placeholder","default","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_audit","from_ref","from_ref","generate_module_summaries","into","into","into","into","into_request","into_request","into_request","into_request","items","kind","milli_sat","module_instance_id","module_summaries","name","net_assets","net_assets","net_assets","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DecodingMode","Fallback","ModuleDecoderRegistry","ModuleInstanceId","ModuleRegistry","Reject","ServerModuleRegistry","append_module","assert_reject_mode","assert_reject_mode","attach_config_gen_params","attach_config_gen_params_by_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decoder_registry","decoder_registry","decoding_mode","decoding_mode","default","default","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_iter","from_ref","from_ref","get","get_expect","get_with_kind","hash","inner","inner","inner","into","into","into_iter_modules","into_request","into_request","is_empty","iter_modules","iter_modules_id_kind","iter_modules_mut","new","register_module","state","state","state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_fallback","with_fallback","ApiVersion","CoreConsensusVersion","ModuleConsensusVersion","MultiApiVersion","MultiApiVersionIter","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","api","api","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","core_consensus","core_consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_raw","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_by_major","get_minor_api_version","get_minor_api_version","into","into","into","into","into","into","into","into","into_iter","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_consistent","iter","major","major","major","minor","minor","minor","module_consensus","modules","new","new","new","new","next","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","peers","IMuxPeerConnections","IPeerConnections","MuxPeerConnections","PeerConnections","ban_peer","ban_peer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","fake","from","from","from_ref","into","into","into_dyn","into_dyn","into_request","into_request","receive","receive","send","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FakePeerConnections","ban_peer","borrow","borrow_mut","from","into","into_request","make_fake_peer_connection","peer_id","receive","rx","send","task_handle","try_from","try_into","tx","type_id","vzip","Continue","DiscoverApiVersionSet","ErrorStrategy","Failure","FilterMap","FilterMapThreshold","QueryStep","QueryStrategy","Retry","Success","ThresholdConsensus","ThresholdOrDeadline","UnionResponses","UnionResponsesSingle","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_versions","deadline","discover_common_api_versions_set","discover_common_core_api_version","discover_common_module_api_version","error_strategy","error_strategy","error_strategy","error_strategy","error_strategy","errors","filter_map","filter_map","filtered_responses","fmt","format_errors","from","from","from","from","from","from","from","from","from","get_most_common_response","inner","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","new","new","new","new","new","new","new","process","process","process","process","process","process","process","process","process","request_timeout","request_timeout","responses","responses","responses","responses","retry","threshold","threshold","threshold","threshold","threshold","threshold","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","general","peers","Elapsed","JoinError","JoinHandle","_p","abort","abort_handle","block_in_place","block_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","id","id","id","impl","into","into","into","into_future","into_panic","into_request","into_request","into_request","is_cancelled","is_finished","is_panic","poll","raw","repr","sleep","sleep_until","spawn","timeout","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_panic","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","JoinError","JoinHandle","_p","block_in_place","block_on","id","raw","repr","sleep","sleep_until","spawn","spawn_local","timeout","AcceptedItem","Complete","Initial","Pending","SchnorrSignature","SessionOutcome","SessionStatus","SignedSessionOutcome","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash_sha256","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","hash","header","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","item","items","peer","session_outcome","signatures","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","using_encoded","vzip","vzip","vzip","vzip","vzip","Cancellable","Cancelled","Err","MaybeSend","MaybeSync","Ok","ShuttingDownError","TaskGroup","TaskGroupInner","TaskHandle","TaskPanicGuard","TaskShutdownToken","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_on_shutdown","clone","clone","clone","clone_into","clone_into","clone_into","completed","default","default","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_shutting_down","is_shutting_down","jit","join","join_all","join_all_inner","make_handle","make_shutdown_rx","make_subgroup","name","new","new","on_shutdown_rx","on_shutdown_tx","poll","shutdown","shutdown","shutdown_join_all","sleep_in_test","spawn","spawn_cancellable","spawn_local","subgroups","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiter","Copy","Jit","JitCore","JitInner","JitTry","JitTryAnyhow","OneTimeError","Original","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone_into","drop","fmt","fmt","fmt","fmt","from","from","from","from_ref","get","get_try","handle","inner","inner","inner","inner","into","into","into","into_request","into_request","into_request","new","new_try","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","val","vzip","vzip","vzip","Waiter","borrow","borrow_mut","default","done","done_semaphore","fmt","from","into","into_request","is_done","new","try_from","try_into","type_id","vzip","wait","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","consensus_decode","consensus_encode","consensus_encode_dyn","count_tiers","default","deserialize","deserialize","do_erased_serialize","do_erased_serialize","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_iter","from_ref","from_ref","gen_denominations","get","get_mut","get_mut_or_default","hash","hash","insert","into","into","into_request","into_request","iter","max_tier","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TieredMulti","TieredMultiZip","TieredSummary","_pd","all_tiers_exist_in","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","count_items","count_items","count_tiers","count_tiers","default","default","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","fmt","fmt","from","from","from","from_bytes","from_iter","from_iter","from_ref","from_ref","get","get_mut","hash","inc","into","into","into","into_iter","into_iter","into_iter_items","into_request","into_request","into_request","is_empty","iter","iter","iter_items","iter_tiers","iters","longest_tier_except","multiunzip","new","new","next","represent_amount","serialize","serialize","structural_eq","summary","to_bytes","to_owned","to_owned","total_amount","total_amount","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","duration_since_epoch","now","TimeReporter","TimeReporterInner","borrow","borrow","borrow_mut","borrow_mut","cancel","drop","finish","from","from","info","inner","into","into","into_request","into_request","level","level","name","new","report","start","threshold","threshold","threshold_millis","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Default","Input","InvalidSignature","InvalidWitnessLength","MAX_TX_SIZE","NaiveMultisig","Output","SerdeTransaction","Transaction","TransactionError","TransactionSignature","UnbalancedTransaction","UnsupportedSignatureScheme","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","hash","hash","inputs","into","into","into","into_request","into_request","into_request","nonce","outputs","signatures","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signatures","vzip","vzip","vzip","fee","hash","inputs","key","outputs","sig","tx","variant","bytes","variant","TxOutProof","block","block_header","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contains_tx","deserialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_ref","hash","into","into_request","merkle_proof","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","Backoff","BackoffBuilder","BoxFuture","BoxStream","ConstantBackoff","ExponentialBackoff","FibonacciBackoff","NextOrPending","Output","SafeUrl","Spanned","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaststream","build","build","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","default","default","default","delay","deserialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","factor","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","handle_version_hash_command","hash","host","host_str","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_value","jitter","jitter","jitter","join","map","max_delay","max_delay","max_times","max_times","max_times","min_delay","min_delay","new","next_or_pending","ok","parse","partial_cmp","password","path","port","port_or_known_default","retry","scheme","serialize","span","span","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_unsafe","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","update_merge","username","value","value","value_mut","vzip","vzip","vzip","vzip","vzip","with","with_delay","with_factor","with_jitter","with_jitter","with_jitter","with_max_delay","with_max_delay","with_max_times","with_max_times","with_max_times","with_min_delay","with_min_delay","with_sync","write_new","write_new_async","write_overwrite","write_overwrite_async","BroadcastStream","BroadcastStreamRecvError","Lagged","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ref","inner","into","into","into_request","into_request","into_streaming_request","make_future","new","next_or_pending","ok","poll_next","to_owned","to_string","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","UpdateMerge","borrow","borrow_mut","default","fmt","from","into","into_request","last_failed","merge","try_from","try_into","type_id","vzip"],"q":[[0,"fedimint_core"],[403,"fedimint_core::admin_client"],[534,"fedimint_core::admin_client::serde_tls_cert"],[536,"fedimint_core::amount"],[537,"fedimint_core::amount::serde"],[538,"fedimint_core::amount::serde::as_msat"],[540,"fedimint_core::api"],[1063,"fedimint_core::api::InviteCodeData"],[1067,"fedimint_core::api::OutputOutcomeError"],[1069,"fedimint_core::api::PeerError"],[1070,"fedimint_core::backup"],[1143,"fedimint_core::bitcoin_migration"],[1166,"fedimint_core::bls12_381_serde"],[1169,"fedimint_core::bls12_381_serde::g1"],[1171,"fedimint_core::bls12_381_serde::g2"],[1173,"fedimint_core::bls12_381_serde::scalar"],[1175,"fedimint_core::config"],[1732,"fedimint_core::config::serde_binary_human_readable"],[1734,"fedimint_core::config::serde_commit"],[1750,"fedimint_core::core"],[2314,"fedimint_core::core::backup"],[2358,"fedimint_core::core::server"],[2387,"fedimint_core::db"],[2856,"fedimint_core::db::AutocommitError"],[2860,"fedimint_core::db::DecodingError"],[2864,"fedimint_core::db::mem_impl"],[2964,"fedimint_core::db::notifications"],[2999,"fedimint_core::db::test_utils"],[3215,"fedimint_core::encoding"],[3388,"fedimint_core::encoding::DynRawFallback"],[3390,"fedimint_core::encoding::as_hex"],[3392,"fedimint_core::encoding::btc"],[3393,"fedimint_core::endpoint_constants"],[3443,"fedimint_core::envs"],[3482,"fedimint_core::epoch"],[3511,"fedimint_core::epoch::ConsensusItem"],[3513,"fedimint_core::fmt_utils"],[3569,"fedimint_core::hex"],[3570,"fedimint_core::hex::serde"],[3573,"fedimint_core::hex::serde::tests"],[3590,"fedimint_core::module"],[3936,"fedimint_core::module::audit"],[4023,"fedimint_core::module::registry"],[4101,"fedimint_core::module::version"],[4306,"fedimint_core::net"],[4307,"fedimint_core::net::peers"],[4345,"fedimint_core::net::peers::fake"],[4363,"fedimint_core::query"],[4508,"fedimint_core::query::QueryStep"],[4510,"fedimint_core::runtime"],[4571,"fedimint_core::runtime::impl"],[4584,"fedimint_core::session_outcome"],[4729,"fedimint_core::task"],[4859,"fedimint_core::task::jit"],[4916,"fedimint_core::task::waiter"],[4933,"fedimint_core::tiered"],[5008,"fedimint_core::tiered_multi"],[5101,"fedimint_core::time"],[5103,"fedimint_core::timing"],[5137,"fedimint_core::transaction"],[5233,"fedimint_core::transaction::TransactionError"],[5241,"fedimint_core::transaction::TransactionSignature"],[5243,"fedimint_core::txoproof"],[5277,"fedimint_core::util"],[5446,"fedimint_core::util::broadcaststream"],[5489,"fedimint_core::util::update_merge"],[5503,"bitcoin_hashes"],[5504,"bitcoin_hashes::hex"],[5505,"bitvec::slice"],[5506,"bitvec::order"],[5507,"bitcoin_hashes::sha256"],[5508,"byte_slice_cast"],[5509,"core::result"],[5510,"byte_slice_cast"],[5511,"bech32"],[5512,"alloc::vec"],[5513,"core::cmp"],[5514,"std::io"],[5515,"std::io::error"],[5516,"std::io"],[5517,"erased_serde::ser"],[5518,"erased_serde::ser"],[5519,"anyhow"],[5520,"erased_serde::error"],[5521,"core::fmt"],[5522,"core::fmt"],[5523,"bitcoin_hashes::hex"],[5524,"core::iter::traits::exact_size"],[5525,"core::iter::traits::double_ended"],[5526,"bitcoin_hashes::error"],[5527,"bitcoin::util::amount"],[5528,"core::slice::index"],[5529,"tonic::request"],[5530,"core::option"],[5531,"serde::ser"],[5532,"core::error"],[5533,"alloc::string"],[5534,"bitvec::ptr::span"],[5535,"core::any"],[5536,"bech32"],[5537,"core::future::future"],[5538,"alloc::boxed"],[5539,"core::pin"],[5540,"alloc::collections::btree::set"],[5541,"core::fmt"],[5542,"core::clone"],[5543,"secp256k1::key"],[5544,"jsonrpsee_core::client::error"],[5545,"anyhow"],[5546,"core::convert"],[5547,"alloc::collections::btree::map"],[5548,"serde_json::value"],[5549,"serde::de"],[5550,"bitcoin::address"],[5551,"bitcoin::address"],[5552,"bitcoin_hashes::hash160"],[5553,"bitcoin_hashes::hash160"],[5554,"secp256k1"],[5555,"bitcoin::network::constants"],[5556,"bitcoin::blockdata::transaction"],[5557,"bitcoin::crypto::key"],[5558,"bitcoin_hashes::ripemd160"],[5559,"bitcoin_hashes::ripemd160"],[5560,"secp256k1::schnorr"],[5561,"bitcoin::hash_types::newtypes"],[5562,"bitcoin::blockdata::script"],[5563,"bls12_381::g1"],[5564,"bls12_381::g2"],[5565,"bls12_381::scalar"],[5566,"core::convert"],[5567,"core::marker"],[5568,"serde::de"],[5569,"secp256k1::context::alloc_only"],[5570,"secp256k1"],[5571,"secp256k1"],[5572,"core::any"],[5573,"bitcoin::util::schnorr"],[5574,"secp256k1::secret"],[5575,"core::fmt"],[5576,"core::marker"],[5577,"secp256k1::key"],[5578,"lightning::routing::gossip"],[5579,"lightning::routing::scoring"],[5580,"futures_core::stream"],[5581,"alloc::sync"],[5582,"core::ops::function"],[5583,"core::hash"],[5584,"std::io::error"],[5585,"lightning::util::ser"],[5586,"integer_encoding::fixed"],[5587,"integer_encoding::varint"],[5588,"core::fmt"],[5589,"serde_json::error"],[5590,"core::marker"],[5591,"core::default"],[5592,"core::marker"],[5593,"tokio::runtime::task::abort"],[5594,"tokio::runtime::task::id"],[5595,"core::task::wake"],[5596,"core::task::poll"],[5597,"tokio::time::instant"],[5598,"parity_scale_codec::error"],[5599,"parity_scale_codec::codec"],[5600,"parity_scale_codec::codec"],[5601,"tokio::sync::oneshot"],[5602,"core::convert"],[5603,"tracing_core::metadata"],[5604,"alloc::borrow"],[5605,"bitcoin::hash_types::newtypes"],[5606,"url"],[5607,"url::parser"],[5608,"url::host"],[5609,"tracing::span"],[5610,"tokio::sync::broadcast"],[5611,"tokio::sync::broadcast::error"]],"d":["","Represents an amount of BTC inside the system. The base …","","Amount of bitcoin to send, or “all” to send all …","Trait which applies to hashes of all types.","","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","Length of the hash, in bytes.","","","","for consensus-related calculations given the number of …","<code>OutPoint</code> represents a globally unique output in a …","","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","","Example","","","","","","Admin (guardian) client types","Returns an all zero hash.","","","Client API request handling","","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","","async trait that use MaybeSend","Federation-stored client backups Federation-stored client …","","Gradual bitcoin dependency migration helpers","Legacy serde encoding for bls12_381","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation configuration","","","","","","","","","","","","","","","","Fundamental types Fedimint Core API (common) module …","Database handling Core Fedimint database traits and types","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implements the <code>Display</code> trait for dyn newtypes whose traits …","Implement <code>Clone</code> on a “dyn newtype”","","","Consensus encoding This module defines a binary encoding …","","Constructs a new engine.","","","Common environment variables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps a type into an enum with a default variant, this …","Get value of <code>FEDIMINT_BUILD_CODE_VERSION_ENV</code> at compile …","","","","","","","","","","","","","","","","","Formatting helpers","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","","","","","","","","Copies a byte slice into a hash object.","","","","","","","","Hashes some bytes.","","","","","","","Hex encoding helpers","","This is a helper macro that generates the implementations …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","","","","","","","","","Common macros","number of peers that can be evil without disrupting the …","MaybeSync can not be used in <code>dyn $Trait + MaybeSend</code>","See <code>maybe_add_send</code>","Extenable module sysystem Fedimint supports modules to …","","Define a “module plugin dyn-newtype” which is like a …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","Define a “plugin” trait","A copy of <code>module_lugin_static_trait_define</code> but for …","Shorthand for <code>Amount::from_msats</code>","","","Peer networking","number of peers to select such that one is honest (under …","As a transaction may have multiple outputs, this refers to …","","","","","","","Implements the necessary traits for all associated types …","Implements the necessary traits for all configuration …","","","","Client query system","","","Runtime (wasm32 vs native) differences handling Copyright …","Shorthand for <code>Amount::from_sats</code>","","","","","","","","","","","","","","Atomic BFT unit containing consensus items","","","","","Task handling, including wasm safe logic","number of peers required for a signature","Types handling per-denomination values","Types handling multiple per-denomination values","Time handling, wasm safe functionality","Timing helpers","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","Fedimint transaction (inpus + outputs + signature) types","","","","","","","","","","","","","","","","","","","","","The referenced transaction ID","Peg-in txo proofs","","","","","","","","","","General purpose utilities","","","","","","","","","","Converts weight to virtual bytes, defined in BIP-141 as …","","Sent by admin user to the API","The config gen params that need to be in consensus, sent …","Config gen params that can be configured from the UI","The config gen params response which includes our peer id","Connection information sent between peers in order to …","API for secure websocket requests","","","","","","","","","","","TLS cert is necessary for P2P auth during DKG and  …","","","","","","","","","","","The same for all peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","URL of “leader” guardian to send our connection info to","Guardian-defined key-value pairs that will be passed to …","Guardian-defined key-value pairs that will be passed to …","Module init params (also contains local params from us)","Set the params (if leader) or just the local params (if …","Name of the peer, used in TLS auth","Our id (might change if new peers join)","Our guardian name","P2P is the network for running DKG and consensus","Endpoints of all servers","","","","","","","Status of the peer if known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize and deserialize <code>Amount</code> as integers denominated …","","","API endpoint of one of the guardians","Set of api versions for each component (core + modules)","Server needs a password to read configs","We can represent client invite code as a bech32 string for …","We failed running config gen","","Consensus is running","","Unknown invite code fields to be defined in the future","","","","Contains the error value","Contains the error value","Contains the error value","Contains the error value","","An extension trait allowing to making federation-wide API …","An API request error when calling an entire federation","Authentication id for the federation","","","The status of a server, including how it views its peers","<code>IGlobalFederationApi</code> wrapping some <code>T: IRawFederationApi</code> …","Archive of all the guardian config files that can be used …","The API for the global (non-module) endpoints","Trait marker for the module (non-global) endpoints","An API (module or global) that can query a federation","","","","Information required for client to construct …","Data that can be encoded in the invite code. Currently we …","","","Contains the success value","Contains the success value","Contains the success value","Contains the success value","","","","An API request error when calling a single federation peer","","","","Ready to run config gen once all peers are ready","","","","","","The state of the server returned via APIs","Restarted setup. All peers need to sync on this state …","Waiting for peers to share the config gen params","","","We have verified all our peer configs","Config is generated, peers should verify the config","Mint API client that will try to run queries against all …","During config gen, used for an API-to-API call that adds a …","","List of all federation peers for the purpose of iterating …","","","","Show an audit across all modules","","Check auth credentials","","","","","","Small LRU used as <code>IGlobalFederationApi::await_block</code> cache.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the consensus config gen params, followers will …","","","","","","","","","","","","","","","","","","","","","","","","","","","Query peers and calculate optimal common api versions to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the federation’s ID that can be used to …","Indicates that this peer needs attention from the operator …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a new API client from a client config","","","Creates a new API client from a invite code, assumes they …","","","","","","","","","","","","","","","","","","During config gen, gets all the server connections we’ve …","","Gets the default config gen params which can be configured …","","Get the general error if any.","","","Get errors from different peers.","","","Like <code>Self::await_session_lru</code>, but for …","","After DKG, returns the hash of the consensus config …","","Download the guardian config to back it up","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Was the transaction rejected (which is final)","","","","","Creates a new API client","","Creates a new API client","Constructs an <code>InviteCode</code> which contains as many guardian …","Returns the id of the guardian from which we got the API …","","","","","Get all peer URLs in the <code>InviteCode</code>","","","This should always be 0 if everything is okay, so a …","","","Report errors that are worth reporting","Report any errors","","","","","","Make request to a specific federation peer by <code>peer_id</code>","Make request to a specific federation peer by <code>peer_id</code>","","Make a request to a single peer in the federation with an …","Make an aggregate request to federation, using <code>strategy</code> to …","","","","Runs DKG, can only be called once after configs have been …","","","","","","","","","","","Fetches the server consensus hash if enough peers agree on …","","","","","During config gen, sets the server connection containing …","","Leader sets the consensus params, everyone sets the local …","","Sets the password used to decrypt the configs and …","","","","Reads the configs from the disk, starts the consensus …","","Returns the status of the server","","","","Submit a transaction for inclusion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the API URL of one of the guardians.","","Updates local state and notify leader that we have …","","","","","","","","","","","","","","","","","","","","","","","","Peer id of the host from the Url","URL to reach an API that we can download configs from","","","","","Key used to store user’s ecash backups","","User’s backup, received at certain time, containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This limits the RAM consumption of a AlephBFT Unit to …","User has cancelled the DKG task","Total client config","Config for the client-side of a particular Federation …","","","Type erased <code>ModuleInitParams</code> used to generate the …","Consensus parameters for config generation","Shared consensus-critical config","","Captures an error occurring in DKG","Defines a group (e.g. G1 or G2) that we can generate keys …","","Things that a <code>distributed_gen</code> config can send between peers","Result of running DKG","","Empty struct for if there are no params","Contains the error value","","Error running DKG","The federation id is a copy of the authentication …","Prefix of the <code>FederationId</code>, useful for UX improvements","","","Federation-wide client config","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","Client config that cannot be cryptographically verified …","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","Locally configurable parameters for config generation","Local non-consensus, not security-sensitive settings","Key under which the federation name can be sent to client …","Key under which the override URL can be sent to client in …","Key under which the vetted gateways can be sent to client …","","","","","","Contains the success value","","","Private for this federation member data that are security …","","","Config for the server-side of a particular Federation …","Registry that contains the config gen params for all …","","","","<code>enum</code> version of <code>SupportedDkgMessage</code>","Module (server side) config, typed","Consensus-critical part of a server side module config","API endpoints for each federation member","","Get decoders for <code>modules</code> and skip unsupported ones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the consensus hash for a given client config","","Core consensus version","","","Get decoders for <code>modules</code> and fail if any is unsupported","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to download the client config from the federation, …","Random dummy id for testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation name from config metadata (if set)","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Assemble from the distinct parts","Assemble from the three functionally distinct parts","","","","","","","","","","","","","","","","","","","","","","(soft-deprecated): Get the first instance of a module of a …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Create an invite code with the api endpoint of the given …","","","","","","","","","","","","","Get the value of a given meta field","Additional config the federation wants to transmit to the …","","","The peer’s name","","","","","","","","See <code>DynRawFallback::redecode_raw</code>.","","","Handling the Group serialization with a wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turn the typed config into type-erased version","Converts a federation id to a public key to which we know …","","","","","","","","","","","","","","","","","","","","Split the config into its distinct parts","Split the config into its three functionally distinct parts","","","","","Converts the JSON into typed version, errors unless both …","","Tries to download the client config only once.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)","","","","","","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Decoder for module associated types","","An owned, immutable input to a <code>Transaction</code>","An owned, immutable input to a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code> before it was …","An owned, immutable output of a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code> before it was …","The type erased version of the type implementing this trait","A type used by when decoding dyn-types, when the module is …","","","Something that can be an <code>DynInput</code> in a <code>Transaction</code>","","","Something that can be an <code>DynOutput</code> in a <code>Transaction</code>","","","","","A type that has a <code>Dyn*</code>, type erased version of itself","Type that can be used as type-system placeholder for …","Opaque data structure that holds a keypair consisting of a …","","","","Special IDs we use for global dkg","","Module instance ID","A type of a module","","Unique identifier for one semantic, correlatable operation.","","","","","","","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>DecoderBuilder</code> to which decoders for single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a specific <code>DynType</code> from the <code>reader</code> byte stream.","","","Like <code>Self::decode_complete</code> but does not verify that all …","","","","","","","","","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into its type-erased equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","Generate random <code>OperationId</code>","","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attach decoder for a specific <code>Type</code>/<code>DynType</code> pair where …","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","Maximum payload size of a backup request","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Backend side module interface","Returns a list of custom API endpoints defined by the …","","Queries the database and returns all assets and …","","","","","This module’s contribution to the next consensus proposal","Returns the decoder belonging to the server module","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","Error returned when the autocommit function fails","Base functionality around <code>IRawDatabase</code> to make it a …","Struct that implements <code>IRawDatabaseTransaction</code> and can be …","","","Error returned by the closure provided to <code>autocommit</code>. If …","Committing the transaction failed too many times, giving up","A helper for tracking and logging on <code>Drop</code> any instances of …","Session type for <code>DatabaseTransaction</code> that is allowed to …","","A public-facing newtype over <code>IDatabase</code>","<code>DatabaseKey</code> that represents the lookup structure for …","","Marker trait for <code>DatabaseKey</code>s where <code>NOTIFY</code> is true","A key that can be used to query one or more <code>DatabaseRecord</code> …","A key + value pair in the database with a unique prefix …","A high level database transaction handle","<code>DatabaseValue</code> that represents the value structure of …","","","","Deprecated: Use <code>DatabaseVersionKey(ModuleInstanceId)</code> …","","An iterator over the variants of DbKeyPrefix","","A database that on top of a raw database operation, …","Fedimint database transaction","Additional operations (only some) database transactions …","Core raw a operations database transactions supports","Like <code>IDatabaseTransactionOpsCore</code>, but typed","Raw database implementation","An extension trait with convenience operations on …","Raw database transaction (e.g. rocksdb implementation)","","","","","Send a notification to tasks waiting to be notified if the …","Session type for a <code>DatabaseTransaction</code> that is not allowed …","","","","Just ignore this type, it’s only there to make compiler …","A database that wraps an <code>inner</code> one and adds a prefix to …","A database transactions that wraps an <code>inner</code> one and adds a …","","","<code>ServerMigrationFn</code> that modules can implement to “migrate…","","","A raw database transaction type","","A database type that has decoders, which allows it to …","","","","","<code>apply_migrations</code> iterates from the on disk database …","Applies the database migrations to a non-isolated database.","Runs a closure with a reference to a database transaction …","","Start a database transaction","Start a database transaction","","Begin a new committable database transaction","","Begin a new non-committable database transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit the transaction","","","","","","","","","","","","","","","Creates the <code>DatabaseVersion</code> inside the database if it does …","","","","","","","","","","","","","<code>Err</code> if <code>Self::is_global</code> is not true","<code>Err</code> if <code>Self::is_global</code> is not true","<code>Err</code> if <code>Self::is_global</code> is true","<code>Err</code> if <code>Self::is_global</code> is true","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Does the dbtx have any writes","","Cancel the tx to avoid debugging warnings about …","Don’t warn-log uncommitted writes","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to type implementing <code>IRawDatabase</code> into <code>Database</code>.","","","Convert into a non-committable version","","","","","","","","","","","","","","","","","","Is the dbtx committed","Is this <code>Database</code> a global, unpartitioned <code>Database</code>","Is this <code>Database</code> a global, unpartitioned <code>Database</code>","","","","","","Helper function to retrieve the <code>module_instance_id</code> for …","","","","Creates a new Fedimint database from any object …","Create <code>Database</code> from an already typed-erased <code>IDatabase</code>.","","","","","","Notify about <code>key</code> update (creation, modification, deletion)","","","","","Register a hook that will be run after commit succeeds.","","","","","","","","The prefix len of this database instance","The prefix len of this database instance","","","","","","","","","Returns an stream of key-value pairs with keys that start …","","","","Same as <code>Self::raw_find_by_prefix</code> but the order is …","","","","","","","","","","","","Delete keys matching prefix","","","","","","","","Register (and wait) for <code>key</code> updates","","","","","Removes <code>DatabaseVersion</code> from <code>DatabaseVersionKeyV0</code> if it …","","","","","","","","","","Create a savepoint during the transaction that can be …","","","","","","","","","","","","","","","","","","","","Get <code>DatabaseTransaction</code> to <code>self</code>","Get a reference to a non-committeable version","Get <code>DatabaseTransaction</code> isolated to a <code>prefix</code> of <code>self</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for key to be notified.","Waits for key to be present in database.","Create warnings about uncommitted writes","","Get <code>DatabaseTransaction</code> isolated to a <code>prefix</code>","Create <code>Database</code> isolated to a partition with a given <code>prefix</code>","Get <code>DatabaseTransaction</code> isolated to a prefix of a given …","Create <code>Database</code> isolated to a partition with a prefix for …","","","Number of attempts","The attempt on which the closure returned an error","Error returned by the closure","Last error on commit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of buckets used for <code>Notifications</code>.","The state of Notification.","Save notifications to be sent after transaction is …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Notify a key.","This registers for notification when called.","","","Notifies the waiters about the notifications recorded in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lightning TLV uses a custom variable-length integer called …","A writer counting number of writes written to it","Data which can be encoded in a consensus-consistent way","","","","Object-safe trait for things that can encode themselves","A type that decodes <code>module_instance_id</code>-prefixed <code>T</code>s even …","Data which can be encoded in a consensus-consistent way","","Maximum size, in bytes, of data we are allowed to ever …","","","Serde implementations using hex-encoded encodables","","","","","","","","","","","","","","","","","","","","Decode an object with a well-defined format.","","Specialized version of Decodable for bytes","Specialized version of Decodable for bytes","Specialized version of Decodable for fixed-size byte arrays","Specialized version of Decodable for fixed-size byte arrays","Decode <code>Self</code> from a size-limited reader.","","Decode an object from hex","","Encode an object with a well-defined format. Returns the …","","","","Specialized version of Encodable for bytes","Specialized version of Encodable for static byte arrays","","","","Encode and convert to hex string representation","Encode without storing the encoding, return the size","<code>Self::consensus_encode</code> to newly allocated <code>Vec&lt;u8&gt;</code>","Generate a SHA256 hash of the consensus encoding using the …","Returns the number of bytes successfully written so far","","Get the decoded <code>T</code> or <code>None</code> if not decoded yet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into the decoded <code>T</code> and panic if not decoded yet","Get the decoded <code>T</code> and panic if not decoded yet","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner writer, discarding this wrapper","","","","","","","","","","","Read <code>opts.len</code> bytes from reader, where <code>opts.len</code> could …","Attempt to re-decode raw values with new set of of <code>modules</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the bitcoin RPC","","Env var that can be set to point at the bitcoind’s …","Env var for bitcoin RPC kind","Env var for bitcoin URL","In tests we want to routinely enable an extra unknown …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Check if env variable is set and not equal <code>0</code> or <code>false</code> …","","","","","","","","","","All the items that may be produced during a consensus epoch","Allows us to add new items in the future without crashing …","Any data that modules require consensus on","Threshold sign the epoch history for verification via the …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","A wrapper that causes the inner <code>T</code> to be debug-formatted …","Use for displaying bytes in the logs","Use for displaying potentially large <code>[serde_json::Value]</code>s …","Something that can be debug-formatted in an abbreviated way","Optional stacktrace formatting for errors.","","","","","","","","","","","","","","","","","","Format json object value truncating keys if there’s too …","Format json string value if it’s too long","Format json array value truncating elements if there’s …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize a hex String to a <code>Vec&lt;u8&gt;</code>","Serialize a <code>&amp;[u8]</code> to a hex String","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Authentication uses the hashed user password in PHC format","Definition of an API endpoint defined by a module <code>M</code>.","State made available to all API endpoints for handling a …","","All requests from client to server contain these fields","","Api version supported by a core server or a client/server …","","","","","","Logic and constant common between server side and client …","","Consensus version of a core server","This represents the module’s database version that the …","","","","","Operations common to Server and Client side module gen dyn …","Interface for Module Generation","","","","","","Module associated types required by both client and server","Consensus version of a specific module instance","Trait implemented by every <code>*ModuleInit</code> (server or client …","Multiple, disjoint, minimum required or maximum supported, …","","","","","example: /transaction","","","A handle passed to <code>ServerModuleInit::distributed_gen</code>","","Creates a struct that can be used to make our …","","Module Generation trait with associated types","","","","","","Information about the amount represented by an input or …","","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","Example","Returns a list of custom API endpoints defined by the …","","","","","Queries the database and returns all assets and …","Hashed user password if the API requires authentication","Hashed user password if the API requires authentication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to commit the dbtx or returns an ApiError","This module’s contribution to the next consensus …","","","","","","","","","Database tx handle, will be committed","","","","","Returns a decoder for the following associated types of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Converts the consensus config into the client config","Retrieves the migrations map from the server module to be …","Retrieves the migrations map from the server module to be …","","","","Handler for the API call that takes the following …","Whether the request was authenticated as the guardian who …","","","","Initialize the <code>DynServerModule</code> instance from its config","Initialize the <code>DynServerModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Major API version","","","","Minor API version","","","","","","<code>db</code> and <code>dbtx</code> should be isolated.","","","","","","","","","Retrieve the current status of the output. Depending on …","Parameters required by the API","Parameters required by the API","","Path under which the API endpoint can be reached. It …","","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","Returns the auth set on the request (regardless of whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In cases where we know exactly which module kind we expect …","","","","","","","","","","","","","","","","","Fedimint consensus and API versioning.","Version of the module consensus supported by this …","","","","","","","","","","","","","Waits for key to be present in database.","Waits for key to have a value that matches.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallback to decoding unknown module instance ids as …","Collection of decoders belonging to modules, typically …","","Module Registry hold module-specific data <code>M</code> by the …","Reject unknown module instance ids","Collection of server modules","","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","","","","","","","","","","","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Get module data by instance id","Return the module data belonging to the module identified …","Get module data by instance id, including <code>ModuleKind</code>","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return an iterator over all module data","","","Is registry empty?","Return an iterator over all module data","Return an iterator over module ids an kinds","Return an iterator over all module data","Create <code>Self</code> from an iterator of pairs","Add a module to the registry","","","","","","","","","","","","","","","","Api version supported by a core server or a client/server …","Consensus version of a core server","Consensus version of a specific module instance","Multiple, disjoint, minimum required or maximum supported, …","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create <code>SupportedModuleApiVersions</code> from raw parts","","","","","","","","","Get minor supported version by consensus and major numbers","Get minor supported version by consensus and major numbers","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verify the invariant: sorted by unique major numbers","","","","Major API version","","","Minor API version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert <code>version</code> to the list of supported APIs","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>IPeerConnections</code> but with an ability to handle …","Connection manager that tries to keep connections open to …","Owned <code>MuxPeerConnections</code> trait object type","Owned <code>PeerConnections</code> trait object type","Removes a peer connection in case of misbehavior","Removes a peer connection in case of misbehavior","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the struct to a <code>PeerConnection</code> trait object","Converts the struct to a <code>PeerConnection</code> trait object","","","Await receipt of a message from any connected peer.","Await receipt of a message from any connected peer.","Send a message to a specific peer.","Send a message to a specific destination at specific peer.","","","","","","","","","","","Removes a peer connection in case of misbehavior","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a fake link between <code>peer1</code> and <code>peer2</code> for test …","","","","","","","","","","","Do nothing yet, keep waiting for requests","Query for supported api versions from all the guardians …","","Fail the whole request","Returns the first valid response. The response of a peer is","Returns when a threshold of valid responses. The response …","Results from the strategy handling a response from a peer","Fedimint query strategy","Retry request to this peer","Return the successful result","Returns when we obtain a threshold of identical responses","Query strategy that returns when enough peers responded or …","Returns the deduplicated union of a threshold of responses","Returns the deduplicated union of <code>required</code> number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the most common response that has been processed so …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Strategy for returning first response that is verifiable …","","","","","","","","","","","","","","","","Should requests for this strategy have specific timeouts?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Task failed to execute to completion.","An owned permission to join on a task (await its …","","Abort the task associated with the handle.","Returns a new <code>AbortHandle</code> that can be used to remotely …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a task ID that identifies the task which errored …","Returns a task ID that uniquely identifies this task …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Consumes the join error, returning the object with which …","","","","Returns true if the error was caused by the task being …","Checks if the task associated with this <code>JoinHandle</code> has …","Returns true if the error was caused by the task panicking.","","","","","","","","","","","","","","","","Consumes the join error, returning the object with which …","","","","","","","","Task failed to execute to completion.","An owned permission to join on a task (await its …","","","","","","","","","","","","If two correct nodes obtain two ordered items from the …","","","","","All items ordered in a session that have been accepted by …","","A signed block combines a block with the naive threshold …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","A blocks header consists of 40 bytes formed by its index …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","Contains the error value","<code>MaybeSend</code> is no-op on wasm and <code>Send</code> on non wasm.","<code>MaybeSync</code> is no-op on wasm and <code>Sync</code> on non wasm.","Contains the success value","","A group of task working together","","","","","","","","","","","","","","","","","","","Run the future or cancel it if the <code>TaskGroup</code> shuts down.","","","","","","","Did the future completed successfully (no panic)","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Is task group shutting down?","Just-in-time initialization","","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Create a sub-group","","","","","","","","","","","","Spawn a task that will get cancelled automatically on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for a task to finish.","","","A value that initializes eagerly in parallel in a …","","","","Error that could have been returned before","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the reference to the value, potentially blocking for …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create <code>JitTry</code> value, and spawn a future <code>f</code> that computes …","","","","","","","","","","","","","","","","","Helper to wait for actions to be <code>Self::done</code>","","","","Mark this waiter as done.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Check if Waiter was marked as done.","","","","","","Wait for <code>Self::done</code> call.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generates denominations of a given base up to and …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the highest tier amount","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","Represents notes of different denominations.","","","","Verifies that all keys in <code>self</code> are present in the keys of …","","","","","","","","","","","","","","Returns the number of items in all vectors","","Returns the number of tiers","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns an <code>Option</code> with a reference to the vector of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an consuming iterator over every <code>(Amount, T)</code>","","","","Verifies whether all vectors in all tiers are empty","Returns an borrowing iterator","","Returns an iterator over every <code>(Amount, &amp;T)</code>","Returns an iterator over the keys","","Returns the length of the longest vector of all tiers, …","","Creates a new MultiZip Iterator from <code>Notes</code> iterators. …","Returns a new <code>TieredMulti</code> with the given <code>BTreeMap</code> map","","Determines the denominations to use when representing an …","","","Verifies whether the structure of <code>self</code> and <code>other</code> is …","Returns the summary of number of items in each tier","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","","","","","","","","","","Returns the duration since the Unix epoch","","","Data inside <code>TimeReporter</code>, in another struct to be able to …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Inner data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Add a threshold, which will log a warning if exceeded","","Handy alias for <code>Self::threshold</code>","","","","","","","","","","","","","Maximum size that a transaction can have while still …","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","<code>DynInput</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","No defined meaning, can be used to send the otherwise …","<code>DynOutput</code>s created as a result of the transaction","signatures for all the public keys of the inputs","","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the schnorr signatures signed over the <code>tx_hash</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","The associated backoff that returned by this builder.","BackoffBuilder is used to build a new backoff.","Future that is <code>Send</code> unless targeting WASM","Stream that is <code>Send</code> unless targeting WASM","ConstantBuilder is used to build <code>ConstantBackoff</code>","ExponentialBuilder is used to build a <code>ExponentialBackoff</code>","FibonacciBuilder is used to build a <code>FibonacciBackoff</code>","","","Wrapper for <code>Url</code> that only prints the scheme, domain, port …","","Warning: This will expose username &amp; password if present.","","","","","","","","","","","","","Copied from <code>tokio_stream</code> 0.1.12 to use our optional Send …","Builder a new backoff via builder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","For CLIs, detects <code>version-hash</code> as a single argument, …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run the supplied closure <code>op_fn</code> until it succeeds. …","","","","","","","","","","","","Warning: This removes the safety.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set delay of current backoff.","Set factor of current backoff.","Set jitter on","Set jitter of current backoff.","Set jitter of current backoff.","Set max_delay of current backoff.","Set max_delay of current backoff.","Set max times of current backoff.","Set max_times of current backoff.","Set max_times of current backoff.","Set min_delay of current backoff.","Set min_delay of current backoff.","","Write out a new file (like <code>std::fs::write</code> but fails if …","","","","A wrapper around <code>tokio::sync::broadcast::Receiver</code> that …","An error returned from the inner stream of a …","The receiver lagged too far behind. Attempting to receive …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new <code>BroadcastStream</code>.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Merges concurrent futures execution.","","","",""],"i":[25,0,25,0,0,0,5,5,0,5,5,45,44,0,0,0,0,0,0,0,0,0,0,44,1,0,0,0,0,1,1,0,5,8,0,0,0,8,8,8,5,8,8,8,17,0,0,8,0,0,8,8,24,1,25,26,44,17,19,45,8,24,1,25,26,44,17,19,45,19,8,8,24,1,25,26,17,19,8,24,1,25,26,17,19,8,24,1,26,17,19,8,24,1,26,17,19,0,8,24,1,26,19,8,24,1,26,19,8,24,1,26,19,0,0,33,8,8,24,1,25,26,19,0,1,8,24,1,25,26,19,0,0,0,8,8,0,0,5,8,1,0,0,8,24,1,25,26,17,19,8,8,8,8,24,24,24,24,1,1,1,1,25,25,25,25,26,26,26,26,17,17,17,17,19,19,19,19,0,8,24,1,25,26,19,0,0,8,8,8,24,24,1,1,25,26,26,44,44,17,19,45,45,0,8,8,24,24,1,1,25,26,44,44,44,17,17,19,45,1,8,8,24,1,26,19,5,8,8,5,8,1,8,24,1,25,26,17,19,1,5,8,8,8,24,1,25,1,5,8,24,1,25,26,19,0,0,0,8,8,24,1,25,26,44,17,19,45,5,8,8,24,1,25,26,44,17,19,45,0,33,0,0,0,0,0,0,0,0,0,0,0,1,1,0,33,26,8,24,1,26,17,19,0,0,0,0,0,0,1,1,0,0,1,19,1,1,0,8,24,1,25,26,19,0,0,0,44,1,1,1,0,33,0,0,0,0,8,24,1,26,19,8,8,24,1,25,26,17,19,8,24,1,26,44,45,24,33,17,0,8,8,24,1,25,26,44,17,19,45,8,24,1,25,26,44,17,19,45,1,26,0,8,24,1,25,26,44,17,19,45,0,8,24,1,25,26,44,17,19,45,0,8,0,0,0,0,0,73,72,73,74,75,76,72,73,74,75,76,73,72,73,74,75,76,72,73,74,75,76,75,76,72,73,74,75,76,72,73,74,75,76,73,74,75,76,73,73,73,73,74,74,74,74,75,75,75,75,76,76,76,76,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,72,74,76,74,76,73,75,72,73,74,0,72,73,74,75,76,73,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,72,73,74,75,76,0,0,0,0,0,0,100,0,104,0,104,103,104,94,100,103,0,0,398,126,456,457,94,0,0,100,0,0,0,0,0,0,0,0,112,112,94,0,0,0,0,398,126,456,457,0,0,0,0,0,0,0,104,94,112,94,112,0,0,104,104,0,94,104,104,0,78,82,83,82,87,90,78,82,78,82,78,82,82,90,82,78,82,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,114,96,97,90,87,99,100,101,102,103,104,105,106,96,97,90,87,99,100,101,102,103,104,105,106,88,102,78,82,99,96,100,96,99,100,96,99,100,96,101,102,103,104,97,90,96,99,101,102,103,104,105,106,0,78,82,96,99,101,102,103,104,105,106,78,82,99,100,101,102,103,104,105,106,99,99,99,99,100,100,100,100,101,101,101,101,102,102,102,102,103,103,103,103,104,104,104,104,105,105,105,105,106,106,106,106,96,99,101,102,103,104,105,106,105,99,102,112,112,113,113,94,94,96,97,90,82,87,114,99,99,100,115,101,102,103,104,105,106,112,112,113,94,94,94,96,97,97,90,90,82,87,114,99,100,115,101,102,103,104,105,106,96,99,100,90,87,90,90,87,90,96,97,90,87,99,100,101,102,103,104,105,106,90,99,113,113,78,82,78,82,113,97,90,113,78,82,82,82,78,82,78,82,97,90,82,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,88,94,102,87,96,82,87,99,87,99,99,115,114,87,87,99,113,87,101,101,101,112,113,94,114,127,127,127,83,82,87,127,127,78,82,115,78,82,96,99,101,102,103,104,105,106,105,78,82,78,82,101,78,82,78,82,78,82,112,94,78,82,78,82,101,78,82,106,96,99,100,96,97,90,87,99,100,101,102,103,104,105,106,112,113,94,99,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,78,82,99,114,78,82,112,113,94,96,97,90,82,87,114,99,100,115,101,102,103,104,105,106,83,82,87,458,459,459,458,460,460,461,0,0,0,134,136,135,134,136,135,134,135,134,135,134,136,135,134,136,135,134,136,135,135,135,134,135,135,135,135,135,135,134,135,134,136,135,134,136,135,134,134,136,135,134,135,134,136,135,134,136,135,134,135,135,134,134,136,136,135,134,135,134,136,135,134,136,135,134,136,135,134,136,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,0,0,184,0,0,203,206,182,0,0,0,0,0,182,0,462,184,193,0,0,183,183,0,184,0,0,0,203,206,0,0,0,182,193,0,0,193,462,193,0,206,182,0,0,0,0,0,184,0,0,0,172,166,166,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,119,172,173,174,175,119,176,172,111,177,166,178,179,180,173,181,182,183,184,174,175,119,176,172,111,177,166,178,179,180,173,181,182,183,184,111,177,111,177,180,173,178,181,175,119,172,111,177,180,173,175,119,172,111,177,180,173,175,119,172,111,177,180,173,119,181,172,0,166,166,166,178,179,190,174,175,119,176,172,111,177,178,179,180,173,181,182,183,184,191,174,175,119,176,172,111,177,178,179,180,173,181,182,183,184,119,111,190,174,175,119,176,172,111,177,178,180,173,181,184,174,174,174,174,175,175,175,175,119,119,119,119,176,176,176,176,172,172,172,172,111,111,111,111,177,177,177,177,178,178,178,178,180,180,180,180,173,173,173,173,181,181,181,181,184,184,184,184,174,175,119,176,172,111,177,178,179,180,173,181,182,183,184,172,174,175,119,176,172,111,111,177,177,166,178,179,180,173,181,182,193,193,183,184,174,175,119,176,172,111,177,166,166,178,179,180,173,181,181,182,193,193,193,183,184,111,175,119,172,111,177,180,173,196,166,198,184,184,203,206,174,175,119,176,172,111,177,166,178,179,180,173,181,182,183,184,111,177,178,173,166,119,119,119,119,119,176,175,111,177,190,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,119,174,173,196,174,173,174,180,173,166,0,178,181,119,172,119,176,175,174,166,178,178,111,177,181,119,173,0,0,190,174,175,119,176,172,111,177,178,179,180,173,181,182,183,184,191,193,190,175,119,172,111,177,180,173,211,166,206,111,198,184,184,174,175,119,176,172,111,177,166,178,179,180,173,181,182,183,184,203,206,111,111,177,193,178,181,119,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,175,174,174,196,180,173,174,175,119,176,172,111,177,166,178,179,180,173,181,182,193,183,184,174,0,0,0,216,216,0,216,216,216,216,216,216,0,216,216,216,216,216,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,463,239,239,217,221,223,224,225,226,227,228,229,229,229,229,229,229,229,217,217,171,0,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,231,54,221,223,224,225,226,227,228,239,217,240,171,229,229,229,229,229,229,229,229,54,232,233,234,235,236,237,238,171,239,217,240,171,229,54,232,233,234,235,236,237,238,217,240,171,217,240,171,239,217,240,171,229,232,233,234,235,236,237,238,239,217,240,171,229,232,233,234,235,236,237,238,239,217,240,171,229,232,233,234,235,236,237,238,217,54,231,54,54,231,54,232,233,234,235,236,237,238,232,233,234,235,236,237,238,217,240,171,217,217,240,171,221,223,224,225,226,227,228,229,229,229,229,229,229,229,239,217,240,171,229,232,233,234,235,236,237,238,239,239,239,239,217,217,217,217,240,240,240,240,171,171,171,171,232,232,232,232,233,233,233,233,234,234,234,234,235,235,235,235,236,236,236,236,237,237,237,237,238,238,238,238,221,223,224,225,226,227,228,229,229,229,229,229,229,229,217,240,171,239,217,240,240,171,171,229,229,54,232,232,233,233,234,234,235,235,236,236,237,237,238,238,464,239,463,217,217,240,171,171,229,231,54,232,233,234,235,236,237,238,239,217,240,171,229,232,233,234,235,236,237,238,232,233,234,235,236,237,238,239,217,240,171,229,54,232,233,234,235,236,237,238,217,217,217,217,171,217,240,232,233,234,235,236,237,238,217,240,229,232,233,234,235,236,237,238,232,233,234,235,236,237,238,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,246,239,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,232,233,234,235,236,237,238,232,233,234,235,236,237,238,217,217,240,217,240,171,217,217,217,217,240,171,0,217,217,239,217,240,171,229,232,233,234,235,236,237,238,221,229,239,217,240,171,229,54,232,233,234,235,236,237,238,240,171,229,232,233,234,235,236,237,238,231,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,217,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,464,239,463,217,240,171,229,231,54,232,233,234,235,236,237,238,231,217,0,0,0,252,132,252,132,252,252,252,252,132,252,132,252,132,252,132,252,132,252,252,252,252,132,252,132,252,132,252,132,252,132,252,252,252,132,252,132,252,132,132,252,132,0,0,253,253,253,254,254,254,254,253,253,254,254,254,254,254,254,254,254,254,253,253,253,253,254,254,254,254,254,311,0,0,0,288,279,264,264,0,0,292,0,0,0,0,0,0,0,0,0,279,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0,292,285,0,57,288,311,0,0,0,0,290,0,311,0,270,292,0,57,57,282,259,0,0,261,280,270,271,272,261,274,261,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,256,288,261,274,278,262,279,280,261,274,278,262,279,280,262,256,260,281,259,256,282,256,262,283,284,262,283,284,262,283,284,262,0,0,0,0,287,256,256,288,288,283,284,262,278,256,261,256,261,262,262,262,262,262,283,284,262,0,289,256,0,289,256,272,259,256,264,261,274,282,283,284,262,262,279,279,280,57,57,272,259,288,273,275,256,264,261,261,274,282,278,283,284,262,279,280,57,285,286,283,283,284,284,262,261,274,278,262,279,280,0,280,274,282,289,256,278,280,256,278,262,261,274,282,289,256,289,256,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,293,261,280,256,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,278,256,261,279,280,280,0,261,0,0,259,256,261,261,280,280,0,272,259,271,272,274,259,280,256,256,57,262,288,288,274,282,271,281,272,259,274,282,288,288,272,259,298,259,256,282,298,259,256,282,298,259,256,282,298,259,256,282,298,259,256,282,298,259,256,282,271,272,274,289,256,0,289,256,299,259,256,282,283,284,262,299,259,256,282,280,261,0,300,286,283,283,284,284,262,261,274,278,262,279,280,256,256,256,256,262,279,57,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,256,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,272,259,288,273,275,256,264,261,274,282,278,283,284,262,279,280,57,261,261,256,261,256,261,256,261,57,57,465,466,466,465,467,468,467,468,0,0,0,307,0,307,0,0,302,303,304,305,307,302,306,303,304,305,307,302,306,303,302,303,304,305,302,302,306,306,306,306,306,303,304,305,307,302,306,303,304,305,307,302,306,303,304,305,307,302,306,303,304,305,307,302,306,304,305,302,303,303,304,305,303,303,303,303,303,303,303,303,303,303,303,304,305,307,302,306,303,304,305,307,302,306,303,303,304,305,307,302,306,304,303,304,305,307,302,306,0,0,0,308,295,308,295,308,295,308,295,308,295,308,295,308,295,308,295,308,295,308,295,295,0,0,295,295,308,295,308,295,308,295,308,0,0,311,0,0,0,0,0,311,0,311,0,0,0,0,311,312,315,316,317,313,318,319,320,314,311,312,315,316,317,313,318,319,320,314,311,311,312,313,314,312,313,314,312,315,316,317,313,318,319,320,314,312,315,316,317,313,318,319,320,314,312,315,316,317,313,318,319,320,314,312,313,314,312,312,312,312,313,313,313,313,314,314,314,314,0,312,315,316,317,313,318,319,320,314,311,312,315,316,317,313,318,319,320,314,312,312,315,316,316,317,313,313,318,319,319,320,314,311,0,311,312,315,316,317,313,318,319,320,314,311,312,315,316,317,313,318,319,320,314,0,312,313,314,312,312,315,315,316,316,317,317,313,313,318,318,319,319,320,320,314,311,311,312,315,316,317,313,318,319,320,314,311,312,315,316,317,313,318,319,320,314,311,312,315,316,317,313,318,319,320,314,0,0,0,0,0,0,0,0,0,0,0,0,0,0,311,312,315,316,317,313,318,319,320,314,0,0,0,0,0,321,0,0,0,0,0,321,0,0,0,334,325,29,321,322,334,325,29,321,322,0,334,321,322,321,322,322,322,209,322,0,0,0,0,209,321,209,209,323,324,321,322,0,0,324,321,322,323,323,323,323,325,325,321,321,321,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,321,322,321,321,321,321,322,322,322,322,321,321,321,325,29,29,321,322,334,325,325,325,29,321,321,321,322,321,322,29,321,322,29,322,0,0,0,0,325,334,325,29,321,322,325,334,325,29,321,322,334,29,322,322,322,0,321,0,321,0,0,321,322,321,322,29,334,325,29,321,322,334,325,29,321,322,334,325,29,321,322,334,325,29,321,322,325,325,322,325,325,325,469,469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,0,338,338,338,338,338,338,338,338,338,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,470,470,0,0,0,0,0,340,342,344,345,341,342,344,345,341,341,341,0,342,344,344,345,341,0,0,0,342,344,345,341,342,344,345,341,342,344,345,341,0,342,344,342,344,345,341,342,344,345,341,342,344,345,341,342,344,345,341,0,0,0,0,0,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,0,0,0,0,0,0,0,364,351,364,363,350,0,351,0,363,0,0,0,0,0,0,350,351,351,0,364,0,0,0,0,0,351,351,351,471,471,352,0,471,0,0,0,0,471,0,0,0,0,0,357,356,365,357,380,368,0,350,353,354,213,0,350,128,358,355,360,255,356,361,365,357,358,91,355,354,213,359,360,255,356,361,365,357,358,91,355,354,213,359,356,356,357,358,91,355,354,213,359,357,358,91,355,354,213,359,355,360,350,109,380,368,167,360,356,360,356,360,360,167,364,351,350,351,128,354,213,358,91,359,353,352,358,91,359,363,167,365,357,91,359,357,357,357,357,91,91,91,91,359,359,359,359,358,91,359,357,365,357,358,91,355,354,213,359,360,255,356,361,365,357,358,91,355,354,354,213,213,359,359,354,357,358,91,355,354,213,359,255,353,352,353,352,354,213,471,255,360,360,357,359,353,352,354,213,360,255,356,361,365,357,358,91,355,354,213,359,360,255,356,361,365,357,358,91,355,354,213,359,352,370,207,378,355,370,207,378,368,167,350,109,128,360,361,358,355,355,356,356,356,356,350,128,358,352,255,361,350,350,350,365,0,360,360,358,91,359,355,353,352,356,356,167,128,358,357,358,91,355,354,213,359,128,358,353,352,360,255,356,361,365,357,358,91,355,354,213,359,360,255,356,361,365,357,358,91,355,354,213,359,359,359,360,255,356,361,365,357,358,91,355,354,213,359,355,353,352,353,0,352,360,255,356,361,365,357,358,91,355,354,213,359,360,360,128,358,0,0,0,0,257,372,257,373,374,372,257,373,374,0,373,374,373,374,0,257,373,374,373,374,373,374,373,373,373,373,374,374,374,374,373,374,372,257,373,374,372,257,373,374,373,373,374,0,372,257,373,374,372,257,373,374,257,374,372,372,373,372,257,373,374,373,374,373,374,372,257,372,257,373,374,372,257,373,374,372,257,373,374,372,257,373,374,0,55,0,0,0,55,0,56,28,56,56,56,56,55,56,55,56,55,56,55,376,56,28,56,56,55,56,55,56,56,56,56,55,55,55,55,56,56,55,56,56,55,56,56,55,56,56,56,55,376,28,56,56,55,56,56,55,56,56,56,56,56,56,376,28,56,56,55,56,55,56,55,56,55,56,55,28,56,0,0,0,0,0,0,0,0,380,368,381,370,207,378,379,380,368,109,381,370,207,378,379,380,368,109,370,207,378,379,380,368,109,370,207,378,379,380,368,109,378,378,370,207,378,370,207,378,370,207,378,109,380,368,379,370,207,378,379,380,368,109,370,207,378,379,380,368,109,370,207,378,370,370,370,370,207,207,207,207,378,378,378,378,370,207,378,379,380,368,109,370,207,378,379,380,368,109,381,370,207,378,379,380,368,109,370,207,378,368,370,207,378,379,380,368,109,379,380,368,381,370,207,378,379,380,368,109,381,379,381,370,207,378,379,380,368,109,379,379,370,207,378,370,207,378,368,109,370,207,378,379,381,378,370,207,378,379,380,368,109,370,207,378,370,207,378,379,380,368,109,381,370,207,378,379,380,368,109,379,379,381,370,207,378,379,380,368,109,381,370,207,378,379,380,368,109,381,370,207,378,379,380,368,109,0,0,0,0,0,382,383,384,367,384,367,367,367,384,367,384,0,384,367,367,384,367,382,383,384,367,382,383,382,383,367,384,367,384,367,384,367,384,367,0,386,386,386,386,386,386,0,386,386,386,386,386,386,386,386,386,386,388,0,0,388,0,0,0,0,388,388,0,0,0,0,389,391,392,390,393,394,396,397,388,389,391,392,390,393,394,396,397,388,397,396,0,0,0,391,392,390,393,394,389,391,392,392,388,389,389,391,392,390,393,394,396,397,388,390,397,389,391,392,390,393,394,396,397,388,389,391,392,390,393,394,396,397,388,389,391,392,390,393,394,396,397,130,389,391,392,390,393,394,396,397,130,397,390,393,394,396,390,389,392,390,393,394,396,389,391,392,390,393,394,396,397,388,389,391,392,390,393,394,396,397,388,389,391,392,390,393,394,396,397,388,393,394,389,391,392,390,393,394,396,397,388,472,472,0,0,0,399,399,399,0,0,401,399,402,401,399,402,399,401,401,399,402,402,401,399,402,401,399,401,0,401,399,402,399,401,401,399,402,401,399,401,399,399,401,0,0,0,0,401,402,401,399,402,401,399,402,401,399,401,399,402,401,399,402,0,0,399,0,0,401,399,401,0,0,0,0,0,0,123,123,123,0,0,0,0,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,0,408,408,408,408,408,408,407,92,408,409,123,407,407,407,407,92,92,92,92,408,408,408,408,409,409,409,409,123,123,123,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,408,92,407,92,408,409,123,407,92,408,409,123,407,92,407,409,409,408,407,92,408,409,123,408,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,407,92,408,409,123,408,407,92,408,409,123,0,0,473,0,0,473,0,0,0,0,0,0,415,416,414,366,387,413,194,415,416,414,366,387,413,194,387,366,387,413,366,387,413,415,414,366,415,414,366,387,413,413,194,194,415,416,414,366,387,413,194,366,387,413,415,366,387,366,415,416,414,366,387,413,194,416,415,416,414,366,387,413,194,415,387,0,414,366,366,366,387,366,415,416,366,414,414,416,414,366,366,0,366,366,366,414,366,387,413,413,194,415,416,414,366,387,413,194,415,416,414,366,387,413,194,415,416,414,366,387,413,194,415,416,414,366,387,413,194,0,419,0,0,0,0,0,0,419,419,420,421,419,420,421,419,420,420,421,419,419,420,421,419,420,421,420,420,420,421,474,475,476,420,419,420,421,419,420,421,420,420,419,420,419,419,420,421,419,420,421,419,420,421,421,419,420,421,0,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,0,0,424,425,424,425,424,425,424,425,424,425,425,424,424,424,424,424,425,424,425,424,424,425,424,425,425,425,425,424,424,424,424,425,424,425,425,424,425,424,424,424,425,424,424,424,424,424,425,424,424,425,424,425,424,424,424,425,425,424,424,424,424,424,425,424,425,425,424,425,424,425,424,425,424,0,0,0,429,427,429,427,428,429,427,428,427,428,427,428,427,427,427,427,428,427,428,427,428,427,428,427,428,427,428,427,427,427,427,427,428,427,427,428,429,427,428,427,427,428,427,428,427,427,427,428,429,427,428,429,427,427,429,427,428,427,427,428,427,427,429,427,429,429,427,429,428,427,428,427,427,427,427,428,427,428,429,427,428,429,427,428,429,427,428,429,427,428,0,0,0,0,433,430,433,430,430,430,430,433,430,430,430,433,430,433,430,430,433,433,430,433,433,430,433,430,433,430,433,430,433,430,433,430,434,435,435,435,131,434,435,0,0,0,0,435,435,131,434,435,131,434,435,131,434,435,131,434,435,131,434,435,131,434,435,131,434,435,131,434,435,131,131,131,131,434,434,434,434,435,435,435,435,131,434,435,435,131,434,435,131,434,435,131,434,435,131,434,131,131,434,435,131,434,435,131,131,131,131,434,435,131,434,435,435,131,434,435,131,434,435,131,131,131,434,435,131,131,434,435,477,478,477,478,477,478,478,479,480,480,0,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,440,0,0,0,0,0,0,0,449,0,0,107,442,443,444,107,438,438,442,443,444,107,438,438,0,440,442,443,444,442,443,444,107,438,442,443,444,107,438,107,107,107,107,107,442,443,444,442,107,107,107,107,107,107,107,107,443,442,443,444,107,107,438,442,443,444,107,107,438,107,442,443,444,107,438,107,0,107,107,107,442,443,444,107,438,442,443,444,107,438,438,442,443,444,107,438,443,444,442,443,444,443,444,438,449,449,107,107,107,107,107,107,0,107,107,438,438,107,442,443,444,107,438,107,107,442,443,444,107,438,442,443,444,107,438,438,442,443,444,107,438,0,107,438,438,438,442,443,444,107,438,438,442,443,442,443,444,443,444,442,443,444,443,444,438,0,0,0,0,0,0,451,452,451,452,451,451,451,451,451,451,451,451,452,451,451,452,452,451,451,452,452,451,452,451,452,0,452,452,452,452,451,451,452,451,452,451,452,452,451,452,451,0,455,455,455,455,455,455,455,455,455,455,455,455,455],"f":"`````````````````````````````{{bb}c{}}{{bb}d}`{{}{{j{}{{f{c}}{h{e}}}}}ln}{{}A`}```{c{{Ab{eg}}}{}{}Ad}{c{{Ah{Af}}}{}}{A`Aj}{{{j{}{{f{c}}{h{e}}}}}eln}{A`c{}}{A`{{Ah{Af}}}}{c{{An{{Ah{e}}Al}}}{}B`}{BbBd}``{cBd{}}``{ce{}{}}400000000000000000{{BfBh}Bj}{c{{An{{Bn{Bl}}}}}{}}{A`A`}{C`C`}{bb}{CbCb}{CdCd}{BbBb}{BfBf}{{ce}d{}{}}000000{{A`A`}Cf}{{C`C`}Cf}{{bb}Cf}{{CdCd}Cf}{{BbBb}Cf}{{BfBf}Cf}{{ce}Cf{}{}}00000`{{cCh}{{An{A`Cj}}}Cl}{{cCh}{{An{C`Cj}}}Cl}{{cCh}{{An{bCj}}}Cl}{{cCh}{{An{CdCj}}}Cl}{{cCh}{{An{BfCj}}}Cl}{{A`c}{{An{BdCn}}}D`}{{C`c}{{An{BdCn}}}D`}{{bc}{{An{BdCn}}}D`}{{Cdc}{{An{BdCn}}}D`}{{Bfc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}0000``{DbBd}{A`c{}}{c{{An{A`}}}Dd}{c{{An{C`}}}Dd}{c{{An{b}}}Dd}{c{{An{Cb}}}Dd}{c{{An{Cd}}}Dd}{c{{An{Bf}}}Dd}`{{bb}c{}}{{cDf}{{An{dDh}}}{}}00000```{ce{}{{Dl{Dj}}}}0``{{}c{}}0{b{{Dn{d}}}}``{{A`A`}E`}{{C`C`}E`}{{bb}E`}{{CbCb}E`}{{CdCd}E`}{{BbBb}E`}{{BfBf}E`}{{ce}E`{}{}}000000000000000000000000000`{{cDf}{{An{dEb}}}{}}00000``{{A`Ed}Ef}00{{C`Ed}Ef}0{{bEd}Ef}0{{CbEd}Ef}{{CdEd}Ef}0{{EhEd}Ef}0{{BbEd}Ef}{{BfEd}Ef}{{EjEd}Ef}0`{cc{}}{AjA`}{ElC`}2{Bjb}3333{EnEh}{F`Eh}{BdBb}666{Bhb}{c{{An{eFb}}}{{Ff{}{{Fd{{An{AfFb}}}}}}FhFj}{}}{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}0000{c{{j{}{{f{c}}{h{e}}}}}ln}{cA`{}}:{c{{j{}{{f{e}}{h{c}}}}}nl}15<<<<<<<5{{{Ah{Af}}}{{An{{j{}{{f{c}}{h{e}}}}Gd}}}ln}{{{Ah{Af}}}{{An{A`Gd}}}}0{Gf{{An{A`c}}}{}}{Gf{{An{C`c}}}{}}{Gf{{An{bc}}}{}}{Gf{{An{Cbc}}}{}}{{GfGh}{{An{bEh}}}}{{{Ah{Af}}}{{j{}{{f{c}}{h{e}}}}}ln}{{A`c}dGj}{{C`c}dGj}{{bc}dGj}{{Cbc}dGj}{{Cdc}dGj}{{Bfc}dGj}```{{A`c}e{{Gl{{Ah{Af}}}}}{}}{ce{}{}}00000000{{{j{}{{f{c}}{h{e}}}}}eln}{A`c{}}{c{{Gn{e}}}{}{}}00000000`{DbBd}``````````{Bhb}`{{bBh}c{}}`2`{{A`A`}{{H`{Cf}}}}{{C`C`}{{H`{Cf}}}}{{bb}{{H`{Cf}}}}{{CdCd}{{H`{Cf}}}}{{BbBb}{{H`{Cf}}}}{{BfBf}{{H`{Cf}}}}``````{{bb}c{}}{{bb}d}`9{bHb}`{bBh}{{bb}b}`{{A`c}AnHd}{{C`c}AnHd}{{bc}AnHd}{{Cbc}AnHd}{{Cdc}AnHd}{{Bfc}AnHd}```{Eh{{H`{Hf}}}};:{cb{{Ff{}{{Fd{b}}}}}}`{DbBd}````{c{{Bn{Af}}}{}}0000{cHh{}}{ce{}{}}000000111111{C`Bd}4{BbBd}`{c{{An{{Ab{eg}}{Hj{e}}}}}{}{}Ad}{c{{An{e}}}{}{}}00000000000000000{b{{Dn{Bh}}}}``{cHl{}}00000000`666666666{BhBh}{{ce}{{An{d}}}{}Hn}``````8888888888`{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{{ce}d{}{}}0000`{{}Ih}{c{{An{I`}}}Dd}{c{{An{Ib}}}Dd}{c{{An{Id}}}Dd}{c{{An{If}}}Dd}{c{{An{Ih}}}Dd}{{cDf}{{An{dDh}}}{}}0000{{IbIb}E`}{{IdId}E`}{{IfIf}E`}{{IhIh}E`}{{ce}E`{}{}}000000000000000{{cDf}{{An{dEb}}}{}}0000{{I`Ed}Ef}{{IbEd}Ef}{{IdEd}Ef}{{IfEd}Ef}{{IhEd}Ef}{cc{}}000000000{ce{}{}}0000{c{{Gn{e}}}{}{}}0000```````````{{I`c}AnHd}{{Ibc}AnHd}{{Idc}AnHd}{{Ifc}AnHd}{{Ihc}AnHd}`66666{c{{An{e}}}{}{}}000000000{cHl{}}000088888{c{{An{Ij}}}Dd}{{Ijc}AnHd}``{c{{An{b}}}Dd}{{bc}AnHd}````````````````````````````````````````````````````````````{{IlIb}{{Jb{{J`{In}}}}}}{{{Jd{c}}Ib}{{Jb{{J`{In}}}}}{JfJhJj}}{Jf{{Jl{C`}}}}{{{Jd{c}}}{{Jl{C`}}}{JfJhJj}}{{{Jn{c}}}{{Jl{C`}}}{K`Kb}}{KdIl}{{IlKf}{{Jb{{J`{In}}}}}}{{{Jd{c}}Kf}{{Jb{{J`{In}}}}}{JfJhJj}}10{{IlBhCh}{{Jb{{J`{In}}}}}}{{{Jd{c}}BhCh}{{Jb{{J`{In}}}}}{JfJhJj}}{{{Jd{c}}BhCh}{{Dn{Kh}}}{JfJhJj}}{{KdCdKjFl}{{An{cKl}}}Kn}`{{IlA`}{{Jb{{J`{In}}}}}}{{{Jd{c}}A`}{{Jb{{J`{In}}}}}{JfJhJj}}{ce{}{}}00000000000000000000000000000000000`{L`L`}{LbLb}{KdKd}{{{Jn{c}}}{{Jn{c}}}Ld}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{{ce}d{}{}}00000000000{Mf{{Jb{{J`{In}}}}}}`{Il{{Jb{{J`{In}}}}}}{{{Jd{c}}}{{Jb{{J`{In}}}}}{JfJhJj}}{{cCh}{{An{LfCj}}}Cl}{{cCh}{{An{L`Cj}}}Cl}{{cCh}{{An{LhCj}}}Cl}{{L`c}{{An{BdCn}}}D`}{{Lfc}{{An{BdCn}}}D`}{{Lhc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00`{{}Lj}{{}Ll}{{}Ln}{{}M`}{Lbc{}}{Kdc{}}{c{{An{L`}}}Dd}{c{{An{Lf}}}Dd}{c{{An{Lj}}}Dd}{c{{An{Ll}}}Dd}{c{{An{Ln}}}Dd}{c{{An{M`}}}Dd}{c{{An{Mb}}}Dd}{c{{An{Md}}}Dd}{{MhFl}{{An{cKl}}}{KnJh}}{{IlMjKj{H`{Bd}}}{{Jb{{J`{In}}}}}}{{{Jd{c}}MjKj{H`{Bd}}}{{Jb{{J`{In}}}}}{JfJhJj}}{{cDf}{{An{dDh}}}{}}0000000{{IlMl}{{Jb{{J`{In}}}}}}{{{Jd{c}}Ml}{{Jb{{J`{In}}}}}{JfJhJj}}{{LfLf}E`}{{LhLh}E`}{{LjLj}E`}{{LlLl}E`}{{LnLn}E`}{{M`M`}E`}{{MbMb}E`}{{MdMd}E`}{{ce}E`{}{}}0000000000000000000000000000000{{cDf}{{An{dEb}}}{}}0000000`{LfMn}`{{N`Ed}Ef}0{{NbEd}Ef}0{{KlEd}Ef}0{{L`Ed}Ef}{{LbEd}Ef}{{KdEd}Ef}{{{Jd{c}}Ed}EfKb}{{{Jn{c}}Ed}EfKb}{{{Nd{c}}Ed}EfKb}{{LfEd}Ef}0{{LhEd}Ef}{{{Nf{c}}Ed}EfKb}{{LjEd}Ef}{{LlEd}Ef}{{LnEd}Ef}{{M`Ed}Ef}{{MbEd}Ef}{{MdEd}Ef}{NhN`}{cc{}}0{NjKl}1{NbKl}2{cLb{NlJhJj}}3{cKd{IlJhJj}}4444444444444{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}00{NnKd}{Nn{{Jn{O`}}}}{{{Bn{{Ob{C`Mf}}}}}Kd}{{{Ah{Lf}}}Kd}{{{Ah{Lf}}}{{Jn{O`}}}}{MfKd};;;;;;;;;;;;{{C`Mf}Kd}{Gf{{An{Lfc}}}{}}{cNb{{Od{Nj}}}}`{Il{{Jb{{J`{In}}}}}}{{{Jd{c}}}{{Jb{{J`{In}}}}}{JfJhJj}}{{IlKf}{{Jb{{J`{In}}}}}}{{{Jd{c}}Kf}{{Jb{{J`{In}}}}}{JfJhJj}}{Nb{{H`{Nj}}}}{Lb{{H`{c}}}{}}{Kd{{H`{c}}}{}}{Nb{{`{{Ff{}{{Fd{{Ob{C`N`}}}}}}}}}}{{IlBhCh}{{Jb{{J`{In}}}}}}{{{Jd{c}}BhCh}{{Jb{{J`{In}}}}}{JfJhJj}}`{{{Jd{c}}BhCh}{{Dn{Of}}}{JfJhJj}}8787```{ce{}{}}00000000000000000{c{{Gn{e}}}{}{}}00000000000000000{K`E`}{KlE`}```{c{{Jd{c}}}{}}{{{Bn{{Ob{C`Mf}}}}}{{Jn{O`}}}}{{MfC`Mn}Lf}{{{Bn{{Ob{C`Mf}}}}}{{Jn{c}}}{}}{{{Oh{C`Mf}}Mn}Lf}{LfC`}```{{{Jn{c}}}{{Bn{C`}}}{}}{Lf{{Oh{C`Mf}}}}`````{{N`C`}d}{Nbd}{Kld}{{{Nd{c}}Gf{Ah{Oj}}}{{Ol{Oj}}}K`}{{OnGfA`Kf}{{Jb{{J`{In}}}}}}{{OnGfA`}{{Jb{{J`{In}}}}}}{{OnHhA`}{{Jb{{J`{In}}}}}}{{JfC`Gf{Ah{Oj}}}{{Jb{{J`{In}}}}}}{{{Jd{c}}C`Gf{Ah{Oj}}}{{Jb{{J`{In}}}}}{JfJhJj}}{{{Jn{c}}C`Gf{Ah{Oj}}}{{Jb{{J`{In}}}}}{K`Kb}}{{On{H`{Kj}}HhA`C`}{{Jb{{J`{In}}}}}}{{OngHhA`}{{Jb{{J`{In}}}}}AbKb{{Ad{ce}}Jh}}{{IlKf}{{Jb{{J`{In}}}}}}{{{Jd{c}}Kf}{{Jb{{J`{In}}}}}{JfJhJj}}`10{{L`c}AnHd}{{Lfc}AnHd}{{Ljc}AnHd}{{Llc}AnHd}{{Lnc}AnHd}{{M`c}AnHd}{{Mbc}AnHd}{{Mdc}AnHd}`{Il{{Jb{{J`{In}}}}}}{{{Jd{c}}}{{Jb{{J`{In}}}}}{JfJhJj}}10`{{IlI`Kf}{{Jb{{J`{In}}}}}}{{{Jd{c}}I`Kf}{{Jb{{J`{In}}}}}{JfJhJj}}{{IlIhKf}{{Jb{{J`{In}}}}}}{{{Jd{c}}IhKf}{{Jb{{J`{In}}}}}{JfJhJj}}?>{N`{{H`{Hf}}}}{Kl{{H`{Hf}}}}{{IlKf}{{Jb{{J`{In}}}}}}{{{Jd{c}}Kf}{{Jb{{J`{In}}}}}{JfJhJj}}98`{{IlAf}{{Jb{{J`{In}}}}}}{{{Jd{c}}Af}{{Jb{{J`{In}}}}}{JfJhJj}}`{c{{Bn{Af}}}{}}00{ce{}{}}00000000000{cHh{}}000{c{{An{e}}}{}{}}00000000000000000000000000000000000{cHl{}}00000000000000000{{IlAh}{{Jb{{J`{In}}}}}}{{{Jd{c}}Ah}{{Jb{{J`{In}}}}}{JfJhJj}}{LfMf}`;:666666666666666666{{JfAj}Lb}{{{Jd{c}}Aj}Lb{JfJhJj}}{{{Jn{c}}Aj}Lb{K`Kb}}``````````999999{AlAl}{AnAn}{{ce}d{}{}}0{{cCh}{{An{AlCj}}}Cl}{{cCh}{{An{AA`Cj}}}Cl}{{cCh}{{An{AnCj}}}Cl}{{Alc}{{An{BdCn}}}D`}{{AA`c}{{An{BdCn}}}D`}{{Anc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00`{c{{An{An}}}Dd}{{cDf}{{An{dDh}}}{}}0{{AnAn}E`}{{ce}E`{}{}}000{{cDf}{{An{dEb}}}{}}0{{AlEd}Ef}{{AA`Ed}Ef}{{AnEd}Ef}{cc{}}00{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}00011{ce{}{}}00{c{{Gn{e}}}{}{}}00{{Alc}AnHd}{{Anc}AnHd}`{c{{Bn{Af}}}{}}000044{c{{An{e}}}{}{}}00000{cHl{}}00666{AAb{{AAf{AAd}}}}{BjAAh}{AAjAAl}{AAnAB`}{ABbABd}{ABfABh}{ABjABl}{ABnAC`}{ACbACd}{MlACf}{AChACj}{AjACl}{ACnAD`}{AAfAAb}{AAhBj}{AB`AAn}{ABdABb}{ABhABf}{ACdACb}{ADbADd}{ACfMl}{ACjACh}{AD`ACn}```{c{{An{ADf}}}Dd}{{ADfc}AnHd}{c{{An{ADh}}}Dd}{{ADhc}AnHd}{c{{An{ADj}}}Dd}{{ADjc}AnHd}``````````````````````````````````````````````````````{{{ADl{c}}e}d{{AE`{ADn}}}{{Od{c}}AEbAEd}}{{{ADl{c}}e}{{Dn{Ch}}}{{AE`{ADn}}}{{Ff{}{{Fd{{Ob{AjAEf}}}}}}}}{ce{}{}}000000000000000000000000000000000{NnMn}{AEhMn}{AEj{{Dn{c}}}{}}{AElAEl}{AEnAEn}{NnNn}{AF`AF`}{AEhAEh}{MnMn}{AFbAFb}{{{ADl{c}}}{{ADl{c}}}Ld}{AFdAFd}{AFfAFf}{AFhAFh}{AEjAEj}{AFjAFj}{AFlAFl}{AFnAFn}{{{AG`{c}}}{{AG`{c}}}{LdAGb}}{{ce}d{}{}}000000000000000{{MnMn}Cf}{{AFbAFb}Cf}{{ce}Cf{}{}}0````{{cCh}{{An{AEnCj}}}Cl}{{cCh}{{An{NnCj}}}Cl}{{cCh}{{An{AEhCj}}}Cl}{{cCh}{{An{MnCj}}}Cl}{{cCh}{{An{AFbCj}}}Cl}{{cCh}{{An{AFhCj}}}Cl}{{cCh}{{An{AEjCj}}}Cl}{{AEnc}{{An{BdCn}}}D`}{{Nnc}{{An{BdCn}}}D`}{{AEhc}{{An{BdCn}}}D`}{{Mnc}{{An{BdCn}}}D`}{{AFbc}{{An{BdCn}}}D`}{{AFhc}{{An{BdCn}}}D`}{{AEjc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}000000{NnAj}``{c{{An{{Oh{eg}}}}}Dd{AGdAGfAGh}AGj}{{{ADl{c}}e}{{Dn{Ch}}}{{AE`{ADn}}}{{Ff{}{{Fd{{Ob{AjAEf}}}}}}}}0{{}{{ADl{c}}}{}}{{}AFd}{{}AFf}{c{{An{AGl}}}Dd}{c{{An{AEl}}}Dd}{c{{An{AEn}}}Dd}{c{{An{Nn}}}Dd}{c{{An{AF`}}}Dd}{c{{An{AEh}}}Dd}{c{{An{Mn}}}Dd}{c{{An{AFb}}}Dd}{c{{An{AFd}}}Dd}{c{{An{AFf}}}Dd}{c{{An{AFh}}}Dd}{c{{An{AEj}}}Dd}{c{{An{AFj}}}Dd}{c{{An{AFl}}}Dd}{c{{An{AFn}}}Dd}{c{{An{{AG`{e}}}}}DdAGb}{c{{An{AGn}}}Dd}{{cDf}{{An{dDh}}}{}}00000000000000{Lf{{Dn{Nn}}}}{{}Mn}{{AGlAGl}E`}{{AElAEl}E`}{{AEnAEn}E`}{{NnNn}E`}{{AF`AF`}E`}{{AEhAEh}E`}{{MnMn}E`}{{AFbAFb}E`}{{AFdAFd}E`}{{AFhAFh}E`}{{AEjAEj}E`}{{AFjAFj}E`}{{{AG`{c}}{AG`{c}}}E`{AH`AGb}}{{ce}E`{}{}}00000000000000000000000000000000000000000000000{{cDf}{{An{dEb}}}{}}00000000000000{AEh{{H`{Gf}}}}{{AElEd}Ef}{{AEnEd}Ef}{{NnEd}Ef}{{AF`Ed}Ef}{{AEhEd}Ef}{{MnEd}Ef}0{{AFbEd}Ef}0{{{ADl{c}}Ed}EfKb}{{AFdEd}Ef}{{AFfEd}Ef}{{AFhEd}Ef}{{AEjEd}Ef}{{AFjEd}Ef}{{AFlEd}Ef}{{AHbEd}Ef}0{{AFnEd}Ef}{{{AG`{c}}Ed}Ef{KbAGb}}{cc{}}000000{{{Bn{c}}}{{ADl{c}}}{{AE`{ADn}}}}11111{{AElAElAFhAEl}AFj}222{AHdAHb}{NjAHb}44{{{AHf{Af}}}Mn}{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}000000{AFh{{Dn{AHh}}}}{e{{ADl{c}}}{{AE`{ADn}}}{{AHj{}{{Fd{c}}}}}}{AFn{{Dn{AHl}}}}{AFn{{Dn{{AG`{AHn}}}}}}{AFn{{Dn{{AG`{AI`}}}}}}{{ce}{{AIf{}{{AIb{c}}{AId{e}}}}}{AbAIh}{AbAIh}}{{ceg}{{AIl{}{{AIb{c}}{AIj{e}}{AId{g}}}}}{AbAIh}{AbAIh}AHh}================{Gf{{An{Mnc}}}{}}{Gf{{An{AFbc}}}{}}{c{{Dn{AFd}}}AIf}{{AjAEfAInc}{{Dn{AEj}}}AJ`}{{{ADl{c}}AEf}{{H`{c}}}{}}{{Nnc}{{Dn{{Ob{Aje}}}}}{{Od{AEf}}}AJb}{{Nnc}{{Dn{{Ob{AjAEj}}}}}{{Od{AEf}}}}{{NnAj}{{Dn{c}}}AJb}{{NnAj}{{Dn{AEj}}}}``{{AEnc}dGj}{{Mnc}dGj}{{AFbc}dGj}`{ce{}{}}0000000000000000{c{{Gn{e}}}{}{}}0000000000000000{{NnC`}{{H`{Lf}}}}{{AElAEf}E`}{{AEjAEf}E`}{AHhAEf}{AElAEf}{AEjAEf}```{{{ADl{c}}}{{Jl{AEf}}}{}}{AJd{{An{cNj}}}Ab}``{{NnGf}{{An{{H`{c}}Nj}}}Ab}````{{AEfOj}AEl}{{}{{ADl{c}}}{}}{{OjOj}AFd}{{GfOj}{{Dn{c}}}Ab}{{MnMn}{{H`{Cf}}}}{{AFbAFb}{{H`{Cf}}}}`{{NnCh}{{An{NnCj}}}}{{AEjCh}{{An{AEjCj}}}}``{{AGlc}AnHd}{{AElc}AnHd}{{AEnc}AnHd}{{Nnc}AnHd}{{AF`c}AnHd}{{AEhc}AnHd}{{Mnc}AnHd}{{AFbc}AnHd}{{AFdc}AnHd}{{AFfc}AnHd}{{AFhc}AnHd}{{AEjc}AnHd}{{AFjc}AnHd}{{AFlc}AnHd}{{AFnc}AnHd}{{{AG`{c}}e}AnAGbHd}{{AGnc}AnHd}{AHb{{H`{Hf}}}}`{c{{Bn{Af}}}{}}000000{AJfAJh}{{{ADl{AJj}}}AJh}{{{AIl{}{{AIb{c}}{AIj{e}}{AId{g}}}}}AFj{AbAIh}{AbAIh}AHh}{{Mn{AJn{AJl}}}{{Dn{Ml}}}}{AHlAFn}{{{AG`{AI`}}}AFn}{{{AG`{AHn}}}AFn}{ce{}{}}000000000000000{{{AIf{}{{AIb{c}}{AId{e}}}}}{{Ob{ce}}}{AbAIh}{AbAIh}}{{{AIl{}{{AIb{c}}{AIj{e}}{AId{g}}}}}{{Ob{AEfceg}}}{AbAIh}{AbAIh}AHh}{MnAFb}{cHh{}}00{AFd{{Dn{c}}}AIf}{AFj{{Dn{c}}}AIl}{Lf{{Dn{Nn}}}}{c{{An{e}}}{}{}}000000000000000000000000000000000{cHl{}}0000000000000000`{AElOj}`{AHhAIn}``;;;;;;;;;;;;;;;;;{AElAEl}{c{{An{e}}}DdAb}{{ce}AnAIhHd}`>>{c{{An{{Bn{e}}}}}DdAGb}{c{{An{{AK`{e}}}}}DdAGb}{{cDf}{{An{dDh}}}{}}{{cDf}{{An{dEb}}}{}}{cc{}}{ce{}{}}{c{{Gn{e}}}{}{}}{{{Ah{c}}e}AnAGbHd}{{{AK`{c}}e}AnAGbHd}??>3`````````````````````````````````````````{{AKb{AJn{c}}AKd}{{An{AKbAKf}}}AKh}{AKjAKl}{AKnAKl}{AL`AKl}{ALbAKl}{ALdAKl}{ALfAKl}{ALhAKl}{ALjAKl}000000{AKbALl}0{AEfGf}`>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>{ALnFl}{{}ALn}{{AKjAj}AM`}{{AKnAj}AMb}{{AL`Aj}AMd}{{ALbAj}AMf}{{ALdAj}AMh}{{ALfAj}AMj}{{ALhAj}AMl}{{{AMn{c}}}{{AMn{c}}}{}}{AKbAKb}{AN`AN`}{AEfAEf}{{ALjAj}AMh}{{ALjAj}AMd}{ALjALj}{{ALjAj}AMj}{{ALjAj}AMf}{{ALjAj}AMl}{{ALjAj}AMb}{{ALjAj}AM`}{FlFl}{AM`AM`}{AMbAMb}{AMdAMd}{AMfAMf}{AMhAMh}{AMjAMj}{AMlAMl}{GfAEf}{{ce}d{}{}}000000000000{{AKbAKb}Cf}{{AN`AN`}Cf}{{AEfAEf}Cf}{{ce}Cf{}{}}00{{cCh}{{An{{AMn{e}}Cj}}}Cl{}}{{cCh}{{An{AKbCj}}}Cl}{{cCh}{{An{AN`Cj}}}Cl}{{cCh}{{An{AEfCj}}}Cl}{{cCh}{{An{ALjCj}}}Cl}{{cCh}{{An{AM`Cj}}}Cl}{{cCh}{{An{AMbCj}}}Cl}{{cCh}{{An{AMdCj}}}Cl}{{cCh}{{An{AMfCj}}}Cl}{{cCh}{{An{AMhCj}}}Cl}{{cCh}{{An{AMjCj}}}Cl}{{cCh}{{An{AMlCj}}}Cl}{{{AMn{c}}e}{{An{BdCn}}}{}D`}{{AKbc}{{An{BdCn}}}D`}{{AN`c}{{An{BdCn}}}D`}{{AEfc}{{An{BdCn}}}D`}{{ALjc}{{An{BdCn}}}D`}{{AM`c}{{An{BdCn}}}D`}{{AMbc}{{An{BdCn}}}D`}{{AMdc}{{An{BdCn}}}D`}{{AMfc}{{An{BdCn}}}D`}{{AMhc}{{An{BdCn}}}D`}{{AMjc}{{An{BdCn}}}D`}{{AMlc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00000000000{AKbANb}{{FlClBhAjCh}{{An{cCj}}}AKl}``{{FlClAjCh}{{An{cCj}}}AKl}{{}ALn}{{}Fl}{AM`c{}}{AMbc{}}{AMdc{}}{AMfc{}}{AMhc{}}{AMjc{}}{AMlc{}}6543210{c{{An{AKb}}}Dd}{c{{An{AN`}}}Dd}{c{{An{AEf}}}Dd}{AKbANd}{{cDf}{{An{dDh}}}{}}00{AKjBh}{AKnBh}{AL`Bh}{ALbBh}{ALdBh}{ALfBh}{ALhBh}{ALjBh}000000{{{AMn{c}}{AMn{c}}}E`{}}{{AKbAKb}E`}{{AN`AN`}E`}{{AEfAEf}E`}{{ALjALj}E`}{{AM`AM`}E`}{{AMbAMb}E`}{{AMdAMd}E`}{{AMfAMf}E`}{{AMhAMh}E`}{{AMjAMj}E`}{{AMlAMl}E`}{{ce}E`{}{}}0000000000000000000000000000000000000000000{{AKjAM`}E`}{{AKnAMb}E`}{{AL`AMd}E`}{{ALbAMf}E`}{{ALdAMh}E`}{{ALfAMj}E`}{{ALhAMl}E`}{{ALjAMd}E`}{{ALjAMh}E`}{{ALjAMf}E`}{{ALjAMj}E`}{{ALjAMl}E`}{{ALjAM`}E`}{{ALjAMb}E`}{{cDf}{{An{dEb}}}{}}00{{{AMn{c}}Ed}Ef{}}{{AKbEd}{{An{dANf}}}}{{AN`Ed}Ef}0{{AEfEd}Ef}0{{ALjEd}Ef}0{{FlEd}Ef}{{AM`Ed}Ef}0{{AMbEd}Ef}0{{AMdEd}Ef}0{{AMfEd}Ef}0{{AMhEd}Ef}0{{AMjEd}Ef}0{{AMlEd}Ef}0{cc{}}000{ANbAKb}11{GfAEf}2222222222{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}00000000000{{Aj{J`{AKj}}}AM`}{{Aj{J`{AKn}}}AMb}{{Aj{J`{AL`}}}AMd}{{Aj{J`{ALb}}}AMf}{{Aj{J`{ALd}}}AMh}{{Aj{J`{ALf}}}AMj}{{Aj{J`{ALh}}}AMl}:::::::::::::{{{AJn{c}}{Ah{Af}}}{{An{AKbAKf}}}ANh}{{{AJn{c}}Gf}{{An{AKbAKf}}}ANh}{Gf{{An{AKbAKf}}}}{{{AJn{c}}ACh}AKbANh}<{Gf{{An{AKb}}}}{Gf{{An{AN`c}}}{}}{{Ajc}AM`{AKjJhJj}}{{Ajc}AMb{AKnJhJj}}{{Ajc}AMd{AL`JhJj}}{{Ajc}AMf{ALbJhJj}}{{Ajc}AMh{ALdJhJj}}{{Ajc}AMj{ALfJhJj}}{{Ajc}AMl{ALhJhJj}}{{AKbc}dGj}{{AN`c}dGj}{{ALjc}dGj}{{AM`c}dGj}{{AMbc}dGj}{{AMdc}dGj}{{AMfc}dGj}{{AMhc}dGj}{{AMjc}dGj}{{AMlc}dGj}```````{ce{}{}}000000000000000{{{ANl{}{{ANj{c}}}}Aj}c{}}{{{AMn{c}}Aj}e{}{}}{c{{Gn{e}}}{}{}}000000000000000{AM`Aj}{AMbAj}{AMdAj}{AMfAj}{AMhAj}{AMjAj}{AMlAj}```````{{{AJn{c}}e}AKbANh{ANnAO`}}{cAKb{ANnAO`}}{{}AN`}{{AKbAKb}{{H`{Cf}}}}{{AN`AN`}{{H`{Cf}}}}{{AEfAEf}{{H`{Cf}}}}{AKbMl}{AKb{{AHf{Af}}}}{AKbACh}{{AKbc}AnHd}{{AN`c}AnHd}{{AEfc}AnHd}`{{AKbAAn}ACb}{{AKb{AJn{c}}{H`{AOb}}}ANbAKh}{c{{Bn{Af}}}{}}00000000000{AKj{{H`{Oj}}}}{ALj{{H`{Oj}}}}{ce{}{}}000000000000{cHh{}}000000000`{c{{An{e}}}{}{}}0000000000000000000000000000000{{AKb{AJn{c}}AKd}{{An{dAKf}}}AKh}{cHl{}}0000000000000004444444444444444{ALnd}{AKb{{Ob{AOdAOf}}}}```6666{{cCh}{{An{AOhCj}}}Cl}{{AOhc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}{c{{An{AOh}}}Dd}{c{{An{Ah}}}Dd}{{cDf}{{An{dDh}}}{}}0{{cDf}{{An{dEb}}}{}}0{{AOhEd}Ef}{{AhEd}Ef}{cc{}}0{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}{AOhAj}`{ce{}{}}0{c{{Gn{e}}}{}{}}0``{{AOhc}AnHd}{{Ahc}AnHd}{{AOhAKb}{{Dn{Ah}}}}``{c{{Bn{Af}}}{}}{c{{An{e}}}{}{}}000{cHl{}}0{{Ah{AJn{c}}}{{An{AOhAKf}}}{ANhAKh}}88``{AOj{{Bn{{AOn{AOl}}}}}}{AOjAKl}{{AOjB`BbAj}{{Jb{{J`{In}}}}}};;{AOlAOl}{{ce}d{}{}}{{AOjB`Aj}{{Jb{{J`{In}}}}}}{AOjFl}{AOlc{}}{{AOlEd}Ef}{cc{}}{cAOl{AOjJhJj}}1{AOl{{H`{c}}}{}}`{ce{}{}}{c{{Gn{e}}}{}{}}{{AOjB`CdAj}{{Jb{{J`{In}}}}}}{{AOjB`AMhC`}{{Jb{{J`{In}}}}}}{{AOjB`AMbAj}{{Jb{{J`{In}}}}}}{{AOjB`AMdCdAj}{{Jb{{J`{In}}}}}}5{c{{An{e}}}{}{}}0{cHl{}}7````````````````````````````````````````````````````````{{BdBd}Bd}{{{Bf{c}}{Ah{Af}}}{{Dn{d}}}Bh}{{BjHhBl{Oh{BlBn}}{H`{Aj}}}{{Dn{dNj}}}}{{BjHhBl{Oh{BlBn}}}{{Dn{dNj}}}}{{Bjg{H`{Bd}}}{{Dn{c{BA`{e}}}}}{}{}{{BAh{B`BAb}{{BAd{{BAf{{Dn{ce}}}}}}}}}}`{{{BAl{}{{BAj{c}}}}}{{Jb{{J`{In}}}}}{BhKb}}{BAn{{Jb{{J`{In}}}}}}{{{BB`{c}}}{{Jb{{J`{In}}}}}{BAlJh}}{Bj{{B`{BBb}}}}{{{BBd{c}}}{{Jb{{J`{In}}}}}{KbJhJjBAn}}{Bj{{B`{BBf}}}}{ce{}{}}000000000000000000000000000000000`{{cBhBBhBBhBBj}Bh{}}{BjBj}{{{BBd{c}}}{{BBd{c}}}{KbLd}}{BBlBBl}{BlBl}{BBnBBn}{BC`BC`}{{ce}d{}{}}00000{{BlBl}Cf}`{Bh{{Jb{{J`{In}}}}}}{BCb{{Jb{{J`{In}}}}}}{{{Bf{c}}}{{Jb{{J`{In}}}}}{KbBh}}{{{B`{BBb}}}d}{{{BCd{c}}}{{Jb{{J`{In}}}}}BCb}{{{B`{BBb}}}{{Dn{d}}}}{{ce}Cf{}{}}{{cCh}{{An{BCfCj}}}Cl}{{cCh}{{An{BChCj}}}Cl}{{cCh}{{An{BlCj}}}Cl}{{BCfc}{{An{BdCn}}}D`}{{BChc}{{An{BdCn}}}D`}{{Blc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00{{BjBl{H`{Aj}}HhE`}{{Dn{dNj}}}}{{{Ah{Af}}Ch}cBCj}{{{Ah{Af}}Ch}{{Dn{cGb}}}BCl}{{{Ah{Af}}Ch{Ah{Af}}}cBCl}{BCnCh}{{{B`{c}}}Ch{}}`{{{BD`{c}}}e{}{}}0{{cDf}{{An{dDh}}}{}}00{BBld}{{{B`{c}}}{{Dn{d}}}{}}{Bj{{Dn{d}}}}10{{BlBl}E`}{{ce}E`{}{}}000{{cDf}{{An{dEb}}}{}}00{Bjd}{{BDbc}{{Jb{{J`{In}}}}}{BDdJhJj}}{{ce}{{Jb{{J`{In}}}}}{}{BDdJhJj}}{{BCbChc}{{`{{BDf{}{{Fd{Ob}}}}}}}BDd}21{{{BB`{c}}Ed}Ef{}}{{{Bf{c}}Ed}EfKb}{{{B`{c}}Ed}Ef{}}{{{BA`{c}}Ed}EfKb}{{BjEd}Ef}{{{BBd{c}}Ed}Ef{KbKb}}{{{BCd{c}}Ed}EfKb}{{BCfEd}Ef}{{BChEd}Ef}{{BlEd}Ef}0{{BBnEd}Ef}0{{BC`Ed}Ef}{{GbEd}Ef}0{cc{}}0000000{cBjBAl}111111111{{{Ah{Af}}Ch}{{Dn{BCjGb}}}}{{{Ah{Af}}Ch}{{Dn{BClGb}}}}{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}0000444444{cH`In}{{BC`Bd}{{H`{BBn}}}}{{{BBd{c}}{Ah{Af}}}{{Bn{Af}}}Kb}{{{BCd{c}}{Ah{Af}}}{{Bn{Af}}}{}}{{BDbc}{{Jb{{J`{In}}}}}{BCjBDhJhJj}}{{ce}{{Jb{{J`{In}}}}}{}{BCjBDhJhJj}}``{{{B`{c}}}{{B`{c}}}{}}`{Bld}```3232{ce{}{}}0000000000000000{BDjBj}{Bj{{BDl{BAn}}}}2{{{B`{c}}}{{B`{BBf}}}{}}{c{{Gn{e}}}{}{}}0000000000000000`{{{B`{c}}}E`{}}{BjE`}{{}BC`}{BC`Bd}```{{{H`{Aj}}}Aj}{El{{Bn{Af}}}}{{c{BDl{BDn}}}{{Bf{c}}}Bh}{{{J`{BCb}}Ch}{{B`{BBb}}}}{{cCh}BjBAl}{{{BDl{BAn}}Ch}Bj}{BC`{{H`{c}}}{}}0```{{BAn{Ah{Af}}}{{Jb{{J`{In}}}}}}{{{BB`{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}{BAlJh}}{{{BBd{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}{KbJhJjBAn}}`{{BC`Bd}{{H`{c}}}{}}{{{B`{c}}e}d{}{BE`AEb}}`{cGb{HfAEbAEd}}{{BlBl}{{H`{Cf}}}}{{cBEbBh}d{}}{{cBEb}d{}}``{BAnBd}{BCbBd}{{{BB`{c}}}Bd{BAlJh}}{{{Bf{c}}}Bd{KbBh}}{{{BBd{c}}}Bd{KbJhJjBAn}}{{{BCd{c}}}BdBCb}76``{{BEd{Ah{Af}}}{{Jb{{J`{In}}}}}}{{{Bf{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}Bh}{{{B`{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}AEb}{{{BCd{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}BEd}32103210{{BEd{Ah{Af}}{Ah{Af}}}{{Jb{{J`{In}}}}}}{{{Bf{c}}{Ah{Af}}{Ah{Af}}}{{Jb{{J`{In}}}}}Bh}{{{B`{c}}{Ah{Af}}{Ah{Af}}}{{Jb{{J`{In}}}}}AEb}{{{BCd{c}}{Ah{Af}}{Ah{Af}}}{{Jb{{J`{In}}}}}BEd}76547654{{BAn{Ah{Af}}}{{Jb{{J`{In}}}}}}{{{BB`{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}{BAlJh}}{{{BBd{c}}{Ah{Af}}}{{Jb{{J`{In}}}}}{KbJhJjBAn}}{{BDbc}{{Jb{{J`{In}}}}}{BDdJhJj}}{{ce}{{Jb{{J`{In}}}}}{}{BDdJhJj}}{{B`E`Bl}Bl}{{BDbc}{{Jb{{J`{In}}}}}{BCjBDhJhJj}}{{ce}{{Jb{{J`{In}}}}}{}{BCjBDhJhJj}}{BEf{{Jb{{J`{In}}}}}}{{{Bf{c}}}{{Jb{{J`{In}}}}}Bh}{{{B`{BBb}}}{{Jb{{J`{In}}}}}}{{{BCd{c}}}{{Jb{{J`{In}}}}}BEf}{{BCfc}AnHd}{{BChc}AnHd}{{Blc}AnHd}6543{BC`{{Ob{Bd{H`{Bd}}}}}}{BjBd}`{BEh{{Bn{Af}}}}{BCl{{Bn{Af}}}}{c{{Bn{Af}}}{}}0000{ce{}{}}00000{{{B`{c}}}{{B`{c}}}{}}{{{B`{c}}}{{B`{BBf}}}{}}{{{B`{c}}{Bn{Af}}}{{B`{c}}}{}}{{{B`{c}}Aj}{{B`{c}}}{}}{cHh{}}00{c{{An{e}}}{}{}}000000000000000000000000000000000`{cHl{}}0000000000000000{Bjd}00{{BjBj}d}111111111199999999999999999{{Bjcg}{{Ob{e{B`{BBb}}}}}{BCjBDhBEj}{}{{BAh{H`}{{BAd{{H`{e}}}}}}}}{{Bjc}{}{BCjBDhBEj}}:{{BjCh}Bj}9{{Bj{Bn{Af}}}Bj}9{{BjAj}Bj}{{BdBd}Gb}{{AfAf}Gb}````````````````{BEl{{Jb{{J`{In}}}}}}{ce{}{}}00000000000{BEn{{Jb{{J`{In}}}}}}``{{}BF`}{{}BFb}{{}BEl}{BEld}{{BFdBFd}E`}{{ce}E`{}{}}000{{BEnEd}Ef}{{BF`Ed}Ef}{{BFbEd}Ef}{{BFfEd}Ef}{{BElEd}Ef}{{BFdEd}Ef}{cc{}}00000>>>>>>{c{{Gn{e}}}{}{}}00000``;`````{{BEn{Ah{Af}}}{{Jb{{J`{In}}}}}}00{{BEn{Ah{Af}}{Ah{Af}}}{{Jb{{J`{In}}}}}}11{BEn{{Jb{{J`{In}}}}}}`0{c{{An{e}}}{}{}}00000000000`{cHl{}}00000`{ce{}{}}00000```{{BFhc}dBFj}1111``{{}BDn}{{}BFh}{{BDnEd}Ef}{{BFhEd}Ef}<<55;;32{{BDnc}dBFj}{{BDnc}BFlBFj}{BhBd}{cBdBFj}{{BDnBFh}d}<<<<;;::```````````````::::::::::::::::::::{BFnBFn}{{ce}d{}{}}{{BG`BG`}Cf}{{BGbBGb}Cf}{{BGdBGd}Cf}{{ce}Cf{}{}}00{{cCh}{{An{BG`Cj}}}Cl}{{cCh}{{An{BGfCj}}}Cl}{{cCh}{{An{BGhCj}}}Cl}{{cCh}{{An{BGjCj}}}Cl}{{cCh}{{An{BGbCj}}}Cl}{{cCh}{{An{BGlCj}}}Cl}{{cCh}{{An{BGnCj}}}Cl}{{cCh}{{An{BH`Cj}}}Cl}{{cCh}{{An{BGdCj}}}Cl}{{BG`c}{{An{BdCn}}}D`}{{BGfc}{{An{BdCn}}}D`}{{BGhc}{{An{BdCn}}}D`}{{BGjc}{{An{BdCn}}}D`}{{BGbc}{{An{BdCn}}}D`}{{BGlc}{{An{BdCn}}}D`}{{BGnc}{{An{BdCn}}}D`}{{BH`c}{{An{BdCn}}}D`}{{BGdc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00000000{{BG`BG`}E`}{{BGbBGb}E`}{{BGdBGd}E`}{{ce}E`{}{}}00000000000{Bjd}{{BG`Ed}Ef}{{BGfEd}Ef}{{BGhEd}Ef}{{BGjEd}Ef}{{BGbEd}Ef}{{BGlEd}Ef}{{BGnEd}Ef}{{BH`Ed}Ef}{{BGdEd}Ef}{cc{}}000000000{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}0000000000001{cH`In}{ce{}{}}000000000{c{{Gn{e}}}{}{}}000000000{B`{{An{dNj}}}}{{BG`BG`}{{H`{Cf}}}}{{BGbBGb}{{H`{Cf}}}}{{BGdBGd}{{H`{Cf}}}}{c{{Bn{Af}}}{}}00000000000000006{c{{An{e}}}{}{}}0000000000000000000{cHl{}}000000000{Bjd}00{{BjBj}d}1111111111::::::::::```````````````::::::::::``{{{BHb{c}}}{{BHb{c}}}Ld}{BHdBHd}{{ce}d{}{}}0{{BHdBHd}Cf}{{ce}Cf{}{}}{{cCh}{{An{AJbCj}}}Cl}{{cCh}{{An{BHdCj}}}Cl}{c{{An{{Bn{Af}}Cj}}}Cl}0{c{{An{{AHf{Af}}Cj}}}Cl}03{{cCh}{{An{{BHb{e}}Cj}}}ClAJb}{{GfCh}{{An{AJbCj}}}}{{{Bn{Af}}Ch}{{An{AJbCj}}}}{{BHfc}{{An{BdCn}}}D`}{{BHhc}{{An{BdCn}}}D`}{{{BHb{c}}e}{{An{BdCn}}}BHfD`}{{BHdc}{{An{BdCn}}}D`}{{{Ah{Af}}c}{{An{BdCn}}}D`}{{{AHf{Af}}c}{{An{BdCn}}}D`}{{BHhD`}{{An{BdCn}}}}{{cD`}{{An{BdCn}}}{}}0{BHfHh}{BHfBd}{BHf{{Bn{Af}}}}{BHfcj}{{{BHj{c}}}Bh{}}`{{{BHb{c}}}{{H`{c}}}AJb}{c{{An{{BHb{e}}}}}DdAGj}{{cDf}{{An{dDh}}}{}}{{cE`}{{An{dCn}}}{}}0{{cBHl}{{An{dCn}}}{}}0{{cBHn}{{An{dCn}}}{}}0{{cBI`}{{An{dCn}}}{}}0{{cBIb}{{An{dCn}}}{}}0{{c{Ah{Af}}}{{An{dCn}}}{}}0{{cEl}{{An{dCn}}}{}}0{{cBId}{{An{dCn}}}{}}0{{cBh}{{An{dCn}}}{}}0{{cAf}{{An{dCn}}}{}}0{{{BHb{c}}{BHb{c}}}E`AH`}{{BHdBHd}E`}{{ce}E`{}{}}0000000{{cDf}{{An{dEb}}}{}}{{{BHb{c}}}cAJb}0{{{BHj{c}}}{{BIf{d}}}D`}{{CjEd}Ef}0{{{BHb{c}}Ed}EfKb}{{BHdEd}{{An{dANf}}}}{cc{}}0{c{{BHj{c}}}{}}{BIhc{}}220{c{{BHb{c}}}{}}3{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}0{cCj{HfAEbAEd}}55{GfCj}{{BHdc}dGj}{{{AHf{c}}}{{AHf{e}}}{}{}}````{ce{}{}}0000{{{BHj{c}}}c{}}{c{{Gn{e}}}{}{}}0000`{NjCj}{{BHdBHd}{{H`{Cf}}}}{c{{An{{H`{e}}BIj}}}Cl{}}{c{{An{BHdBIj}}}Cl}{{cBIl}{{An{{Bn{Af}}Cn}}}{ClAO`}}{{{BHb{c}}Ch}{{An{{BHb{c}}Cj}}}AJb}`{{{BHb{c}}e}AnAIhHd}``{c{{Bn{Af}}}{}}0::{cHh{}}{c{{An{e}}}{}{}}000000000{cHl{}}0000====={{c{Ah{Af}}}d{}}{{{BHj{c}}{Ah{Af}}}{{BIf{Bd}}}D`}{{BHdc}{{An{dCn}}}BIn}{{c{Ah{Af}}}{{An{dCn}}}{}}{{ce}{{An{BdCn}}}{}BJ`}{{ce}{{An{BdCn}}}{}BJb}``{c{{An{e}}}DdAJb}{{ce}AnBHfHd}`````````````````````````````````````````````````````````{ce{}{}}0{BJdBJd}{{ce}d{}{}}{{cCh}{{An{BJdCj}}}Cl}{{BJdc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}{c{{An{BJd}}}Dd}{{cDf}{{An{dDh}}}{}}{{BJdBJd}E`}{{ce}E`{}{}}000{{cDf}{{An{dEb}}}{}}{{BJdEd}Ef}{cc{}}{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}{{}{{Dn{BJd}}}}2{{BJdc}dGj}?{c{{Gn{e}}}{}{}}{GfE`}`{{BJdc}AnHd}{c{{Bn{Af}}}{}}{ce{}{}}{c{{An{e}}}{}{}}0{cHl{}}`2````22{BJfBJf}{{ce}d{}{}}{{cCh}{{An{BJfCj}}}Cl}{{BJfc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}{{BJfBJf}E`}{{ce}E`{}{}}000{{BJfEd}Ef}{cc{}}{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}1{{BJfc}dGj}={c{{Gn{e}}}{}{}}?>==<>```````{{BJhEd}Ef}????????{{cBhBBhBBhBBj}Bh{}}{{{BJj{c}}}e{}{}}{{GfBd}Bd}{{{BJl{c}}Ed}Ef{KbBJn}}{{BK`Ed}Ef}0{{BKbEd}Ef}{{{BJj{c}}Ed}EfBJh}{{{BKd{HhOj}}Ed}Ef}{{GfEd}Ef}{{{Ah{Oj}}Ed}Ef}>>>>{ce{}{}}000<<<<{{}E`}{cHh{}}0{c{{An{e}}}{}{}}0000000{cHl{}}0004444`{c{{An{{Bn{Af}}}}}Dd}{{{Ah{Af}}c}AnHd}``66{c{{An{BKf}}}Dd}{{cDf}{{An{dDh}}}{}}{{BKfBKf}E`}{{cDf}{{An{dEb}}}{}}{{BKfEd}Ef}{cc{}}`<{c{{Gn{e}}}{}{}}{{BKfc}AnHd};;:>`````````````````````````````````````````````````````````{{{BKl{}{{BKh{c}}{BKj{e}}}}}{{Bn{{AOn{{BKl{}{{BKh{c}}{BKj{e}}}}}}}}}BKnBL`}{BLbADn}{BLdADn}{AJjADn}`{{{BKl{}{{BKh{c}}{BKj{e}}}}B`BbAj}{{Jb{{J`{In}}}}}BKnBL`}``{HhBLf}{ce{}{}}00000000000000000000000{{{BLh{c}}}AFjBL`}`{BLjBLj}{{{BLl{c}}}{{BLl{c}}}Ld}{KfKf}{BLfBLf}{BLdBLd}{AJjAJj}{{{BLn{c}}}{{BLn{c}}}{LdBHfAJb}}{{ce}d{}{}}000000`{{BM`Gf}{{An{dBLf}}}}{{{BKl{}{{BKh{c}}{BKj{e}}}}B`}{{Jb{{J`{In}}}}}BKnBL`}```{ADnBl}{BM`Bj}{{{BLh{c}}}BjBL`}``{BM`{{B`{BBb}}}}`{ADnFl}{{}Fl}00{{}ALn}{{}A`}{BLdc{}}{AJjc{}}{c{{An{{BLl{e}}}}}DdAGj}{c{{An{Kf}}}Dd}{c{{An{{BLn{e}}}}}Dd{BHfAJb}}{{BLbBMbAFd}{{Jb{{J`{In}}}}}}{{{BL`{}{{BMd{c}}}}BMbAFd}{{Jb{{J`{In}}}}}AIf}{{cDf}{{An{dDh}}}{}}00{{{BMf{}{{BKh{c}}}}B`{Bn{Hh}}}{{`{{In{}{{BAd{{J`{Ff}}}}}}AEb}}}BMh}{{ADnB`{Bn{Hh}}}{{Jb{{J`{In}}}}}}{{BMjBMj}E`}{{BLjBLj}E`}{{KfKf}E`}{{{BLn{c}}{BLn{c}}}E`{AH`BHfAJb}}{{ce}E`{}{}}00000000000{{cDf}{{An{dEb}}}{}}00`{{BMjEd}Ef}{{BLjEd}Ef}{{{BLl{c}}Ed}EfKb}{{KfEd}Ef}{{BLfEd}Ef}{{BLdEd}Ef}{{AJjEd}Ef}{{{BLn{c}}Ed}Ef{BHfAJb}}{cc{}}00000000{cBLd{ADnJhJj}}11{cAJj{BLbJhJj}}{c{{BLn{c}}}{BHfAJb}}3{{{BDl{ADn}}}BLd}4444444{{}AOn}{{BLbAjAFh}{{Dn{AEj}}}}{{{BL`{}{{BMd{c}}}}AFh}DnAIf}{BLb{{Oh{BlBn}}}}{{{BL`{}{{BMd{c}}}}}{{Oh{BlBn}}}AIf}{BLd{{H`{c}}}{}}{AJj{{H`{c}}}{}}{{cBM`e}{{Jb{{J`{In}}}}}{}{}}`{BM`E`}`{{BLjc}dGj}{{{BLn{c}}e}d{BFjBHfAJb}Gj}{{BLbBbAFjBjBMlC`}{{Jb{{J`{In}}}}}}{{{BL`{}{{BMd{c}}}}{BLh{{BL`{}{{BMd{c}}}}}}}{{Jb{{J`{In}}}}}AIf}``{ce{}{}}00000000000{c{{Gn{e}}}{}{}}00000000000{{}AEf}````````{ADnAEf}1`{cA`AIh}{{Bj{B`{BBb}}E`{H`{Kf}}}BM`}{{{BMn{{Ob{AjHh}}AFl}}AjC`{Bn{C`}}}BMb}2{{BHnHh}BLf}{HhBLf}{{{BLh{c}}}BbBL`}`{{{BLh{c}}}C`BL`}`{{{BKl{}{{BKh{c}}{BKj{e}}}}B`Cd}{{Jb{{J`{In}}}}}BKnBL`}``{{{BL`{}{{BMd{c}}}}AFd}{{Dn{c}}}AIf}`{BMb{{Ah{C`}}}}{{{BKl{}{{BKh{c}}{BKj{e}}}}B`C`}{{Jb{{J`{In}}}}}BKnBL`}{{{BKl{}{{BKh{c}}{BKj{e}}}}B`}{{Jb{{J`{In}}}}}BKnBL`}4``{BM`{{H`{Kf}}}}`{{{BLl{c}}e}AnAIhHd}{{Kfc}AnHd}{{{BLn{c}}e}An{BHfAJb}Hd};{BLbBN`}{{{BL`{}{{BMd{c}}}}}BN`AIf}{{{BLh{c}}}BMlBL`}`{ADnBLd}{A`Oj}{{{BLl{Oj}}}Oj}{ce{}{}}000000{A`{{An{{BLl{c}}BNb}}}Ab}{{{BLl{Oj}}}{{An{{BLl{c}}BNb}}}Ab}{{BLb{Ah{C`}}AFd}{{Oh{C`AFj}}}}{{{BL`{}{{BMd{c}}}}{Ah{C`}}AFd}{{Oh{C`AFj}}}AIf}{c{{An{e}}}{}{}}00000000000000000000000{{{BLn{c}}Ch}{{An{cCj}}}{BHfAJb}}{{{BLn{c}}Fl}{{An{cCj}}}{BHfAJb}}{cHl{}}00000000000{{}BLf}{{BLbC`AFj}{{Dn{d}}}}{{{BL`{}{{BMd{c}}}}C`AFj}{{Dn{d}}}AIf}{{BLbAFd}{{Dn{d}}}}`{{{BL`{}{{BMd{c}}}}BNd}{{Ah{AIn}}}AIf}============{{BM`c}{{`{{In{}{{BAd{}}}}}}}{BCjBDhBEj}}{{BM`ce}{{`{{In{}{{BAd{}}}}}}}{BCjBDhBEj}{{BAh{}{{BAd{E`}}}}BNf}}{{A`Kf}A`}{{{BLl{Oj}}Kf}{{BLl{Oj}}}}````{{BbB`Ajce}d{BDdJhJj}{{BAh{}{{BAd{BI`}}}}}}{ce{}{}}0000000{cBI`{{Ff{}{{Fd{BNh}}}}}}{BNjBNj}{BNlBNl}{{ce}d{}{}}0{AjBNh}{{}Bb}{c{{An{BNj}}}Dd}{c{{An{BNl}}}Dd}{{cDf}{{An{dDh}}}{}}0{{BNjBNj}E`}{{BNlBNl}E`}{{ce}E`{}{}}0000000{{cDf}{{An{dEb}}}{}}0{{BNhEd}Ef}{{BbEd}Ef}{{BNjEd}Ef}{{BNlEd}Ef}{cc{}}000{{Bb{BNn{AjHh}}}BNj}11{{c{BNn{AjHh}}}{{BNn{AjBNl}}}{{Ff{}{{Fd{BNh}}}}}}{ce{}{}}000{c{{Gn{e}}}{}{}}000``````{BbBNh}``{{BNjc}AnHd}{{BNlc}AnHd}44{cHh{}}0{c{{An{e}}}{}{}}0000000{cHl{}}0007777```````{{{G`{ce}}AEfc}dKb{}}{Chd}{{{G`{FlFn}}}d}{{{G`{AFd}}AEfc}{{G`{AFd}}}AIf}{{{G`{AFd}}AjAEfc}{{G`{AFd}}}AIf}<<<<{{{G`{ce}}}{{G`{ce}}}LdLd}{FnFn}{{ce}d{}{}}0{BO`Ch}{{{G`{AOl}}}Ch}{ChFn}{{{G`{FlFn}}}Fn}{{}{{G`{ce}}}{}BOb}{{}Fn}{{cDf}{{An{dDh}}}{}}{{FnFn}E`}{{ce}E`{}{}}0000000{{cDf}{{An{dEb}}}{}}{{{G`{ce}}Ed}EfKbKb}{{FnEd}Ef}{cc{}}{{{Oh{Aj{Ob{AEfc}}}}}{{G`{ce}}}{}BOb}1{e{{G`{cg}}}{}{{AHj{}{{Fd{{Ob{AjAEfc}}}}}}}BOb}22{{{G`{ce}}Aj}{{H`{c}}}{}{}}{{{G`{ce}}Aj}cKb{}}{{{G`{ce}}Aj}{{H`{{Ob{AEfc}}}}}{}{}}{{Fnc}dGj}```{ce{}{}}0{{{G`{ce}}}{{`{{Ff{}{{Fd{{Ob{AjAEfc}}}}}}}}}{}{}}{c{{Gn{e}}}{}{}}0{{{G`{ce}}}E`{}{}}2{{{G`{ce}}}{{`{{Ff{}{{Fd{{Ob{AjAEf}}}}}}}}}{}{}}39{{{G`{ce}}AjAEfc}dKb{}}```55{c{{An{e}}}{}{}}000{cHl{}}077{ChCh}{{{G`{FlFn}}}{{G`{FlFn}}}}``````````9999999999999999{BNdBNd}{AInAIn}{BOdBOd}{BOfBOf}{BOhBOh}{BN`BN`}{MjMj}{{ce}d{}{}}000000{{BOdBOd}Cf}{{ce}Cf{}{}}{{cCh}{{An{BNdCj}}}Cl}{{cCh}{{An{AInCj}}}Cl}{{cCh}{{An{BOdCj}}}Cl}{{BNdc}{{An{BdCn}}}D`}{{AInc}{{An{BdCn}}}D`}{{BOdc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00```{{}BOf}{c{{An{BNd}}}Dd}{c{{An{AIn}}}Dd}{c{{An{BOd}}}Dd}{c{{An{BOf}}}Dd}{c{{An{BOh}}}Dd}{c{{An{BN`}}}Dd}{c{{An{Mj}}}Dd}{{cDf}{{An{dDh}}}{}}000000{{BNdBNd}E`}{{AInAIn}E`}{{BOdBOd}E`}{{ce}E`{}{}}00000000000{{cDf}{{An{dEb}}}{}}000000{{BNdEd}Ef}{{AInEd}Ef}{{BOdEd}Ef}{{BOfEd}Ef}{{BOhEd}Ef}{{BN`Ed}Ef}{{MjEd}Ef}{cc{}}0000000{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}00{{{Ob{BIdBId}}{Ob{BIdBId}}{Ah{{Ob{BIdBId}}}}}BN`}2222222{{BOfBId}{{H`{BOd}}}}{{BOhBNdBId}{{H`{BId}}}}{{BN`BNdAInBId}{{H`{BId}}}}{ce{}{}}00000000{BOfc{}}{c{{Gn{e}}}{}{}}0000000{BOfE`}{BOfBOj}````````{{BIdBId}BNd}{{BIdBId}AIn}{{BIdBId}BOd}{{}BOf}{BOj{{H`{c}}}{}}{{BOdBOd}{{H`{Cf}}}}{{BNdc}AnHd}{{AInc}AnHd}{{BOdc}AnHd}{{BOfc}AnHd}{{BOhc}AnHd}{{BN`c}AnHd}{{Mjc}AnHd}{c{{Bn{Af}}}{}}00{ce{}{}}000000{c{{An{e}}}{}{}}0000000{c{{An{BOfBOd}}}{{AHj{}{{Fd{BOd}}}}}}{{BOfBOd}{{An{dBId}}}}22222222{cHl{}}000000044444444`````{{BOlC`}{{Jb{{J`{In}}}}}}{{BOnC`}{{Jb{{J`{In}}}}}}6666{{{BMn{ce}}}{{BMn{ce}}}LdLd}{{ce}d{}{}}{{{C`{c}}}e{}{}}{{{BMn{ce}}}g{}{}{}}1`{cc{}}00;;{BOl{{C`{c}}}{AIhAbCbAEb}}{BOn{{BMn{ce}}}{AIhAbCbAEb}{AIhAbCbAEb}}{c{{Gn{e}}}{}{}}0{BOl{{Jb{{J`{In}}}}}}{{BOnc}{{Jb{{J`{In}}}}}{AIhAbCbAEb}}{{BOl{Ah{C`}}c}{{Jb{{J`{In}}}}}{AIhAbCbAEb}}{{BOn{Ah{C`}}ce}{{Jb{{J`{In}}}}}{AIhAbCbAEb}{AIhAbCbAEb}}{ce{}{}}{c{{An{e}}}{}{}}000{cHl{}}022`{{{Cd{c}}C`}{{Jb{{J`{In}}}}}{AIhAbCbAEb}}33;38{{C`C`BdCf}{{Ob{{C`{c}}{C`{c}}}}}{AIhAbCbAEb}}`{{{Cd{c}}}{{Jb{{J`{In}}}}}{AIhAbCbAEb}}`{{{Cd{c}}{Ah{C`}}c}{{Jb{{J`{In}}}}}{AIhAbCbAEb}}`55`46``````````````666666666666666666``{{Mj{Oh{C`Mj}}}{{Dn{L`}}}}{{BOh{Oh{C`BOh}}}{{H`{BOd}}}}{{BN`{Oh{C`BN`}}}{{H`{BOd}}}}`````````{{{Ch{c}}Ed}EfKb}{CjHh}{cc{}}00000000{{{Cl{c}}}{{H`{c}}}AGd}`========={c{{Gn{e}}}{}{}}00000000{BdCj}{{gBd}{{Cn{ce}}}{}{}{{BAh{c}{{BAd{{Dn{e}}}}}}JhJj}}{{gBd}{{CA`{ce}}}{}{}{{BAh{C`c}{{BAd{{Dn{e}}}}}}JhJj}}{Bd{{Cl{c}}}{}}{Bd{{CAb{c}}}{}}{Bd{{CAd{c}}}{}}{{BdCAf}{{CAh{c}}}{}}{{BdCAfMj}CAj}{{AdC`{CAl{c}}}{{Ch{e}}}{}{}}{{CjC`N`}{{Ch{c}}}{}}{{{Cn{ce}}C`{CAl{c}}}{{Ch{e}}}{KbAGdLd}{}}{{{CA`{ce}}C`{CAl{c}}}{{Ch{{Oh{C`e}}}}}{AGdLdKb}{}}{{{Cl{c}}C`{CAl{c}}}{{Ch{c}}}{AGdLdKb}}{{{CAb{c}}C`{CAl{{Bn{c}}}}}{{Ch{{Bn{c}}}}}{KbAGdLd}}{{{CAd{c}}C`{CAl{c}}}{{Ch{{Bn{c}}}}}{KbAGdLd}}{{{CAh{c}}C`{CAl{c}}}{{Ch{{Oh{C`c}}}}}{}}{{CAjC`{CAl{Mj}}}{{Ch{L`}}}}{Ad{{H`{Kj}}}}{CAj{{H`{Kj}}}}```````````{c{{An{e}}}{}{}}00000000000000000{cHl{}}00000000``{ce{}{}}00000000``````{{{CAn{c}}}d{}}{{{CAn{c}}}CB`{}}{ec{}{{BE`{}{{BAd{c}}}}}}{c{}In}4444443{{CBbEd}{{An{dANf}}}}0{{{CAn{c}}Ed}{{An{dANf}}}Kb}{{CBdEd}Ef}0{cc{}}00{CBbCBf}{{{CAn{c}}}CBf{}}``:::{c{}{}}{CBb{{J`{AKl}}}}{c{{Gn{e}}}{}{}}00{CBbE`}{{{CAn{c}}}E`{}}1{{{Jb{{CAn{c}}}}CBh}CBj{}}``{Kjd}{CBld}{{Gfe}{{CAn{c}}}AEb{{In{}{{BAd{c}}}}AEb}}{{Kjc}{{An{CBd}}}In}{cHh{}}0{c{{An{e}}}{}{}}00000{CBb{{An{{J`{AKl}}CBb}}}}{{{Jb{c}}CBh}CBj{}}{cHl{}}00{ce{}{}}00```{ec{}{{BE`{}{{BAd{c}}}}}}{c{}In}```;:9{{Gfc}{{CAn{d}}}{{In{}{{BAd{d}}}}}}9````````3333333333{CBnCBn}{KhKh}{CC`CC`}{CCbCCb}{OfOf}{{ce}d{}{}}0000{{cCh}{{An{CBnCj}}}Cl}{{cCh}{{An{KhCj}}}Cl}{{cCh}{{An{CC`Cj}}}Cl}{{cCh}{{An{CCbCj}}}Cl}{{cCh}{{An{OfCj}}}Cl}{{CBnc}{{An{BdCn}}}D`}{{Khc}{{An{BdCn}}}D`}{{CC`c}{{An{BdCn}}}D`}{{CCbc}{{An{BdCn}}}D`}{{Ofc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}0000{cAClBHf}{c{{An{CC`CCd}}}CCf}{{{Ah{Af}}}{{An{cCCd}}}{}}{{BId{Ah{Af}}}{{An{cCCd}}}{}}{{BIdc}{{An{eCCd}}}CCf{}}{CC`{{Bn{Af}}}}{{CC`c}d{CChAO`}}{{CBnCBn}E`}{{KhKh}E`}{{CC`CC`}E`}{{CCbCCb}E`}{{OfOf}E`}{{ce}E`{}{}}0000000000000000000{{CBnEd}Ef}{{KhEd}Ef}{{CC`Ed}Ef}{{CCbEd}Ef}{{OfEd}Ef}{cc{}}0000{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}000011111{{CC`c}dGj}{{KhBh}{{AHf{Af}}}}{ce{}{}}0000{c{{Gn{e}}}{}{}}0000`````{CC`Bd}{c{{Bn{Af}}}{}}0000{{c{Ah{Af}}}{{Bn{Af}}}{}}44444{c{{An{e}}}{}{}}000000000{cHl{}}0000{{CC`e}c{}{{BE`{{Ah{Af}}}{{BAd{c}}}}}}77777````````````77777777777777{{Cfc}{{An{CCj}}}In}{BMlBMl}{CfCf}{CCjCCj}{{ce}d{}{}}00`{{}CCl}{{}BMl}{CCnd}{{CClEd}Ef}{{BMlEd}Ef}{{CfEd}Ef}{{CCjEd}Ef}0{{AHdEd}Ef}0{cc{}}000000000```{BMld}{ce{}{}}000000{c{}{}}{c{{Gn{e}}}{}{}}000000{CCnE`}{CfE`}``{{BMl{H`{Kj}}}{{An{dNj}}}}{{BMl{H`{CAf}}{Bn{CBb}}}{{Jb{{J`{In}}}}}}{BMlCf}{CfCD`}{BMlBMl}`{{{CDb{E`}}}CD`}{{}BMl}``{{{Jb{CD`}}CBh}{{CBj{c}}}{}}{CCld}>{{BMlc}{{An{dNj}}}{{Od{{H`{Kj}}}}}}{{cKj}d{{AE`{Gf}}}}{{BMlci}{{CDd{e}}}{{Od{Hh}}}Jh{{In{}{{BAd{e}}}}Jh}{{BE`{Cf}{{BAd{g}}}}Jh}}{{BMlcg}{{CDd{{An{eCCj}}}}}{{Od{Hh}}}Jh{{In{}{{BAd{e}}}}Jh}}{{BMlcg}d{{Od{Hh}}}{{In{}{{BAd{d}}}}}{{BE`{Cf}{{BAd{e}}}}}}`{ce{}{}}00{cHh{}}0{c{{An{e}}}{}{}}0000000000000{cHl{}}0000003333333`````````333333{{{CDf{c}}}{{H`{Hf}}}{KbBJn}}{{{CDh{ce}}}{{CDh{ce}}}Ld{}}{{ce}d{}{}}{{{CDj{ce}}}d{}{}}{{{CDf{c}}Ed}EfKb}{{{CDf{c}}Ed}EfBJn}{{{CDh{ce}}Ed}EfKbKb}{{{CDj{ce}}Ed}EfKbKb}{cc{}}000{{{CDh{cCDl}}}cJh}{{{CDh{ce}}}{{An{c{CDf{e}}}}}Jh{JhBJn}}`````>>>{c{{Gn{e}}}{}{}}00{g{{CDh{cCDl}}}Jh{{In{}{{BAd{c}}}}Jh}{{BE`{}{{BAd{e}}}}Jh}}{i{{CDh{ce}}}Jh{JhBJn}{{In{}{{BAd{{An{ce}}}}}}Jh}{{BE`{}{{BAd{g}}}}Jh}}={ce{}{}}{cHh{}}{c{{An{e}}}{}{}}00000{cHl{}}00`333`33{{}CDn}{CDnd}`{{CDnEd}Ef}<69{CDnE`}355472``{{{CE`{c}}}{{Oh{bc}}}{}}8888{CEbCEb}{{{CE`{c}}}{{CE`{c}}}Ld}{{ce}d{}{}}0{{CEbCEb}Cf}{{ce}Cf{}{}}{{cCh}{{An{{CE`{e}}Cj}}}ClAJb}{{{CE`{c}}e}{{An{BdCn}}}BHfD`}{{cD`}{{An{BdCn}}}{}}{{{CE`{c}}}Bd{}}{{}{{CE`{c}}}{}}{c{{An{CEb}}}Dd}{c{{An{{CE`{e}}}}}DdAGj}{{cDf}{{An{dDh}}}{}}0{{{CE`{c}}b}{{CEd{bc}}}BOb}{{CEbCEb}E`}{{{CE`{c}}{CE`{c}}}E`AH`}{{ce}E`{}{}}0000000{{cDf}{{An{dEb}}}{}}0{{CEbEd}Ef}0{{{CE`{c}}Ed}EfKb}{cc{}}0{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}{e{{CE`{c}}}{}{{AHj{}{{Fd{{Ob{bc}}}}}}}}22{{Elb}{{CE`{d}}}}{{{CE`{c}}b}{{H`{c}}}{}}0{{{CE`{c}}b}cBOb}{{CEbc}dGj}{{{CE`{c}}e}dBFjGj}{{{CE`{c}}bc}{{H`{c}}}{}}{ce{}{}}0{c{{Gn{e}}}{}{}}0{{{CE`{c}}}{{`{{Ff{}{{Fd{{Ob{bc}}}}}}}}}{}}{{{CE`{c}}}b{}}{{CEbCEb}{{H`{Cf}}}}{{CEbc}AnHd}{{{CE`{c}}e}AnAIhHd}{{{CE`{c}}{CE`{e}}}E`{}{}}{{{CE`{c}}b}{{An{cCEb}}}{}}{{{CE`{c}}}{{`{{Fj{}{{Fd{b}}}}}}}{}}{c{{Bn{Af}}}{}}::{cHh{}}{c{{An{e}}}{}{}}000{cHl{}}0==````{{{CEf{c}}{CE`{e}}}{{An{dCEb}}}{}{}}>>>>>>{{{CEf{c}}}{{CEf{c}}}Ld}{CEhCEh}{{ce}d{}{}}0{{cCh}{{An{{CEf{e}}Cj}}}ClAJb}{{{CEf{c}}e}{{An{BdCn}}}BHfD`}{{cD`}{{An{BdCn}}}{}}{{{CEf{c}}}Bd{}}{CEhBd}10{{}{{CEf{c}}}{}}{{}CEh}{c{{An{{CEf{e}}}}}DdAGj}{c{{An{CEh}}}Dd}{{cDf}{{An{dDh}}}{}}0{{{CEf{c}}{CEf{c}}}E`AH`}{{CEhCEh}E`}{{ce}E`{}{}}000{{cDf}{{An{dEb}}}{}}0{{{CEf{c}}e}d{}{{AHj{}{{Fd{{Ob{bc}}}}}}}}{{{CEf{c}}Ed}EfKb}{{CEhEd}Ef}{cc{}}00{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}{e{{CEf{c}}}{}{{AHj{}{{Fd{{Ob{bc}}}}}}}}{cCEh{{AHj{}{{Fd{{Ob{bBd}}}}}}}}33{{{CEf{c}}b}{{H`{{Bn{c}}}}}{}}0{{{CEf{c}}e}dBFjGj}{{CEhbBd}d}{ce{}{}}000{{{CEf{c}}}eAEb{}}{{{CEf{c}}}{{`{{Fj{}{{Fd{{Ob{bc}}}}}}}}}{}}{c{{Gn{e}}}{}{}}00{{{CEf{c}}}E`{}}{{{CEf{c}}}{{`{{Ff{}{{Fd{{Ob{b{Bn{c}}}}}}}}}}}{}}{CEh{{`{{Ff{}{{Fd{{Ob{bBd}}}}}}}}}}4{{{CEf{c}}}{{`{{Ff{}{{Fd{b}}}}}}}{}}`{{{CEf{c}}b}Bd{}}{c{{Ob{eg}}}{}{}{}}{{{Bn{c}}}{{CEj{ce}}}{}{}}{{{Oh{b{Bn{c}}}}}{{CEf{c}}}{}}{{{CEj{ec}}}{{H`{g}}}{}{{Ff{}{{Fd{{Ob{bc}}}}}}}{}}{{bCEh{CE`{c}}El}CEh{}}{{{CEf{c}}e}AnAIhHd}{{CEhc}AnHd}{{{CEf{c}}{CEf{e}}}E`{}{}}{{{CEf{c}}}CEh{}}{c{{Bn{Af}}}{}}{ce{}{}}0{{{CEf{c}}}b{}}{CEhb}{c{{An{e}}}{}{}}00000{cHl{}}00444{{}Kj}{{}CAf}``6666{CEld}00{cc{}}0{CElCEl}`99{c{{Gn{e}}}{}{}}0{{CElCEn}CEl}``{cCEl{{Od{{CF`{Gf}}}}}}{CFbd}`{{CElKj}CEl}`{{CElBh}CEl}<<<<;;??`````````````??????{AfAf}{CFdCFd}{CFfCFf}{{ce}d{}{}}00{{cCh}{{An{AfCj}}}Cl}{{cCh}{{An{CFdCj}}}Cl}{{cCh}{{An{CFfCj}}}Cl}{{Afc}{{An{BdCn}}}D`}{{CFdc}{{An{BdCn}}}D`}{{CFfc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}00{{AfAf}E`}{{CFdCFd}E`}{{CFfCFf}E`}{{ce}E`{}{}}00000000000{{AfEd}Ef}{{CFdEd}Ef}{{CFfEd}Ef}0{cc{}}00{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}00111{{Afc}dGj}{{CFdc}dGj}`{ce{}{}}00{c{{Gn{e}}}{}{}}00```{c{{Bn{Af}}}{}}00222{cHh{}}{c{{An{e}}}{}{}}00000{AfA`}{{{Ah{AMb}}{Ah{AMd}}{AHf{Af}}}A`}{cHl{}}00{{Af{Bn{Ml}}}{{An{dCFf}}}}888```````````{CFhCFj}`99{CFhCFh}{{ce}d{}{}}{{cCh}{{An{CFhCj}}}Cl}{{CFhc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}{{CFhACn}E`}{c{{An{CFh}}}Dd}{{cDf}{{An{dDh}}}{}}{{CFhCFh}E`}{{ce}E`{}{}}000{{cDf}{{An{dEb}}}{}}{{CFhEd}Ef}{cc{}}{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}1{{CFhc}dGj}{ce{}{}}{c{{Gn{e}}}{}{}}`{{CFhc}AnHd}{c{{Bn{Af}}}{}}3{c{{An{e}}}{}{}}0{cHl{}}5```````````{MfGf}66666{{{CFl{c}}}{{CFl{c}}}{}}777707`{{{CG`{}{{CFn{c}}}}}cCGb}{CGd}{CGf}{CGh}{CGdCGd}{CGfCGf}{CGhCGh}{MfMf}{{{CFl{c}}}{{CFl{c}}}Ld}{{ce}d{}{}}0000{{MfMf}Cf}{{ce}Cf{}{}}{{cCh}{{An{MfCj}}}Cl}{{Mfc}{{An{BdCn}}}D`}{{cD`}{{An{BdCn}}}{}}{{}CGd}{{}CGf}{{}CGh}`{c{{An{Mf}}}Dd}{{cDf}{{An{dDh}}}{}}{{MfMf}E`}{{ce}E`{}{}}000{{cDf}{{An{dEb}}}{}}`{{CGdEd}{{An{dANf}}}}{{CGfEd}{{An{dANf}}}}{{CGhEd}{{An{dANf}}}}{{MfEd}Ef}0{{{CFl{c}}Ed}EfKb}{cc{}}00{CGjMf}11{{{Ah{Af}}{G`{FlFn}}}{{An{cGb}}}{}}22222{Gf{{An{MfCGl}}}}{Gfd}{{Mfc}dGj}{Mf{{H`{{CGn{Gf}}}}}}{Mf{{H`{Gf}}}}{ce{}{}}0000{c{{Gn{e}}}{}{}}0000{{{CFl{c}}}c{}}```{{MfGf}{{An{MfCGl}}}}{{{CFl{c}}g}{{CFl{e}}}{}{}{{BAh{c}{{BAd{e}}}}}}```````{{CH`e}{{CFl{c}}}{}{{In{}{{BAd{c}}}}}}{{{CHb{}{{BAd{c}}}}}{{Jb{{J`{In}}}}}{}}0;{{MfMf}{{H`{Cf}}}}8{MfGf}{Mf{{H`{El}}}}0{{cek}{{An{gNj}}}{{Od{Hh}}}CG`{}{{In{}{{BAd{{An{gNj}}}}}}}{{BAh{}{{BAd{i}}}}}}2{{Mfc}AnHd}{{{CFl{c}}}CH`{}}`{c{{Bn{Af}}}{}}====={cHh{}}{MfCGj}{c{{An{e}}}{}{}}000000000{{CH`g}{{An{{CFl{c}}e}}}{}{}{{In{}{{BAd{{An{ce}}}}}}}}{cHl{}}0000`:{{{CFl{c}}}c{}}`0{ce{}{}}0000{{{CFl{c}}g}{}{}In{{BE`{c}{{BAd{e}}}}}}{{CGdKj}CGd}{{CGfCHd}CGf}{CGdCGd}{CGfCGf}{CGhCGh}{{CGfKj}CGf}{{CGhKj}CGh}{{CGdBd}CGd}{{CGfBd}CGf}{{CGhBd}CGh}43{{{CFl{c}}g}e{}{}{{BE`{c}{{BAd{e}}}}}}{{ce}{{BIf{d}}}{{AE`{AJd}}}{{AE`{{Ah{Af}}}}}}000```===={CHfCHf}{{ce}d{}{}}{{CHfCHf}E`}{{ce}E`{}{}}000{{{CHh{c}}Ed}Ef{}}{{CHfEd}Ef}0{cc{}}{{{CHj{c}}}{{CHh{c}}}{LdJh}}11`{ce{}{}}0{c{{Gn{e}}}{}{}}00{{{CHj{c}}}{{Ob{{An{cCHl}}{CHj{c}}}}}Ld}3{c{{Jb{{J`{In}}}}}{}}0{{{Jb{{CHh{c}}}}CBh}{{CBj{{H`{e}}}}}{LdJh}{}}4{cHh{}}{c{{An{e}}}{}{}}000{{{Jb{c}}CBh}{{CBj{{H`{An}}}}}{}}{cHl{}}088`88{{}CHn}{{CHnEd}Ef}<:9`{{CHne}{{An{dc}}}{}{{In{}{{BAd{{An{dc}}}}}}}}553;","c":[1333,2279],"p":[[5,"Amount",0],[1,"unit"],[17,"Engine"],[17,"Inner"],[10,"BitcoinHash",0],[10,"HashEngine",5503],[10,"FromHex",5504],[5,"TransactionId",0],[5,"BitSlice",5505],[10,"BitOrder",5506],[1,"u8"],[1,"slice"],[5,"Hash",5507],[6,"Error",5508],[6,"Result",5509],[10,"FromByteSlice",5508],[5,"NumPeers",0],[1,"usize"],[5,"Feerate",0],[1,"u64"],[5,"Amount",5510],[5,"u5",5511],[5,"Vec",5512],[5,"PeerId",0],[6,"BitcoinAmountOrAll",0],[5,"OutPoint",0],[6,"Ordering",5513],[8,"ModuleDecoderRegistry",4023],[5,"DecodeError",3215],[10,"Read",5514],[5,"Error",5515],[10,"Write",5514],[10,"NumPeersExt",0],[10,"Deserializer",5516],[10,"Serializer",5517],[6,"ErrorImpl",5517],[1,"char"],[10,"FromIterator",5518],[8,"Result",5519],[1,"bool"],[5,"Error",5520],[5,"Formatter",5521],[8,"Result",5521],[6,"ParseAmountError",0],[6,"CoreError",0],[1,"u16"],[6,"ParseAmountError",5510],[5,"ParseIntError",5522],[6,"Error",5504],[17,"Item"],[10,"Iterator",5523],[10,"ExactSizeIterator",5524],[10,"DoubleEndedIterator",5525],[5,"Decoder",1750],[6,"DecodingMode",4023],[5,"ModuleRegistry",4023],[6,"DecodingError",2387],[6,"Error",5526],[1,"str"],[6,"Denomination",5510],[10,"Hasher",5527],[10,"SliceIndex",5528],[5,"Request",5529],[6,"Option",5530],[1,"f64"],[10,"Serializer",5531],[10,"Error",5532],[5,"String",5533],[6,"BitSpanError",5534],[5,"TypeId",5535],[10,"WriteBase32",5511],[5,"ConfigGenConnectionsRequest",403],[5,"PeerServerParams",403],[5,"ConfigGenParamsConsensus",403],[5,"ConfigGenParamsResponse",403],[5,"ConfigGenParamsRequest",403],[5,"Certificate",5536],[10,"IGlobalFederationApi",540],[10,"Future",5537],[5,"Box",5538],[5,"Pin",5539],[5,"GlobalFederationApiWithCache",540],[10,"IRawFederationApi",540],[10,"MaybeSend",4729],[10,"MaybeSync",4729],[5,"BTreeSet",5540],[5,"WsFederationApi",540],[10,"JsonRpcClient",540],[10,"Debug",5521],[5,"DynGlobalApi",540],[5,"ApiAuth",3590],[5,"SessionOutcome",4584],[5,"Duration",5541],[6,"OutputOutcomeError",540],[10,"OutputOutcome",1750],[5,"ApiVersionSet",540],[5,"DynModuleApi",540],[10,"Clone",5542],[5,"InviteCode",540],[6,"InviteCodeData",540],[5,"FederationStatus",540],[5,"PeerStatus",540],[6,"PeerConnectionStatus",540],[6,"ServerStatus",540],[5,"StatusResponse",540],[5,"GuardianConfigBackup",540],[5,"SafeUrl",5277],[8,"SerdeOutputOutcome",540],[5,"SupportedApiVersionsSummary",4101],[5,"PublicKey",5543],[5,"FederationId",1175],[6,"PeerError",540],[5,"FederationError",540],[5,"FederationPeer",540],[5,"PeerResponse",540],[6,"Error",5544],[5,"Error",5519],[10,"IModuleFederationApi",540],[5,"ClientConfig",1175],[5,"Client",5545],[1,"tuple"],[10,"Into",5546],[6,"SessionStatus",4584],[5,"BTreeMap",5547],[6,"Value",5548],[8,"JsonRpcResult",540],[10,"FederationApiExt",540],[8,"ApiRequestErased",3590],[10,"DeserializeOwned",5516],[10,"QueryStrategy",4363],[5,"Transaction",5137],[5,"SignedBackupRequest",2314],[8,"ModuleInstanceId",1750],[5,"ClientBackupKey",1070],[5,"ClientBackupSnapshot",1070],[5,"ClientBackupKeyPrefix",1070],[5,"Address",5549],[6,"NetworkUnchecked",5550],[5,"Address",5550],[5,"Amount",5551],[5,"Hash",5552],[5,"Hash",5552],[5,"Message",5553],[5,"Message",5553],[6,"Network",5554],[6,"Network",5554],[5,"OutPoint",5555],[5,"OutPoint",5555],[5,"PublicKey",5556],[5,"PublicKey",5557],[5,"Hash",5558],[5,"Hash",5558],[5,"Signature",5559],[5,"Signature",5559],[5,"PublicKey",5543],[5,"SecretKey",5543],[5,"SecretKey",5543],[5,"Hash",5507],[5,"Txid",5560],[5,"Txid",5560],[5,"ScriptBuf",5561],[5,"Script",5562],[5,"G1Affine",5563],[5,"G2Affine",5564],[5,"Scalar",5565],[5,"ModuleInitRegistry",1175],[10,"IDynCommonModuleInit",3590],[10,"AsRef",5546],[10,"Send",5566],[10,"Sync",5566],[5,"ModuleKind",1750],[5,"GlobalClientConfig",1175],[5,"ClientModuleConfig",1175],[5,"JsonWithKind",1175],[5,"PeerUrl",1175],[5,"JsonClientConfig",1175],[5,"FederationIdPrefix",1175],[5,"ConfigGenModuleParams",1175],[5,"EmptyGenParams",1175],[5,"ServerModuleConsensusConfig",1175],[5,"ServerModuleConfig",1175],[6,"DkgPeerMsg",1175],[6,"SupportedDkgMessage",1175],[6,"DkgMessage",1175],[10,"DkgGroup",1175],[10,"Eq",5513],[10,"Ord",5513],[10,"FromStr",5567],[10,"Deserialize",5516],[8,"ServerModuleConfigGenParamsRegistry",1175],[10,"SGroup",1175],[10,"PartialEq",5513],[6,"DkgError",1175],[5,"Cancelled",4729],[1,"array"],[10,"TypedServerModuleConsensusConfig",1175],[10,"IntoIterator",5518],[10,"ISupportedDkgMessage",1175],[5,"G2Projective",5564],[5,"G1Projective",5563],[17,"Local"],[17,"Consensus"],[10,"ModuleInitParams",1175],[10,"Serialize",5531],[17,"Private"],[10,"TypedServerModuleConfig",1175],[5,"ModuleConsensusVersion",4101],[10,"ClientConfig",1750],[10,"Decodable",3215],[5,"Path",5568],[8,"ServerModuleInitRegistry",1175],[8,"CommonModuleInitRegistry",1175],[5,"DynServerModuleInit",3590],[6,"All",5569],[5,"Secp256k1",5553],[5,"Wrap",1734],[5,"KeyPair",1750],[5,"Scalar",5570],[6,"Error",5553],[10,"Verification",5571],[10,"IClientConfig",1750],[10,"Any",5535],[10,"IInput",1750],[10,"IOutput",1750],[10,"IOutputOutcome",1750],[10,"IModuleConsensusItem",1750],[10,"IOutputError",1750],[10,"IInputError",1750],[5,"DynUnknown",1750],[5,"KeyPair",5572],[5,"DecoderBuilder",1750],[5,"DynClientConfig",1750],[5,"DynInput",1750],[5,"DynOutput",1750],[5,"DynOutputOutcome",1750],[5,"DynModuleConsensusItem",1750],[5,"DynOutputError",1750],[5,"DynInputError",1750],[5,"IntoDynNever",1750],[5,"OperationId",1750],[5,"TweakedKeyPair",5573],[5,"DisplaySecret",5574],[5,"Error",5521],[10,"Signing",5571],[17,"DynType"],[10,"IntoDynInstance",1750],[10,"Rng",5575],[10,"Sized",5566],[5,"TapBranchHash",5576],[5,"XOnlyPublicKey",5543],[6,"Parity",5543],[5,"BackupRequest",2314],[10,"IServerModule",2358],[5,"DynServerModule",2358],[5,"ApiEndpoint",3590],[5,"DatabaseTransaction",2387],[5,"Audit",3936],[8,"PrefixStream",2387],[5,"BaseDatabaseTransaction",2387],[10,"IRawDatabaseTransaction",2387],[5,"Database",2387],[5,"DatabaseVersion",2387],[8,"ServerMigrationFn",2387],[6,"AutocommitError",2387],[8,"PhantomBound",2387],[17,"Output"],[8,"BoxFuture",5277],[10,"Fn",5577],[17,"Transaction"],[10,"IRawDatabase",2387],[10,"IDatabase",2387],[5,"BaseDatabase",2387],[5,"Committable",2387],[5,"PrefixDatabase",2387],[5,"NonCommittable",2387],[5,"NodeId",5578],[5,"ChannelUsage",5579],[5,"CommitTracker",2387],[6,"DbKeyPrefix",2387],[5,"DbKeyPrefixIter",2387],[10,"IDatabaseTransaction",2387],[5,"PrefixDatabaseTransaction",2387],[5,"DatabaseVersionKeyV0",2387],[5,"DatabaseVersionKey",2387],[10,"DatabaseKey",2387],[10,"DatabaseValue",2387],[10,"WithDecoders",2387],[6,"MaybeRef",2387],[10,"IDatabaseTransactionOpsCoreTyped",2387],[10,"DatabaseLookup",2387],[10,"Stream",5580],[10,"DatabaseRecord",2387],[10,"IRawDatabaseExt",2387],[5,"Arc",5581],[5,"Notifications",2964],[10,"FnOnce",5577],[5,"Path",5582],[10,"IDatabaseTransactionOpsCore",2387],[10,"IDatabaseTransactionOps",2387],[10,"DatabaseKeyPrefix",2387],[10,"DatabaseKeyWithNotify",2387],[5,"MemDatabase",2864],[5,"MemTransaction",2864],[5,"DatabaseInsertOperation",2864],[5,"DatabaseDeleteOperation",2864],[5,"DummyError",2864],[6,"DatabaseOperation",2864],[5,"NotifyQueue",2964],[10,"Hash",5527],[5,"Notified",5583],[6,"TestDbKeyPrefix",2999],[5,"TestKey",2999],[5,"AltTestKey",2999],[5,"TestVal",2999],[5,"DbPrefixTestPrefix",2999],[5,"TestKeyV0",2999],[5,"DbPrefixTestPrefixV0",2999],[5,"AltDbPrefixTestPrefix",2999],[5,"PercentTestKey",2999],[5,"PercentPrefixTestPrefix",2999],[6,"DynRawFallback",3215],[5,"BigSize",3215],[10,"Encodable",3215],[10,"DynEncodable",3215],[5,"CountWrite",3215],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"u32"],[8,"Result",5515],[1,"never"],[6,"DecodeError",5584],[5,"ReadBytesFromFiniteReaderOpts",3215],[10,"Writer",5585],[10,"FixedInt",5586],[10,"VarInt",5587],[5,"BitcoinRpcConfig",3443],[6,"ConsensusItem",3482],[10,"AbbreviatedDebug",3513],[5,"AbbreviateDebug",3513],[5,"OptStacktrace",3513],[10,"Display",5521],[5,"AbbreviateHexBytes",3513],[5,"AbbreviateJson",3513],[5,"Map",5588],[5,"Data",3573],[17,"Common"],[17,"Init"],[10,"ServerModule",3590],[10,"ModuleCommon",3590],[10,"ServerModuleInit",3590],[10,"IServerModuleInit",3590],[5,"DynCommonModuleInit",3590],[5,"ApiError",3590],[5,"ServerModuleInitArgs",3590],[5,"TransactionItemAmount",3590],[5,"ApiRequest",3590],[5,"SerdeModuleEncoding",3590],[5,"ApiEndpointContext",3590],[5,"PeerHandle",3590],[17,"Params"],[10,"ModuleInit",3590],[10,"CommonModuleInit",3590],[5,"InputMeta",3590],[5,"TaskGroup",4729],[5,"MuxPeerConnections",4307],[5,"SupportedModuleApiVersions",4101],[5,"Error",5589],[5,"CoreConsensusVersion",4101],[10,"Copy",5566],[5,"AuditItem",3936],[5,"AuditSummary",3936],[5,"ModuleSummary",3936],[5,"HashMap",5590],[8,"ServerModuleRegistry",4023],[10,"Default",5591],[5,"ApiVersion",4101],[5,"MultiApiVersion",4101],[5,"SupportedCoreApiVersions",4101],[5,"MultiApiVersionIter",4101],[10,"IPeerConnections",4307],[10,"IMuxPeerConnections",4307],[5,"PeerConnections",4307],[10,"Unpin",5566],[5,"FakePeerConnections",4345],[5,"TaskHandle",4729],[6,"QueryStep",4363],[5,"ErrorStrategy",4363],[5,"ThresholdConsensus",4363],[5,"FilterMap",4363],[5,"FilterMapThreshold",4363],[5,"UnionResponses",4363],[5,"UnionResponsesSingle",4363],[5,"SystemTime",5592],[5,"ThresholdOrDeadline",4363],[5,"DiscoverApiVersionSet",4363],[8,"PeerResult",540],[5,"JoinHandle",4510],[5,"AbortHandle",5593],[5,"JoinError",4510],[5,"Elapsed",4510],[5,"Id",5594],[5,"Context",5595],[6,"Poll",5596],[5,"Instant",5597],[5,"AcceptedItem",4584],[5,"SchnorrSignature",4584],[5,"SignedSessionOutcome",4584],[5,"Error",5598],[10,"Input",5599],[10,"Output",5599],[5,"ShuttingDownError",4729],[5,"TaskGroupInner",4729],[5,"TaskPanicGuard",4729],[5,"TaskShutdownToken",4729],[5,"Receiver",5600],[5,"Receiver",5601],[6,"OneTimeError",4859],[5,"JitCore",4859],[5,"JitInner",4859],[6,"Infallible",5546],[5,"Waiter",4916],[5,"Tiered",4933],[5,"InvalidAmountTierError",4933],[6,"Entry",5602],[5,"TieredMulti",5008],[5,"TieredSummary",5008],[5,"TieredMultiZip",5008],[5,"TimeReporter",5103],[5,"Level",5603],[6,"Cow",5604],[5,"TimeReporterInner",5103],[6,"TransactionSignature",5137],[6,"TransactionError",5137],[5,"TxOutProof",5243],[5,"BlockHash",5560],[5,"Spanned",5277],[17,"Backoff"],[10,"BackoffBuilder",5277],[10,"Backoff",5605],[5,"ConstantBackoff",5277],[5,"ExponentialBackoff",5277],[5,"FibonacciBackoff",5277],[5,"Url",5606],[6,"ParseError",5607],[6,"Host",5608],[5,"Span",5609],[10,"NextOrPending",5277],[1,"f32"],[6,"BroadcastStreamRecvError",5446],[5,"BroadcastStream",5446],[5,"Receiver",5610],[6,"RecvError",5611],[5,"UpdateMerge",5489],[8,"FederationResult",540],[8,"OutputOutcomeResult",540],[15,"Default",1063],[15,"Api",1063],[15,"InvalidVout",1067],[15,"InvalidPeerId",1069],[8,"DkgResult",1175],[6,"FinalizationError",1750],[6,"Never",1750],[15,"CommitFailed",2856],[15,"ClosureError",2856],[15,"WrongPrefix",2860],[15,"WrongLength",2860],[15,"Raw",3388],[15,"Default",3511],[10,"TypedApiEndpoint",3590],[15,"Failure",4508],[8,"Cancellable",4729],[8,"Jit",4859],[8,"JitTry",4859],[8,"JitTryAnyhow",4859],[15,"UnbalancedTransaction",5233],[15,"InvalidSignature",5233],[15,"UnsupportedSignatureScheme",5233],[15,"Default",5241]],"b":[[187,"impl-Display-for-TransactionId"],[188,"impl-LowerHex-for-TransactionId"],[189,"impl-Debug-for-TransactionId"],[190,"impl-Display-for-PeerId"],[191,"impl-Debug-for-PeerId"],[192,"impl-Display-for-Amount"],[193,"impl-Debug-for-Amount"],[195,"impl-Display-for-OutPoint"],[196,"impl-Debug-for-OutPoint"],[197,"impl-Display-for-ParseAmountError"],[198,"impl-Debug-for-ParseAmountError"],[201,"impl-Debug-for-CoreError"],[202,"impl-Display-for-CoreError"],[213,"impl-From%3CParseAmountError%3E-for-ParseAmountError"],[214,"impl-From%3CParseIntError%3E-for-ParseAmountError"],[770,"impl-Debug-for-PeerError"],[771,"impl-Display-for-PeerError"],[772,"impl-Display-for-FederationError"],[773,"impl-Debug-for-FederationError"],[774,"impl-Debug-for-OutputOutcomeError"],[775,"impl-Display-for-OutputOutcomeError"],[782,"impl-Debug-for-InviteCode"],[783,"impl-Display-for-InviteCode"],[795,"impl-From%3CError%3E-for-OutputOutcomeError"],[797,"impl-From%3CFederationError%3E-for-OutputOutcomeError"],[1454,"impl-Debug-for-FederationId"],[1455,"impl-Display-for-FederationId"],[1456,"impl-Display-for-FederationIdPrefix"],[1457,"impl-Debug-for-FederationIdPrefix"],[1465,"impl-Debug-for-DkgError"],[1466,"impl-Display-for-DkgError"],[1486,"impl-From%3CCancelled%3E-for-DkgError"],[1487,"impl-From%3CError%3E-for-DkgError"],[1501,"impl-ISupportedDkgMessage-for-DkgMessage%3CG2Projective%3E"],[1502,"impl-ISupportedDkgMessage-for-DkgMessage%3CG1Projective%3E"],[1630,"impl-ISupportedDkgMessage-for-DkgMessage%3CG1Projective%3E"],[1631,"impl-ISupportedDkgMessage-for-DkgMessage%3CG2Projective%3E"],[1799,"impl-IOutput-for-DynUnknown"],[1800,"impl-IInput-for-DynUnknown"],[1801,"impl-IOutputOutcome-for-DynUnknown"],[1802,"impl-IClientConfig-for-DynUnknown"],[1803,"impl-IModuleConsensusItem-for-DynUnknown"],[1804,"impl-IInputError-for-DynUnknown"],[1805,"impl-IOutputError-for-DynUnknown"],[1855,"impl-IModuleConsensusItem-for-DynUnknown"],[1856,"impl-IOutput-for-DynUnknown"],[1857,"impl-Clone-for-DynUnknown"],[1858,"impl-IOutputError-for-DynUnknown"],[1859,"impl-IOutputOutcome-for-DynUnknown"],[1860,"impl-IInputError-for-DynUnknown"],[1861,"impl-IInput-for-DynUnknown"],[1862,"impl-IClientConfig-for-DynUnknown"],[1962,"impl-IOutput-for-DynUnknown"],[1963,"impl-IOutputOutcome-for-DynUnknown"],[1964,"impl-IInput-for-DynUnknown"],[1965,"impl-IModuleConsensusItem-for-DynUnknown"],[1966,"impl-IClientConfig-for-DynUnknown"],[1967,"impl-IInputError-for-DynUnknown"],[1968,"impl-IOutputError-for-DynUnknown"],[2032,"impl-IOutput-for-DynUnknown"],[2033,"impl-IModuleConsensusItem-for-DynUnknown"],[2034,"impl-IOutputOutcome-for-DynUnknown"],[2035,"impl-IOutputError-for-DynUnknown"],[2036,"impl-IInputError-for-DynUnknown"],[2037,"impl-IClientConfig-for-DynUnknown"],[2038,"impl-IInput-for-DynUnknown"],[2044,"impl-Display-for-OperationId"],[2045,"impl-Debug-for-OperationId"],[2046,"impl-Debug-for-ModuleKind"],[2047,"impl-Display-for-ModuleKind"],[2048,"impl-Display-for-DynUnknown"],[2049,"impl-Debug-for-DynUnknown"],[2051,"impl-Debug-for-DynClientConfig"],[2052,"impl-Display-for-DynClientConfig"],[2053,"impl-Debug-for-DynInput"],[2054,"impl-Display-for-DynInput"],[2055,"impl-Debug-for-DynOutput"],[2056,"impl-Display-for-DynOutput"],[2057,"impl-Debug-for-DynOutputOutcome"],[2058,"impl-Display-for-DynOutputOutcome"],[2059,"impl-Debug-for-DynModuleConsensusItem"],[2060,"impl-Display-for-DynModuleConsensusItem"],[2061,"impl-Debug-for-DynOutputError"],[2062,"impl-Display-for-DynOutputError"],[2063,"impl-Debug-for-DynInputError"],[2064,"impl-Display-for-DynInputError"],[2561,"impl-Display-for-DatabaseVersion"],[2562,"impl-Debug-for-DatabaseVersion"],[2563,"impl-Debug-for-DbKeyPrefix"],[2564,"impl-Display-for-DbKeyPrefix"],[2566,"impl-Debug-for-DecodingError"],[2567,"impl-Display-for-DecodingError"],[3310,"impl-Display-for-DecodeError"],[3311,"impl-Debug-for-DecodeError"],[3531,"impl-Display-for-AbbreviateHexBytes%3C\'a%3E"],[3532,"impl-Debug-for-AbbreviateHexBytes%3C\'a%3E"],[4525,"impl-Display-for-JoinError"],[4526,"impl-Debug-for-JoinError"],[4528,"impl-Display-for-Elapsed"],[4529,"impl-Debug-for-Elapsed"],[4769,"impl-Debug-for-ShuttingDownError"],[4770,"impl-Display-for-ShuttingDownError"],[4771,"impl-Debug-for-Cancelled"],[4772,"impl-Display-for-Cancelled"],[4877,"impl-Debug-for-OneTimeError%3CE%3E"],[4878,"impl-Display-for-OneTimeError%3CE%3E"],[4968,"impl-Display-for-InvalidAmountTierError"],[4969,"impl-Debug-for-InvalidAmountTierError"],[5188,"impl-Debug-for-TransactionError"],[5189,"impl-Display-for-TransactionError"],[5337,"impl-Display-for-SafeUrl"],[5338,"impl-Debug-for-SafeUrl"],[5461,"impl-Display-for-BroadcastStreamRecvError"],[5462,"impl-Debug-for-BroadcastStreamRecvError"]]}],\
["fedimint_dbtool",{"doc":"","t":"GPPPPFPNNNNNNNNNNNNNONOCCNNNNNNNNNNNNNNHNNNNNNHOHNNNNNNNNNNNNNNOOOOOOOOOFFNNNNOOONNNNNNNNNNNNNOONONONNNNONNNNNNNNSSS","n":["DbCommand","Delete","DeletePrefix","Dump","List","Options","Write","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command","command_for_update","database","dump","envs","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","group_id","has_subcommand","hex_parser","into","into","into_request","into_request","into_request","into_request","main","no_modules","print_kv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","cfg_dir","key","key","modules","password","prefix","prefix","prefixes","value","DatabaseDump","SerdeWrapper","borrow","borrow","borrow_mut","borrow_mut","cfg","client_cfg","client_module_inits","do_erased_serialize","dump_database","erased_serialize","fmt","from","from","from_encodable","into","into","into_request","into_request","into_request","into_request","module_inits","modules","new","prefixes","print_database","read_only","retrieve_consensus_data","serialize","serialize_gateway","serialize_module","serialized","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FM_DBTOOL_CONFIG_DIR_ENV","FM_DBTOOL_DATABASE_ENV","FM_PASSWORD_ENV"],"q":[[0,"fedimint_dbtool"],[63,"fedimint_dbtool::DbCommand"],[72,"fedimint_dbtool::dump"],[113,"fedimint_dbtool::envs"],[116,"clap_builder::builder::command"],[117,"core::fmt"],[118,"core::fmt"],[119,"clap_builder"],[120,"core::result"],[121,"clap_builder::util::id"],[122,"core::option"],[123,"bytes::bytes"],[124,"anyhow"],[125,"tonic::request"],[126,"tonic::request"],[127,"erased_serde::ser"],[128,"erased_serde::ser"],[129,"fedimint_core::encoding"],[130,"std::path"],[131,"alloc::string"],[132,"fedimint_core::config"],[133,"fedimint_client::module::init"],[134,"alloc::vec"],[135,"serde::ser"],[136,"fedimint_core::core"],[137,"fedimint_core::config"]],"d":["Tool to inspect and manipulate rocksdb databases. All …","Delete a single entry from the database identified by <code>key</code>","Deletes all keys starting","Dump a subset of the specified database and serialize the …","List all key-value pairs where the key begins with <code>prefix</code>","","Write a key-value pair to the database, overwriting the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Run dbtool like it doesn’t know about any module kind. …","","","","","","","","","","","","","","","","","","","","","","","","","Structure to hold the deserialized structs from the …","","","","","","","","","","Iterates through all the specified ranges in the database …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Prints the contents of the BTreeMap to a pretty JSON string","","Iterates through each of the prefixes within the consensus …","","","","","","","","","","","","","","",""],"i":[0,3,3,3,3,0,3,2,2,3,3,2,3,2,3,2,3,2,3,2,2,2,2,0,0,2,3,2,3,2,3,2,3,2,2,3,3,2,3,0,2,3,2,2,3,3,0,2,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,36,37,38,36,36,39,40,36,37,0,0,23,25,23,25,23,23,23,25,23,25,25,23,25,25,23,25,23,23,25,25,23,23,23,23,23,23,23,25,23,23,23,23,25,23,25,23,25,23,25,0,0,0],"f":"```````{bb}000{ce{}{}}000{dd}{ff}{{ce}h{}{}}0{{}b}`0```{{dj}l}{{fj}l}{cc{}}0{n{{Ab{dA`}}}}{n{{Ab{fA`}}}}102222{{}{{Af{Ad}}}}{AhAj}{Ah{{An{Al}}}}<<{c{{B`{e}}}{}{}}{c{{Bb{e}}}{}{}}01{{}{{An{h}}}}`{{{Bf{Bd}}{Bf{Bd}}}h}{ce{}{}}0{c{{Ab{e}}}{}{}}000{cBh{}}0{{dn}{{Ab{hA`}}}}{{fn}{{Ab{hA`}}}}1044```````````4444```{{cBj}{{Ab{hBl}}}{}}{Bn{{An{h}}}}{{cBj}{{Ab{hC`}}}{}}{{Cbj}l}{cc{}}0{cCbCd}::=>=>``{{CfChChCjCl{Cn{Ch}}{Cn{Ch}}}{{An{Bn}}}}`{Bnh}`0{{Cbc}AbD`}7{{BnDbDdDf}{{An{h}}}}`====<<>>```","c":[],"p":[[5,"Command",116],[5,"Options",0],[6,"DbCommand",0],[1,"unit"],[5,"Formatter",117],[8,"Result",117],[5,"ArgMatches",118],[8,"Error",119],[6,"Result",120],[5,"Id",121],[6,"Option",122],[1,"str"],[1,"bool"],[5,"Bytes",123],[8,"Result",124],[5,"Request",125],[5,"Request",125],[1,"u8"],[1,"slice"],[5,"TypeId",126],[10,"Serializer",127],[6,"ErrorImpl",127],[5,"DatabaseDump",72],[5,"Error",128],[5,"SerdeWrapper",72],[10,"Encodable",129],[5,"PathBuf",130],[5,"String",131],[8,"ServerModuleInitRegistry",132],[8,"ClientModuleInitRegistry",133],[5,"Vec",134],[10,"Serializer",135],[1,"u16"],[5,"ModuleKind",136],[8,"CommonModuleInitRegistry",132],[15,"Dump",63],[15,"Write",63],[15,"Delete",63],[15,"List",63],[15,"DeletePrefix",63]],"b":[]}],\
["fedimint_derive",{"doc":"","t":"YYHHHHHHHHHHHHH","n":["Decodable","Encodable","derive_enum_decode","derive_enum_encode","derive_enum_variant_encode_block","derive_named_decode_block","derive_struct_decode","derive_struct_encode","derive_tuple_decode_block","derive_tuple_or_named_decode_block","do_not_ignore","error","is_default_variant_enforce_valid","is_tuple_struct","panic_if_ignored"],"q":[[0,"fedimint_derive"],[15,"proc_macro2"],[16,"syn::data"],[17,"syn::token"],[18,"syn::punctuated"],[19,"proc_macro2"]],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``{{b{h{df}}}j}0{{l{n{b}}}j}{{jjA`}j}{{bA`}j}{A`j}22{AbAd}{{bAf}j}{dAd}{A`Ad}3","c":[],"p":[[5,"Ident",15],[5,"Variant",16],[5,"Comma",17],[5,"Punctuated",18],[5,"TokenStream",15],[1,"usize"],[1,"slice"],[6,"Fields",16],[5,"Field",16],[1,"bool"],[1,"str"]],"b":[]}],\
["fedimint_derive_secret",{"doc":"Scheme for deriving deterministic secret keys","t":"SSSFFSSNNNNNNNNNNNNNNNNNNNNNNNNONONHNNNNNNNNNNNNNNNN","n":["BLS12_381_TAG","CHACHA20_POLY1305","CHILD_TAG","ChildId","DerivableSecret","RAW_BYTES","SECP256K1_TAG","borrow","borrow","borrow_mut","borrow_mut","child_key","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","federation_key","fmt","fmt","from","from","from_bytes","from_ref","from_ref","into","into","into_request","into_request","kdf","level","level","new_root","tagged_derive","to_bls12_381_key","to_bytes","to_chacha20_poly1305_key","to_chacha20_poly1305_key_raw","to_owned","to_owned","to_random_bytes","to_secp_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_derive_secret"],[52,"fedimint_core::module::registry"],[53,"fedimint_core::encoding"],[54,"core::result"],[55,"std::io"],[56,"std::io::error"],[57,"std::io"],[58,"core::fmt"],[59,"core::fmt"],[60,"fedimint_core::module::registry"],[61,"tonic::request"],[62,"bls12_381::scalar"],[63,"alloc::vec"],[64,"ring::aead::unbound_key"],[65,"secp256k1"],[66,"secp256k1::key"],[67,"secp256k1::context"],[68,"core::any"]],"d":["","","","Describes a child key of a <code>DerivableSecret</code>","A secret that can have child-subkey derived from it.","","","","","","","","","","","","","","","Derive a federation-ID-based child key from self.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An instance of the HKDF (Hash-based Key Derivation …","Get derivation level","Derivation level, root = 0, every <code>child_key</code> increments it","Derive root secret key from a secret material and salt.","","bls12-381 keys are used for the guardians’ threshold …","","","","","","Generate a pseudo-random byte array from the derivable …","secp256k1 keys are used for bitcoin deposit addresses, …","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,1,2,1,1,2,1,2,1,2,2,2,1,2,1,2,1,2,2,1,2,1,2,1,1,1,1,1,0,1,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1],"f":"```````{ce{}{}}000{{bd}b}{dd}{bb}{{ce}f{}{}}0{{ch}{{l{dj}}}n}{{dc}{{l{A`Ab}}}Ad}{{cAd}{{l{A`Ab}}}{}}{{bAf}b}{{dAh}Aj}{{bAh}Aj}{cc{}}0{{{An{Al}}{Bd{B`Bb}}}{{l{cBf}}}{}}11<<{c{{Bh{e}}}{}{}}0`{bA`}`{{{An{Al}}{An{Al}}}b}{{{Bj{Al}}d}{{Bj{Al}}}}{bBl}{c{{Bn{Al}}}{}}{bC`}{b{{Bj{Al}}}}{ce{}{}}01{{b{Cb{c}}}CdCf}{c{{l{e}}}{}{}}000{cCh{}}033","c":[],"p":[[5,"DerivableSecret",0],[5,"ChildId",0],[1,"unit"],[8,"ModuleDecoderRegistry",52],[5,"DecodeError",53],[6,"Result",54],[10,"Read",55],[1,"usize"],[5,"Error",56],[10,"Write",55],[5,"FederationId",57],[5,"Formatter",58],[8,"Result",58],[1,"u8"],[1,"slice"],[5,"Decoder",59],[6,"DecodingMode",52],[5,"ModuleRegistry",52],[6,"DecodingError",60],[5,"Request",61],[1,"array"],[5,"Scalar",62],[5,"Vec",63],[5,"UnboundKey",64],[5,"Secp256k1",65],[5,"KeyPair",66],[10,"Signing",67],[5,"TypeId",68]],"b":[]}],\
["fedimint_docs",{"doc":"","t":"CC","n":["architecture","modular_architecture"],"q":[[0,"fedimint_docs"]],"d":["Fedimint Architecture","Modular Architecture"],"i":[0,0],"f":"``","c":[],"p":[],"b":[]}],\
["fedimint_dummy_client",{"doc":"","t":"FFFNCNNNNNNNNNNNOONNNNENNNNNNNCONNNONNNNNNNNNNNNNNHNNNNNNNNNNNONNONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNKPPGFFFFFOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOHHNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPGPPPPSPPHNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DummyClientContext","DummyClientInit","DummyClientModule","account","api","as_any","as_common","await_primary_module_output","await_primary_module_output","backup","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone_into","clone_into","common","context","context","create_exact_output","create_exact_output","create_sufficient_input","create_sufficient_input","database_version","db","db","decoder","decoder","decoder","dummy_decoder","dump_database","dump_database","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_balance","get_balance","get_database_migrations","get_database_migrations","get_funds","handle_cli_command","init","init","input_amount","input_amount","into","into","into","into_request","into_request","into_request","key","module_kind","module_kind","notifier","output_amount","output_amount","print_liability","print_money","print_using_account","receive_money","recover","send_money","states","subscribe_balance_changes","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","supports_being_primary","to_dyn_common","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DummyFederationApi","ClientFunds","ClientName","DbKeyPrefix","DbKeyPrefixIter","DummyClientFundsKeyV0","DummyClientFundsKeyV1","DummyClientNameKey","Unreachable","_module_instance_id","amount","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","hash","hash","idx","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","migrate_to_v1","migrate_to_v2","next","next_back","nth","operation_id","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","DummyError","DummyInternalError","DummyStateMachine","Input","InputDone","Output","OutputDone","RETRY_DELAY","Refund","Unreachable","add_funds","as_any","await_dummy_output_outcome","await_tx_accepted","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","into","into","into_dyn","into_request","into_request","operation_id","operation_id","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_dummy_client"],[97,"fedimint_dummy_client::api"],[98,"fedimint_dummy_client::db"],[244,"fedimint_dummy_client::states"],[321,"secp256k1::key"],[322,"core::any"],[323,"fedimint_core::module"],[324,"fedimint_core::core"],[325,"fedimint_core"],[326,"core::future::future"],[327,"alloc::boxed"],[328,"core::pin"],[329,"fedimint_client::sm::state"],[330,"fedimint_core::db"],[331,"fedimint_core"],[332,"alloc::vec"],[333,"core::iter::traits::iterator"],[334,"core::fmt"],[335,"core::fmt"],[336,"fedimint_core::module::registry"],[337,"fedimint_client::db"],[338,"std::ffi::os_str"],[339,"fedimint_client::module"],[340,"fedimint_core::config"],[341,"fedimint_core::config"],[342,"fedimint_derive_secret"],[343,"fedimint_client::sm::notifier"],[344,"fedimint_core::api"],[345,"fedimint_core::module"],[346,"fedimint_core::task"],[347,"fedimint_client::module::init"],[348,"fedimint_core::core"],[349,"fedimint_core::core"],[350,"secp256k1::key"],[351,"fedimint_client::module::recovery"],[352,"fedimint_core::module::version"],[353,"core::any"],[354,"std::io"],[355,"std::io::error"],[356,"std::io"],[357,"fedimint_client::sm::state"],[358,"fedimint_core"],[359,"erased_serde::ser"],[360,"erased_serde::ser"],[361,"serde::ser"],[362,"fedimint_client::sm::state"]],"d":["Data needed by the state machine","","","Return our account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Use a broken printer to print a liability instead of money …","Request the federation prints money for us","","Wait to receive money at an outpoint","","Send money to another user","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Migrates the database from version 0 to version 1 by …","Migrates the database from version 1 to version 2. Maps …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tracks a transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,1,12,1,1,1,1,11,12,1,11,12,1,1,11,12,11,12,0,1,1,1,1,1,1,12,0,1,1,12,12,11,12,12,1,11,12,1,11,12,11,12,1,1,12,12,0,1,12,12,1,1,1,11,12,1,11,12,1,12,12,1,1,1,1,1,1,1,12,1,0,1,1,12,12,1,1,1,12,11,12,1,11,12,1,11,12,1,11,12,1,11,12,0,63,63,0,0,0,0,0,0,69,69,64,63,64,65,66,67,69,63,64,65,66,67,69,63,64,65,66,67,63,64,65,66,67,69,65,66,67,65,66,67,65,66,67,65,66,67,65,65,65,65,66,66,66,66,67,67,67,67,63,63,64,65,66,67,69,63,64,65,66,67,69,65,65,66,66,67,67,63,64,65,66,67,64,65,66,67,64,63,64,65,66,67,69,64,63,64,65,66,67,69,63,64,64,0,0,64,64,64,69,64,65,65,66,66,67,67,63,64,65,66,67,63,63,64,65,66,67,69,63,64,65,66,67,69,63,64,65,66,67,69,63,64,65,66,67,69,0,79,0,81,81,81,81,0,81,81,0,81,0,0,81,79,81,79,81,81,79,81,79,81,79,81,79,81,79,79,79,81,79,81,81,81,81,79,79,79,79,81,81,79,81,79,79,81,79,81,79,81,79,81,81,79,81,81,79,81,81,79,81,79,81,79,79,81,81,81,79,81,79,81,79,81,79],"f":"```{bd}`{cf{}}{ch{}}{{cjl}{{Ab{{A`{n}}}}}{}}{{bjl}{{Ab{{A`{n}}}}}}{{cAd}{{Ab{{A`{n}}}}}{}}{ce{}{}}00000``{AfAf}{AhAh}{{ce}Aj{}{}}0`{bc{}}{{cAd}Al{}}{{cAdAnjB`}{{Ab{{A`{n}}}}}{}}{{bAnjB`}{{Ab{{A`{n}}}}}}10{cBb{}}``{cBd{}}00`{{cAn{Bh{Bf}}}{{Ab{{A`{n}}}}}{}}{{AhAn{Bh{Bf}}}{{A`{Bj}}}}{{bBl}Bn}{{AfBl}Bn}{{AhBl}Bn}{cc{}}0000{{bAn}{{Ab{{A`{n}}}}}}{{cAdAn}{{Ab{{A`{n}}}}}{}}{c{{Cl{Bb{Cj{AnAd{Bh{{Cb{{Bh{C`}}j}}}}{Bh{{Cb{{Bh{C`}}j}}}}{Cf{BdCd}}}{{Ch{{Ab{{A`{n}}}}}}}}}}}{}}{Ah{{Cl{BbCn}}}}{AnB`}{{c{Db{D`}}}{{Ab{{A`{n}}}}}{}}{{cDdDfDhDjDlAdDnDnE`EbEd{Eh{Ef}}Ej}{{Ab{{A`{n}}}}}{}}{{Ah{El{Ah}}}{{Ab{{A`{n}}}}}}{{cEn}{{Eh{F`}}}{}}{b{{Eh{F`}}}}{ce{}{}}00{c{{Fb{e}}}{}{}}00`{cFd{}}0`3{{cFf}{{Eh{F`}}}{}}{{bB`}{{Fh{{Cb{jl}}}}}}0{{bB`Fj}{{Fh{{Cb{jl}}}}}}{{bl}{{Fh{Aj}}}}{{cDdDfFlDjDlAdDnDnE`EbEd{Eh{Ef}}{Eh{Fn}}{Gb{G`}}}{{Ab{{A`{n}}}}}{}}{{bdB`}{{Fh{l}}}}`{c{{Ab{{A`{n}}}}}{}}{b{{Ab{{A`{n}}}}}}{AhGd}{cGd{}}{cGf{}}{bGf}1{cGh{}}??{c{{Gj{e}}}{}{}}00000{cGl{}}00{ce{}{}}00````````````000000000000{GnGn}{H`H`}{HbHb}{HdHd}{HfHf}{{ce}Aj{}{}}0000{{cHh}{{Gj{HjHl}}}Hn}{{cHh}{{Gj{HbHl}}}Hn}{{cHh}{{Gj{HdHl}}}Hn}{{cHh}{{Gj{HfHl}}}Hn}{{Hbc}{{Gj{DhI`}}}Ib}{{Hdc}{{Gj{DhI`}}}Ib}{{Hfc}{{Gj{DhI`}}}Ib}{{cIb}{{Gj{DhI`}}}{}}00{{HbHb}Gf}{{HdHd}Gf}{{HfHf}Gf}{{ce}Gf{}{}}00000000000{{GnBl}Bn}0{{H`Bl}Bn}{{HbBl}Bn}{{HdBl}Bn}{{HfBl}Bn}{{HjBl}Bn}{cc{}}00000{{{Db{C`}}{Cf{BdCd}}}{{Gj{cId}}}{}}0000011111{{H`Dh}{{Eh{Gn}}}}{{Hbc}AjIf}{{Hdc}AjIf}{{Hfc}AjIf}`{ce{}{}}000000{c{{Fb{e}}}{}{}}00000{{}H`}{H`Dh}`{An{{Fh{{Eh{{Cb{{Bh{Ih}}{Bh{Ih}}}}}}}}}}{{Ij{Bh{{Cb{{Bh{C`}}j}}}}{Bh{{Cb{{Bh{C`}}j}}}}Hh}{{Fh{{Eh{{Cb{{Bh{Ih}}{Bh{Ih}}}}}}}}}}{H`{{Eh{c}}}{}}0{{H`Dh}{{Eh{c}}}{}}`{H`{{Cb{Dh{Eh{Dh}}}}}}{c{{Bh{C`}}}{}}0000099999{cBf{}}{c{{Gj{e}}}{}{}}00000000000{cGl{}}00000<<<<<<``````````{{B`An}Aj}{cf{}}{{IllBd}{{Gj{AjIn}}}}{{IlJ`}{{Gj{AjBf}}}}{ce{}{}}000{JbJb}{{cAd}Ih{}}{InIn}{{ce}Aj{}{}}0{{cHh}{{Gj{JbHl}}}Hn}{{cHh}{{Gj{InHl}}}Hn}{{Jbc}{{Gj{DhI`}}}Ib}{{Inc}{{Gj{DhI`}}}Ib}{{cIb}{{Gj{DhI`}}}{}}0{c{{Gj{In}}}Jd}{{cJf}{{Gj{AjJh}}}{}}{{JbJb}Gf}{{InIn}Gf}{{ce}Gf{}{}}0000000{{cIh}Gf{}}{{cIf}Aj{}}{{cJf}{{Gj{AjJj}}}{}}{{JbBl}Bn}{{InBl}Bn}0{cc{}}0{{{Db{C`}}{Cf{BdCd}}}{{Gj{cId}}}{}}011{{Jbc}AjIf}{ce{}{}}0{{JbIj}c{}}{c{{Fb{e}}}{}{}}0{Jbj}{cj{}}{{Inc}GjJl}{c{{Bh{C`}}}{}}066{cBf{}}{{cAlIl}{{Bh{{Jn{Ih}}}}}{}}{{JbcIl}{{Bh{{Jn{Jb}}}}}{}}{c{{Gj{e}}}{}{}}000{cGl{}}0;;","c":[],"p":[[5,"DummyClientModule",0],[5,"PublicKey",321],[10,"Any",322],[10,"IDynCommonModuleInit",323],[5,"OperationId",324],[5,"OutPoint",325],[10,"Future",326],[5,"Box",327],[5,"Pin",328],[1,"u16"],[5,"DummyClientContext",0],[5,"DummyClientInit",0],[1,"unit"],[5,"DynContext",329],[5,"DatabaseTransaction",330],[5,"Amount",325],[5,"DatabaseVersion",330],[5,"Decoder",324],[5,"String",331],[5,"Vec",332],[10,"Iterator",333],[5,"Formatter",334],[8,"Result",334],[1,"u8"],[1,"tuple"],[6,"DecodingMode",335],[5,"ModuleRegistry",335],[17,"Output"],[1,"fn"],[5,"BTreeMap",336],[8,"ClientMigrationFn",337],[5,"OsString",338],[1,"slice"],[5,"FinalClient",339],[5,"FederationId",340],[1,"usize"],[5,"ClientModuleConfig",340],[5,"Database",330],[5,"ApiVersion",341],[5,"DerivableSecret",342],[5,"Notifier",343],[5,"DynGlobalApi",344],[5,"ApiAuth",323],[6,"Option",345],[5,"TaskGroup",346],[5,"ClientModuleInitArgs",347],[5,"DynInput",324],[5,"TransactionItemAmount",323],[5,"Request",348],[5,"ModuleKind",324],[5,"DynOutput",324],[8,"Result",349],[5,"KeyPair",321],[5,"NumPeers",325],[5,"DynModuleBackup",350],[5,"RecoveryProgress",350],[5,"Sender",351],[5,"MultiApiVersion",341],[1,"bool"],[5,"DynCommonModuleInit",323],[6,"Result",352],[5,"TypeId",322],[6,"DbKeyPrefix",98],[5,"DbKeyPrefixIter",98],[5,"DummyClientFundsKeyV0",98],[5,"DummyClientFundsKeyV1",98],[5,"DummyClientNameKey",98],[8,"ModuleDecoderRegistry",335],[5,"Unreachable",98],[5,"DecodeError",353],[10,"Read",354],[5,"Error",355],[10,"Write",354],[6,"DecodingError",330],[10,"Hasher",356],[5,"DynState",329],[8,"ModuleInstanceId",324],[5,"DynGlobalClientContext",357],[6,"DummyError",244],[5,"TransactionId",325],[6,"DummyStateMachine",244],[10,"Deserializer",358],[10,"Serializer",359],[6,"ErrorImpl",359],[5,"Error",360],[10,"Serializer",361],[5,"StateTransition",329]],"b":[[156,"impl-Debug-for-DbKeyPrefix"],[157,"impl-Display-for-DbKeyPrefix"],[289,"impl-Debug-for-DummyError"],[290,"impl-Display-for-DummyError"]]}],\
["fedimint_dummy_common",{"doc":"","t":"SSFFFGFFGFSSPOOOONNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNN","n":["BROKEN_FED_SECRET_PHRASE","CONSENSUS_VERSION","DummyCommonInit","DummyConsensusItem","DummyInput","DummyInputError","DummyModuleTypes","DummyOutput","DummyOutputError","DummyOutputOutcome","FED_SECRET_PHRASE","KIND","NotEnoughFunds","account","account","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broken_fed_key_pair","broken_fed_public_key","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fed_key_pair","fed_public_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DummyClientConfig","DummyConfig","DummyConfigConsensus","DummyConfigLocal","DummyConfigPrivate","DummyGenParams","DummyGenParamsConsensus","DummyGenParamsLocal","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_fee","tx_fee","tx_fee","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_dummy_common"],[250,"fedimint_dummy_common::config"],[446,"core::any"],[447,"secp256k1::key"],[448,"secp256k1::key"],[449,"fedimint_core::core"],[450,"fedimint_core::encoding"],[451,"core::result"],[452,"std::io"],[453,"std::io::error"],[454,"std::io"],[455,"erased_serde::ser"],[456,"erased_serde::ser"],[457,"core::fmt"],[458,"core::fmt"],[459,"core::hash"],[460,"fedimint_core::core"],[461,"serde::ser"],[462,"alloc::vec"],[463,"alloc::string"],[464,"core::any"],[465,"core::option"],[466,"fedimint_core::module::version"]],"d":["","Modules are non-compatible with older versions","","Non-transaction items that will be submitted to consensus","Input for a fedimint transaction","Errors that might be returned by the server","Contains the types defined above","Output for a fedimint transaction","Errors that might be returned by the server","Information needed by a client to update output funds","A special key that creates assets for a test/example","Unique name for this module","","Associate the input with a user’s pubkey","Associate the output with a user’s pubkey","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all the configuration for the client","Contains all the configuration for the server","Will be the same for every federation member","Locally unencrypted config unique to each member","Will be encrypted and not shared such as private key …","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accessible to clients","Will be the same for all peers","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,14,8,10,8,10,4,8,10,11,14,15,61,4,8,10,11,14,15,34,61,4,8,10,11,14,15,34,0,0,4,4,8,8,10,10,11,11,14,14,15,15,4,8,10,11,14,15,0,4,8,10,11,14,15,4,8,10,11,14,15,4,8,10,11,14,15,34,4,8,10,11,4,8,10,11,4,8,10,11,14,15,4,8,10,11,14,15,4,4,4,4,8,8,8,8,10,10,10,10,11,11,11,11,14,14,14,14,15,15,15,15,4,8,10,11,14,15,4,8,10,11,0,0,4,4,8,8,10,10,11,11,14,14,15,15,34,61,4,8,10,11,14,15,34,4,8,10,11,14,15,4,8,10,11,14,15,4,8,10,11,14,15,61,4,8,10,11,14,15,34,4,8,10,11,14,15,61,4,8,10,11,14,15,34,4,8,10,11,4,8,10,11,14,15,4,8,10,11,14,15,4,8,10,11,14,15,61,4,8,10,11,14,15,34,61,4,8,10,11,14,15,34,61,4,8,10,11,14,15,34,61,4,8,10,11,14,15,34,0,0,0,0,0,0,0,0,52,47,48,49,50,52,53,54,55,47,48,49,50,52,53,54,55,47,48,49,50,52,52,53,54,55,47,48,49,50,52,53,54,55,47,50,52,53,54,52,53,54,52,53,54,47,47,48,49,50,52,53,54,55,47,48,49,50,52,53,54,55,52,52,52,52,52,52,52,47,48,49,50,52,53,54,55,47,48,49,50,52,52,53,54,55,47,48,49,50,52,53,54,55,52,53,54,47,50,47,48,49,50,52,53,54,55,52,47,48,49,50,52,53,54,55,52,47,48,49,50,52,53,54,55,54,47,50,50,47,48,49,50,52,53,54,55,52,53,54,52,47,48,49,50,52,53,54,55,47,50,52,47,48,49,50,52,53,54,55,47,48,49,50,52,53,54,55,49,52,54,47,48,49,50,52,53,54,55,54,47,48,49,50,52,53,54,55],"f":"`````````````````{cb{}}00000{ce{}{}}000000000000000{{}d}{{}f}{hh}{{cj}l{}}{{cj}n{}}{A`A`}{{cj}Ab{}}{AdAd}{AfAf}{{cj}Ah{}}{{cj}Aj{}}{AlAl}{AnAn}{{cj}B`{}}{{ce}Bb{}{}}00000`{{cBd}{{Bh{hBf}}}Bj}{{cBd}{{Bh{A`Bf}}}Bj}{{cBd}{{Bh{AdBf}}}Bj}{{cBd}{{Bh{AfBf}}}Bj}{{cBd}{{Bh{AlBf}}}Bj}{{cBd}{{Bh{AnBf}}}Bj}{{hc}{{Bh{BlBn}}}C`}{{A`c}{{Bh{BlBn}}}C`}{{Adc}{{Bh{BlBn}}}C`}{{Afc}{{Bh{BlBn}}}C`}{{Alc}{{Bh{BlBn}}}C`}{{Anc}{{Bh{BlBn}}}C`}{{cC`}{{Bh{BlBn}}}{}}00000{{}Cb}{c{{Bh{h}}}Cd}{c{{Bh{A`}}}Cd}{c{{Bh{Ad}}}Cd}{c{{Bh{Af}}}Cd}{{cCf}{{Bh{BbCh}}}{}}000{cCj{}}00000{{hh}Cl}{{A`A`}Cl}{{AdAd}Cl}{{AfAf}Cl}{{AlAl}Cl}{{AnAn}Cl}{{ce}Cl{}{}}00000000000000000000000{{cl}Cl{}}{{cn}Cl{}}{{cAb}Cl{}}{{cAh}Cl{}}{{cAj}Cl{}}{{cB`}Cl{}}{{cCf}{{Bh{BbCn}}}{}}000{{}d}{{}f}{{hD`}Db}0{{A`D`}Db}0{{AdD`}Db}0{{AfD`}Db}0{{AlD`}Db}0{{AnD`}Db}0{{DdD`}Db}{cc{}}0000000{{{Dh{Df}}{Dl{CbDj}}}{{Bh{cDn}}}{}}00000111111{{hc}BbE`}{{A`c}BbE`}{{Adc}BbE`}{{Afc}BbE`}{{Alc}BbE`}{{Anc}BbE`}{ce{}{}}0000000{{hEb}c{}}{{A`Eb}c{}}{{AdEb}c{}}{{AfEb}c{}}{{AlEb}c{}}{{AnEb}c{}}{c{{Ed{e}}}{}{}}0000000{{hc}BhEf}{{A`c}BhEf}{{Adc}BhEf}{{Afc}BhEf}{c{{Eh{Df}}}{}}00000<<<<<<{cEj{}}00000{c{{Bh{e}}}{}{}}000000000000000{cEl{}}0000000????????````````{cb{}}{ce{}{}}000000000000000{EnEn}{F`F`}{FbFb}{FdFd}{{cj}Ff{}}{FhFh}{FjFj}{FlFl}{FnFn}{{ce}Bb{}{}}0000000``{{cBd}{{Bh{FhBf}}}Bj}{{cBd}{{Bh{FjBf}}}Bj}{{cBd}{{Bh{FlBf}}}Bj}{{Fhc}{{Bh{BlBn}}}C`}{{Fjc}{{Bh{BlBn}}}C`}{{Flc}{{Bh{BlBn}}}C`}{{cC`}{{Bh{BlBn}}}{}}00{{}En}{c{{Bh{En}}}Cd}{c{{Bh{F`}}}Cd}{c{{Bh{Fb}}}Cd}{c{{Bh{Fd}}}Cd}{c{{Bh{Fh}}}Cd}{c{{Bh{Fj}}}Cd}{c{{Bh{Fl}}}Cd}{c{{Bh{Fn}}}Cd}{{cCf}{{Bh{BbCh}}}{}}0000000{cCj{}}{{FhFh}Cl}{{ce}Cl{}{}}000{{cFf}Cl{}}{{cCf}{{Bh{BbCn}}}{}}0000000{{EnD`}Db}{{F`D`}Db}{{FbD`}Db}{{FdD`}Db}{{FhD`}Db}0{{FjD`}Db}{{FlD`}Db}{{FnD`}Db}{cc{}}0000000{{{Dh{Df}}{Dl{CbDj}}}{{Bh{cDn}}}{}}00{{ce}En{}{}}{{ceg}Fd{}{}{}}33333333{{Fhc}BbE`}{ce{}{}}0000000{{FhEb}c{}}{c{{Ed{e}}}{}{}}0000000{FlG`}```{{Enc}BhEf}{{F`c}BhEf}{{Fbc}BhEf}{{Fdc}BhEf}{{Fhc}BhEf}{{Fjc}BhEf}{{Flc}BhEf}{{Fnc}BhEf}{c{{Eh{Df}}}{}}00{c{{Gd{Gb}}}{}}========{En{{Gf{ce}}}{}{}}{Fd{{Gf{G`ceg}}}{}{}{}}{cEj{}}{c{{Bh{e}}}{}{}}000000000000000```{cEl{}}0000000{FlGh}{ce{}{}}0000000","c":[],"p":[[10,"Any",446],[5,"KeyPair",447],[5,"PublicKey",447],[5,"DummyConsensusItem",0],[1,"u16"],[5,"DynModuleConsensusItem",448],[5,"DynInput",448],[5,"DummyInput",0],[5,"DynOutput",448],[5,"DummyOutput",0],[5,"DummyOutputOutcome",0],[5,"DynOutputOutcome",448],[5,"DynInputError",448],[6,"DummyInputError",0],[6,"DummyOutputError",0],[5,"DynOutputError",448],[1,"unit"],[8,"ModuleDecoderRegistry",449],[5,"DecodeError",450],[6,"Result",451],[10,"Read",452],[1,"usize"],[5,"Error",453],[10,"Write",452],[5,"Decoder",448],[10,"Deserializer",454],[10,"Serializer",455],[6,"ErrorImpl",455],[1,"u64"],[1,"bool"],[5,"Error",456],[5,"Formatter",457],[8,"Result",457],[5,"DummyCommonInit",0],[1,"u8"],[1,"slice"],[6,"DecodingMode",449],[5,"ModuleRegistry",449],[6,"DecodingError",458],[10,"Hasher",459],[8,"ModuleInstanceId",448],[5,"Request",460],[10,"Serializer",461],[5,"Vec",462],[5,"String",463],[5,"TypeId",446],[5,"DummyGenParams",250],[5,"DummyGenParamsLocal",250],[5,"DummyGenParamsConsensus",250],[5,"DummyConfig",250],[5,"DynClientConfig",448],[5,"DummyClientConfig",250],[5,"DummyConfigLocal",250],[5,"DummyConfigConsensus",250],[5,"DummyConfigPrivate",250],[5,"ModuleKind",448],[6,"Value",464],[6,"Option",465],[1,"tuple"],[5,"ModuleConsensusVersion",466],[5,"DummyModuleTypes",0]],"b":[[135,"impl-Display-for-DummyConsensusItem"],[136,"impl-Debug-for-DummyConsensusItem"],[137,"impl-Debug-for-DummyInput"],[138,"impl-Display-for-DummyInput"],[139,"impl-Display-for-DummyOutput"],[140,"impl-Debug-for-DummyOutput"],[141,"impl-Display-for-DummyOutputOutcome"],[142,"impl-Debug-for-DummyOutputOutcome"],[143,"impl-Debug-for-DummyInputError"],[144,"impl-Display-for-DummyInputError"],[145,"impl-Display-for-DummyOutputError"],[146,"impl-Debug-for-DummyOutputError"],[339,"impl-Debug-for-DummyClientConfig"],[340,"impl-Display-for-DummyClientConfig"]]}],\
["fedimint_dummy_server",{"doc":"","t":"FFNNNNNNNNNNONNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFFFFFFFPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Dummy","DummyInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow_mut","borrow_mut","cfg","clone","clone_into","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","from","from","from_ref","get_client_config","get_client_config","get_database_migrations","get_database_migrations","init","init","into","into","into_request","into_request","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_into","try_into","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","DummyFundsKeyPrefixV0","DummyFundsKeyV0","DummyFundsKeyV1","DummyFundsPrefixV1","DummyOutcomeKey","DummyOutcomePrefix","Funds","Outcome","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","hash","hash","idx","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","migrate_to_v1","next","next_back","nth","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_dummy_server"],[68,"fedimint_dummy_server::db"],[258,"fedimint_core::core::server"],[259,"fedimint_core::module"],[260,"alloc::vec"],[261,"core::any"],[262,"fedimint_core::module"],[263,"fedimint_core::module::audit"],[264,"core::future::future"],[265,"alloc::boxed"],[266,"core::pin"],[267,"fedimint_core::core"],[268,"fedimint_core::db"],[269,"alloc::string"],[270,"core::iter::traits::iterator"],[271,"core::fmt"],[272,"core::fmt"],[273,"core::result"],[274,"fedimint_dummy_common::config"],[275,"anyhow"],[276,"fedimint_core::module"],[277,"fedimint_core::config"],[278,"fedimint_core"],[279,"fedimint_core::core"],[280,"fedimint_core::core"],[281,"fedimint_core::module"],[282,"fedimint_core::encoding"],[283,"std::io"],[284,"std::io::error"],[285,"std::io"],[286,"erased_serde::ser"],[287,"fedimint_core::module::registry"],[288,"core::hash"],[289,"serde::ser"]],"d":["Dummy module","Generates the module","","","","","Queries the database and returns all assets and …","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","Generates configs for all peers in an untrusted manner","","","Dumps all database items for debugging","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Converts the consensus config into the client config","DB migrations to move from old to newer versions","","Initialize the module","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create new module instance","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","Generates configs for all peers in a trusted manner for …","","","","","","","","","","","Returns the version of this module","","","Namespaces DB keys for this module","An iterator over the variants of DbKeyPrefix","","Example old version 0 of DB entries","Lookup funds for a user by key or prefix","","Lookup tx outputs by key or prefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Example DB migration from version 0 to version 1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,14,4,4,14,4,14,4,4,14,14,4,4,14,0,14,4,14,14,14,14,14,4,14,4,14,14,14,14,14,14,14,14,4,14,4,14,4,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,4,14,4,14,4,14,14,14,14,14,4,0,0,0,0,0,0,0,0,56,56,57,56,57,58,64,59,65,60,66,56,57,58,64,59,65,60,66,56,57,58,59,60,56,57,58,59,60,58,64,59,65,60,66,58,64,59,65,60,66,58,64,59,65,60,66,58,59,60,58,59,60,58,58,58,58,59,59,59,59,60,60,60,60,58,59,60,56,56,57,58,64,59,65,60,66,56,57,58,64,59,65,60,66,58,58,64,59,59,65,60,60,66,56,57,58,59,60,57,58,59,60,57,56,57,58,64,59,65,60,66,57,56,57,58,64,59,65,60,66,56,57,57,0,57,57,57,58,59,60,57,58,58,64,64,59,59,65,65,60,60,66,66,56,57,58,59,60,56,56,57,58,64,59,65,60,66,56,57,58,64,59,65,60,66,56,57,58,64,59,65,60,66,56,57,58,64,59,65,60,66],"f":"``{c{{f{{d{b}}}}}{}}{h{{f{{d{h}}}}}}{cj{}}{cl{}}{{cnA`Ab}{{Ah{{Af{Ad}}}}}{}}{{hnA`Aj}{{Ah{{Af{Ad}}}}}}{ce{}{}}000`{AlAl}{{ce}An{}{}}{{cnAb}{{Ah{{Af{Ad}}}}}{}}{{hn}{{Ah{{Af{Ad}}}}}}{cB`{}}`{cBb{}}0{{AlBdBf}{{Ah{{Af{Ad}}}}}}{{cBdBf}{{Ah{{Af{Ad}}}}}{}}{{cn{f{Bh}}}{{Ah{{Af{Ad}}}}}{}}{{Aln{f{Bh}}}{{Af{Bj}}}}{{AlBl}Bn}{{hBl}Bn}{cc{}}00{{cAbC`}{{Cf{CbCd}}}{}}{{AlC`}{{Cj{Ch}}}}{Al{{Cn{B`Cl}}}}{c{{Cn{B`{Db{n}{{D`{{Ah{{Af{Ad}}}}}}}}}}}{}}{{Al{Dd{Al}}}{{Ah{{Af{Ad}}}}}}{{cDfDhDjDlDn}{{Ah{{Af{Ad}}}}}{}}{ce{}{}}0{c{{E`{e}}}{}{}}0{cEb{}}{Edh}{{hnEf}{{Ah{{Af{Ad}}}}}}{{cnEfAb}{{Ah{{Af{Ad}}}}}{}}{{cnEhDn}{{Ah{{Af{Ad}}}}}{}}{{hnEjDn}{{Ah{{Af{Ad}}}}}}{{cnElAb}{{Ah{{Af{Ad}}}}}{}}{{hnEn}{{Ah{{Af{Ad}}}}}}{{hnF`Ef}{{Ah{{Af{Ad}}}}}}{{cnFbEfAb}{{Ah{{Af{Ad}}}}}{}}{cFd{}}{AlFd}{cFf{}}>{{Al{Fh{Dn}}Bf}{{Cn{DnDh}}}}{{c{Fh{Dn}}Bf}{{Cn{DnDh}}}{}}{c{{Cf{e}}}{}{}}000{cFj{}}0{{AlDnDh}{{Cj{An}}}}{{cDnDh}{{Cf{AnCd}}}{}}{{cBf}{{Cf{AnCd}}}{}}{{AlFl}{{Fh{Fn}}}}{ce{}{}}0```````````0000000000000000{G`G`}{GbGb}{GdGd}{GfGf}{GhGh}{{ce}An{}{}}0000{{cGj}{{Cf{GdGl}}}Gn}{{cGj}{{Cf{H`Gl}}}Gn}{{cGj}{{Cf{GfGl}}}Gn}{{cGj}{{Cf{HbGl}}}Gn}{{cGj}{{Cf{GhGl}}}Gn}{{cGj}{{Cf{HdGl}}}Gn}{{Gdc}{{Cf{HfHh}}}Hj}{{H`c}{{Cf{HfHh}}}Hj}{{Gfc}{{Cf{HfHh}}}Hj}{{Hbc}{{Cf{HfHh}}}Hj}{{Ghc}{{Cf{HfHh}}}Hj}{{Hdc}{{Cf{HfHh}}}Hj}{{cHj}{{Cf{HfHh}}}{}}00000{{cHl}{{Cf{AnHn}}}{}}00{{GdGd}I`}{{GfGf}I`}{{GhGh}I`}{{ce}I`{}{}}00000000000{{cHl}{{Cf{AnIb}}}{}}00{{G`Bl}Bn}0{{GbBl}Bn}{{GdBl}Bn}{{H`Bl}Bn}{{GfBl}Bn}{{HbBl}Bn}{{GhBl}Bn}{{HdBl}Bn}{cc{}}0000000{{{Fh{Id}}{Ih{BbIf}}}{{Cf{cIj}}}{}}0000000011111{{GbHf}{{Il{G`}}}}{{Gdc}AnIn}{{Gfc}AnIn}{{Ghc}AnIn}`{ce{}{}}00000000{c{{E`{e}}}{}{}}0000000{{}Gb}{GbHf}`{n{{Cf{AnCd}}}}{Gb{{Il{c}}}{}}0{{GbHf}{{Il{c}}}{}}{{Gdc}CfJ`}{{Gfc}CfJ`}{{Ghc}CfJ`}{Gb{{Jb{Hf{Il{Hf}}}}}}{c{{f{Id}}}{}}00000000000;;;;;{cBh{}}{c{{Cf{e}}}{}{}}000000000000000{cFj{}}0000000>>>>>>>>","c":[],"p":[[5,"DynServerModule",258],[5,"ApiEndpoint",259],[5,"Vec",260],[5,"Dummy",0],[10,"Any",261],[10,"IDynCommonModuleInit",259],[5,"DatabaseTransaction",262],[5,"Audit",263],[1,"u16"],[10,"Future",264],[5,"Box",265],[5,"Pin",266],[8,"ModuleInstanceId",267],[5,"DummyInit",0],[1,"unit"],[5,"DatabaseVersion",262],[5,"Decoder",267],[5,"PeerHandle",259],[5,"ConfigGenModuleParams",268],[5,"String",269],[10,"Iterator",270],[5,"Formatter",271],[8,"Result",271],[5,"ServerModuleConsensusConfig",268],[5,"ClientModuleConfig",268],[5,"Error",272],[6,"Result",273],[5,"DummyClientConfig",274],[8,"Result",272],[8,"ServerMigrationFn",262],[5,"BTreeMap",275],[17,"Output"],[1,"fn"],[5,"ServerModuleInitArgs",259],[5,"NumPeers",276],[5,"ServerModuleConfig",268],[5,"Database",262],[5,"TaskGroup",277],[5,"PeerId",276],[5,"Request",278],[5,"ModuleKind",267],[5,"DummyConfig",274],[5,"OutPoint",276],[5,"DynModuleConsensusItem",267],[5,"DummyConsensusItem",279],[5,"DynInput",267],[5,"DummyInput",279],[5,"DummyOutput",279],[5,"DynOutput",267],[5,"SupportedModuleApiVersions",280],[5,"DynCommonModuleInit",259],[1,"slice"],[5,"TypeId",261],[5,"CoreConsensusVersion",280],[5,"ModuleConsensusVersion",280],[6,"DbKeyPrefix",68],[5,"DbKeyPrefixIter",68],[5,"DummyFundsKeyV0",68],[5,"DummyFundsKeyV1",68],[5,"DummyOutcomeKey",68],[8,"ModuleDecoderRegistry",281],[5,"DecodeError",282],[10,"Read",283],[5,"DummyFundsKeyPrefixV0",68],[5,"DummyFundsPrefixV1",68],[5,"DummyOutcomePrefix",68],[1,"usize"],[5,"Error",284],[10,"Write",283],[10,"Serializer",285],[6,"ErrorImpl",285],[1,"bool"],[5,"Error",286],[1,"u8"],[6,"DecodingMode",281],[5,"ModuleRegistry",281],[6,"DecodingError",262],[6,"Option",287],[10,"Hasher",288],[10,"Serializer",289],[1,"tuple"]],"b":[[144,"impl-Debug-for-DbKeyPrefix"],[145,"impl-Display-for-DbKeyPrefix"]]}],\
["fedimint_empty_client",{"doc":"","t":"FFFCNNNNNNNNNNOONNNNENNNNNCONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNKGFONNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["EmptyClientContext","EmptyClientInit","EmptyClientModule","api","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone_into","clone_into","common","context","context","create_exact_output","create_sufficient_input","database_version","db","db","decoder","decoder","decoder","dump_database","dump_database","empty_decoder","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_balance","get_balance","get_database_migrations","get_database_migrations","handle_cli_command","init","init","input_amount","input_amount","into","into","into","into_request","into_request","into_request","module_kind","module_kind","output_amount","output_amount","recover","states","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","supports_being_primary","to_dyn_common","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DummyFederationApi","DbKeyPrefix","DbKeyPrefixIter","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","from","from","from_ref","from_ref","get","idx","into","into","into_iter","into_request","into_request","iter","len","marker","next","next_back","nth","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EmptyError","EmptyInternalError","EmptyStateMachine","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","into","into","into_dyn","into_request","into_request","operation_id","operation_id","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_empty_client"],[84,"fedimint_empty_client::api"],[85,"fedimint_empty_client::db"],[128,"fedimint_empty_client::states"],[195,"core::any"],[196,"fedimint_core::module"],[197,"fedimint_core::core"],[198,"fedimint_core"],[199,"core::future::future"],[200,"alloc::boxed"],[201,"core::pin"],[202,"fedimint_client::sm::state"],[203,"fedimint_core::db"],[204,"fedimint_core"],[205,"alloc::vec"],[206,"core::iter::traits::iterator"],[207,"core::fmt"],[208,"core::fmt"],[209,"alloc::collections::btree::map"],[210,"fedimint_core::module::registry"],[211,"fedimint_core::module::registry"],[212,"fedimint_client::module"],[213,"fedimint_core::config"],[214,"fedimint_core::config"],[215,"fedimint_derive_secret"],[216,"fedimint_client::sm::notifier"],[217,"fedimint_core::api"],[218,"fedimint_core::module"],[219,"fedimint_core::task"],[220,"fedimint_client::module::init"],[221,"fedimint_core::core"],[222,"fedimint_core::core"],[223,"fedimint_client::module::recovery"],[224,"fedimint_core::module::version"],[225,"core::any"],[226,"std::io"],[227,"std::io::error"],[228,"std::io"],[229,"erased_serde::ser"],[230,"erased_serde::ser"],[231,"erased_serde::error"],[232,"fedimint_core::db"],[233,"fedimint_client"],[234,"fedimint_client::sm::state"]],"d":["Data needed by the state machine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Tracks a transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,13,10,13,13,13,9,10,13,9,10,13,13,9,10,9,10,0,13,13,13,13,10,0,13,13,10,10,10,10,9,13,9,10,13,9,10,9,10,13,13,10,10,13,10,10,13,13,13,9,10,13,9,10,10,10,13,13,10,0,13,10,10,13,13,13,10,9,10,13,9,10,13,9,10,13,9,10,13,9,10,0,0,0,61,60,61,60,61,60,61,60,61,60,60,61,60,61,60,61,61,61,60,61,61,60,61,60,61,61,61,61,61,61,60,61,60,60,61,60,61,60,61,60,61,0,64,0,63,63,64,63,64,63,63,64,63,64,63,64,63,64,63,64,64,64,63,64,63,63,63,63,64,64,64,64,63,63,64,63,64,64,63,64,63,64,63,64,63,63,64,63,63,64,63,63,64,63,64,63,64,64,63,63,63,64,63,64,63,64,63,64],"f":"````{cb{}}{cd{}}{{cfh}{{n{{l{j}}}}}{}}{{cA`}{{n{{l{j}}}}}{}}{ce{}{}}00000``{AbAb}{AdAd}{{ce}Af{}{}}0`{{cA`}Ah{}}{Ajc{}}{{cA`AlfAn}{{n{{l{j}}}}}{}}0{cB`{}}``{cBb{}}00{{cAl{Bf{Bd}}}{{n{{l{j}}}}}{}}{{AdAl{Bf{Bd}}}{{l{Bh}}}}`{{AjBj}Bl}{{AbBj}Bl}{{AdBj}Bl}{cc{}}0000{{AjAl}{{n{{l{j}}}}}}{{cA`Al}{{n{{l{j}}}}}{}}{Ad{{C`{B`Bn}}}}{c{{C`{B`{Cl{AlA`{Bf{{Cd{{Bf{Cb}}f}}}}{Bf{{Cd{{Bf{Cb}}f}}}}{Ch{BbCf}}}{{Cj{{n{{l{j}}}}}}}}}}}{}}{{c{D`{Cn}}}{{n{{l{j}}}}}{}}{{cDbDdDfDhDjA`DlDlDnE`Eb{Ef{Ed}}Eh}{{n{{l{j}}}}}{}}{{Ad{Ej{Ad}}}{{n{{l{j}}}}}}{{cEl}{{Ef{En}}}{}}{Aj{{Ef{En}}}}{ce{}{}}00{c{{F`{e}}}{}{}}00{cFb{}}0{{cFd}{{Ef{En}}}{}}4{{cDbDdFfDhDjA`DlDlDnE`Eb{Ef{Ed}}{Ef{Fh}}{Fl{Fj}}}{{n{{l{j}}}}}{}}`{c{{n{{l{j}}}}}{}}{cFn{}}{AdFn}{cG`{}}0{AjG`}{cGb{}}::{c{{Gd{e}}}{}{}}00000{cGf{}}00<<<````<<<<{GhGh}{GjGj}{{ce}Af{}{}}0{{GhBj}Bl}0{{GjBj}Bl}{cc{}}000{{GjDf}{{Ef{Gh}}}}`{ce{}{}}00{c{{F`{e}}}{}{}}0{{}Gj}{GjDf}`{Gj{{Ef{c}}}{}}0{{GjDf}{{Ef{c}}}{}}{Gj{{Cd{Df{Ef{Df}}}}}}66{cBd{}}{c{{Gd{e}}}{}{}}000{cGf{}}099```{cb{}}::::{{cA`}Gl{}}{GnGn}{H`H`}{{ce}Af{}{}}0{{cHb}{{Gd{GnHd}}}Hf}{{cHb}{{Gd{H`Hd}}}Hf}{{Gnc}{{Gd{DfHh}}}Hj}{{H`c}{{Gd{DfHh}}}Hj}{{cHj}{{Gd{DfHh}}}{}}0{c{{Gd{H`}}}Hl}{{cHn}{{Gd{AfI`}}}{}}{{GnGn}G`}{{H`H`}G`}{{ce}G`{}{}}0000000{{cGl}G`{}}{{cIb}Af{}}{{cHn}{{Gd{AfId}}}{}}{{GnBj}Bl}{{H`Bj}Bl}0{cc{}}0{{{D`{Cb}}{Ch{BbCf}}}{{Gd{cIf}}}{}}011{{Gnc}AfIb}{ce{}{}}0{{GnIh}c{}}{c{{F`{e}}}{}{}}0{Gnf}{cf{}}{{H`c}GdIj}{c{{Bf{Cb}}}{}}066{cBd{}}{{GncIl}{{Bf{{In{Gn}}}}}{}}{{cAhIl}{{Bf{{In{Gl}}}}}{}}{c{{Gd{e}}}{}{}}000{cGf{}}0;;","c":[],"p":[[10,"Any",195],[10,"IDynCommonModuleInit",196],[5,"OperationId",197],[5,"OutPoint",198],[10,"Future",199],[5,"Box",200],[5,"Pin",201],[1,"u16"],[5,"EmptyClientContext",0],[5,"EmptyClientInit",0],[1,"unit"],[5,"DynContext",202],[5,"EmptyClientModule",0],[5,"DatabaseTransaction",203],[5,"Amount",198],[5,"DatabaseVersion",203],[5,"Decoder",197],[5,"String",204],[5,"Vec",205],[10,"Iterator",206],[5,"Formatter",207],[8,"Result",207],[8,"ClientMigrationFn",208],[5,"BTreeMap",209],[1,"u8"],[1,"tuple"],[6,"DecodingMode",210],[5,"ModuleRegistry",210],[17,"Output"],[1,"fn"],[5,"OsString",211],[1,"slice"],[5,"FinalClient",212],[5,"FederationId",213],[1,"usize"],[5,"ClientModuleConfig",213],[5,"Database",203],[5,"ApiVersion",214],[5,"DerivableSecret",215],[5,"Notifier",216],[5,"DynGlobalApi",217],[5,"ApiAuth",196],[6,"Option",218],[5,"TaskGroup",219],[5,"ClientModuleInitArgs",220],[5,"DynInput",197],[5,"TransactionItemAmount",196],[5,"Request",221],[5,"ModuleKind",197],[5,"DynOutput",197],[5,"NumPeers",198],[5,"DynModuleBackup",222],[5,"RecoveryProgress",222],[5,"Sender",223],[5,"MultiApiVersion",214],[1,"bool"],[5,"DynCommonModuleInit",196],[6,"Result",224],[5,"TypeId",195],[6,"DbKeyPrefix",85],[5,"DbKeyPrefixIter",85],[5,"DynState",202],[6,"EmptyStateMachine",128],[6,"EmptyError",128],[8,"ModuleDecoderRegistry",210],[5,"DecodeError",225],[10,"Read",226],[5,"Error",227],[10,"Write",226],[10,"Deserializer",228],[10,"Serializer",229],[6,"ErrorImpl",229],[10,"Hasher",230],[5,"Error",231],[6,"DecodingError",203],[8,"ModuleInstanceId",197],[10,"Serializer",232],[5,"DynGlobalClientContext",233],[5,"StateTransition",202]],"b":[[96,"impl-Display-for-DbKeyPrefix"],[97,"impl-Debug-for-DbKeyPrefix"],[163,"impl-Debug-for-EmptyError"],[164,"impl-Display-for-EmptyError"]]}],\
["fedimint_empty_common",{"doc":"","t":"SFFFGFFGFSPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CONSENSUS_VERSION","EmptyCommonInit","EmptyConsensusItem","EmptyInput","EmptyInputError","EmptyModuleTypes","EmptyOutput","EmptyOutputError","EmptyOutputOutcome","KIND","NotSupported","NotSupported","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","EmptyClientConfig","EmptyConfig","EmptyConfigConsensus","EmptyConfigLocal","EmptyConfigPrivate","EmptyGenParams","EmptyGenParamsConsensus","EmptyGenParamsLocal","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_empty_common"],[241,"fedimint_empty_common::config"],[434,"core::any"],[435,"fedimint_core::core"],[436,"fedimint_core::core"],[437,"fedimint_core::encoding"],[438,"core::result"],[439,"std::io"],[440,"std::io::error"],[441,"std::io"],[442,"erased_serde::ser"],[443,"erased_serde::ser"],[444,"core::fmt"],[445,"core::fmt"],[446,"core::hash"],[447,"fedimint_core::core"],[448,"serde::ser"],[449,"alloc::vec"],[450,"alloc::string"],[451,"core::any"],[452,"core::option"],[453,"fedimint_core::module::version"]],"d":["Modules are non-compatible with older versions","","Non-transaction items that will be submitted to consensus","Input for a fedimint transaction","Errors that might be returned by the server","Contains the types defined above","Output for a fedimint transaction","Errors that might be returned by the server","Information needed by a client to update output funds","Unique name for this module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all the configuration for the client","Contains all the configuration for the server","Will be the same for every federation member","Locally unencrypted config unique to each member","Will be encrypted and not shared such as private key …","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,12,14,4,5,7,9,12,14,59,4,5,7,9,12,14,32,59,4,5,7,9,12,14,32,4,4,5,5,7,7,9,9,12,12,14,14,4,5,7,9,12,14,0,4,5,7,9,12,14,4,5,7,9,12,14,4,5,7,9,12,14,32,4,5,7,9,4,5,7,9,4,5,7,9,12,14,4,5,7,9,12,14,4,4,4,4,5,5,5,5,7,7,7,7,9,9,9,9,12,12,12,12,14,14,14,14,4,5,7,9,12,14,4,5,7,9,4,4,5,5,7,7,9,9,12,12,14,14,32,59,4,5,7,9,12,14,32,4,5,7,9,12,14,4,5,7,9,12,14,4,5,7,9,12,14,59,4,5,7,9,12,14,32,4,5,7,9,12,14,59,4,5,7,9,12,14,32,4,5,7,9,4,5,7,9,12,14,4,5,7,9,12,14,4,5,7,9,12,14,59,4,5,7,9,12,14,32,59,4,5,7,9,12,14,32,59,4,5,7,9,12,14,32,59,4,5,7,9,12,14,32,0,0,0,0,0,0,0,0,49,45,46,47,48,49,51,52,53,45,46,47,48,49,51,52,53,45,46,47,48,49,49,51,52,53,45,46,47,48,49,51,52,53,45,48,49,51,52,49,51,52,49,51,52,45,45,46,47,48,49,51,52,53,45,46,47,48,49,51,52,53,49,49,49,49,49,49,49,45,46,47,48,49,51,52,53,45,46,47,48,49,49,51,52,53,45,46,47,48,49,51,52,53,49,51,52,45,48,45,46,47,48,49,51,52,53,49,45,46,47,48,49,51,52,53,49,45,46,47,48,49,51,52,53,52,45,48,48,45,46,47,48,49,51,52,53,49,51,52,49,45,46,47,48,49,51,52,53,45,48,49,45,46,47,48,49,51,52,53,45,46,47,48,49,51,52,53,45,46,47,48,49,51,52,53,52,45,46,47,48,49,51,52,53],"f":"````````````{cb{}}00000{ce{}{}}000000000000000{{cd}f{}}{hh}{jj}{{cd}l{}}{nn}{{cd}A`{}}{AbAb}{{cd}Ad{}}{{cd}Af{}}{AhAh}{{cd}Aj{}}{AlAl}{{ce}An{}{}}00000`{{cB`}{{Bd{hBb}}}Bf}{{cB`}{{Bd{jBb}}}Bf}{{cB`}{{Bd{nBb}}}Bf}{{cB`}{{Bd{AbBb}}}Bf}{{cB`}{{Bd{AhBb}}}Bf}{{cB`}{{Bd{AlBb}}}Bf}{{hc}{{Bd{BhBj}}}Bl}{{jc}{{Bd{BhBj}}}Bl}{{nc}{{Bd{BhBj}}}Bl}{{Abc}{{Bd{BhBj}}}Bl}{{Ahc}{{Bd{BhBj}}}Bl}{{Alc}{{Bd{BhBj}}}Bl}{{cBl}{{Bd{BhBj}}}{}}00000{{}Bn}{c{{Bd{h}}}C`}{c{{Bd{j}}}C`}{c{{Bd{n}}}C`}{c{{Bd{Ab}}}C`}{{cCb}{{Bd{AnCd}}}{}}000{cCf{}}00000{{hh}Ch}{{jj}Ch}{{nn}Ch}{{AbAb}Ch}{{AhAh}Ch}{{AlAl}Ch}{{ce}Ch{}{}}00000000000000000000000{{cf}Ch{}}{{cl}Ch{}}{{cA`}Ch{}}{{cAd}Ch{}}{{cAf}Ch{}}{{cAj}Ch{}}{{cCb}{{Bd{AnCj}}}{}}000{{hCl}Cn}0{{jCl}Cn}0{{nCl}Cn}0{{AbCl}Cn}0{{AhCl}Cn}0{{AlCl}Cn}0{{D`Cl}Cn}{cc{}}0000000{{{Dd{Db}}{Dh{BnDf}}}{{Bd{cDj}}}{}}00000111111{{hc}AnDl}{{jc}AnDl}{{nc}AnDl}{{Abc}AnDl}{{Ahc}AnDl}{{Alc}AnDl}{ce{}{}}0000000{{hDn}c{}}{{jDn}c{}}{{nDn}c{}}{{AbDn}c{}}{{AhDn}c{}}{{AlDn}c{}}{c{{E`{e}}}{}{}}0000000{{hc}BdEb}{{jc}BdEb}{{nc}BdEb}{{Abc}BdEb}{c{{Ed{Db}}}{}}00000<<<<<<{cEf{}}00000{c{{Bd{e}}}{}{}}000000000000000{cEh{}}0000000????????````````{cb{}}{ce{}{}}000000000000000{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{{cd}Fd{}}{FfFf}{FhFh}{FjFj}{{ce}An{}{}}0000000``{{cB`}{{Bd{FbBb}}}Bf}{{cB`}{{Bd{FfBb}}}Bf}{{cB`}{{Bd{FhBb}}}Bf}{{Fbc}{{Bd{BhBj}}}Bl}{{Ffc}{{Bd{BhBj}}}Bl}{{Fhc}{{Bd{BhBj}}}Bl}{{cBl}{{Bd{BhBj}}}{}}00{{}Ej}{c{{Bd{Ej}}}C`}{c{{Bd{El}}}C`}{c{{Bd{En}}}C`}{c{{Bd{F`}}}C`}{c{{Bd{Fb}}}C`}{c{{Bd{Ff}}}C`}{c{{Bd{Fh}}}C`}{c{{Bd{Fj}}}C`}{{cCb}{{Bd{AnCd}}}{}}0000000{cCf{}}{{FbFb}Ch}{{ce}Ch{}{}}000{{cFd}Ch{}}{{cCb}{{Bd{AnCj}}}{}}0000000{{EjCl}Cn}{{ElCl}Cn}{{EnCl}Cn}{{F`Cl}Cn}{{FbCl}Cn}0{{FfCl}Cn}{{FhCl}Cn}{{FjCl}Cn}{cc{}}0000000{{{Dd{Db}}{Dh{BnDf}}}{{Bd{cDj}}}{}}00{{ce}Ej{}{}}{{ceg}F`{}{}{}}33333333{{Fbc}AnDl}{ce{}{}}0000000{{FbDn}c{}}{c{{E`{e}}}{}{}}0000000{FhFl}```{{Ejc}BdEb}{{Elc}BdEb}{{Enc}BdEb}{{F`c}BdEb}{{Fbc}BdEb}{{Ffc}BdEb}{{Fhc}BdEb}{{Fjc}BdEb}{c{{Ed{Db}}}{}}00{c{{G`{Fn}}}{}}========{Ej{{Gb{ce}}}{}{}}{F`{{Gb{Flceg}}}{}{}{}}{cEf{}}{c{{Bd{e}}}{}{}}000000000000000{cEh{}}0000000{FhGd}{ce{}{}}0000000","c":[],"p":[[10,"Any",434],[1,"u16"],[5,"DynModuleConsensusItem",435],[5,"EmptyConsensusItem",0],[5,"EmptyInput",0],[5,"DynInput",435],[5,"EmptyOutput",0],[5,"DynOutput",435],[5,"EmptyOutputOutcome",0],[5,"DynOutputOutcome",435],[5,"DynInputError",435],[6,"EmptyInputError",0],[5,"DynOutputError",435],[6,"EmptyOutputError",0],[1,"unit"],[8,"ModuleDecoderRegistry",436],[5,"DecodeError",437],[6,"Result",438],[10,"Read",439],[1,"usize"],[5,"Error",440],[10,"Write",439],[5,"Decoder",435],[10,"Deserializer",441],[10,"Serializer",442],[6,"ErrorImpl",442],[1,"u64"],[1,"bool"],[5,"Error",443],[5,"Formatter",444],[8,"Result",444],[5,"EmptyCommonInit",0],[1,"u8"],[1,"slice"],[6,"DecodingMode",436],[5,"ModuleRegistry",436],[6,"DecodingError",445],[10,"Hasher",446],[8,"ModuleInstanceId",435],[5,"Request",447],[10,"Serializer",448],[5,"Vec",449],[5,"String",450],[5,"TypeId",434],[5,"EmptyGenParams",241],[5,"EmptyGenParamsLocal",241],[5,"EmptyGenParamsConsensus",241],[5,"EmptyConfig",241],[5,"EmptyClientConfig",241],[5,"DynClientConfig",435],[5,"EmptyConfigLocal",241],[5,"EmptyConfigConsensus",241],[5,"EmptyConfigPrivate",241],[5,"ModuleKind",435],[6,"Value",451],[6,"Option",452],[1,"tuple"],[5,"ModuleConsensusVersion",453],[5,"EmptyModuleTypes",0]],"b":[[126,"impl-Display-for-EmptyConsensusItem"],[127,"impl-Debug-for-EmptyConsensusItem"],[128,"impl-Debug-for-EmptyInput"],[129,"impl-Display-for-EmptyInput"],[130,"impl-Display-for-EmptyOutput"],[131,"impl-Debug-for-EmptyOutput"],[132,"impl-Debug-for-EmptyOutputOutcome"],[133,"impl-Display-for-EmptyOutputOutcome"],[134,"impl-Display-for-EmptyInputError"],[135,"impl-Debug-for-EmptyInputError"],[136,"impl-Debug-for-EmptyOutputError"],[137,"impl-Display-for-EmptyOutputError"],[330,"impl-Display-for-EmptyClientConfig"],[331,"impl-Debug-for-EmptyClientConfig"]]}],\
["fedimint_empty_server",{"doc":"","t":"FFNNNNNNNNNNONNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFFFPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Empty","EmptyInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow_mut","borrow_mut","cfg","clone","clone_into","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","from","from","from_ref","get_client_config","get_client_config","get_database_migrations","get_database_migrations","init","init","into","into","into_request","into_request","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_into","try_into","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","EmptyExampleKey","EmptyExampleKeyPrefix","Example","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","hash","idx","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_empty_server"],[68,"fedimint_empty_server::db"],[160,"fedimint_core::module"],[161,"alloc::vec"],[162,"fedimint_core::core::server"],[163,"core::any"],[164,"fedimint_core::module"],[165,"fedimint_core::module::audit"],[166,"core::future::future"],[167,"alloc::boxed"],[168,"core::pin"],[169,"fedimint_core::core"],[170,"fedimint_core::db"],[171,"alloc::string"],[172,"core::iter::traits::iterator"],[173,"core::fmt"],[174,"core::fmt"],[175,"anyhow"],[176,"fedimint_core::config"],[177,"alloc::collections::btree::map"],[178,"fedimint_core::db"],[179,"fedimint_core::config"],[180,"fedimint_core"],[181,"fedimint_core::core"],[182,"fedimint_core::core"],[183,"fedimint_core::module"],[184,"fedimint_core::encoding"],[185,"std::io"],[186,"std::io::error"],[187,"std::io"],[188,"erased_serde::ser"],[189,"fedimint_core::module::registry"],[190,"core::hash"],[191,"serde::ser"]],"d":["Empty module","Generates the module","","","","","Queries the database and returns all assets and …","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","Generates configs for all peers in an untrusted manner","","Dumps all database items for debugging","","","Returns the argument unchanged.","Returns the argument unchanged.","","Converts the consensus config into the client config","","","DB migrations to move from old to newer versions","Initialize the module","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create new module instance","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","Generates configs for all peers in a trusted manner for …","","","","","","","","","","Returns the version of this module","","","Namespaces DB keys for this module","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,14,1,1,14,1,14,1,1,14,14,1,1,14,0,14,1,14,14,14,14,14,1,14,1,14,14,14,14,14,14,14,14,1,14,1,14,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,1,14,1,14,1,14,14,14,14,14,1,0,0,0,0,56,57,56,57,58,62,56,57,58,62,56,57,58,56,57,58,58,62,58,62,58,62,58,58,58,58,58,58,58,56,56,57,58,62,56,57,58,62,58,58,62,56,57,58,57,58,57,56,57,58,62,57,56,57,58,62,56,57,57,57,57,57,58,57,58,58,62,62,56,57,58,56,56,57,58,62,56,57,58,62,56,57,58,62,56,57,58,62],"f":"``{b{{f{{d{b}}}}}}{c{{f{{d{h}}}}}{}}{cj{}}{cl{}}{{cnA`Ab}{{Ah{{Af{Ad}}}}}{}}{{bnA`Aj}{{Ah{{Af{Ad}}}}}}{ce{}{}}000`{AlAl}{{ce}An{}{}}{{bn}{{Ah{{Af{Ad}}}}}}{{cnAb}{{Ah{{Af{Ad}}}}}{}}{cB`{}}`{cBb{}}0{{cBdBf}{{Ah{{Af{Ad}}}}}{}}{{AlBdBf}{{Ah{{Af{Ad}}}}}}{{cn{f{Bh}}}{{Ah{{Af{Ad}}}}}{}}{{Aln{f{Bh}}}{{Af{Bj}}}}{{AlBl}Bn}{{bBl}Bn}{cc{}}00{{AlC`}{{Cd{Cb}}}}{{cAbC`}{{Cj{CfCh}}}{}}{c{{D`{B`{Cn{n}{{Cl{{Ah{{Af{Ad}}}}}}}}}}}{}}{Al{{D`{B`Db}}}}{{Al{Dd{Al}}}{{Ah{{Af{Ad}}}}}}{{cDfDhDjDlDn}{{Ah{{Af{Ad}}}}}{}}{ce{}{}}0{c{{E`{e}}}{}{}}0{cEb{}}{Edb}{{bnEf}{{Ah{{Af{Ad}}}}}}{{cnEfAb}{{Ah{{Af{Ad}}}}}{}}{{cnEhDn}{{Ah{{Af{Ad}}}}}{}}{{bnEjDn}{{Ah{{Af{Ad}}}}}}{{cnElAb}{{Ah{{Af{Ad}}}}}{}}{{bnEn}{{Ah{{Af{Ad}}}}}}{{cnF`EfAb}{{Ah{{Af{Ad}}}}}{}}{{bnFbEf}{{Ah{{Af{Ad}}}}}}{AlFd}{cFd{}}{cFf{}}>{{c{Fh{Dn}}Bf}{{D`{DnDh}}}{}}{{Al{Fh{Dn}}Bf}{{D`{DnDh}}}}{c{{Cj{e}}}{}{}}000{cFj{}}0{{cDnDh}{{Cj{AnCh}}}{}}{{AlDnDh}{{Cd{An}}}}{{cBf}{{Cj{AnCh}}}{}}{{AlFl}{{Fh{Fn}}}}{ce{}{}}0``````00000000{G`G`}{GbGb}{GdGd}{{ce}An{}{}}00{{cGf}{{Cj{GdGh}}}Gj}{{cGf}{{Cj{GlGh}}}Gj}{{Gdc}{{Cj{GnH`}}}Hb}{{Glc}{{Cj{GnH`}}}Hb}{{cHb}{{Cj{GnH`}}}{}}0{{cHd}{{Cj{AnHf}}}{}}{{GdGd}Hh}{{ce}Hh{}{}}000{{cHd}{{Cj{AnHj}}}{}}{{G`Bl}Bn}0{{GbBl}Bn}{{GdBl}Bn}{{GlBl}Bn}{cc{}}000{{{Fh{Hl}}{I`{BbHn}}}{{Cj{cIb}}}{}}00111{{GbGn}{{Id{G`}}}}{{Gdc}AnIf}`{ce{}{}}0000{c{{E`{e}}}{}{}}000{{}Gb}{GbGn}`{Gb{{Id{c}}}{}}0{{GbGn}{{Id{c}}}{}}{{Gdc}CjIh}{Gb{{Ij{Gn{Id{Gn}}}}}}{c{{f{Hl}}}{}}000888{cBh{}}{c{{Cj{e}}}{}{}}0000000{cFj{}}000;;;;","c":[],"p":[[5,"Empty",0],[5,"ApiEndpoint",160],[5,"Vec",161],[5,"DynServerModule",162],[10,"Any",163],[10,"IDynCommonModuleInit",160],[5,"DatabaseTransaction",164],[5,"Audit",165],[1,"u16"],[10,"Future",166],[5,"Box",167],[5,"Pin",168],[8,"ModuleInstanceId",169],[5,"EmptyInit",0],[1,"unit"],[5,"DatabaseVersion",164],[5,"Decoder",169],[5,"PeerHandle",160],[5,"ConfigGenModuleParams",170],[5,"String",171],[10,"Iterator",172],[5,"Formatter",173],[8,"Result",173],[5,"ServerModuleConsensusConfig",170],[5,"EmptyClientConfig",174],[8,"Result",175],[5,"ClientModuleConfig",170],[5,"Error",175],[6,"Result",176],[17,"Output"],[1,"fn"],[5,"BTreeMap",177],[8,"ServerMigrationFn",164],[5,"ServerModuleInitArgs",160],[5,"NumPeers",178],[5,"ServerModuleConfig",170],[5,"Database",164],[5,"TaskGroup",179],[5,"PeerId",178],[5,"Request",180],[5,"ModuleKind",169],[5,"EmptyConfig",174],[5,"OutPoint",178],[5,"DynModuleConsensusItem",169],[5,"EmptyConsensusItem",181],[5,"DynInput",169],[5,"EmptyInput",181],[5,"DynOutput",169],[5,"EmptyOutput",181],[5,"SupportedModuleApiVersions",182],[5,"DynCommonModuleInit",160],[1,"slice"],[5,"TypeId",163],[5,"CoreConsensusVersion",182],[5,"ModuleConsensusVersion",182],[6,"DbKeyPrefix",68],[5,"DbKeyPrefixIter",68],[5,"EmptyExampleKey",68],[8,"ModuleDecoderRegistry",183],[5,"DecodeError",184],[10,"Read",185],[5,"EmptyExampleKeyPrefix",68],[1,"usize"],[5,"Error",186],[10,"Write",185],[10,"Serializer",187],[6,"ErrorImpl",187],[1,"bool"],[5,"Error",188],[1,"u8"],[6,"DecodingMode",183],[5,"ModuleRegistry",183],[6,"DecodingError",164],[6,"Option",189],[10,"Hasher",190],[10,"Serializer",191],[1,"tuple"]],"b":[[101,"impl-Display-for-DbKeyPrefix"],[102,"impl-Debug-for-DbKeyPrefix"]]}],\
["fedimint_ln_client",{"doc":"","t":"PPPPPPPPPSPPPPPPPPGPGFFGFFGPGGSFPGGPPPPPGPPPPPPPPPPPCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNHNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHONONNNONNNONNCNNOONCNONNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOKMMMMHMMMMMMMMMMMPFFGFPFFPFPFFONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOONNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPFPPPPPFFGGFPPPFPFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOPPPPSPGPFFFFFFGPFGPSPPPPNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOOOONOONNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOPPPPPFGFFGFFSPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOOOOONNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNN","n":["AwaitingChange","AwaitingFunds","Canceled","Canceled","Canceled","Claim","Claimed","Created","Created","DEFAULT_INVOICE_EXPIRY_TIME","External","Failed","Funded","Funded","Funding","FundingFailed","Internal","InternalPay","InternalPayState","Lightning","LightningChildKeys","LightningClientInit","LightningClientModule","LightningClientStateMachines","LightningOperationMeta","LightningOperationMetaPay","LightningOperationMetaVariant","LightningPay","LnPayState","LnReceiveState","OUTGOING_LN_CONTRACT_TIMELOCK","OutgoingLightningPayment","Pay","PayError","PayType","Personal","Preimage","PreimageAuthentication","Receive","Receive","ReceivingKey","RedeemKey","RefundError","RefundSuccess","Refundable","Refunded","Refunded","Success","UnexpectedError","UnexpectedError","WaitingForPayment","WaitingForRefund","api","as_any","as_any","as_common","await_claim_acceptance","await_lightning_payment_success","await_primary_module_output","await_receive_success","await_refund","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","change","claim_funded_incoming_contract","client_ctx","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","contract_id","contract_id","create_bolt11_invoice","create_bolt11_invoice_for_user","create_bolt11_invoice_for_user_tweaked","create_bolt11_invoice_internal","create_exact_output","create_incoming_contract_output","create_incoming_output","create_lightning_receive_output","create_outgoing_output","create_sufficient_input","database_version","db","decoder","decoder","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_meta","fee","fee","fetch_and_validate_offer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","get_balance","get_database_migrations","get_database_migrations","get_ln_pay_details_for","get_payment_operation_id","get_preimage_authentication","get_prev_payment_result","handle_cli_command","hash","hash","incoming","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice_has_internal_payment_markers","invoice_routes_back_to_federation","is_internal_payment","list_gateways","module_api","module_kind","module_kind","new","notifier","operation_id","operation_id","operation_id","out_point","output_amount","output_amount","pay","pay_bolt11_invoice","payment_type","payment_type","preimage_auth","public_key","receive","recover","redeem_key","scan_receive_for_user","scan_receive_for_user_tweaked","secp","select_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_payment_result","subscribe_balance_changes","subscribe_internal_pay","subscribe_ln_claim","subscribe_ln_pay","subscribe_ln_receive","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_user_key","tweak_user_secret_key","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_gateway_cache","update_gateway_cache_continuously","update_gateway_cache_merge","variant","verify_gateway_availability","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error_message","out_points","gateway_id","invoice","out_point","out_points","block_height","error_message","gateway_error","gateway_error","preimage","invoice","reason","timeout","LnFederationApi","fetch_consensus_block_count","fetch_contract","fetch_gateways","fetch_offer","filter_duplicate_gateways","get_decrypted_preimage_status","get_incoming_contract","get_outgoing_contract","get_remove_gateway_challenge","offer_exists","register_gateway","remove_gateway","wait_block_height","wait_contract","wait_outgoing_contract_cancelled","wait_preimage_decrypted","ActiveGateway","ActiveGatewayKey","ActiveGatewayKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","MetaOverridesDeprecated","PaymentResult","PaymentResult","PaymentResultKey","PaymentResultPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","completed_payment","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","get","get_v1_migrated_state","get_v2_migrated_state","idx","index","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","payment_hash","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AmountError","AwaitingPreimageDecryption","DecryptingPreimage","DecryptingPreimageState","FailedToFundContract","Failure","FetchContractError","FundingFailed","FundingOffer","FundingOfferState","IncomingSmCommon","IncomingSmError","IncomingSmStates","IncomingStateMachine","InvalidOffer","InvalidPreimage","Preimage","PreimageState","RefundSubmitted","RefundSuccessState","TimeoutFetchingOffer","ViolatedFeePolicy","as_any","await_funding_success","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","deserialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","payment_hash","preimage","refund_incoming_contract","refund_txid","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_funding_success","transition_incoming_contract_funded","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txid","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract","error_message","error_message","invoice","offer_amount","offer_hash","payment_amount","payment_hash","payment_hash","payment_hash","error","error","out_points","Canceled","CreatedOutgoingLnContract","Failure","Funded","GATEWAY_API_TIMEOUT","GatewayInternalError","GatewayPayError","Invoice","LightningPayCommon","LightningPayCreatedOutgoingLnContract","LightningPayFunded","LightningPayRefund","LightningPayRefundable","LightningPayStateMachine","LightningPayStates","OutgoingContractError","PayInvoicePayload","PaymentData","PrunedInvoice","RETRY_DELAY","Refund","Refundable","Refunded","Success","amount","as_any","await_contract_cancellable","await_contract_timeout","await_outgoing_contract_funded","await_refund_success","block_timelock","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","contract_id","contract_id","deserialize","deserialize","deserialize","destination","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","error","expiry_timestamp","federation_id","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","funding_txid","gateway","gateway","gateway_fee","gateway_pay_invoice","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","is_expired","new","new_pruned","operation_id","operation_id","operation_id","out_points","payload","payment_data","payment_hash","preimage_auth","preimage_auth","route_hints","serialize","serialize","serialize","state","timelock","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_outgoing_contract_execution","transition_outgoing_contract_funded","transition_refund_success","transitions","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_gateway_pay_invoice","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error_code","error_message","Canceled","ClaimRejected","ConfirmedInvoice","Funded","InvalidPreimage","LightningReceiveConfirmedInvoice","LightningReceiveError","LightningReceiveFunded","LightningReceiveStateMachine","LightningReceiveStates","LightningReceiveSubmittedOffer","LightningReceiveSubmittedOfferV0","RETRY_DELAY","Rejected","SubmittedOffer","Success","Timeout","as_any","await_claim_success","await_incoming_contract_account","await_invoice_confirmation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_incoming_contract","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_incoming_contract","has_invoice_expired","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","invoice","offer_txid","offer_txid","operation_id","operation_id","operation_id","out_points","payment_keypair","receiving_key","receiving_key","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_claim_success","transition_confirmed_invoice","transition_funded","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_ln_client"],[431,"fedimint_ln_client::InternalPayState"],[436,"fedimint_ln_client::LightningOperationMetaVariant"],[440,"fedimint_ln_client::LnPayState"],[445,"fedimint_ln_client::LnReceiveState"],[448,"fedimint_ln_client::api"],[465,"fedimint_ln_client::db"],[653,"fedimint_ln_client::incoming"],[928,"fedimint_ln_client::incoming::IncomingSmError"],[938,"fedimint_ln_client::incoming::IncomingSmStates"],[941,"fedimint_ln_client::pay"],[1282,"fedimint_ln_client::pay::GatewayPayError"],[1284,"fedimint_ln_client::receive"],[1515,"core::any"],[1516,"fedimint_core::module"],[1517,"fedimint_core::core"],[1518,"fedimint_core"],[1519,"alloc::vec"],[1520,"core::result"],[1521,"alloc::string"],[1522,"core::future::future"],[1523,"alloc::boxed"],[1524,"core::pin"],[1525,"secp256k1::key"],[1526,"fedimint_ln_common::contracts"],[1527,"anyhow"],[1528,"serde::ser"],[1529,"core::marker"],[1530,"core::marker"],[1531,"fedimint_core::module::registry"],[1532,"fedimint_core::encoding"],[1533,"std::io"],[1534,"std::io::error"],[1535,"std::io"],[1536,"core::option"],[1537,"fedimint_ln_common"],[1538,"lightning_invoice"],[1539,"fedimint_core::api"],[1540,"bitcoin_hashes::sha256"],[1541,"fedimint_ln_common"],[1542,"fedimint_ln_common::route_hints"],[1543,"bitcoin::network::constants"],[1544,"fedimint_ln_common"],[1545,"rand_core"],[1546,"fedimint_core::db"],[1547,"erased_serde::ser"],[1548,"erased_serde::ser"],[1549,"core::hash"],[1550,"erased_serde::error"],[1551,"fedimint_ln_common::contracts::incoming"],[1552,"core::fmt"],[1553,"core::fmt"],[1554,"alloc::collections::btree::map"],[1555,"std::ffi::os_str"],[1556,"fedimint_client::module::init"],[1557,"fedimint_client::module"],[1558,"fedimint_core::config"],[1559,"fedimint_derive_secret"],[1560,"fedimint_client::sm::notifier"],[1561,"fedimint_core::api"],[1562,"fedimint_core::core"],[1563,"fedimint_ln_common"],[1564,"fedimint_client::module::recovery"],[1565,"core::clone"],[1566,"serde::ser"],[1567,"fedimint_core::module::version"],[1568,"fedimint_client::sm::state"],[1569,"secp256k1::context"],[1570,"secp256k1::context"],[1571,"fedimint_ln_common"],[1572,"fedimint_ln_common::contracts::incoming"]],"d":["","","","","","","","","","","A public key of another user, the lightning payment will …","","","","","","","","The high-level state of an pay operation internal to the …","","","","Client side lightning module","","","","","","The high-level state of a pay operation over lightning, …","The high-level state of a reissue operation started with …","Number of blocks until outgoing lightning contracts times …","","","","","The keypair used to receive payments for ourselves, we …","","","","","Where to receive the payment to, either to ourselves or to …","","","","","","","","","","","","","","","","","","","Returns a bool indicating if it was an external receive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claim the funded, unspent incoming contract by submitting …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Receive over LN with a new invoice","Receive over LN with a new invoice for another user","Receive over LN with a new invoice for another user, …","Receive over LN with a new invoice","","","Create an output that funds an incoming contract within …","","Create an output that incentivizes a Lightning gateway to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Hashes the client’s preimage authentication secret with …","","","","","Incoming State Machine","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns all gateways that are currently in the gateway …","","","","","","","","","","","","","Pays a LN invoice with our available funds using the …","","","","The public key of the receiving key","","","","Scan unspent incoming contracts for a payment hash that …","Scan unspent incoming contracts for a payment hash that …","","Selects a Lightning Gateway from a given <code>gateway_id</code> from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweak a user key with an index, this is used to generate a …","Tweak a secret key with an index, this is used to claim an …","","","","","","","","","","","","","","","Updates the gateway cache by fetching the latest …","Continuously update the gateway cache whenever a gateway …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filter out duplicate gateways. This is necessary because …","","","","Retrieves the map of gateway remove challenges from the …","","","Removes the gateway’s registration record. First checks …","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Migrates <code>SubmittedOfferV0</code> to <code>SubmittedOffer</code> and …","Migrates <code>SubmittedOffer</code> with enum prefix 5 back to …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes a transaction between two users","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that requests the lightning gateway to pay …","","","Data needed to pay an invoice, may be the whole invoice or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the expiry timestamp in seconds since the UNIX …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Metadata on how to obtain the preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that waits on the receipt of a Lightning …","","Old version of LightningReceiveSubmittedOffer, used for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[25,26,25,26,10,29,26,25,26,0,23,10,25,26,24,24,22,31,0,22,0,0,0,0,0,0,0,31,0,0,0,0,29,0,0,23,24,75,29,31,0,75,24,24,10,25,10,25,24,25,26,25,0,3,31,30,3,3,3,3,3,3,22,23,24,25,26,27,28,29,30,75,3,10,31,37,22,23,24,25,26,27,28,29,30,75,3,10,31,37,3,27,3,3,22,23,24,25,26,27,28,29,30,31,31,22,23,24,25,26,27,28,29,30,31,22,23,31,37,22,23,31,37,22,23,31,37,3,3,27,37,3,3,3,3,3,0,3,3,3,3,30,0,30,30,3,22,23,24,25,26,27,28,29,10,22,23,24,25,26,27,28,29,10,37,30,30,22,23,24,25,26,31,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,31,31,31,31,31,31,22,23,24,25,26,27,28,29,10,37,28,27,37,0,22,23,24,25,26,27,28,29,30,75,3,10,10,31,37,22,23,24,25,26,27,28,29,30,75,3,10,31,37,22,23,31,37,22,23,24,25,26,27,28,29,30,31,27,3,30,30,3,3,3,3,3,23,31,0,30,30,3,3,22,23,24,25,26,27,28,29,30,75,3,10,31,37,31,22,23,24,25,26,27,28,29,30,75,3,10,31,37,27,0,0,27,3,3,30,30,3,3,22,31,31,27,3,3,0,3,22,37,3,23,0,30,3,3,3,3,3,22,23,24,25,26,27,28,29,10,37,0,3,3,3,3,3,30,30,3,3,22,23,31,37,30,22,23,24,25,26,27,28,29,30,31,10,31,31,22,23,24,25,26,27,28,29,30,75,3,10,31,37,22,23,24,25,26,27,28,29,30,75,3,10,31,37,0,0,22,23,24,25,26,27,28,29,30,75,3,10,31,37,3,3,3,28,3,22,23,24,25,26,27,28,29,30,75,3,10,31,37,164,165,166,165,164,167,167,167,168,169,170,169,171,172,173,174,173,0,122,122,122,122,0,122,122,122,122,122,122,122,122,122,122,122,124,0,0,0,0,124,0,0,124,0,124,0,0,125,124,125,126,127,128,129,84,130,131,124,125,126,127,128,129,84,130,131,124,125,124,125,84,126,127,128,129,84,130,131,126,127,128,129,84,130,131,126,127,128,129,84,130,131,126,128,129,84,130,126,128,129,84,130,124,124,125,126,127,128,129,84,130,131,124,125,126,127,128,129,84,130,131,126,126,127,128,128,129,84,130,130,131,124,125,125,0,0,125,84,124,125,126,127,128,129,84,130,131,125,124,125,126,127,128,129,84,130,131,124,125,125,125,125,125,128,126,128,129,84,130,125,126,126,127,127,128,128,129,129,84,130,130,131,131,124,125,124,124,125,126,127,128,129,84,130,131,124,125,126,127,128,129,84,130,131,124,125,126,127,128,129,84,130,131,124,125,126,127,128,129,84,130,131,56,0,134,0,56,134,56,134,134,0,0,0,0,0,56,56,134,0,134,0,56,56,136,137,138,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,134,135,136,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,136,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,135,56,56,134,135,136,56,137,138,139,140,141,134,134,134,134,135,135,135,135,136,136,136,136,56,56,56,56,137,137,137,137,138,138,138,138,139,139,139,139,140,140,140,140,141,141,141,141,136,136,56,134,135,136,56,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,136,136,135,135,140,138,141,56,136,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,56,137,138,136,136,137,138,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,137,138,139,134,135,136,56,137,138,139,140,141,134,135,136,56,137,138,139,140,141,175,176,177,178,179,180,179,180,181,176,182,183,182,148,148,148,148,0,147,0,144,0,0,0,0,0,0,0,147,0,0,144,0,148,148,148,148,144,150,153,153,151,154,153,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,148,149,150,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,150,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,149,151,153,155,147,155,144,144,147,155,144,148,149,150,151,152,147,153,154,155,144,148,148,148,148,149,149,149,149,150,150,150,150,151,151,151,151,152,152,152,152,147,147,147,147,153,153,153,153,154,154,154,154,155,155,155,155,144,144,144,144,150,150,147,155,144,153,144,149,155,148,149,150,151,152,147,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,151,151,152,149,152,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,149,144,155,155,150,150,149,154,152,155,144,149,155,144,147,155,144,150,152,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,147,152,151,154,150,150,151,152,153,154,148,149,150,151,152,147,153,154,155,144,152,148,149,150,151,152,147,153,154,155,144,153,154,148,149,150,151,152,147,153,154,155,144,148,149,150,151,152,147,153,154,155,144,184,184,156,7,156,156,7,0,0,0,0,0,0,0,0,7,156,156,7,157,161,160,159,156,157,158,159,7,160,161,156,157,158,159,7,160,161,160,156,157,157,158,159,7,160,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161,7,7,156,157,158,159,7,160,161,156,156,156,156,157,157,157,157,158,158,158,158,159,159,159,159,7,7,7,7,160,160,160,160,161,161,161,161,157,157,7,156,157,158,159,7,7,160,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161,0,0,156,157,158,159,7,160,161,156,157,158,159,7,160,161,157,156,157,158,159,7,160,161,158,159,160,158,159,157,157,157,161,158,159,160,7,157,156,157,158,159,7,160,161,156,157,158,159,7,160,161,7,161,159,160,157,157,159,160,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161,161,156,157,158,159,7,160,161,156,157,158,159,7,160,161],"f":"`````````````````````````````````````````````````````{cb{}}0{cd{}}{{fh}{{A`{{l{j}}n}}}}{{fh}{{A`{AbAd}}}}{{chj}{{Aj{{Ah{Af}}}}}{}}{{fh}{{A`{Aln}}}}{{fh}{{A`{{l{j}}Ad}}}}{{cAn}{{Aj{{Ah{Af}}}}}{}}{ce{}{}}000000000000000000000000000``{{fB`Bbc}{{Bd{h}}}{BfBhBj}}`{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{{cAn}D`{}}{{ce}Db{}{}}000000000{{cDd}{{A`{BlDf}}}Dh}{{cDd}{{A`{BnDf}}}Dh}{{cDd}{{A`{CnDf}}}Dh}{{cDd}{{A`{DjDf}}}Dh}{{Blc}{{A`{DlDn}}}E`}{{Bnc}{{A`{DlDn}}}E`}{{Cnc}{{A`{DlDn}}}E`}{{Djc}{{A`{DlDn}}}E`}{{cE`}{{A`{DlDn}}}{}}000{fc{}}{{cAn}Eb{}}``{{fEdEf{Ej{Eh}}c{Ej{El}}}{{Bd{{Fd{hEn{Fb{F`}}}}}}}{BfBhBj}}{{fEdEf{Ej{Eh}}Ffc{Ej{El}}}{{Bd{{Fd{hEn{Fb{F`}}}}}}}{BfBhBj}}{{fEdEf{Ej{Eh}}FfEhc{Ej{El}}}{{Bd{{Fd{hEn{Fb{F`}}}}}}}{BfBhBj}}{{fEdEf{Ej{Eh}}Bnc{Ej{El}}}{{Bd{{Fd{hEn{Fb{F`}}}}}}}{BfBhBj}}{{cAnFhhEd}{{Aj{{Ah{Af}}}}}{}}{{FjFlEdB`}{{A`{{Fd{FnBb}}G`}}}}{{fhEn}{{Bd{{Fd{{Gb{FnCn}}Bb}}}}}}{{fEdEfBnc{Ej{Eh}}FfEh{l{Gd}}Gf}{{Bd{{Fd{hEn{Gb{GhCn}}{Fb{F`}}}}}}}{GjGl}}{{fhEnElGnc}{{Bd{{Fd{{Gb{FnCn}}Bb}}}}}{GjGl}}4{cH`{}}`{cHb{}}00{c{{A`{Bl}}}Hd}{c{{A`{Bn}}}Hd}{c{{A`{C`}}}Hd}{c{{A`{Cb}}}Hd}{c{{A`{Cd}}}Hd}{c{{A`{Cf}}}Hd}{c{{A`{Ch}}}Hd}{c{{A`{Cj}}}Hd}{c{{A`{Ad}}}Hd}{{cHf}{{A`{DbHh}}}{}}000000000{{ClFh{l{Ab}}}{{Ah{Hj}}}}{{cFh{l{Ab}}}{{Aj{{Ah{Af}}}}}{}}{{BlBl}Al}{{BnBn}Al}{{C`C`}Al}{{CbCb}Al}{{CdCd}Al}{{CnCn}Al}{{ce}Al{}{}}00000000000000000000000{{cD`}Al{}}{{cHl}Db{}}{{cHf}{{A`{DbHn}}}{}}000000000```{{FjFlEd}{{Bd{I`G`}}}}{{BlIb}Id}{{BnIb}Id}{{C`Ib}Id}{{CbIb}Id}{{CdIb}Id}{{CfIb}Id}{{ChIb}Id}{{CjIb}Id}{{ClIb}Id}{{IfIb}Id}{{fIb}Id}{{AdIb}Id}0{{CnIb}Id}{{DjIb}Id}{cc{}}0000000000000{{{Ih{F`}}{Il{HbIj}}}{{A`{cIn}}}{}}0001111111111`{{cAnFh}{{Aj{{Ah{Af}}}}}{}}{Cl{{Jb{H`J`}}}}{c{{Jb{H`{Jf{FhAn{l{{Fd{{l{F`}}h}}}}{l{{Fd{{l{F`}}h}}}}{Il{HbIj}}}{{Jd{{Aj{{Ah{Af}}}}}}}}}}}{}}{{fh}{{Bd{Cf}}}}{{fFlAn}h}{{fFl}Fl}{{fFlFh}Jh}{{c{Ih{Jj}}}{{Aj{{Ah{Af}}}}}{}}{{Bnc}DbHl}{{Cnc}DbHl}`{{Cl{Jl{Cl}}}{{Aj{{Ah{Af}}}}}}{{cJnGnDlK`KbAnKdKdKfKhKj{Ej{Kl}}Kn}{{Aj{{Ah{Af}}}}}{}}{{cL`}{{Ej{Lb}}}{}}{f{{Ej{Lb}}}}{ce{}{}}0000000000000{{CnLd}c{}}{c{{Lf{e}}}{}{}}0000000000000`{{En{Fd{FfEh}}}Al}{{En{l{El}}}Al}`{f{{l{Lh}}}}`{cLj{}}0{{{Jl{Cl}}}{{Bd{f}}}}`{Blh}{Cnh}{ch{}}`;{{cLl}{{Ej{Lb}}}{}}`{{f{Ej{El}}Enc}{{Bd{Dj}}}{BfLnM`}}{BlAb}``{BnFf}`{{cJnGnMbK`KbAnKdKdKfKhKj{Ej{Kl}}{Ej{Md}}{Mh{Mf}}}{{Aj{{Ah{Af}}}}}{}}`{{fB`c}{{Bd{h}}}{BfBhBj}}{{fB`{l{Eh}}c}{{l{h}}}{BfBhBjMj}}`{{fFf}{{Ej{El}}}}{{Blc}A`Ml}{{Bnc}A`Ml}{{C`c}A`Ml}{{Cbc}A`Ml}{{Cdc}A`Ml}{{Cfc}A`Ml}{{Chc}A`Ml}{{Cjc}A`Ml}{{Adc}A`Ml}{{Djc}A`Ml}{{FhFlBlBbEd}Db}{c{{Aj{{Ah{Af}}}}}{}}{{fh}{{Bd{{Mn{C`}}}}}}{{fh}{{Bd{{Mn{Cd}}}}}}{{fh}{{Bd{{Mn{Cb}}}}}}1{ClN`}{cN`{}}{cAl{}}0{c{{l{F`}}}{}}000{cNb{}}{ce{}{}}000000000{cAb{}}{{cEbNd}{{l{{Nf{D`}}}}}{}}{{CncNd}{{l{{Nf{Cn}}}}}{}}{c{{A`{e}}}{}{}}000000000000000000000000000{{{Nh{c}}FfEh}Ff{NjNl}}{{{Nh{c}}B`Eh}B`{NjNl}}{cNn{}}0000000000000{f{{Bd{Db}}}}{{fe}O`{{Af{}{{Jd{{l{Lh}}}}}}}{{Ob{{l{Lh}}}{{Jd{c}}}}}}``{{fEl}{{Bd{Db}}}}::::::::::::::``````````````````{Od{{Aj{{Ah{Af}}}}}}{{OdBb}{{Aj{{Ah{Af}}}}}}1{{OdFl}{{Aj{{Ah{Af}}}}}}{{{l{Lh}}}{{l{Lh}}}}222{{OdFf}{{Aj{{Ah{Af}}}}}}2{{OdLh}{{Aj{{Ah{Af}}}}}}{{OdOf}{{Aj{{Ah{Af}}}}}}{{OdEh}{{Aj{{Ah{Af}}}}}}666``````````````{ce{}{}}00000000000000000{OhOh}{OjOj}{{ce}Db{}{}}0`{{cDd}{{A`{OlDf}}}Dh}{{cDd}{{A`{OnDf}}}Dh}{{cDd}{{A`{A`Df}}}Dh}{{cDd}{{A`{AbDf}}}Dh}{{cDd}{{A`{JhDf}}}Dh}{{cDd}{{A`{AdDf}}}Dh}{{cDd}{{A`{AfDf}}}Dh}{{Olc}{{A`{DlDn}}}E`}{{Onc}{{A`{DlDn}}}E`}{{A`c}{{A`{DlDn}}}E`}{{Abc}{{A`{DlDn}}}E`}{{Jhc}{{A`{DlDn}}}E`}{{Adc}{{A`{DlDn}}}E`}{{Afc}{{A`{DlDn}}}E`}{{cE`}{{A`{DlDn}}}{}}000000{{cHf}{{A`{DbHh}}}{}}0000{{cHf}{{A`{DbHn}}}{}}0000{{OhIb}Id}0{{OjIb}Id}{{OlIb}Id}{{OnIb}Id}{{A`Ib}Id}{{AbIb}Id}{{JhIb}Id}{{AdIb}Id}{{AfIb}Id}{cc{}}00000000{{{Ih{F`}}{Il{HbIj}}}{{A`{cIn}}}{}}00000000011{{OjDl}{{Ej{Oh}}}}{{{Ih{F`}}LdDd}{{Bd{{Ej{D`}}}}}}0``{ce{}{}}000000000{c{{Lf{e}}}{}{}}00000000{{}Oj}{OjDl}`{Oj{{Ej{c}}}{}}0{{OjDl}{{Ej{c}}}{}}`{{Olc}A`Ml}{{A`c}A`Ml}{{Abc}A`Ml}{{Jhc}A`Ml}{{Adc}A`Ml}{Oj{{Fd{Dl{Ej{Dl}}}}}}{c{{l{F`}}}{}}000000000000<<{cAb{}}{c{{A`{e}}}{}{}}00000000000000000{cNn{}}00000000?????????``````````````````````{cb{}}{{NdjAh}{{A`{DbG`}}}}{{NdBb}{{A`{AjG`}}}}{ce{}{}}00000000000000000{AlAl}{AnAn}{{cAn}D`{}}{AA`AA`}{G`G`}{AAbAAb}{AAdAAd}{AAfAAf}{AAhAAh}{AAjAAj}{{ce}Db{}{}}00000000`{{cDd}{{A`{AlDf}}}Dh}{{cDd}{{A`{AnDf}}}Dh}{{cDd}{{A`{AA`Df}}}Dh}{{cDd}{{A`{G`Df}}}Dh}{{cDd}{{A`{AAbDf}}}Dh}{{cDd}{{A`{AAdDf}}}Dh}{{cDd}{{A`{AAfDf}}}Dh}{{cDd}{{A`{AAhDf}}}Dh}{{cDd}{{A`{AAjDf}}}Dh}{{Alc}{{A`{DlDn}}}E`}{{Anc}{{A`{DlDn}}}E`}{{AA`c}{{A`{DlDn}}}E`}{{G`c}{{A`{DlDn}}}E`}{{AAbc}{{A`{DlDn}}}E`}{{AAdc}{{A`{DlDn}}}E`}{{AAfc}{{A`{DlDn}}}E`}{{AAhc}{{A`{DlDn}}}E`}{{AAjc}{{A`{DlDn}}}E`}{{cE`}{{A`{DlDn}}}{}}00000000`{c{{A`{G`}}}Hd}{{cHf}{{A`{DbHh}}}{}}{{AlAl}Al}{{AnAn}Al}{{AA`AA`}Al}{{G`G`}Al}{{AAbAAb}Al}{{AAdAAd}Al}{{AAfAAf}Al}{{AAhAAh}Al}{{AAjAAj}Al}{{ce}Al{}{}}00000000000000000000000000000000000{{cD`}Al{}}{{cHl}Db{}}{{cHf}{{A`{DbHn}}}{}}{{AlIb}Id}{{AnIb}Id}{{AA`Ib}Id}{{G`Ib}Id}0{{AAbIb}Id}{{AAdIb}Id}{{AAfIb}Id}{{AAhIb}Id}{{AAjIb}Id}{cc{}}00000000{{{Ih{F`}}{Il{HbIj}}}{{A`{cIn}}}{}}00000000111111111{{Alc}DbHl}{{Anc}DbHl}{{AA`c}DbHl}{{G`c}DbHl}{{AAbc}DbHl}{{AAdc}DbHl}{ce{}{}}00000000{c{{Lf{e}}}{}{}}00000000{AA`h}{ch{}}```{{AAlNdAhAA`{Ah{AAn}}}AA`}`{{G`c}A`Ml}`{c{{l{F`}}}{}}00000000666666666{cAb{}}{{{A`{DbG`}}AA`}AA`}{{{A`{AjG`}}AA`AAlNdAh}AA`}{{AA`cNd}{{l{{Nf{AA`}}}}}{}}{{cEbNd}{{l{{Nf{D`}}}}}{}}{{AAbNdAh}{{l{{Nf{AA`}}}}}}{{AAdAnNdAh}{{l{{Nf{AA`}}}}}}{c{{A`{e}}}{}{}}00000000000000000```{cNn{}}00000000?????????`````````````````````````````````````{AB`{{Ej{Ed}}}}{cb{}}{{BbNd}Db}{{NdABb}Db}{{HbNdABdBb}{{A`{ABbABf}}}}{{NdABd}{{A`{DbAb}}}}`{ce{}{}}0000000000000000000{ABhABh}{ABjABj}{{cAn}D`{}}{ABlABl}{ABnABn}{AC`AC`}{ABfABf}{ACbACb}{ACdACd}{ACfACf}{AB`AB`}{{ce}Db{}{}}000000000`{{cDd}{{A`{ABhDf}}}Dh}{{cDd}{{A`{ABjDf}}}Dh}{{cDd}{{A`{ABlDf}}}Dh}{{cDd}{{A`{ABnDf}}}Dh}{{cDd}{{A`{AC`Df}}}Dh}{{cDd}{{A`{ABfDf}}}Dh}{{cDd}{{A`{ACbDf}}}Dh}{{cDd}{{A`{ACdDf}}}Dh}{{cDd}{{A`{ACfDf}}}Dh}{{cDd}{{A`{AB`Df}}}Dh}{{ABhc}{{A`{DlDn}}}E`}{{ABjc}{{A`{DlDn}}}E`}{{ABlc}{{A`{DlDn}}}E`}{{ABnc}{{A`{DlDn}}}E`}{{AC`c}{{A`{DlDn}}}E`}{{ABfc}{{A`{DlDn}}}E`}{{ACbc}{{A`{DlDn}}}E`}{{ACdc}{{A`{DlDn}}}E`}{{ACfc}{{A`{DlDn}}}E`}{{AB`c}{{A`{DlDn}}}E`}{{cE`}{{A`{DlDn}}}{}}000000000````{c{{A`{ABf}}}Hd}{c{{A`{ACf}}}Hd}{c{{A`{AB`}}}Hd}{AB`Ff}{{cHf}{{A`{DbHh}}}{}}00{{ABhABh}Al}{{ABjABj}Al}{{ABlABl}Al}{{ABnABn}Al}{{AC`AC`}Al}{{ABfABf}Al}{{ACbACb}Al}{{ACdACd}Al}{{ACfACf}Al}{{AB`AB`}Al}{{ce}Al{}{}}000000000000000000000000000000000000000{{cD`}Al{}}{{cHl}Db{}}{{cHf}{{A`{DbHn}}}{}}00`{AB`Eh}``{{ABhIb}Id}{{ABjIb}Id}{{ABlIb}Id}{{ABnIb}Id}{{AC`Ib}Id}{{ABfIb}Id}0{{ACbIb}Id}{{ACdIb}Id}{{ACfIb}Id}{{AB`Ib}Id}{cc{}}000000000{{{Ih{F`}}{Il{HbIj}}}{{A`{cIn}}}{}}0000000001111111111````{{ElACf}{{A`{AbABf}}}}{{ABhc}DbHl}{{ABjc}DbHl}{{ABlc}DbHl}{{ABnc}DbHl}{{AC`c}DbHl}{{ABfc}DbHl}{{ACbc}DbHl}{{ACdc}DbHl}{{ACfc}DbHl}{{AB`c}DbHl}{ce{}{}}000000000{c{{Lf{e}}}{}{}}000000000`{AB`Al}{ABjACf}0{ABlh}{ch{}}````{AB`Fl}``{AB`{{l{Gd}}}}{{ABfc}A`Ml}{{ACfc}A`Ml}{{AB`c}A`Ml}``{c{{l{F`}}}{}}000000000;;;;;;;;;;{cAb{}}{{{A`{AbABf}}ABlBbABbAAlFlABj}ABl}{{{A`{ABbABf}}ABlEl}ABl}{{{A`{DbAb}}ABl{l{j}}}ABl}{{cEbNd}{{l{{Nf{D`}}}}}{}}{{ABlcNd}{{l{{Nf{ABl}}}}}{}}{{ABnAhNd}{{l{{Nf{ABl}}}}}}{{AC`ABj}{{l{{Nf{ABl}}}}}}{{ACbABjNd}{{l{{Nf{ABl}}}}}}{{ACdNd}{{l{{Nf{ABl}}}}}}{c{{A`{e}}}{}{}}000000000{{ElACf}{{A`{AbABf}}}}1111111111{{ABlABjAAlNd}ABl}`{cNn{}}000000000{ce{}{}}000000000```````````````````{cb{}}{{NdABd}{{A`{DbAb}}}}{{EnNd}{{A`{AAnn}}}}133333333333333{{AAlAAnB`Nd}{{Fd{ABd{l{j}}}}}}{AChACh}{ACjACj}{{cAn}D`{}}{AClACl}{ACnACn}{nn}{AD`AD`}{ADbADb}{{ce}Db{}{}}000000{{cDd}{{A`{AChDf}}}Dh}{{cDd}{{A`{ACjDf}}}Dh}{{cDd}{{A`{AClDf}}}Dh}{{cDd}{{A`{ACnDf}}}Dh}{{cDd}{{A`{nDf}}}Dh}{{cDd}{{A`{AD`Df}}}Dh}{{cDd}{{A`{ADbDf}}}Dh}{{AChc}{{A`{DlDn}}}E`}{{ACjc}{{A`{DlDn}}}E`}{{AClc}{{A`{DlDn}}}E`}{{ACnc}{{A`{DlDn}}}E`}{{nc}{{A`{DlDn}}}E`}{{AD`c}{{A`{DlDn}}}E`}{{ADbc}{{A`{DlDn}}}E`}{{cE`}{{A`{DlDn}}}{}}000000{c{{A`{n}}}Hd}{{cHf}{{A`{DbHh}}}{}}{{AChACh}Al}{{ACjACj}Al}{{AClACl}Al}{{ACnACn}Al}{{nn}Al}{{AD`AD`}Al}{{ADbADb}Al}{{ce}Al{}{}}000000000000000000000000000{{cD`}Al{}}{{cHl}Db{}}{{cHf}{{A`{DbHn}}}{}}{{AChIb}Id}{{ACjIb}Id}{{AClIb}Id}{{ACnIb}Id}{{nIb}Id}0{{AD`Ib}Id}{{ADbIb}Id}{cc{}}000000{{{Ih{F`}}{Il{HbIj}}}{{A`{cIn}}}{}}0000001111111{{FjBb}{{A`{{Ej{AAn}}ADd}}}}{{EnADfADf}Al}{{AChc}DbHl}{{ACjc}DbHl}{{AClc}DbHl}{{ACnc}DbHl}{{nc}DbHl}{{AD`c}DbHl}{{ADbc}DbHl}{ce{}{}}000000{{ACjLd}c{}}{c{{Lf{e}}}{}{}}000000`````{ch{}}{ACjh}`````{{nc}A`Ml}`{c{{l{F`}}}{}}0000006666666{cAb{}}{{{A`{DbAb}}ACj{l{j}}}ACj}{{{A`{DbAb}}ACjEnBn}ACj}{{ACjBn{A`{AAnn}}AAlNd}ACj}{{ACjcNd}{{l{{Nf{ACj}}}}}{}}{{cEbNd}{{l{{Nf{D`}}}}}{}}{{ACnNd}{{l{{Nf{ACj}}}}}}{{AD`Nd}{{l{{Nf{ACj}}}}}}{{ADbNd}{{l{{Nf{ACj}}}}}}{c{{A`{e}}}{}{}}0000000000000`{cNn{}}000000{ce{}{}}000000","c":[],"p":[[10,"Any",1515],[10,"IDynCommonModuleInit",1516],[5,"LightningClientModule",0],[5,"OperationId",1517],[5,"OutPoint",1518],[5,"Vec",1519],[6,"LightningReceiveError",1284],[6,"Result",1520],[5,"String",1521],[6,"PayError",0],[10,"Future",1522],[5,"Box",1523],[5,"Pin",1524],[1,"bool"],[1,"u16"],[5,"KeyPair",1525],[5,"ContractId",1526],[8,"Result",1527],[10,"Serialize",1528],[10,"Send",1529],[10,"Sync",1529],[6,"PayType",0],[6,"ReceivingKey",0],[6,"InternalPayState",0],[6,"LnPayState",0],[6,"LnReceiveState",0],[5,"LightningOperationMetaPay",0],[5,"LightningOperationMeta",0],[6,"LightningOperationMetaVariant",0],[5,"LightningClientInit",0],[6,"LightningClientStateMachines",0],[5,"DynState",1530],[1,"unit"],[8,"ModuleDecoderRegistry",1531],[5,"DecodeError",1532],[10,"Read",1533],[5,"OutgoingLightningPayment",0],[1,"usize"],[5,"Error",1534],[10,"Write",1533],[5,"DynContext",1530],[5,"Amount",1518],[6,"Bolt11InvoiceDescription",1535],[1,"u64"],[6,"Option",1536],[5,"LightningGateway",1537],[5,"Bolt11Invoice",1535],[1,"u8"],[1,"array"],[1,"tuple"],[5,"PublicKey",1525],[5,"DatabaseTransaction",1538],[5,"DynModuleApi",1539],[5,"Hash",1540],[6,"LightningOutputV0",1537],[6,"IncomingSmError",653],[5,"ClientOutput",1541],[5,"RouteHint",1542],[6,"Network",1543],[6,"LightningOutput",1537],[10,"RngCore",1544],[10,"CryptoRng",1544],[5,"FederationId",1545],[5,"DatabaseVersion",1538],[5,"Decoder",1517],[10,"Deserializer",1546],[10,"Serializer",1547],[6,"ErrorImpl",1547],[10,"Iterator",1548],[10,"Hasher",1549],[5,"Error",1550],[5,"IncomingContractOffer",1551],[5,"Formatter",1552],[8,"Result",1552],[6,"LightningChildKeys",0],[1,"slice"],[6,"DecodingMode",1531],[5,"ModuleRegistry",1531],[6,"DecodingError",1538],[8,"ClientMigrationFn",1553],[5,"BTreeMap",1554],[17,"Output"],[1,"fn"],[5,"PaymentResult",465],[5,"OsString",1555],[5,"ClientModuleInitArgs",1556],[5,"FinalClient",1557],[5,"ClientModuleConfig",1545],[5,"Database",1538],[5,"ApiVersion",1558],[5,"DerivableSecret",1559],[5,"Notifier",1560],[5,"DynGlobalApi",1539],[5,"ApiAuth",1516],[5,"TaskGroup",1561],[5,"DynInput",1517],[5,"TransactionItemAmount",1516],[8,"ModuleInstanceId",1517],[5,"Request",1562],[5,"LightningGatewayAnnouncement",1537],[5,"ModuleKind",1517],[5,"DynOutput",1517],[10,"MaybeSend",1561],[10,"MaybeSync",1561],[5,"NumPeers",1518],[5,"DynModuleBackup",1563],[5,"RecoveryProgress",1563],[5,"Sender",1564],[10,"Clone",1565],[10,"Serializer",1528],[6,"UpdateStreamOrOutcome",1566],[5,"MultiApiVersion",1558],[5,"DynCommonModuleInit",1516],[5,"DynGlobalClientContext",1567],[5,"StateTransition",1530],[5,"Secp256k1",1568],[10,"Verification",1569],[10,"Signing",1569],[5,"TypeId",1515],[1,"never"],[10,"Fn",1570],[10,"LnFederationApi",448],[5,"RemoveGatewayRequest",1537],[6,"DbKeyPrefix",465],[5,"DbKeyPrefixIter",465],[5,"ActiveGatewayKey",465],[5,"ActiveGatewayKeyPrefix",465],[5,"PaymentResultKey",465],[5,"PaymentResultPrefix",465],[5,"LightningGatewayKey",465],[5,"LightningGatewayKeyPrefix",465],[5,"LightningClientContext",1537],[5,"Preimage",1526],[6,"IncomingSmStates",653],[5,"IncomingSmCommon",653],[5,"IncomingStateMachine",653],[5,"FundingOfferState",653],[5,"DecryptingPreimageState",653],[5,"AwaitingPreimageDecryption",653],[5,"PreimageState",653],[5,"RefundSuccessState",653],[5,"ClientSMDatabaseTransaction",1571],[5,"IncomingContractAccount",1551],[6,"PaymentData",941],[1,"u32"],[5,"TransactionId",1518],[6,"GatewayPayError",941],[6,"LightningPayStates",941],[5,"LightningPayCommon",941],[5,"LightningPayStateMachine",941],[5,"LightningPayCreatedOutgoingLnContract",941],[5,"LightningPayFunded",941],[5,"LightningPayRefundable",941],[5,"LightningPayRefund",941],[5,"PayInvoicePayload",941],[6,"LightningReceiveStates",1284],[5,"LightningReceiveStateMachine",1284],[5,"LightningReceiveSubmittedOfferV0",1284],[5,"LightningReceiveSubmittedOffer",1284],[5,"LightningReceiveConfirmedInvoice",1284],[5,"LightningReceiveFunded",1284],[5,"FederationError",1539],[5,"Duration",1572],[15,"RefundSuccess",431],[15,"RefundError",431],[15,"FundingFailed",431],[15,"Receive",436],[15,"Claim",436],[15,"WaitingForRefund",440],[15,"UnexpectedError",440],[15,"Refunded",440],[15,"Success",440],[15,"WaitingForPayment",445],[15,"Canceled",445],[15,"InvalidPreimage",928],[15,"FetchContractError",928],[15,"FailedToFundContract",928],[15,"AmountError",928],[15,"ViolatedFeePolicy",928],[15,"InvalidOffer",928],[15,"TimeoutFetchingOffer",928],[15,"RefundSubmitted",938],[15,"FundingFailed",938],[15,"GatewayInternalError",1282]],"b":[[224,"impl-Debug-for-PayError"],[225,"impl-Display-for-PayError"],[533,"impl-Debug-for-DbKeyPrefix"],[534,"impl-Display-for-DbKeyPrefix"],[797,"impl-Debug-for-IncomingSmError"],[798,"impl-Display-for-IncomingSmError"],[1119,"impl-Debug-for-GatewayPayError"],[1120,"impl-Display-for-GatewayPayError"],[1400,"impl-Debug-for-LightningReceiveError"],[1401,"impl-Display-for-LightningReceiveError"]]}],\
["fedimint_ln_common",{"doc":"Lightning Module","t":"PSPPPPFPFPPPPPPPPPPPSFFGFFFGGFFGGGGGPPPPPFFPPPFFFPPPPPOOOONONNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCHNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOEOHNNNOONNNNNNNOOOOCOOCCNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOPFKFFFFFFFFFGPPPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOHNONNNNNNNNNNNNOOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFGGGFGKPPPPPPPPFPPFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFFFONNNNNNNONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNONNNNONNNNNNNNNNNNNNNONNNFFONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNONNOONNNNNNNNNNNNNHHHH","n":["BlockCount","CONSENSUS_VERSION","CancelOutgoing","CancelOutgoingContract","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","DecryptPreimage","Default","Default","Default","Default","DuplicateEncryptedPreimage","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","KIND","LightningClientContext","LightningCommonInit","LightningConsensusItem","LightningGateway","LightningGatewayAnnouncement","LightningGatewayRegistration","LightningInput","LightningInputError","LightningInputV0","LightningModuleTypes","LightningOutput","LightningOutputError","LightningOutputOutcome","LightningOutputOutcomeV0","LightningOutputV0","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","PrunedInvoice","RemoveGatewayRequest","UnknownContract","UnknownContract","UnknownInputVariant","UnknownLightningInputVariantError","UnknownLightningOutputOutcomeVariantError","UnknownLightningOutputVariantError","UnknownOutputVariant","V0","V0","V0","ZeroOutput","amount","amount","amount","amount","anchor","api","as_any","as_any","as_any","as_any","as_any","as_any","bitcoin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","contracts","create_gateway_remove_message","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination","destination_features","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expiry_timestamp","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","gateway_id","gateway_redeem_key","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","info","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_expired","is_permanent","lightning_alias","lightning_invoice","ln_decoder","ln_operation","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","min_final_cltv_delta","mint_channel_id","new_v0","new_v0_cancel_outgoing","new_v0_cancel_outgoing","new_v0_contract","new_v0_contract","new_v0_offer","new_v0_offer","node_pub_key","payment_hash","payment_secret","redeem_key","route_hints","route_hints","route_hints","serde_option_routing_fees","serde_routing_fees","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signatures","source","source","supports_private_payments","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unanchor","valid_until","variant","variant","variant","vetted","vetted","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","bytes","variant","bytes","variant","bytes","variant","bytes","variant","id","id","id","outcome","contract","gateway_signature","Bitcoin","FeeConsensus","FeeToAmount","GatewayFee","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigLocal","LightningConfigPrivate","LightningGenParams","LightningGenParamsConsensus","LightningGenParamsLocal","Network","Regtest","Signet","Testnet","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus","consensus","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_input","contract_output","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_magic","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","magic","network","network","network","parse_routing_fees","partial_cmp","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_amount","to_amount","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Contract","ContractId","ContractOutcome","DecryptedPreimage","DecryptedPreimageStatus","EncryptedPreimage","FundedContract","IdentifiableContract","Incoming","Incoming","Incoming","Invalid","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Pending","Preimage","PreimageDecryptionShare","PreimageKey","Some","Some","all_zeros","as_bits","as_byte_slice","as_hash","as_inner","as_ref","as_slice_of","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_permanent","is_permanent","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","FundedIncomingContract","IncomingContract","IncomingContractAccount","IncomingContractOffer","OfferId","all_zeros","amount","amount","as_bits","as_byte_slice","as_hash","as_inner","as_ref","as_slice_of","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","claim","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","out_point","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancellation_message","cancelled","claim","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","contract_id","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","gateway_key","hash","hash","hash","hash","into","into","into","into_request","into_request","into_request","recovery_key","refund","serialize","serialize","serialize","timelock","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_key","vzip","vzip","vzip","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cltv_expiry_delta","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","htlc_maximum_msat","htlc_minimum_msat","into","into","into_request","into_request","proportional_millionths","serialize","serialize","short_channel_id","src_node_id","to_bytes","to_bytes","to_ldk_route_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize","deserialize","serialize"],"q":[[0,"fedimint_ln_common"],[737,"fedimint_ln_common::LightningConsensusItem"],[739,"fedimint_ln_common::LightningInput"],[741,"fedimint_ln_common::LightningOutput"],[743,"fedimint_ln_common::LightningOutputOutcome"],[745,"fedimint_ln_common::LightningOutputOutcomeV0"],[749,"fedimint_ln_common::LightningOutputV0"],[751,"fedimint_ln_common::config"],[1051,"fedimint_ln_common::contracts"],[1438,"fedimint_ln_common::contracts::incoming"],[1636,"fedimint_ln_common::contracts::outgoing"],[1740,"fedimint_ln_common::route_hints"],[1810,"fedimint_ln_common::serde_option_routing_fees"],[1812,"fedimint_ln_common::serde_routing_fees"],[1814,"core::any"],[1815,"fedimint_core::core"],[1816,"fedimint_core::core"],[1817,"fedimint_core::encoding"],[1818,"core::result"],[1819,"std::io"],[1820,"std::io::error"],[1821,"std::io"],[1822,"fedimint_core"],[1823,"bitcoin_hashes::sha256"],[1824,"secp256k1"],[1825,"fedimint_core::core"],[1826,"erased_serde::ser"],[1827,"erased_serde::ser"],[1828,"core::fmt"],[1829,"core::fmt"],[1830,"core::hash"],[1831,"fedimint_core::core"],[1832,"fedimint_client"],[1833,"fedimint_core::core"],[1834,"anyhow"],[1835,"core::option"],[1836,"fedimint_core"],[1837,"serde::ser"],[1838,"core::error"],[1839,"alloc::vec"],[1840,"alloc::string"],[1841,"lightning_invoice"],[1842,"core::any"],[1843,"core::fmt"],[1844,"fedimint_core::envs"],[1845,"serde_json::value"],[1846,"fedimint_core::module::version"],[1847,"bitvec::slice"],[1848,"bitvec::order"],[1849,"byte_slice_cast"],[1850,"byte_slice_cast"],[1851,"core::iter::traits::collect"],[1852,"bitcoin_hashes::hex"],[1853,"core::iter::traits::iterator"],[1854,"core::iter::traits::exact_size"],[1855,"core::iter::traits::double_ended"],[1856,"bitcoin_hashes::error"],[1857,"core::slice::index"],[1858,"fedimint_core"],[1859,"secp256k1"],[1860,"bech32"],[1861,"lightning::routing::router"]],"d":["","","Allow early refund of outgoing contract","","Fund contract","","","","","","","","","","","","","","","","","","","","Information a gateway registers with a federation","Information about a gateway that is shared with other …","Information about a gateway that is stored locally and …","","","","","","","","","Represents an output of the Lightning module.","","","","Create incoming contract offer","","Data needed to pay an invoice","Request sent to the federation that requests the removal …","","","","","","","","","","","","While for now we only support spending the entire contract …","","","","Create a registration from this announcement that is …","URL to the gateway’s versioned public API (e.g. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a message to be signed by the Gateway’s private …","","","","","","","","","","","","","","","","","","","","Wire-format encoding of feature bit vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time at which the invoice expires in seconds since unix …","Gateway configured routing fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key used to pay the gateway","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channel identifier assigned to the mint by the gateway. …","","","","","","","","","","","","Hack to get a route hint that implements <code>serde</code> traits.","Route hints to reach the LN node of the gateway.","","","","","","","","","","","","","","","","","","","","","","","","Indicates if the gateway supports private payments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limits the validity of the announcement to allow updates, …","","","","","","","","","","","","","","","","","","","","","","","Create an announcement from this registration that is …","Limits the validity of the announcement to allow updates, …","","","","Indicates if this announcement has been vetted by the …","Indicates if this announcement has been vetted by the …","","","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","","","","","","","","","","","","","Contract to update","Signature of gateway","Classic Bitcoin","","Trait for converting a fee type to specific <code>Amount</code>, …","Gateway routing fees","","","","","","","","","The cryptocurrency to act on","Bitcoin’s regtest","Bitcoin’s signet","Bitcoin’s testnet","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for LN transactions","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Creates a <code>Network</code> from the magic bytes.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Return the network magic bytes, which should be encoded …","","","","","","","","","","","","","","","","","","The number of decryption shares required","","The threshold public keys for encrypting the LN preimage","Our secret key for decrypting preimages","Calculates fee <code>Amount</code> given a payment <code>Amount</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Current status of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","","The decrypted preimage was valid","The decrypted preimage was valid","","","","Converts this type into the inner hash typeeturns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","","Create a Schnorr public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","Key that can unlock contract in case the decrypted …","","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","","","","","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Public key of the LN gateway allowed to claim the HTLC …","","","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Block height at which the money will be spendable by the …","","","","","","","","","","","","","","","","Public key of the user that can claim the money back after …","","","","A list of hops along a payment path terminating with a …","","Flat routing fee in millisatoshis","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","The maximum value in msat available for routing with a …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Liquidity-based routing fee in millionths of a routed …","","","The <code>short_channel_id</code> of this channel","The <code>node_id</code> of the non-target end of the route","","","","","","","","","","","","","","","","",""],"i":[21,0,12,18,12,18,0,24,0,21,6,10,16,21,25,24,25,25,25,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,25,12,18,0,0,24,25,24,0,0,0,25,6,10,16,25,8,13,14,27,1,19,6,10,16,21,24,25,0,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,6,6,7,8,10,10,11,12,13,14,16,16,17,18,2,1,19,21,21,22,24,24,25,25,27,28,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,22,24,25,27,28,0,2,6,7,8,10,11,12,13,14,16,17,18,19,21,24,25,27,6,7,8,10,11,12,13,14,16,17,18,2,19,21,24,25,27,6,7,8,10,11,12,13,14,16,17,18,2,19,21,24,25,27,13,14,8,0,0,50,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,27,28,27,27,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,27,28,6,10,16,21,24,25,6,10,16,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,24,25,27,6,6,6,6,7,7,7,7,8,8,8,8,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,16,16,16,16,17,17,17,17,18,18,18,18,2,2,2,2,1,1,1,1,19,19,19,19,21,21,21,21,24,24,24,24,25,25,25,25,27,27,27,27,6,10,16,21,24,25,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,27,28,27,19,6,6,7,7,8,8,10,10,11,11,12,12,13,14,16,16,17,17,18,18,2,1,19,21,21,50,22,24,24,25,25,27,28,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,24,25,25,27,28,6,7,8,10,11,12,13,14,16,17,18,2,19,21,24,25,27,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,22,24,25,27,28,19,28,19,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,24,25,27,2,1,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,6,10,16,21,24,25,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,2,18,19,0,22,0,6,10,16,27,19,6,10,16,10,16,10,16,19,27,27,22,0,19,27,0,0,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,27,28,28,24,25,19,6,7,8,10,11,12,13,14,16,17,18,2,19,21,24,25,27,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,22,24,25,27,28,6,7,8,10,11,12,16,17,18,21,24,25,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,27,28,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,1,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,2,2,7,11,17,2,1,139,6,7,8,10,11,12,13,14,16,17,18,2,1,19,21,50,22,24,25,27,28,8,140,140,141,141,142,142,143,143,144,145,146,144,147,147,88,0,0,0,0,0,0,0,0,0,0,0,0,88,88,88,84,79,81,77,78,79,80,81,82,83,84,86,87,88,77,78,79,80,81,82,83,84,86,87,88,77,78,79,80,81,82,83,84,84,86,87,88,77,78,79,80,81,82,83,84,86,87,88,88,88,77,80,88,81,82,84,86,81,82,84,86,88,81,82,84,86,88,86,86,86,77,78,79,80,81,82,83,84,86,88,77,78,79,80,81,82,83,84,86,88,84,84,86,88,84,84,84,84,86,86,86,86,88,88,88,88,84,77,78,79,80,81,82,83,84,86,88,82,84,77,78,79,80,81,82,83,84,84,86,87,88,88,77,78,79,80,81,82,83,84,86,87,88,88,81,82,84,86,88,88,77,80,77,78,79,80,81,82,83,84,86,87,88,87,88,84,86,88,77,78,79,80,81,82,83,84,86,87,88,84,77,78,79,80,81,82,83,84,86,87,88,82,77,80,88,78,82,84,0,88,80,77,77,78,79,80,81,82,83,84,86,88,82,84,82,83,97,87,81,82,84,86,88,84,77,78,79,80,81,82,83,84,86,87,88,77,80,84,88,77,78,79,80,81,82,83,84,86,87,88,77,78,79,80,81,82,83,84,86,87,88,77,78,79,80,81,82,83,84,86,87,88,82,77,78,79,80,81,82,83,84,86,87,88,0,0,0,0,0,0,0,0,106,107,68,110,111,106,107,68,0,110,111,0,0,0,110,111,64,64,64,64,64,64,64,64,64,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,64,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,114,106,107,64,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,64,64,64,106,107,68,108,66,109,110,111,112,113,64,64,64,64,106,106,106,106,107,107,107,107,68,68,68,68,108,108,108,108,66,66,66,66,109,109,109,109,110,110,110,110,111,111,111,111,112,112,112,112,113,113,113,113,64,106,107,68,108,66,109,110,111,112,113,64,64,64,106,107,68,108,66,109,110,111,112,113,64,64,106,107,68,108,66,109,110,111,112,113,64,64,106,107,68,108,66,109,110,111,112,113,64,64,64,64,106,107,68,108,66,109,110,111,112,113,64,64,64,64,106,107,68,108,66,109,110,111,112,113,0,64,64,106,107,68,108,66,109,110,111,112,113,64,64,106,107,68,108,66,109,110,111,112,113,68,111,112,0,64,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,106,64,106,64,106,107,68,108,66,109,110,111,112,113,109,64,64,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,106,107,68,108,66,109,110,111,112,113,64,0,0,0,0,0,70,69,129,70,70,70,70,70,70,70,69,130,131,70,70,129,69,130,131,70,129,70,129,69,130,131,70,129,69,130,131,70,129,70,70,70,69,130,131,129,69,130,131,70,129,69,130,131,70,129,131,129,130,130,70,69,130,131,70,129,69,130,131,70,129,70,70,69,130,70,69,130,131,70,129,69,69,69,69,130,130,130,130,131,131,131,131,70,70,70,70,129,129,129,129,69,130,131,70,129,69,69,130,131,70,70,70,129,69,130,131,70,70,129,70,69,130,131,70,129,70,70,70,69,130,131,70,129,70,70,70,130,69,130,131,70,129,69,130,69,70,69,130,131,70,129,70,69,130,131,70,129,131,70,69,130,131,70,129,69,130,131,70,129,70,69,130,131,70,129,70,70,69,130,131,70,129,69,130,131,70,129,69,130,131,70,129,69,130,131,70,129,70,0,0,0,0,133,132,134,133,132,134,133,132,132,133,132,134,133,132,134,133,132,134,133,132,134,133,132,134,133,133,134,132,132,134,133,132,134,133,132,134,133,132,132,132,132,134,134,134,134,133,133,133,133,132,134,133,132,134,133,132,134,133,132,134,133,132,134,133,132,132,134,133,132,132,134,133,132,134,133,134,133,132,134,133,132,132,134,133,132,134,133,132,134,133,132,134,133,132,134,133,132,132,134,133,0,0,135,135,136,135,136,135,136,135,136,135,135,136,135,136,135,136,135,136,135,136,135,136,135,135,135,135,136,136,136,136,135,136,135,136,135,135,136,136,135,136,135,136,135,136,135,135,135,136,135,136,135,135,136,135,135,135,136,136,135,136,135,136,135,136,135,136,135,136,0,0,0,0],"f":"``````````````````````````````````````````````````````````{bd}`{cf{}}00000`{ce{}{}}0000000000000000000000000000000000000000000{{ch}j{}}{ll}{nn}{A`A`}{{ch}Ab{}}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{{ch}An{}}{B`B`}{BbBb}{BdBd}{dd}{bb}{BfBf}{{ch}Bh{}}{BjBj}{BlBl}{{ch}Bn{}}{C`C`}{CbCb}{{ch}Cd{}}{CfCf}{ChCh}{{ce}Cj{}{}}0000000000000000000`{{cCl}{{D`{dCn}}}Db}{{cCl}{{D`{lCn}}}Db}{{cCl}{{D`{nCn}}}Db}{{cCl}{{D`{A`Cn}}}Db}{{cCl}{{D`{AdCn}}}Db}{{cCl}{{D`{AfCn}}}Db}{{cCl}{{D`{AhCn}}}Db}{{cCl}{{D`{AjCn}}}Db}{{cCl}{{D`{AlCn}}}Db}{{cCl}{{D`{B`Cn}}}Db}{{cCl}{{D`{BbCn}}}Db}{{cCl}{{D`{BdCn}}}Db}{{cCl}{{D`{BfCn}}}Db}{{cCl}{{D`{BjCn}}}Db}{{cCl}{{D`{C`Cn}}}Db}{{cCl}{{D`{CbCn}}}Db}{{cCl}{{D`{CfCn}}}Db}{{lc}{{D`{DdDf}}}Dh}{{nc}{{D`{DdDf}}}Dh}{{A`c}{{D`{DdDf}}}Dh}{{Adc}{{D`{DdDf}}}Dh}{{Afc}{{D`{DdDf}}}Dh}{{Ahc}{{D`{DdDf}}}Dh}{{Ajc}{{D`{DdDf}}}Dh}{{Alc}{{D`{DdDf}}}Dh}{{B`c}{{D`{DdDf}}}Dh}{{Bbc}{{D`{DdDf}}}Dh}{{Bdc}{{D`{DdDf}}}Dh}{{dc}{{D`{DdDf}}}Dh}{{Bfc}{{D`{DdDf}}}Dh}{{Bjc}{{D`{DdDf}}}Dh}{{C`c}{{D`{DdDf}}}Dh}{{Cbc}{{D`{DdDf}}}Dh}{{Cfc}{{D`{DdDf}}}Dh}{{cDh}{{D`{DdDf}}}{}}0000000000000000````{{DjDlDn}E`}{{}Eb}{c{{D`{l}}}Ed}{c{{D`{n}}}Ed}{c{{D`{A`}}}Ed}{c{{D`{Ad}}}Ed}{c{{D`{Af}}}Ed}{c{{D`{Ah}}}Ed}{c{{D`{Aj}}}Ed}{c{{D`{Al}}}Ed}{c{{D`{B`}}}Ed}{c{{D`{Bb}}}Ed}{c{{D`{Bd}}}Ed}{c{{D`{d}}}Ed}{c{{D`{b}}}Ed}{c{{D`{Bf}}}Ed}{c{{D`{Bj}}}Ed}{c{{D`{Cf}}}Ed}{c{{D`{Ch}}}Ed}``{{cEf}{{D`{CjEh}}}{}}0000000000000000{cEj{}}00000{l{{D`{A`n}}}}{Ad{{D`{AhAf}}}}{B`{{D`{BdBb}}}}{{ll}El}{{nn}El}{{A`A`}El}{{AdAd}El}{{AfAf}El}{{AhAh}El}{{AjAj}El}{{AlAl}El}{{B`B`}El}{{BbBb}El}{{BdBd}El}{{dd}El}{{bb}El}{{BfBf}El}{{BjBj}El}{{C`C`}El}{{CbCb}El}{{CfCf}El}{{ce}El{}{}}00000000000000000000000000000000000000000000000000000000000000000000000{{cj}El{}}{{cAb}El{}}{{cAn}El{}}{{cBh}El{}}{{cBn}El{}}{{cCd}El{}}{{cEf}{{D`{CjEn}}}{}}0000000000000000``{{lF`}Fb}0{{nF`}Fb}0{{A`F`}Fb}0{{AdF`}Fb}0{{AfF`}Fb}0{{AhF`}Fb}0{{AjF`}Fb}{{AlF`}Fb}{{B`F`}Fb}0{{BbF`}Fb}0{{BdF`}Fb}0{{dF`}Fb}{{bF`}Fb}{{BfF`}Fb}{{BjF`}Fb}0{{FdF`}Fb}{{BlF`}Fb}{{C`F`}Fb}0{{CbF`}Fb}0{{CfF`}Fb}{{ChF`}Fb}{cc{}}00000000000000000{nC`}11{AfCb}22{{{Fh{Ff}}{Fl{EbFj}}}{{D`{cFn}}}{}}000000000000000033333333333333333333```{{lc}CjG`}{{nc}CjG`}{{A`c}CjG`}{{Adc}CjG`}{{Afc}CjG`}{{Ahc}CjG`}{{Ajc}CjG`}{{Alc}CjG`}{{B`c}CjG`}{{Bbc}CjG`}{{Bdc}CjG`}{{dc}CjG`}{{bc}CjG`}{{Bfc}CjG`}{{Bjc}CjG`}{{C`c}CjG`}{{Cbc}CjG`}{{Cfc}CjG`}``{ce{}{}}000000000000000000000{{lGb}c{}}{{AdGb}c{}}{{B`Gb}c{}}{{BjGb}c{}}{{C`Gb}c{}}{{CbGb}c{}}{c{{Gd{e}}}{}{}}000000000000000000000{dEl}{BdEl}```{{GfGh}{{Gl{Gj}}}}{l{{Gn{A`}}}}{Ad{{Gn{Ah}}}}{B`{{Gn{Bd}}}}``{{H`Hb{Gn{Hd}}}l}{{H`Hf}Ad}{H`B`}{AjAd}{{H`Hh}B`}{HjAd}{HlB`}`````````{{lc}D`Hn}{{nc}D`Hn}{{A`c}D`Hn}{{Adc}D`Hn}{{Afc}D`Hn}{{Ahc}D`Hn}{{Ajc}D`Hn}{{Alc}D`Hn}{{B`c}D`Hn}{{Bbc}D`Hn}{{Bdc}D`Hn}{{dc}D`Hn}{{bc}D`Hn}{{Bfc}D`Hn}{{Bjc}D`Hn}{{Cfc}D`Hn}{{Chc}D`Hn}`{C`{{Gn{I`}}}}{Cb{{Gn{I`}}}}`{c{{Ib{Ff}}}{}}0000000000000000{ce{}{}}0000000000000000000{cId{}}00000000000{c{{D`{e}}}{}{}}00000000000000000000{If{{D`{Cfc}}}{}}11111111111111111111111`{cIh{}}000000000000000000000{db}``````5555555555555555555555```````````````````````````````{cf{}}``6666666666666666666666{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{{ch}Jj{}}{JlJl}{JnJn}{K`K`}{{ce}Cj{}{}}0000000000{{K`K`}Kb}{{ce}Kb{}{}}``{{c{Fl{EbFj}}}{{D`{K`Cn}}}Db}{{cCl}{{D`{JbCn}}}Db}{{cCl}{{D`{JdCn}}}Db}{{cCl}{{D`{JhCn}}}Db}{{cCl}{{D`{JlCn}}}Db}{{Jbc}{{D`{DdDf}}}Dh}{{Jdc}{{D`{DdDf}}}Dh}{{Jhc}{{D`{DdDf}}}Dh}{{Jlc}{{D`{DdDf}}}Dh}{{K`c}{{D`{DdDf}}}Dh}{{cDh}{{D`{DdDf}}}{}}0000``{{}Jl}{c{{D`{Ij}}}Ed}{c{{D`{Il}}}Ed}{c{{D`{In}}}Ed}{c{{D`{J`}}}Ed}{c{{D`{Jb}}}Ed}{c{{D`{Jd}}}Ed}{c{{D`{Jf}}}Ed}{c{{D`{Jh}}}Ed}{c{{D`{Jl}}}Ed}{c{{D`{K`}}}Ed}{{cEf}{{D`{CjEh}}}{}}000000000{cEj{}}{{JhJh}El}{{JlJl}El}{{K`K`}El}{{ce}El{}{}}00000000000{{cJj}El{}}{{cEf}{{D`{CjEn}}}{}}000000000``{{IjF`}Fb}{{IlF`}Fb}{{InF`}Fb}{{J`F`}Fb}{{JbF`}Fb}{{JdF`}Fb}{{JfF`}Fb}{{JhF`}Fb}0{{JlF`}Fb}{{JnF`}Fb}{{K`F`}{{D`{CjKd}}}}0{cc{}}000000000{KfK`}1{{{Fh{Ff}}{Fl{EbFj}}}{{D`{cFn}}}{}}0000{Kh{{Gn{K`}}}}{{ce}Ij{}{}}{{ceg}J`{}{}{}}55555555555{Kj{{D`{Jnc}}}{}}{Kj{{D`{K`}}}}{{Jhc}CjG`}{{Jlc}CjG`}{{K`c}CjG`}{ce{}{}}0000000000{{JhGb}c{}}{c{{Gd{e}}}{}{}}0000000000{JdKl}``{K`Kh}```{Kj{{Gl{Kn}}}}{{K`K`}{{Gn{Kb}}}}`{L`Ij}{{Ijc}D`Hn}{{Ilc}D`Hn}{{Inc}D`Hn}{{J`c}D`Hn}{{Jbc}D`Hn}{{Jdc}D`Hn}{{Jfc}D`Hn}{{Jhc}D`Hn}{{Jlc}D`Hn}{{K`c}D`Hn}{JdDd}```{{LbHb}Hb}{{JnHb}Hb}{c{{Ib{Ff}}}{}}0000{c{{Gn{Ld}}}{}}{ce{}{}}0000000000{Ij{{Lf{ce}}}{}{}}{J`{{Lf{Klceg}}}{}{}{}}{cId{}}0{c{{D`{e}}}{}{}}000000000000000000000{cIh{}}0000000000{JdLh}66666666666````````````````````````{{}H`}{c{{Lj{eg}}}{}{}Ll}{c{{Fh{Ff}}}{}}{H`Dn}{H`c{}}{H`{{Fh{Ff}}}}{c{{D`{{Fh{e}}Ln}}}{}M`}{cDd{}}2>>>>>>>>>>>>>>>>>>>>>>{c{{D`{{Ib{Mb}}}}}{}}{H`H`}{MdMd}{MfMf}{HhHh}{MhMh}{HdHd}{MjMj}{MlMl}{MnMn}{N`N`}{NbNb}{{ce}Cj{}{}}0000000000{{H`H`}Kb}{{ce}Kb{}{}}{{cCl}{{D`{H`Cn}}}Db}{{cCl}{{D`{MdCn}}}Db}{{cCl}{{D`{MfCn}}}Db}{{cCl}{{D`{HhCn}}}Db}{{cCl}{{D`{MhCn}}}Db}{{cCl}{{D`{HdCn}}}Db}{{cCl}{{D`{MjCn}}}Db}{{cCl}{{D`{MlCn}}}Db}{{cCl}{{D`{MnCn}}}Db}{{cCl}{{D`{N`Cn}}}Db}{{cCl}{{D`{NbCn}}}Db}{{H`c}{{D`{DdDf}}}Dh}{{Mdc}{{D`{DdDf}}}Dh}{{Mfc}{{D`{DdDf}}}Dh}{{Hhc}{{D`{DdDf}}}Dh}{{Mhc}{{D`{DdDf}}}Dh}{{Hdc}{{D`{DdDf}}}Dh}{{Mjc}{{D`{DdDf}}}Dh}{{Mlc}{{D`{DdDf}}}Dh}{{Mnc}{{D`{DdDf}}}Dh}{{N`c}{{D`{DdDf}}}Dh}{{Nbc}{{D`{DdDf}}}Dh}{{cDh}{{D`{DdDf}}}{}}0000000000{NdH`}{MdH`}{MfH`}{H`c{}}{c{{D`{H`}}}Ed}{c{{D`{Md}}}Ed}{c{{D`{Mf}}}Ed}{c{{D`{Hh}}}Ed}{c{{D`{Mh}}}Ed}{c{{D`{Hd}}}Ed}{c{{D`{Mj}}}Ed}{c{{D`{Ml}}}Ed}{c{{D`{Mn}}}Ed}{c{{D`{N`}}}Ed}{c{{D`{Nb}}}Ed}{{cEf}{{D`{CjEh}}}{}}0000000000{ce{}{{Nh{Nf}}}}0{{}c{}}{{H`H`}El}{{MdMd}El}{{MfMf}El}{{HhHh}El}{{MhMh}El}{{HdHd}El}{{MjMj}El}{{MlMl}El}{{MnMn}El}{{N`N`}El}{{NbNb}El}{{ce}El{}{}}0000000000000000000000000000000000000000000{{cEf}{{D`{CjEn}}}{}}0000000000{{H`F`}Fb}00{{MdF`}Fb}{{MfF`}Fb}{{HhF`}Fb}{{MhF`}Fb}{{HdF`}Fb}{{MjF`}Fb}{{MlF`}Fb}{{MnF`}Fb}{{N`F`}Fb}{{NbF`}Fb}{cc{}}{DnH`}1111111111{c{{D`{eNj}}}{{Nn{}{{Nl{{D`{FfNj}}}}}}O`Ob}{}}{{{Fh{Ff}}{Fl{EbFj}}}{{D`{cFn}}}{}}0000000000{cH`{}}3044444444444{{{Fh{Ff}}}{{D`{H`Od}}}}0{Kj{{D`{H`c}}}{}}{{H`c}CjG`}{{Mdc}CjG`}{{Mfc}CjG`}{{Hhc}CjG`}{{Mhc}CjG`}{{Hdc}CjG`}{{Mjc}CjG`}{{Mlc}CjG`}{{Mnc}CjG`}{{N`c}CjG`}{{Nbc}CjG`}`{{H`c}e{{Of{{Fh{Ff}}}}}{}}{ce{}{}}0000000000{H`c{}}{c{{Gd{e}}}{}{}}0000000000{HhEl}{MnEl}{{MjDj}N`}`{{H`H`}{{Gn{Kb}}}}{{H`c}D`Hn}{{Mdc}D`Hn}{{Mfc}D`Hn}{{Hhc}D`Hn}{{Mhc}D`Hn}{{Hdc}D`Hn}{{Mjc}D`Hn}{{Mlc}D`Hn}{{Mnc}D`Hn}{{N`c}D`Hn}{{Nbc}D`Hn}{c{{Ib{Ff}}}{}}0000000000{{MdOh}Mf}{cId{}}{MdHh}{ce{}{}}0000000000{Mj{{D`{OjOl}}}}3{c{{D`{{Lj{eg}}{On{e}}}}}{}{}Ll}{c{{D`{e}}}{}{}}000000000000000000000{cIh{}}000000000044444444444{{ce}{{D`{Cj}}}{}A`}`````{{}Hl}``{c{{Lj{eg}}}{}{}Ll}{c{{Fh{Ff}}}{}}{HlDn}{Hlc{}}{Hl{{Fh{Ff}}}}{c{{D`{{Fh{e}}Ln}}}{}M`}{cDd{}}====2======{c{{D`{{Ib{Mb}}}}}{}}{Abl}{HjHj}{AdAd}{AfAf}{HlHl}{AbAb}{{ce}Cj{}{}}0000{{HlHl}Kb}{{ce}Kb{}{}}{{cCl}{{D`{HlCn}}}Db}{{cCl}{{D`{HjCn}}}Db}{{cCl}{{D`{AdCn}}}Db}{{cCl}{{D`{AfCn}}}Db}{{cCl}{{D`{AbCn}}}Db}{{Hjc}{{D`{DdDf}}}Dh}{{Adc}{{D`{DdDf}}}Dh}{{Afc}{{D`{DdDf}}}Dh}{{Hlc}{{D`{DdDf}}}Dh}{{Abc}{{D`{DdDf}}}Dh}{{cDh}{{D`{DdDf}}}{}}0000``{AdH`}`{Hlc{}}{c{{D`{Hj}}}Ed}{c{{D`{Ad}}}Ed}{c{{D`{Af}}}Ed}{c{{D`{Hl}}}Ed}{c{{D`{Ab}}}Ed}{{cEf}{{D`{CjEh}}}{}}0000{ce{}{{Nh{Nf}}}}0``{{}c{}}{{HjHj}El}{{AdAd}El}{{AfAf}El}{{HlHl}El}{{AbAb}El}{{ce}El{}{}}0000000000000000000{{cEf}{{D`{CjEn}}}{}}0000`{{HjF`}Fb}{{AdF`}Fb}{{AfF`}Fb}{{HlF`}Fb}00{{AbF`}Fb}{cc{}}00{DnHl}11{c{{D`{eNj}}}{{Nn{}{{Nl{{D`{FfNj}}}}}}O`Ob}{}}{{{Fh{Ff}}{Fl{EbFj}}}{{D`{cFn}}}{}}0000{cHl{}}3044444{{{Fh{Ff}}}{{D`{HlOd}}}}0{Kj{{D`{Hlc}}}{}}`{{Hjc}CjG`}{{Adc}CjG`}{{Afc}CjG`}{{Hlc}CjG`}{{Abc}CjG`}``{HjHl}{{Hlc}e{{Of{{Fh{Ff}}}}}{}}{ce{}{}}0000{Hlc{}}{c{{Gd{e}}}{}{}}0000`{{HlHl}{{Gn{Kb}}}}{{Hjc}D`Hn}{{Adc}D`Hn}{{Afc}D`Hn}{{Hlc}D`Hn}{{Abc}D`Hn}{c{{Ib{Ff}}}{}}0000{cId{}}:::::0{c{{D`{{Lj{eg}}{On{e}}}}}{}{}Ll}{c{{D`{e}}}{}{}}000000000{cIh{}}0000====={{ce}{{D`{Cj}}}{}A`}`````>>>>>>{AhDn}`{{AjHd}l}{AhAh}{AlAl}{AjAj}{{ce}Cj{}{}}00{{cCl}{{D`{AhCn}}}Db}{{cCl}{{D`{AlCn}}}Db}{{cCl}{{D`{AjCn}}}Db}{{Ahc}{{D`{DdDf}}}Dh}{{Alc}{{D`{DdDf}}}Dh}{{Ajc}{{D`{DdDf}}}Dh}{{cDh}{{D`{DdDf}}}{}}00``{AhH`}{c{{D`{Ah}}}Ed}{c{{D`{Al}}}Ed}{c{{D`{Aj}}}Ed}{{cEf}{{D`{CjEh}}}{}}00{{AhAh}El}{{AlAl}El}{{AjAj}El}{{ce}El{}{}}00000000000{{cEf}{{D`{CjEn}}}{}}00{{AhF`}Fb}{{AlF`}Fb}{{AjF`}Fb}{cc{}}00{{{Fh{Ff}}{Fl{EbFj}}}{{D`{cFn}}}{}}00111`{{Ahc}CjG`}{{Alc}CjG`}{{Ajc}CjG`}`{ce{}{}}00{c{{Gd{e}}}{}{}}00`{Ajl}{{Ahc}D`Hn}{{Alc}D`Hn}{{Ajc}D`Hn}`{c{{Ib{Ff}}}{}}00666{c{{D`{e}}}{}{}}00000{cIh{}}00`888```8888{AnAn}{AA`AA`}{{ce}Cj{}{}}0`{{cCl}{{D`{AnCn}}}Db}{{cCl}{{D`{AA`Cn}}}Db}{{Anc}{{D`{DdDf}}}Dh}{{AA`c}{{D`{DdDf}}}Dh}{{cDh}{{D`{DdDf}}}{}}0{c{{D`{An}}}Ed}{c{{D`{AA`}}}Ed}{{cEf}{{D`{CjEh}}}{}}0{{AnAn}El}{{AA`AA`}El}{{ce}El{}{}}0000000{{cEf}{{D`{CjEn}}}{}}0{{AnF`}Fb}{{AA`F`}Fb}{cc{}}{AAbAn}{AAdAA`}2{{{Fh{Ff}}{Fl{EbFj}}}{{D`{cFn}}}{}}033{{Anc}CjG`}{{AA`c}CjG`}``{ce{}{}}0{c{{Gd{e}}}{}{}}0`{{Anc}D`Hn}{{AA`c}D`Hn}``{c{{Ib{Ff}}}{}}0{AA`AAd}55{c{{D`{e}}}{}{}}000{cIh{}}077{c{{D`{{Gn{Kn}}}}}Ed}{{{Gn{Kn}}c}D`Hn}{c{{D`{Kn}}}Ed}{{Knc}D`Hn}","c":[],"p":[[5,"LightningGatewayAnnouncement",0],[5,"LightningGatewayRegistration",0],[10,"Any",1814],[1,"u16"],[5,"DynInput",1815],[6,"LightningInput",0],[5,"UnknownLightningInputVariantError",0],[5,"LightningInputV0",0],[5,"DynOutput",1815],[6,"LightningOutput",0],[5,"UnknownLightningOutputVariantError",0],[6,"LightningOutputV0",0],[5,"ContractOutput",0],[5,"ContractAccount",0],[5,"DynOutputOutcome",1815],[6,"LightningOutputOutcome",0],[5,"UnknownLightningOutputOutcomeVariantError",0],[6,"LightningOutputOutcomeV0",0],[5,"LightningGateway",0],[5,"DynModuleConsensusItem",1815],[6,"LightningConsensusItem",0],[5,"LightningClientContext",0],[5,"DynInputError",1815],[6,"LightningInputError",0],[6,"LightningOutputError",0],[5,"DynOutputError",1815],[5,"PrunedInvoice",0],[5,"RemoveGatewayRequest",0],[1,"unit"],[8,"ModuleDecoderRegistry",1816],[5,"DecodeError",1817],[6,"Result",1818],[10,"Read",1819],[1,"usize"],[5,"Error",1820],[10,"Write",1819],[5,"PublicKey",1821],[5,"PeerId",1822],[5,"Hash",1823],[5,"Message",1824],[5,"Decoder",1815],[10,"Deserializer",1825],[10,"Serializer",1826],[6,"ErrorImpl",1826],[1,"u64"],[1,"bool"],[5,"Error",1827],[5,"Formatter",1828],[8,"Result",1828],[5,"LightningCommonInit",0],[1,"u8"],[1,"slice"],[6,"DecodingMode",1816],[5,"ModuleRegistry",1816],[6,"DecodingError",1829],[10,"Hasher",1830],[8,"ModuleInstanceId",1815],[5,"Request",1831],[8,"ClientHandleArc",1832],[5,"OperationId",1815],[5,"OperationLogEntry",1833],[8,"Result",1834],[6,"Option",1835],[5,"ContractId",1051],[5,"Amount",1822],[5,"Preimage",1051],[5,"Signature",1836],[6,"ContractOutcome",1051],[5,"IncomingContractOffer",1438],[5,"OfferId",1438],[10,"Serializer",1837],[10,"Error",1838],[5,"Vec",1839],[5,"String",1840],[5,"Bolt11Invoice",1841],[5,"TypeId",1814],[5,"LightningGenParams",751],[5,"LightningGenParamsConsensus",751],[5,"LightningGenParamsLocal",751],[5,"LightningConfig",751],[5,"LightningConfigLocal",751],[5,"LightningConfigConsensus",751],[5,"LightningConfigPrivate",751],[5,"LightningClientConfig",751],[5,"DynClientConfig",1815],[5,"FeeConsensus",751],[5,"GatewayFee",751],[6,"Network",751],[6,"Ordering",1842],[5,"Error",1828],[6,"Currency",1841],[1,"u32"],[1,"str"],[5,"ModuleKind",1815],[5,"RoutingFees",1843],[5,"BitcoinRpcConfig",1844],[10,"FeeToAmount",751],[6,"Value",1845],[1,"tuple"],[5,"ModuleConsensusVersion",1846],[5,"BitSlice",1847],[10,"BitOrder",1848],[6,"Error",1849],[10,"FromByteSlice",1849],[5,"u5",1850],[6,"Contract",1051],[6,"FundedContract",1051],[5,"OutgoingContractOutcome",1051],[5,"PreimageKey",1051],[6,"DecryptedPreimageStatus",1051],[6,"DecryptedPreimage",1051],[5,"EncryptedPreimage",1051],[5,"PreimageDecryptionShare",1051],[10,"IdentifiableContract",1051],[1,"char"],[10,"FromIterator",1851],[6,"Error",1852],[17,"Item"],[10,"Iterator",1853],[10,"ExactSizeIterator",1854],[10,"DoubleEndedIterator",1855],[6,"Error",1856],[10,"SliceIndex",1857],[5,"OutPoint",1822],[5,"PublicKey",1858],[6,"Error",1824],[6,"BitSpanError",1859],[10,"WriteBase32",1850],[5,"IncomingContractAccount",1438],[5,"IncomingContract",1438],[5,"FundedIncomingContract",1438],[5,"OutgoingContract",1636],[5,"OutgoingContractAccount",1636],[5,"OutgoingContractData",1636],[5,"RouteHintHop",1740],[5,"RouteHint",1740],[5,"RouteHintHop",1860],[5,"RouteHint",1860],[5,"LightningModuleTypes",0],[15,"Default",737],[15,"Default",739],[15,"Default",741],[15,"Default",743],[15,"Contract",745],[15,"Offer",745],[15,"CancelOutgoingContract",745],[15,"CancelOutgoing",749]],"b":[[375,"impl-Debug-for-LightningInput"],[376,"impl-Display-for-LightningInput"],[377,"impl-Display-for-UnknownLightningInputVariantError"],[378,"impl-Debug-for-UnknownLightningInputVariantError"],[379,"impl-Debug-for-LightningInputV0"],[380,"impl-Display-for-LightningInputV0"],[381,"impl-Display-for-LightningOutput"],[382,"impl-Debug-for-LightningOutput"],[383,"impl-Display-for-UnknownLightningOutputVariantError"],[384,"impl-Debug-for-UnknownLightningOutputVariantError"],[385,"impl-Display-for-LightningOutputV0"],[386,"impl-Debug-for-LightningOutputV0"],[389,"impl-Display-for-LightningOutputOutcome"],[390,"impl-Debug-for-LightningOutputOutcome"],[391,"impl-Display-for-UnknownLightningOutputOutcomeVariantError"],[392,"impl-Debug-for-UnknownLightningOutputOutcomeVariantError"],[393,"impl-Debug-for-LightningOutputOutcomeV0"],[394,"impl-Display-for-LightningOutputOutcomeV0"],[398,"impl-Debug-for-LightningConsensusItem"],[399,"impl-Display-for-LightningConsensusItem"],[402,"impl-Debug-for-LightningInputError"],[403,"impl-Display-for-LightningInputError"],[404,"impl-Display-for-LightningOutputError"],[405,"impl-Debug-for-LightningOutputError"],[893,"impl-Debug-for-LightningClientConfig"],[894,"impl-Display-for-LightningClientConfig"],[897,"impl-Display-for-Network"],[898,"impl-Debug-for-Network"],[1259,"impl-LowerHex-for-ContractId"],[1260,"impl-Display-for-ContractId"],[1261,"impl-Debug-for-ContractId"],[1547,"impl-LowerHex-for-OfferId"],[1548,"impl-Display-for-OfferId"],[1549,"impl-Debug-for-OfferId"]]}],\
["fedimint_ln_server",{"doc":"","t":"FFNNNNNNNNNNNOONNENNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNONNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFPFFPFFPFFGFPFFPPGFPFFPFFPPFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Lightning","LightningInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","block_count","borrow","borrow","borrow_mut","borrow_mut","btc_rpc","cfg","clone","clone_into","common","consensus_block_count","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","delete_expired_gateways","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","from","from","from_ref","from_ref","get_client_config","get_client_config","get_contract_account","get_database_migrations","get_decrypted_preimage_status","get_gateway_remove_challenge","get_incoming_contract_account","get_offer","init","init","into","into","into_request","into_request","list_gateways","metrics","module_kind","new","our_peer_id","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","record_funded_contract_metric","register_gateway","remove_gateway","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_into","try_into","type_id","type_id","validate_config","validate_config","validate_decryption_share","validate_params","versions","vzip","vzip","wait_block_height","wait_contract_account","wait_offer","wait_outgoing_contract_account_cancelled","wait_preimage_decrypted","AgreedDecryptionShare","AgreedDecryptionShareContractIdPrefix","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","EncryptedPreimageIndex","EncryptedPreimageIndexKey","EncryptedPreimageIndexKeyPrefix","Incoming","LightningAuditItem","LightningAuditItemKey","LightningAuditItemKeyPrefix","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","Outgoing","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_funded_contract","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","LN_CANCEL_OUTGOING_CONTRACTS","LN_FUNDED_CONTRACT_SATS","LN_INCOMING_OFFER","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","from","from","from","into","into","into","into_request","into_request","into_request","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"fedimint_ln_server"],[90,"fedimint_ln_server::db"],[526,"fedimint_ln_server::metrics"],[562,"fedimint_core::module"],[563,"alloc::vec"],[564,"fedimint_core::core::server"],[565,"core::any"],[566,"fedimint_core::module"],[567,"fedimint_core::module::audit"],[568,"fedimint_core::core"],[569,"core::future::future"],[570,"alloc::boxed"],[571,"core::pin"],[572,"anyhow"],[573,"fedimint_core::db"],[574,"alloc::string"],[575,"core::iter::traits::iterator"],[576,"core::fmt"],[577,"core::fmt"],[578,"fedimint_core::config"],[579,"fedimint_ln_common::contracts"],[580,"fedimint_ln_common"],[581,"core::option"],[582,"alloc::collections::btree::map"],[583,"fedimint_core::module"],[584,"fedimint_ln_common::contracts"],[585,"bitcoin_hashes::sha256"],[586,"fedimint_ln_common::contracts::incoming"],[587,"fedimint_core::config"],[588,"fedimint_core"],[589,"fedimint_ln_common"],[590,"fedimint_core::module"],[591,"fedimint_core::encoding"],[592,"std::io"],[593,"std::io::error"],[594,"std::io"],[595,"erased_serde::ser"],[596,"fedimint_core::module::registry"],[597,"prometheus::counter"],[598,"prometheus::histogram"]],"d":["The lightning module implements an account system. It does …","","","","","","","Queries the database and returns all assets and …","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the challenge to the gateway that must be signed …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","Removes the gateway registration record. First the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","We save the hash of the encrypted preimage from each …","","","","We keep a separate mapping of incoming and outgoing …","","","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,16,1,1,1,16,1,16,1,1,1,16,16,0,1,1,1,16,0,16,1,1,16,16,16,16,16,1,16,1,16,16,16,16,1,16,1,1,1,1,16,16,16,1,16,1,1,0,16,1,1,1,1,1,1,1,1,1,1,0,1,1,16,16,16,16,16,16,16,1,16,1,16,1,16,16,1,16,16,16,1,1,1,1,1,1,72,0,0,0,72,0,0,72,0,0,72,0,0,0,0,72,0,0,77,72,0,0,72,0,0,72,0,0,77,72,0,0,73,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,74,75,76,77,78,72,73,74,75,76,77,78,74,75,82,76,77,83,84,85,86,87,88,89,90,91,92,78,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,74,82,77,84,85,86,88,89,90,92,77,74,82,77,84,85,86,88,89,90,92,72,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,74,74,75,82,82,76,77,77,83,84,84,85,86,86,87,88,88,89,89,90,90,91,92,92,78,77,72,72,73,73,74,74,75,75,76,76,77,77,78,78,73,73,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,73,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,73,73,73,73,74,82,77,84,85,86,88,89,90,92,73,74,74,75,75,82,82,76,76,77,77,83,83,84,84,85,85,86,86,87,87,88,88,96,89,89,97,98,90,90,91,91,92,92,78,78,72,73,74,75,76,77,78,72,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,72,73,74,75,82,76,77,83,84,85,86,87,88,96,89,97,98,90,91,92,78,0,0,0,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111,108,110,111],"f":"``{b{{f{{d{b}}}}}}{c{{f{{d{h}}}}}{}}{cj{}}{cl{}}{{bnA`Ab}{{Ah{{Af{Ad}}}}}}{{cnA`Aj}{{Ah{{Af{Ad}}}}}{}}{b{{An{Al}}}}{ce{}{}}000``{B`B`}{{ce}Bb{}{}}`{{bn}Al}{{cnAj}{{Ah{{Af{Ad}}}}}{}}{{bn}{{Ah{{Af{Ad}}}}}}{cBd{}}`{cBf{}}0{{bn}Bb}{{cBhBj}{{Ah{{Af{Ad}}}}}{}}{{B`BhBj}{{Ah{{Af{Ad}}}}}}{{cn{f{Bl}}}{{Ah{{Af{Ad}}}}}{}}{{B`n{f{Bl}}}{{Af{Bn}}}}{{B`C`}Cb}{{bC`}Cb}{cc{}}000{{B`Cd}{{An{Cf}}}}{{cAjCd}{{Cl{ChCj}}}{}}{{bnCn}{{Db{D`}}}}{c{{Dh{Bd{Df{n}{{Dd{{Ah{{Af{Ad}}}}}}}}}}}{}}{{bDjCn}{{E`{DlDn}}}}{{bEbn}{{Db{Ed}}}}{D`Dl}{{bnEd}{{Db{Ef}}}}{{cEhEjElEnF`}{{Ah{{Af{Ad}}}}}{}}{{B`{Fb{B`}}}{{Ah{{Af{Ad}}}}}}{ce{}{}}0{c{{Fd{e}}}{}{}}0{{bn}{{f{Ff}}}}`{cFh{}}{{FjEnF`}{{An{b}}}}`{{bnFl}{{Ah{{Af{Ad}}}}}}{{cnFlAj}{{Ah{{Af{Ad}}}}}{}}{{cnFnF`}{{Ah{{Af{Ad}}}}}{}}{{bnG`F`}{{Ah{{Af{Ad}}}}}}{{cnGbAj}{{Ah{{Af{Ad}}}}}{}}{{bnGd}{{Ah{{Af{Ad}}}}}}{{bnGfFl}{{Ah{{Af{Ad}}}}}}{{cnGhFlAj}{{Ah{{Af{Ad}}}}}{}}{D`Bb}{{bnFf}Bb}{{bGjn}{{An{Bb}}}}{B`Gl}{cGl{}}{cGn{}}{ce{}{}}{{c{H`{F`}}Bj}{{Dh{F`Ej}}}{}}{{B`{H`{F`}}Bj}{{Dh{F`Ej}}}}{c{{Cl{e}}}{}{}}000{cHb{}}0{{cF`Ej}{{Cl{BbCj}}}{}}{{B`F`Ej}{{An{Bb}}}}{{bF`HdHf}Hh}{{cBj}{{Cl{BbCj}}}{}}{{B`Hj}{{H`{Hl}}}}99{{bAln}Bb}{{bDjCn}D`}{{bDjEd}Ef}1{{bDjCn}{{E`{Dl{Db{Hn}}}}}}`````````````````````````````````=========================================={I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{IlIl}{{ce}Bb{}{}}000000{{cIn}{{Cl{IdJ`}}}Jb}{{cIn}{{Cl{IfJ`}}}Jb}{{cIn}{{Cl{JdJ`}}}Jb}{{cIn}{{Cl{IhJ`}}}Jb}{{cIn}{{Cl{IjJ`}}}Jb}{{cIn}{{Cl{JfJ`}}}Jb}{{cIn}{{Cl{JhJ`}}}Jb}{{cIn}{{Cl{JjJ`}}}Jb}{{cIn}{{Cl{JlJ`}}}Jb}{{cIn}{{Cl{JnJ`}}}Jb}{{cIn}{{Cl{K`J`}}}Jb}{{cIn}{{Cl{KbJ`}}}Jb}{{cIn}{{Cl{KdJ`}}}Jb}{{cIn}{{Cl{KfJ`}}}Jb}{{cIn}{{Cl{KhJ`}}}Jb}{{cIn}{{Cl{IlJ`}}}Jb}{{Idc}{{Cl{KjKl}}}Kn}{{Ifc}{{Cl{KjKl}}}Kn}{{Jdc}{{Cl{KjKl}}}Kn}{{Ihc}{{Cl{KjKl}}}Kn}{{Ijc}{{Cl{KjKl}}}Kn}{{Jfc}{{Cl{KjKl}}}Kn}{{Jhc}{{Cl{KjKl}}}Kn}{{Jjc}{{Cl{KjKl}}}Kn}{{Jlc}{{Cl{KjKl}}}Kn}{{Jnc}{{Cl{KjKl}}}Kn}{{K`c}{{Cl{KjKl}}}Kn}{{L`c}{{Cl{KjKl}}}Kn}{{Kbc}{{Cl{KjKl}}}Kn}{{Lbc}{{Cl{KjKl}}}Kn}{{Ldc}{{Cl{KjKl}}}Kn}{{Kdc}{{Cl{KjKl}}}Kn}{{Kfc}{{Cl{KjKl}}}Kn}{{Khc}{{Cl{KjKl}}}Kn}{{Ilc}{{Cl{KjKl}}}Kn}{{cKn}{{Cl{KjKl}}}{}}000000000000000000{{cLf}{{Cl{BbLh}}}{}}000000000{{IjIj}Hh}{{cLf}{{Cl{BbLj}}}{}}000000000{{I`C`}Cb}0{{IbC`}Cb}{{IdC`}Cb}{{IfC`}Cb}{{JdC`}Cb}{{IhC`}Cb}{{IjC`}Cb}{{JfC`}Cb}{{JhC`}Cb}{{JjC`}Cb}{{JlC`}Cb}{{JnC`}Cb}{{K`C`}Cb}{{L`C`}Cb}{{KbC`}Cb}{{LbC`}Cb}{{LdC`}Cb}{{KdC`}Cb}{{KfC`}Cb}{{KhC`}Cb}{{IlC`}Cb}{cc{}}00000000000000000000{{{H`{Ll}}{M`{BfLn}}}{{Cl{cMb}}}{}}000000000000000000000000{MdIj}22222222222222{{IbKj}{{Db{I`}}}}`{ce{}{}}000000000000000000000{c{{Fd{e}}}{}{}}00000000000000000000{{}Ib}{IbKj}`{Ib{{Db{c}}}{}}0{{IbKj}{{Db{c}}}{}}{{Idc}ClMf}{{Jdc}ClMf}{{Ijc}ClMf}{{Jhc}ClMf}{{Jjc}ClMf}{{Jlc}ClMf}{{K`c}ClMf}{{Kbc}ClMf}{{Kdc}ClMf}{{Khc}ClMf}{Ib{{E`{Kj{Db{Kj}}}}}}{c{{f{Ll}}}{}}0000000000000000000000000000000000{ce{}{}}000000{cBl{}}{c{{Cl{e}}}{}{}}00000000000000000000000000000000000000000{cHb{}}00000000000000000000333333333333333333333``````333333{MhMj}{MlMj}{MnN`}{cc{}}00777{c{{Fd{e}}}{}{}}00666666555888","c":[],"p":[[5,"Lightning",0],[5,"ApiEndpoint",562],[5,"Vec",563],[5,"DynServerModule",564],[10,"Any",565],[10,"IDynCommonModuleInit",562],[5,"DatabaseTransaction",566],[5,"Audit",567],[8,"ModuleInstanceId",568],[10,"Future",569],[5,"Box",570],[5,"Pin",571],[1,"u16"],[1,"u64"],[8,"Result",572],[5,"LightningInit",0],[1,"unit"],[5,"DatabaseVersion",566],[5,"Decoder",568],[5,"PeerHandle",562],[5,"ConfigGenModuleParams",573],[5,"String",574],[10,"Iterator",575],[5,"Formatter",576],[8,"Result",576],[5,"ServerModuleConsensusConfig",573],[5,"LightningClientConfig",577],[5,"ClientModuleConfig",573],[5,"Error",572],[6,"Result",578],[5,"ContractId",579],[5,"ContractAccount",580],[6,"Option",581],[17,"Output"],[1,"fn"],[5,"BTreeMap",582],[5,"ApiEndpointContext",562],[5,"IncomingContractAccount",583],[6,"DecryptedPreimageStatus",579],[1,"tuple"],[5,"PublicKey",584],[5,"Hash",585],[5,"IncomingContractOffer",583],[5,"NumPeers",586],[5,"ServerModuleConfig",573],[5,"Database",566],[5,"TaskGroup",587],[5,"PeerId",586],[5,"ServerModuleInitArgs",562],[5,"Request",588],[5,"LightningGatewayAnnouncement",580],[5,"ModuleKind",568],[5,"LightningConfig",577],[5,"OutPoint",586],[5,"DynModuleConsensusItem",568],[6,"LightningConsensusItem",580],[5,"DynInput",568],[6,"LightningInput",580],[6,"LightningOutput",580],[5,"DynOutput",568],[5,"RemoveGatewayRequest",580],[5,"SupportedModuleApiVersions",589],[5,"DynCommonModuleInit",562],[1,"slice"],[5,"TypeId",565],[5,"PreimageDecryptionShare",579],[5,"EncryptedPreimage",579],[1,"bool"],[5,"CoreConsensusVersion",589],[5,"ModuleConsensusVersion",589],[5,"Preimage",579],[6,"DbKeyPrefix",90],[5,"DbKeyPrefixIter",90],[5,"ContractKey",90],[5,"ContractKeyPrefix",90],[5,"ContractUpdateKeyPrefix",90],[6,"LightningAuditItemKey",90],[5,"BlockCountVotePrefix",90],[8,"ModuleDecoderRegistry",590],[5,"DecodeError",591],[10,"Read",592],[5,"ContractUpdateKey",90],[5,"LightningAuditItemKeyPrefix",90],[5,"EncryptedPreimageIndexKey",90],[5,"EncryptedPreimageIndexKeyPrefix",90],[5,"OfferKey",90],[5,"OfferKeyPrefix",90],[5,"ProposeDecryptionShareKey",90],[5,"AgreedDecryptionShareKey",90],[5,"LightningGatewayKey",90],[5,"LightningGatewayKeyPrefix",90],[5,"BlockCountVoteKey",90],[1,"usize"],[5,"Error",593],[10,"Write",592],[5,"ProposeDecryptionShareKeyPrefix",90],[5,"AgreedDecryptionShareKeyPrefix",90],[5,"AgreedDecryptionShareContractIdPrefix",90],[10,"Serializer",594],[6,"ErrorImpl",594],[5,"Error",595],[1,"u8"],[6,"DecodingMode",590],[5,"ModuleRegistry",590],[6,"DecodingError",566],[6,"FundedContract",579],[10,"Serializer",596],[5,"LN_INCOMING_OFFER",526],[8,"IntCounter",597],[5,"LN_CANCEL_OUTGOING_CONTRACTS",526],[5,"LN_FUNDED_CONTRACT_SATS",526],[8,"HistogramVec",598]],"b":[[254,"impl-Display-for-DbKeyPrefix"],[255,"impl-Debug-for-DbKeyPrefix"]]}],\
["fedimint_lnv2_client",{"doc":"","t":"PPFPPPPPPSFFGGFFFPPPGPPSPPFGPNCNNNNNONNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNONNONNNOONONONNCNNNONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOKSMMMMPPPFGFONNNNNNNNONNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNPPSPPFGFPNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNONNOOONNNNNNNNNNNNNNNNNNNNNNNNN","n":["Claimed","Claiming","CreateInvoicePayload","Expired","Failure","Failure","Funded","Funding","FundingRejected","INVOICE_EXPIRATION_SECONDS_DEFAULT","LightningClientInit","LightningClientModule","LightningClientStateMachines","LightningOperationMeta","PaymentFee","PaymentFees","PaymentInfo","Pending","Receive","Receive","ReceiveState","Refunded","Refunding","SEND_EXPIRATION_DELTA_BLOCKS_DEFAULT","Send","Send","SendPaymentPayload","SendState","Success","add_fee","api","as_any","as_any","as_common","await_primary_module_output","backup","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","contract","contract","create_contract_and_fetch_invoice","create_contract_and_fetch_invoice_internal","create_exact_output","create_sufficient_input","database_version","decoder","decoder","decoder","default","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expiry_time","federation_id","federation_id","federation_id","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_ephemeral_tweak","get_balance","get_database_migrations","handle_cli_command","hash","hash","hash","hash","hash","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice_amount","keypair","module_api","module_kind","module_kind","notifier","operation_id","operation_id","outgoing_cltv_delta","output_amount","output_amount","partial_cmp","parts_per_million","payment_fees","payment_info","public_key","receive","receive","receive_external_contract","receive_internal","receive_sm","recover","recover_incoming_contract_keys","send","send","send_internal","send_sm","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","subscribe_balance_changes","subscribe_receive","subscribe_send","subtract_fee","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract","contract","funding_change_outpoints","funding_txid","gateway_api","invoice","operation_id","LnFederationApi","RETRY_DELAY","await_incoming_contract","await_preimage","consensus_block_count","outgoing_contract_expiration","Claiming","Expired","Pending","ReceiveSMCommon","ReceiveSMState","ReceiveStateMachine","agg_decryption_key","as_any","await_incoming_contract","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","claim_keypair","clone","clone","clone","clone","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","hash","hash","hash","into","into","into","into_request","into_request","into_request","operation_id","operation_id","operation_id","state","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","transition_incoming_contract","transitions","transitions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","Funded","Funding","RETRY_DELAY","Refunding","Rejected","SendSMCommon","SendSMState","SendStateMachine","Success","as_any","await_funding","await_preimage","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","funding_txid","gateway_api","gateway_send_payment","hash","hash","hash","into","into","into","into_request","into_request","into_request","invoice","operation_id","operation_id","operation_id","refund_keypair","state","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","transition_funding","transition_gateway_send_payment","transition_preimage","transitions","transitions","try_from","try_from","try_from","try_gateway_send_payment","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip"],"q":[[0,"fedimint_lnv2_client"],[370,"fedimint_lnv2_client::LightningOperationMeta"],[377,"fedimint_lnv2_client::api"],[383,"fedimint_lnv2_client::receive_sm"],[481,"fedimint_lnv2_client::send_sm"],[589,"fedimint_core"],[590,"core::any"],[591,"fedimint_core::module"],[592,"fedimint_core::core"],[593,"fedimint_core"],[594,"alloc::boxed"],[595,"core::pin"],[596,"fedimint_client::sm::state"],[597,"core::cmp"],[598,"fedimint_core::module::registry"],[599,"fedimint_core::encoding"],[600,"core::result"],[601,"std::io"],[602,"std::io::error"],[603,"std::io"],[604,"fedimint_core::util"],[605,"fedimint_lnv2_common::contracts"],[606,"lightning_invoice"],[607,"anyhow"],[608,"alloc::string"],[609,"fedimint_core::db"],[610,"fedimint_core::db"],[611,"erased_serde::ser"],[612,"erased_serde::ser"],[613,"core::iter::traits::iterator"],[614,"core::hash"],[615,"erased_serde::error"],[616,"core::fmt"],[617,"core::fmt"],[618,"std::ffi::os_str"],[619,"fedimint_client::module::init"],[620,"fedimint_client::module"],[621,"fedimint_core::config"],[622,"fedimint_core::config"],[623,"fedimint_derive_secret"],[624,"fedimint_client::sm::notifier"],[625,"fedimint_core::api"],[626,"fedimint_core::module"],[627,"fedimint_core::task"],[628,"fedimint_core::core"],[629,"fedimint_core::core"],[630,"fedimint_client::module::recovery"],[631,"secp256k1::key"],[632,"serde::ser"],[633,"fedimint_client::oplog"],[634,"fedimint_core::module::version"],[635,"fedimint_client::sm::state"],[636,"fedimint_client::sm::dbtx"],[637,"fedimint_core"]],"d":["","","","","","","","","","Default expiration time for lightning invoices","","Client side lightning module","","","","","","","","","","","","Number of blocks until outgoing lightning contracts time …","","","","The high-level state of an payment operation over lightning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[14,14,0,14,13,14,13,13,13,0,0,0,0,0,0,0,0,14,12,20,0,13,13,0,12,20,0,0,13,1,0,31,20,19,31,31,1,12,13,14,15,16,17,18,1,19,31,20,12,13,14,15,16,17,18,1,19,31,20,31,31,12,13,14,15,16,17,18,1,19,20,20,12,13,14,15,16,17,18,1,19,20,1,1,15,16,17,18,1,20,15,16,17,18,1,20,15,16,17,18,1,20,31,31,15,16,31,31,31,31,19,19,19,31,1,15,12,13,14,15,16,17,18,1,12,13,14,15,16,17,18,1,19,19,13,14,15,16,17,18,1,20,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,1,1,1,1,20,20,20,20,20,20,12,13,14,15,16,17,18,1,15,15,16,31,1,12,13,14,15,16,17,18,1,19,31,20,12,13,14,15,16,17,18,1,19,31,20,15,16,17,18,1,20,12,13,14,15,16,17,18,1,19,20,0,31,19,31,16,17,18,1,20,19,19,31,31,12,13,14,15,16,17,18,1,19,31,20,20,12,13,14,15,16,17,18,1,19,31,20,16,15,31,31,19,19,31,20,20,17,31,31,1,1,17,31,17,31,18,31,31,0,19,31,31,18,31,0,12,13,14,15,16,17,18,1,31,31,31,1,19,19,31,31,15,16,17,18,1,20,19,12,13,14,15,16,17,18,1,19,20,20,20,12,13,14,15,16,17,18,1,19,31,20,12,13,14,15,16,17,18,1,19,31,20,12,13,14,15,16,17,18,1,19,31,20,12,13,14,15,16,17,18,1,19,31,20,107,108,107,107,107,107,108,0,0,95,95,95,95,99,99,99,0,0,0,98,97,97,97,98,99,97,98,99,98,97,97,98,99,97,98,99,97,97,98,99,97,98,99,97,98,99,98,97,98,99,97,97,97,97,98,98,98,98,99,99,99,99,97,97,97,98,99,97,98,99,97,98,99,97,98,99,97,98,99,97,98,99,97,98,99,97,97,98,97,97,98,99,97,98,99,97,97,97,97,98,99,97,98,99,97,98,99,97,97,98,99,105,105,0,105,105,0,0,0,105,103,103,103,103,104,105,103,104,105,103,103,104,105,103,104,105,103,103,104,105,103,104,105,103,104,105,104,103,104,105,103,103,103,103,104,104,104,104,105,105,105,105,103,103,103,104,105,103,104,105,103,104,105,103,104,105,104,104,103,103,104,105,103,104,105,103,104,105,104,103,103,104,104,103,103,104,105,103,104,105,103,103,103,103,103,103,104,105,103,103,104,105,103,104,105,103,103,104,105],"f":"`````````````````````````````{{bd}f}`{ch{}}0{cj{}}{{cln}{{Ad{{Ab{A`}}}}}{}}{{cAf}{{Ad{{Ab{A`}}}}}{}}`{ce{}{}}000000000000000000000``{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{bb}{BfBf}{BhBh}{{cAf}Bj{}}{{ce}Bl{}{}}000000000{{bb}Bn}{{ce}Bn{}{}}{{cC`}{{Cd{AnCb}}}Cf}{{cC`}{{Cd{B`Cb}}}Cf}{{cC`}{{Cd{BbCb}}}Cf}{{cC`}{{Cd{BdCb}}}Cf}{{cC`}{{Cd{bCb}}}Cf}{{cC`}{{Cd{BhCb}}}Cf}{{Anc}{{Cd{ChCj}}}Cl}{{B`c}{{Cd{ChCj}}}Cl}{{Bbc}{{Cd{ChCj}}}Cl}{{Bdc}{{Cd{ChCj}}}Cl}{{bc}{{Cd{ChCj}}}Cl}{{Bhc}{{Cd{ChCj}}}Cl}{{cCl}{{Cd{ChCj}}}{}}00000{Cnc{}}{{cAf}D`{}}``{{CnDbDdf}{{Dl{{Dj{DfDh}}}}}}{{CnDbDdfDnE`b}{{Dl{{Dj{DfDh}}}}}}{{cAfEblf}{{Ad{{Ab{A`}}}}}{}}0{cEd{}}{cEf{}}00{{}b}`{c{{Cd{Ah}}}Eh}{c{{Cd{Aj}}}Eh}{c{{Cd{Al}}}Eh}{c{{Cd{An}}}Eh}{c{{Cd{B`}}}Eh}{c{{Cd{Bb}}}Eh}{c{{Cd{Bd}}}Eh}{c{{Cd{b}}}Eh}{{cEj}{{Cd{BlEl}}}{}}0000000{{cEb{En{E`}}}{{Ad{{Ab{A`}}}}}{}}{{BfEb{En{E`}}}{{Ab{F`}}}}{{AjAj}Fb}{{AlAl}Fb}{{AnAn}Fb}{{B`B`}Fb}{{BbBb}Fb}{{BdBd}Fb}{{bb}Fb}{{BhBh}Fb}{{ce}Fb{}{}}0000000000000000000000000000000{{cBj}Fb{}}{{cFd}Bl{}}{{cEj}{{Cd{BlFf}}}{}}0000000````{{bd}d}{{AhFh}Fj}{{AjFh}Fj}{{AlFh}Fj}{{AnFh}Fj}{{B`Fh}Fj}{{BbFh}Fj}{{BdFh}Fj}{{bFh}Fj}{{BfFh}Fj}{{CnFh}Fj}{{BhFh}Fj}{cc{}}0000000000{{{Fn{Fl}}{Gb{EfG`}}}{{Cd{cGd}}}{}}000001111111111{Db{{Dj{{Gf{Fl}}Db}}}}{{cAfEb}{{Ad{{Ab{A`}}}}}{}}{c{{Gl{Ed{Gj{EbAf{En{{Dj{{En{Fl}}l}}}}{En{{Dj{{En{Fl}}l}}}}{Gb{EfG`}}}{{Gh{{Ad{{Ab{A`}}}}}}}}}}}{}}{{c{Fn{Gn}}}{{Ad{{Ab{A`}}}}}{}}{{B`c}BlFd}{{Bbc}BlFd}{{Bdc}BlFd}{{bc}BlFd}{{Bhc}BlFd}{{Bf{H`{Bf}}}{{Ad{{Ab{A`}}}}}}{{cHbHdChHfHhAfHjHjHlHnI`{Id{Ib}}If}{{Ad{{Ab{A`}}}}}{}}{{cIh}{{Id{Ij}}}{}}{Cn{{Id{Ij}}}}{ce{}{}}0000000000{{BhIl}c{}}{c{{In{e}}}{}{}}0000000000````{cJ`{}}0`{Bhl}{cl{}}`{{cJb}{{Id{Ij}}}{}}7{{bb}{{Id{Bn}}}}``{{CnDd}{{Dl{Bb}}}}`{{CnDdf}{{Dl{{Dj{Dhl}}}}}}`{{CnDf}{{Dl{l}}}}{{CnDdfDnE`b}{{Dl{{Dj{Dhl}}}}}}`{{cHbHdJdHfHhAfHjHjHlHnI`{Id{Ib}}{Id{Jf}}{Jj{Jh}}}{{Ad{{Ab{A`}}}}}{}}{{CnDf}{{Dl{{Dj{JlJn}}}}}}{{CnDdDh}{{Dl{l}}}}`{{CnDdDhbd}{{Dl{l}}}}`{{Ahc}CdK`}{{Ajc}CdK`}{{Alc}CdK`}{{Anc}CdK`}{{B`c}CdK`}{{Bbc}CdK`}{{Bdc}CdK`}{{bc}CdK`}{c{{Ad{{Ab{A`}}}}}{}}{{Cnl}{{Dl{{Kb{Al}}}}}}{{Cnl}{{Dl{{Kb{Aj}}}}}}{{bd}f}{BfKd}{cKd{}}{cFb{}}0{c{{En{Fl}}}{}}00000{cKf{}}{ce{}{}}000000000{{BhcKh}{{En{{Kj{Bh}}}}}{}}{{cD`Kh}{{En{{Kj{Bj}}}}}{}}{c{{Cd{e}}}{}{}}000000000000000000000{cKl{}}000000000044444444444`````````{{KnL`d}{{Ad{{Ab{A`}}}}}}0{Kn{{Ad{{Ab{A`}}}}}}{{KnL`}{{Ad{{Ab{A`}}}}}}```````{ch{}}{{DfKh}Fb}999999`{{cAf}Bj{}}{LbLb}{LdLd}{LfLf}{{ce}Bl{}{}}00`{{cC`}{{Cd{LbCb}}}Cf}{{cC`}{{Cd{LdCb}}}Cf}{{cC`}{{Cd{LfCb}}}Cf}{{Lbc}{{Cd{ChCj}}}Cl}{{Ldc}{{Cd{ChCj}}}Cl}{{Lfc}{{Cd{ChCj}}}Cl}{{cCl}{{Cd{ChCj}}}{}}00`{{LbLb}Fb}{{LdLd}Fb}{{LfLf}Fb}{{ce}Fb{}{}}00000000000{{cBj}Fb{}}{{cFd}Bl{}}{{LbFh}Fj}{{LdFh}Fj}{{LfFh}Fj}{cc{}}00{{{Fn{Fl}}{Gb{EfG`}}}{{Cd{cGd}}}{}}00111{{Lbc}BlFd}{{Ldc}BlFd}{{Lfc}BlFd}{ce{}{}}00{c{{In{e}}}{}{}}00{cl{}}{Lbl}``{c{{En{Fl}}}{}}00444{{LhLbKhFb}Lb}{{LbcKh}{{En{{Kj{Lb}}}}}{}}{{cD`Kh}{{En{{Kj{Bj}}}}}{}}{c{{Cd{e}}}{}{}}00000{cKl{}}00{{LbLf}Lb}:::`````````{ch{}}{{KhLj}{{Cd{BlE`}}}}{{KhLl}{{Id{{Gf{Fl}}}}}}======{LnLn}{{cAf}Bj{}}{M`M`}{MbMb}{{ce}Bl{}{}}00`{{cC`}{{Cd{LnCb}}}Cf}{{cC`}{{Cd{M`Cb}}}Cf}{{cC`}{{Cd{MbCb}}}Cf}{{Lnc}{{Cd{ChCj}}}Cl}{{M`c}{{Cd{ChCj}}}Cl}{{Mbc}{{Cd{ChCj}}}Cl}{{cCl}{{Cd{ChCj}}}{}}00`{{LnLn}Fb}{{M`M`}Fb}{{MbMb}Fb}{{ce}Fb{}{}}00000000000{{cBj}Fb{}}{{cFd}Bl{}}{{LnFh}Fj}{{M`Fh}Fj}{{MbFh}Fj}{cc{}}00{{{Fn{Fl}}{Gb{EfG`}}}{{Cd{cGd}}}{}}00111``{{DdHdLlDh}{{Cd{{Gf{Fl}}Md}}}}{{Lnc}BlFd}{{M`c}BlFd}{{Mbc}BlFd}{ce{}{}}00{c{{In{e}}}{}{}}00`{Lnl}{cl{}}```{c{{En{Fl}}}{}}00444{{{Cd{BlE`}}Ln}Ln}{{KhLh{Cd{{Gf{Fl}}Md}}Ln}Ln}{{LhKhLn{Id{{Gf{Fl}}}}}Ln}{{LncKh}{{En{{Kj{Ln}}}}}{}}{{cD`Kh}{{En{{Kj{Bj}}}}}{}}{c{{Cd{e}}}{}{}}00{{DdHdLlDh}{{Dl{{Cd{{Cd{{Gf{Fl}}Md}}E`}}}}}}111{cKl{}}00{{LnMb}Ln}===","c":[],"p":[[5,"PaymentFee",0],[1,"u64"],[5,"Amount",589],[10,"Any",590],[10,"IDynCommonModuleInit",591],[5,"OperationId",592],[5,"OutPoint",589],[10,"Future",593],[5,"Box",594],[5,"Pin",595],[1,"u16"],[6,"LightningOperationMeta",0],[6,"SendState",0],[6,"ReceiveState",0],[5,"CreateInvoicePayload",0],[5,"SendPaymentPayload",0],[5,"PaymentInfo",0],[5,"PaymentFees",0],[5,"LightningClientInit",0],[6,"LightningClientStateMachines",0],[5,"DynState",596],[1,"unit"],[6,"Ordering",597],[8,"ModuleDecoderRegistry",598],[5,"DecodeError",599],[6,"Result",600],[10,"Read",601],[1,"usize"],[5,"Error",602],[10,"Write",601],[5,"LightningClientModule",0],[5,"DynContext",596],[5,"PublicKey",603],[5,"SafeUrl",604],[5,"IncomingContract",605],[5,"Bolt11Invoice",606],[1,"tuple"],[8,"Result",607],[1,"u32"],[5,"String",608],[5,"DatabaseTransaction",609],[5,"DatabaseVersion",609],[5,"Decoder",592],[10,"Deserializer",610],[10,"Serializer",611],[6,"ErrorImpl",611],[5,"Vec",612],[10,"Iterator",613],[1,"bool"],[10,"Hasher",614],[5,"Error",615],[5,"Formatter",616],[8,"Result",616],[1,"u8"],[1,"slice"],[6,"DecodingMode",598],[5,"ModuleRegistry",598],[6,"DecodingError",609],[1,"array"],[17,"Output"],[1,"fn"],[5,"BTreeMap",617],[5,"OsString",618],[5,"ClientModuleInitArgs",619],[5,"FinalClient",620],[5,"FederationId",621],[5,"ClientModuleConfig",621],[5,"Database",609],[5,"ApiVersion",622],[5,"DerivableSecret",623],[5,"Notifier",624],[5,"DynGlobalApi",625],[5,"ApiAuth",591],[6,"Option",626],[5,"TaskGroup",627],[5,"DynInput",592],[5,"TransactionItemAmount",591],[8,"ModuleInstanceId",592],[5,"Request",628],[5,"ModuleKind",592],[5,"DynOutput",592],[5,"NumPeers",589],[5,"DynModuleBackup",629],[5,"RecoveryProgress",629],[5,"Sender",630],[5,"KeyPair",603],[5,"AggregateDecryptionKey",631],[10,"Serializer",632],[6,"UpdateStreamOrOutcome",633],[5,"MultiApiVersion",622],[5,"DynCommonModuleInit",591],[5,"DynGlobalClientContext",634],[5,"StateTransition",596],[5,"TypeId",590],[10,"LnFederationApi",377],[5,"ContractId",635],[5,"ReceiveStateMachine",383],[5,"ReceiveSMCommon",383],[6,"ReceiveSMState",383],[5,"ClientSMDatabaseTransaction",636],[5,"TransactionId",589],[5,"OutgoingContract",605],[5,"SendStateMachine",481],[5,"SendSMCommon",481],[6,"SendSMState",481],[5,"Signature",637],[15,"Send",370],[15,"Receive",370]],"b":[]}],\
["fedimint_lnv2_common",{"doc":"Lightning Module","t":"PSPPPPFPPPPPPPPSFFGFGFGGGPPPPGPPPGNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPFFFFFFFFFGPPPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOONOOOONONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFOONNNNNNOOONNNNNNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BlockCountVote","CONSENSUS_VERSION","Cancel","Claim","ContractAlreadyExists","ContractExpired","ContractId","Expired","Incoming","Incoming","Incoming","InvalidContract","InvalidDecryptionKey","InvalidForfeitSignature","InvalidPreimage","KIND","LightningClientContext","LightningCommonInit","LightningConsensusItem","LightningInput","LightningInputError","LightningModuleTypes","LightningOutput","LightningOutputError","LightningOutputOutcome","NotExpired","Outgoing","Outgoing","Outgoing","OutgoingWitness","Refund","UnixTimeVote","UnknownContract","Witness","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contracts","decoder","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","tpe_agg_pk","tpe_pks","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","Bitcoin","FeeConsensus","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigLocal","LightningConfigPrivate","LightningGenParams","LightningGenParamsConsensus","LightningGenParamsLocal","Network","Regtest","Signet","Testnet","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus","consensus","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_magic","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","hash","hash","hash","input","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","magic","network","network","network","output","partial_cmp","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sk","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","tpe_agg_pk","tpe_agg_pk","tpe_pks","tpe_pks","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Commitment","IncomingContract","OutgoingContract","amount","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","ciphertext","claim_pk","claim_pk","clone","clone","clone","clone_into","clone_into","clone_into","commitment","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","create_decryption_key_share","decrypt_preimage","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","ephemeral_pk","ephemeral_pk","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","expiration","expiration","fmt","fmt","fmt","forfeit_message","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","hash","hash","hash","into","into","into","into_request","into_request","into_request","invoice_hash","new","payment_hash","payment_hash","refund_pk","refund_pk","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_agg_decryption_key","verify_decryption_share","verify_forfeit_signature","verify_gateway_response","verify_invoice_auth","verify_preimage","verify_preimage","vzip","vzip","vzip"],"q":[[0,"fedimint_lnv2_common"],[372,"fedimint_lnv2_common::config"],[653,"fedimint_lnv2_common::contracts"],[772,"fedimint_core"],[773,"core::any"],[774,"fedimint_core::core"],[775,"fedimint_core::core"],[776,"fedimint_core::encoding"],[777,"core::result"],[778,"std::io"],[779,"std::io::error"],[780,"std::io"],[781,"erased_serde::ser"],[782,"erased_serde::ser"],[783,"core::fmt"],[784,"core::fmt"],[785,"core::hash"],[786,"fedimint_core::core"],[787,"serde::ser"],[788,"alloc::vec"],[789,"alloc::string"],[790,"core::any"],[791,"core::fmt"],[792,"core::option"],[793,"fedimint_core::core"],[794,"serde_json::value"],[795,"fedimint_core::module::version"],[796,"tpe"],[797,"tpe"],[798,"tpe"],[799,"tpe"],[800,"bitcoin_hashes::sha256"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Classic Bitcoin","","","","","","","","","","The cryptocurrency to act on","Bitcoin’s regtest","Bitcoin’s signet","Bitcoin’s testnet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Creates a <code>Network</code> from the magic bytes.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return the network magic bytes, which should be encoded …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[18,0,6,6,15,15,0,14,5,1,11,15,14,14,14,0,0,0,0,0,0,0,0,0,0,14,5,1,11,0,6,18,14,0,1,9,9,1,11,14,15,18,85,4,5,6,9,1,11,14,15,18,37,19,85,4,5,6,9,1,11,14,15,18,37,19,4,5,6,9,9,1,1,11,11,14,14,15,15,18,18,19,4,5,6,9,1,11,14,15,18,19,0,4,5,6,9,1,11,14,15,18,4,5,6,9,1,11,14,15,18,4,5,6,9,1,11,14,15,18,0,37,19,4,5,6,9,1,11,18,4,5,6,9,1,11,18,9,1,11,14,15,18,4,5,6,9,1,11,14,15,18,4,4,4,4,5,5,5,5,6,6,6,6,9,9,9,9,1,1,1,1,11,11,11,11,14,14,14,14,15,15,15,15,18,18,18,18,9,1,11,14,15,18,4,5,6,9,1,11,18,19,4,5,6,9,9,1,1,11,11,14,14,15,15,18,18,37,19,85,4,5,6,9,1,11,14,15,18,37,19,4,5,6,9,1,11,14,15,18,4,5,6,9,1,11,14,15,18,19,4,5,6,9,1,11,14,15,18,85,4,5,6,9,1,11,14,15,18,37,19,9,1,11,14,15,18,85,4,5,6,9,1,11,14,15,18,37,19,4,5,6,9,1,11,18,4,5,6,9,1,11,14,15,18,4,5,6,9,1,11,14,15,18,19,9,1,11,14,15,18,19,19,85,4,5,6,9,1,11,14,15,18,37,19,85,4,5,6,9,1,11,14,15,18,37,19,85,4,5,6,9,1,11,14,15,18,37,19,85,4,5,6,9,1,11,14,15,18,37,19,9,60,0,0,0,0,0,0,0,0,0,0,60,60,60,57,52,54,50,51,52,53,54,55,56,57,59,60,50,51,52,53,54,55,56,57,59,60,50,51,52,53,54,55,56,57,57,59,60,50,51,52,53,54,55,56,57,59,60,60,60,50,53,60,54,55,57,59,54,55,57,59,60,54,55,57,59,60,59,50,51,52,53,54,55,56,57,59,60,50,51,52,53,54,55,56,57,59,60,57,57,59,60,57,57,57,57,59,59,59,59,60,60,60,60,57,50,51,52,53,54,55,56,57,59,60,55,57,50,51,52,53,54,55,56,57,57,59,60,60,50,51,52,53,54,55,56,57,59,60,60,54,55,57,59,60,60,50,53,50,51,52,53,54,55,56,57,59,60,60,57,59,60,59,50,51,52,53,54,55,56,57,59,60,57,50,51,52,53,54,55,56,57,59,60,55,50,53,60,51,55,57,59,60,53,50,50,51,52,53,54,55,56,57,59,60,56,54,55,57,59,60,57,50,51,52,53,54,55,56,57,59,60,50,53,57,60,55,57,55,57,50,51,52,53,54,55,56,57,59,60,50,51,52,53,54,55,56,57,59,60,50,51,52,53,54,55,56,57,59,60,55,50,51,52,53,54,55,56,57,59,60,0,0,0,72,74,72,73,74,72,73,74,73,72,74,72,73,74,72,73,74,73,72,73,74,72,73,74,72,73,74,73,74,73,73,72,73,74,72,73,74,72,74,72,73,74,72,72,72,72,73,73,73,73,74,74,74,74,72,73,74,72,74,72,73,74,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,74,73,72,74,72,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,73,73,73,74,74,74,73,74,72,73,74],"f":"``````````````````````````````````{bd}`{cf{}}00000{ce{}{}}00000000000000000000000{hh}{jj}{ll}{{cn}A`{}}{AbAb}{bb}{{cn}Ad{}}{AfAf}{{cn}Ah{}}{{cn}Aj{}}{AlAl}{AnAn}{{cn}B`{}}{{cn}Bb{}}{BdBd}{BfBf}{{ce}Bh{}{}}000000000`{{cBj}{{Bn{hBl}}}C`}{{cBj}{{Bn{jBl}}}C`}{{cBj}{{Bn{lBl}}}C`}{{cBj}{{Bn{AbBl}}}C`}{{cBj}{{Bn{bBl}}}C`}{{cBj}{{Bn{AfBl}}}C`}{{cBj}{{Bn{AlBl}}}C`}{{cBj}{{Bn{AnBl}}}C`}{{cBj}{{Bn{BdBl}}}C`}{{hc}{{Bn{CbCd}}}Cf}{{jc}{{Bn{CbCd}}}Cf}{{lc}{{Bn{CbCd}}}Cf}{{Abc}{{Bn{CbCd}}}Cf}{{bc}{{Bn{CbCd}}}Cf}{{Afc}{{Bn{CbCd}}}Cf}{{Alc}{{Bn{CbCd}}}Cf}{{Anc}{{Bn{CbCd}}}Cf}{{Bdc}{{Bn{CbCd}}}Cf}{{cCf}{{Bn{CbCd}}}{}}00000000`{{}Ch}`{c{{Bn{h}}}Cj}{c{{Bn{j}}}Cj}{c{{Bn{l}}}Cj}{c{{Bn{Ab}}}Cj}{c{{Bn{b}}}Cj}{c{{Bn{Af}}}Cj}{c{{Bn{Bd}}}Cj}{{cCl}{{Bn{BhCn}}}{}}000000{cD`{}}00000{{hh}Db}{{jj}Db}{{ll}Db}{{AbAb}Db}{{bb}Db}{{AfAf}Db}{{AlAl}Db}{{AnAn}Db}{{BdBd}Db}{{ce}Db{}{}}00000000000000000000000000000000000{{cA`}Db{}}{{cAd}Db{}}{{cAh}Db{}}{{cAj}Db{}}{{cB`}Db{}}{{cBb}Db{}}{{cCl}{{Bn{BhDd}}}{}}000000`{{hDf}Dh}{{jDf}Dh}{{lDf}Dh}{{AbDf}Dh}0{{bDf}Dh}0{{AfDf}Dh}0{{AlDf}Dh}0{{AnDf}Dh}0{{BdDf}Dh}0{{DjDf}Dh}{{BfDf}Dh}{cc{}}00000000000{{{Dn{Dl}}{Eb{ChE`}}}{{Bn{cEd}}}{}}000000001111111111{{hc}BhEf}{{jc}BhEf}{{lc}BhEf}{{Abc}BhEf}{{bc}BhEf}{{Afc}BhEf}{{Alc}BhEf}{{Anc}BhEf}{{Bdc}BhEf}{ce{}{}}00000000000{{AbEh}c{}}{{bEh}c{}}{{AfEh}c{}}{{AlEh}c{}}{{AnEh}c{}}{{BdEh}c{}}{c{{Ej{e}}}{}{}}00000000000{{hc}BnEl}{{jc}BnEl}{{lc}BnEl}{{Abc}BnEl}{{bc}BnEl}{{Afc}BnEl}{{Bdc}BnEl}{c{{En{Dl}}}{}}00000000??????????{cF`{}}00000``{c{{Bn{e}}}{}{}}00000000000000000000000{cFb{}}00000000000{ce{}{}}00000000000```````````````{cf{}}``11111111111111111111{FdFd}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{{cn}Gd{}}{GfGf}{GhGh}{{ce}Bh{}{}}000000000{{GhGh}Gj}{{ce}Gj{}{}}``{{c{Eb{ChE`}}}{{Bn{GhBl}}}C`}{{cBj}{{Bn{FlBl}}}C`}{{cBj}{{Bn{FnBl}}}C`}{{cBj}{{Bn{GbBl}}}C`}{{cBj}{{Bn{GfBl}}}C`}{{Flc}{{Bn{CbCd}}}Cf}{{Fnc}{{Bn{CbCd}}}Cf}{{Gbc}{{Bn{CbCd}}}Cf}{{Gfc}{{Bn{CbCd}}}Cf}{{Ghc}{{Bn{CbCd}}}Cf}{{cCf}{{Bn{CbCd}}}{}}0000{{}Gf}{c{{Bn{Fd}}}Cj}{c{{Bn{Ff}}}Cj}{c{{Bn{Fh}}}Cj}{c{{Bn{Fj}}}Cj}{c{{Bn{Fl}}}Cj}{c{{Bn{Fn}}}Cj}{c{{Bn{G`}}}Cj}{c{{Bn{Gb}}}Cj}{c{{Bn{Gf}}}Cj}{c{{Bn{Gh}}}Cj}{{cCl}{{Bn{BhCn}}}{}}000000000{cD`{}}{{GbGb}Db}{{GfGf}Db}{{GhGh}Db}{{ce}Db{}{}}00000000000{{cGd}Db{}}{{cCl}{{Bn{BhDd}}}{}}000000000``{{FdDf}Dh}{{FfDf}Dh}{{FhDf}Dh}{{FjDf}Dh}{{FlDf}Dh}{{FnDf}Dh}{{G`Df}Dh}{{GbDf}Dh}0{{GfDf}Dh}{{GhDf}{{Bn{BhGl}}}}0{cc{}}00000000{GnGh}1{{{Dn{Dl}}{Eb{ChE`}}}{{Bn{cEd}}}{}}0000{H`{{Hb{Gh}}}}{{ce}Fd{}{}}{{ceg}Fj{}{}{}}5555555555{Hd{{Bn{Gh}}}}{{Gbc}BhEf}{{Gfc}BhEf}{{Ghc}BhEf}`{ce{}{}}000000000{{GbEh}c{}}{c{{Ej{e}}}{}{}}000000000{FnHf}``{GhH`}````{{GhGh}{{Hb{Gj}}}}`{HhFd}{{Fdc}BnEl}{{Ffc}BnEl}{{Fhc}BnEl}{{Fjc}BnEl}{{Flc}BnEl}{{Fnc}BnEl}{{G`c}BnEl}{{Gbc}BnEl}{{Gfc}BnEl}{{Ghc}BnEl}`{c{{En{Dl}}}{}}0000{c{{Hb{Hj}}}{}}{ce{}{}}000000000{Fd{{Hl{ce}}}{}{}}{Fj{{Hl{Hfceg}}}{}{}{}}{cF`{}}0````{c{{Bn{e}}}{}{}}0000000000000000000{cFb{}}000000000{FnHn}6666666666`````666666```{I`I`}{IbIb}{IdId}{{ce}Bh{}{}}00`{{cBj}{{Bn{I`Bl}}}C`}{{cBj}{{Bn{IbBl}}}C`}{{cBj}{{Bn{IdBl}}}C`}{{I`c}{{Bn{CbCd}}}Cf}{{Ibc}{{Bn{CbCd}}}Cf}{{Idc}{{Bn{CbCd}}}Cf}{{cCf}{{Bn{CbCd}}}{}}00{Ibh}{Idh}{{IbIf}Ih}{{IbIj}{{Hb{{Il{Dl}}}}}}{c{{Bn{I`}}}Cj}{c{{Bn{Ib}}}Cj}{c{{Bn{Id}}}Cj}{{cCl}{{Bn{BhCn}}}{}}00``{{I`I`}Db}{{IbIb}Db}{{IdId}Db}{{ce}Db{}{}}00000000000{{cCl}{{Bn{BhDd}}}{}}00``{{I`Df}Dh}{{IbDf}Dh}{{IdDf}Dh}{IdIn}{cc{}}00{{{Dn{Dl}}{Eb{ChE`}}}{{Bn{cEd}}}{}}00111{{I`c}BhEf}{{Ibc}BhEf}{{Idc}BhEf}{ce{}{}}00{c{{Ej{e}}}{}{}}00`{{J`{Il{Dl}}{Il{Dl}}dD`JbJbJb}Ib}````{{I`c}BnEl}{{Ibc}BnEl}{{Idc}BnEl}{c{{En{Dl}}}{}}00666{c{{Bn{e}}}{}{}}00000{cFb{}}00{IbDb}{{IbJ`Ij}Db}{{IbJdIh}Db}{{IdJf}Db}{{Id{Bn{{Il{Dl}}Jf}}}Db}{{IdJhJf}Db}{{Ib{Il{Dl}}}Db}{{Id{Il{Dl}}}Db}{ce{}{}}00","c":[],"p":[[6,"LightningOutput",0],[5,"Amount",772],[10,"Any",773],[5,"ContractId",0],[6,"Witness",0],[6,"OutgoingWitness",0],[1,"u16"],[5,"DynInput",774],[5,"LightningInput",0],[5,"DynOutput",774],[6,"LightningOutputOutcome",0],[5,"DynOutputOutcome",774],[5,"DynInputError",774],[6,"LightningInputError",0],[6,"LightningOutputError",0],[5,"DynOutputError",774],[5,"DynModuleConsensusItem",774],[6,"LightningConsensusItem",0],[5,"LightningClientContext",0],[1,"unit"],[8,"ModuleDecoderRegistry",775],[5,"DecodeError",776],[6,"Result",777],[10,"Read",778],[1,"usize"],[5,"Error",779],[10,"Write",778],[5,"Decoder",774],[10,"Deserializer",780],[10,"Serializer",781],[6,"ErrorImpl",781],[1,"u64"],[1,"bool"],[5,"Error",782],[5,"Formatter",783],[8,"Result",783],[5,"LightningCommonInit",0],[1,"u8"],[1,"slice"],[6,"DecodingMode",775],[5,"ModuleRegistry",775],[6,"DecodingError",784],[10,"Hasher",785],[8,"ModuleInstanceId",774],[5,"Request",786],[10,"Serializer",787],[5,"Vec",788],[5,"String",789],[5,"TypeId",773],[5,"LightningGenParams",372],[5,"LightningGenParamsConsensus",372],[5,"LightningGenParamsLocal",372],[5,"LightningConfig",372],[5,"LightningConfigLocal",372],[5,"LightningConfigConsensus",372],[5,"LightningConfigPrivate",372],[5,"LightningClientConfig",372],[5,"DynClientConfig",774],[5,"FeeConsensus",372],[6,"Network",372],[6,"Ordering",790],[5,"Error",783],[6,"Currency",791],[1,"u32"],[6,"Option",792],[1,"str"],[5,"ModuleKind",774],[5,"BitcoinRpcConfig",793],[6,"Value",794],[1,"tuple"],[5,"ModuleConsensusVersion",795],[5,"Commitment",653],[5,"IncomingContract",653],[5,"OutgoingContract",653],[5,"SecretKeyShare",796],[5,"DecryptionKeyShare",796],[5,"AggregateDecryptionKey",796],[1,"array"],[5,"Message",797],[5,"AggregatePublicKey",796],[5,"PublicKey",798],[5,"PublicKeyShare",796],[5,"Signature",799],[5,"Hash",800],[5,"LightningModuleTypes",0]],"b":[[205,"impl-Display-for-LightningInput"],[206,"impl-Debug-for-LightningInput"],[207,"impl-Display-for-LightningOutput"],[208,"impl-Debug-for-LightningOutput"],[209,"impl-Display-for-LightningOutputOutcome"],[210,"impl-Debug-for-LightningOutputOutcome"],[211,"impl-Display-for-LightningInputError"],[212,"impl-Debug-for-LightningInputError"],[213,"impl-Debug-for-LightningOutputError"],[214,"impl-Display-for-LightningOutputError"],[215,"impl-Debug-for-LightningConsensusItem"],[216,"impl-Display-for-LightningConsensusItem"],[506,"impl-Display-for-LightningClientConfig"],[507,"impl-Debug-for-LightningClientConfig"],[509,"impl-Display-for-Network"],[510,"impl-Debug-for-Network"]]}],\
["fedimint_lnv2_server",{"doc":"","t":"FFNNNNNNNNNNNNOONNNNNNNCHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFGFPFFFPFFPFPFFPFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Lightning","LightningInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","await_incoming_contract","await_preimage","borrow","borrow","borrow_mut","borrow_mut","btc_rpc","cfg","clone","clone_into","consensus_block_count","consensus_proposal","consensus_proposal","consensus_unix_time","database_version","db","dealer_keygen","decoder","decoder","distributed_gen","distributed_gen","dump_database","dump_database","eval_polynomial","fmt","fmt","from","from","from_ref","from_ref","get_client_config","get_client_config","get_database_migrations","init","init","into","into","into_request","into_request","module_kind","new","outgoing_contract_expiration","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_into","try_into","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","DbKeyPrefix","DbKeyPrefixIter","IncomingContract","IncomingContractKey","IncomingContractPrefix","LightningOutputOutcomePrefix","OutgoingContract","OutgoingContractKey","OutgoingContractPrefix","OutputOutcome","OutputOutcomeKey","Preimage","PreimageKey","PreimagePrefix","UnixTimeVote","UnixTimeVoteKey","UnixTimeVotePrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","hash","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_lnv2_server"],[76,"fedimint_lnv2_server::db"],[415,"fedimint_core::module"],[416,"alloc::vec"],[417,"fedimint_core::core::server"],[418,"core::any"],[419,"fedimint_core::module"],[420,"fedimint_core::module::audit"],[421,"fedimint_core::core"],[422,"core::future::future"],[423,"alloc::boxed"],[424,"core::pin"],[425,"fedimint_core::db"],[426,"core::option"],[427,"fedimint_core::db"],[428,"tpe"],[429,"alloc::string"],[430,"core::iter::traits::iterator"],[431,"bls12_381::scalar"],[432,"core::fmt"],[433,"core::fmt"],[434,"anyhow"],[435,"fedimint_core::config"],[436,"alloc::collections::btree::map"],[437,"fedimint_core::module"],[438,"fedimint_core::config"],[439,"fedimint_core"],[440,"fedimint_core::core"],[441,"fedimint_core::module"],[442,"fedimint_core::encoding"],[443,"std::io"],[444,"std::io::error"],[445,"std::io"],[446,"erased_serde::ser"],[447,"erased_serde::ser"],[448,"fedimint_core::module::registry"],[449,"serde::ser"]],"d":["","","","","","","","Queries the database and returns all assets and …","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Retrieve the current status of the output. Depending on …","","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,20,1,1,1,1,20,1,20,1,1,1,20,20,1,1,1,1,20,0,0,20,1,20,20,20,20,0,20,1,20,1,20,20,20,20,20,20,20,20,1,20,1,20,1,1,1,1,1,1,1,1,1,1,20,20,20,20,20,20,20,1,20,1,20,1,20,20,20,20,20,1,66,0,0,0,0,66,0,0,0,66,0,0,66,0,66,0,0,66,0,0,67,66,67,77,68,80,69,70,71,72,73,81,74,75,82,66,67,77,68,80,69,70,71,72,73,81,74,75,82,66,67,68,69,70,71,72,73,74,75,66,67,68,69,70,71,72,73,74,75,77,68,80,69,70,71,72,73,81,74,75,82,77,68,80,69,70,71,72,73,81,74,75,82,77,68,80,69,70,71,72,73,81,74,75,82,70,72,75,77,80,70,72,81,75,70,72,75,70,70,70,70,72,72,72,72,75,75,75,75,77,80,70,72,81,75,66,66,77,68,80,69,70,71,72,73,81,74,75,82,66,67,77,68,80,69,70,71,72,73,81,74,75,82,77,77,68,80,80,69,70,70,71,72,72,73,81,81,74,75,75,82,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,67,70,72,75,67,66,67,77,68,80,69,70,71,72,73,81,74,75,82,67,66,67,77,68,80,69,70,71,72,73,81,74,75,82,66,67,67,67,67,67,77,80,70,72,81,75,67,77,77,68,68,80,80,69,69,70,70,71,71,72,72,73,73,81,81,74,74,75,75,82,82,66,67,68,69,70,71,72,73,74,75,66,66,67,77,68,80,69,70,71,72,73,81,74,75,82,66,67,77,68,80,69,70,71,72,73,81,74,75,82,66,67,77,68,80,69,70,71,72,73,81,74,75,82,66,67,77,68,80,69,70,71,72,73,81,74,75,82],"f":"``{b{{f{{d{b}}}}}}{c{{f{{d{h}}}}}{}}{cj{}}{cl{}}{{bnA`Ab}{{Ah{{Af{Ad}}}}}}{{cnA`Aj}{{Ah{{Af{Ad}}}}}{}}{{bAlAnB`}{{Bb{An}}}}{{bAlAnB`}{{Bb{{Bf{Bd}}}}}}{ce{}{}}000``{BhBh}{{ce}Bj{}{}}{{bn}B`}{{bn}{{Ah{{Af{Ad}}}}}}{{cnAj}{{Ah{{Af{Ad}}}}}{}}2{cBl{}}`{{BnBn}{{Cf{C`{f{Cb}}{f{Cd}}}}}}{cCh{}}0{{cCjCl}{{Ah{{Af{Ad}}}}}{}}{{BhCjCl}{{Ah{{Af{Ad}}}}}}{{Bhn{f{Cn}}}{{Af{D`}}}}{{cn{f{Cn}}}{{Ah{{Af{Ad}}}}}{}}{{{Dd{Db}}Db}Db}{{BhDf}Dh}{{bDf}Dh}{cc{}}000{{BhDj}{{Dn{Dl}}}}{{cAjDj}{{Ed{E`Eb}}}{}}{c{{Ej{Bl{Eh{n}{{Ef{{Ah{{Af{Ad}}}}}}}}}}}{}}{{Bh{El{Bh}}}{{Ah{{Af{Ad}}}}}}{{cEnF`AlFbFd}{{Ah{{Af{Ad}}}}}{}}{ce{}{}}0{c{{Ff{e}}}{}{}}0{cFh{}}{{FjFb}{{Dn{b}}}}{{bAlAn}{{Bb{B`}}}}{{bnFl}{{Ah{{Af{Ad}}}}}}{{cnFlAj}{{Ah{{Af{Ad}}}}}{}}{{bnFnFd}{{Ah{{Af{Ad}}}}}}{{cnG`Fd}{{Ah{{Af{Ad}}}}}{}}{{bnGb}{{Ah{{Af{Ad}}}}}}{{cnGdAj}{{Ah{{Af{Ad}}}}}{}}{{bnGfFl}{{Ah{{Af{Ad}}}}}}{{cnGhFlAj}{{Ah{{Af{Ad}}}}}{}}{cGj{}}{BhGj}{cGl{}}?{{Bh{Dd{Fd}}Cl}{{Ej{FdF`}}}}{{c{Dd{Fd}}Cl}{{Ej{FdF`}}}{}}{c{{Ed{e}}}{}{}}000{cGn{}}0{{BhFdF`}{{Dn{Bj}}}}{{cFdF`}{{Ed{BjEb}}}{}}{{cCl}{{Ed{BjEb}}}{}}{{BhH`}{{Dd{Hb}}}}{ce{}{}}0`````````````````````0000000000000000000000000000{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{IbIb}{IdId}{IfIf}{{ce}Bj{}{}}000000000{{cIh}{{Ed{IjIl}}}In}{{cIh}{{Ed{HhIl}}}In}{{cIh}{{Ed{J`Il}}}In}{{cIh}{{Ed{HjIl}}}In}{{cIh}{{Ed{HlIl}}}In}{{cIh}{{Ed{HnIl}}}In}{{cIh}{{Ed{I`Il}}}In}{{cIh}{{Ed{IbIl}}}In}{{cIh}{{Ed{JbIl}}}In}{{cIh}{{Ed{IdIl}}}In}{{cIh}{{Ed{IfIl}}}In}{{cIh}{{Ed{JdIl}}}In}{{Ijc}{{Ed{BnJf}}}Jh}{{Hhc}{{Ed{BnJf}}}Jh}{{J`c}{{Ed{BnJf}}}Jh}{{Hjc}{{Ed{BnJf}}}Jh}{{Hlc}{{Ed{BnJf}}}Jh}{{Hnc}{{Ed{BnJf}}}Jh}{{I`c}{{Ed{BnJf}}}Jh}{{Ibc}{{Ed{BnJf}}}Jh}{{Jbc}{{Ed{BnJf}}}Jh}{{Idc}{{Ed{BnJf}}}Jh}{{Ifc}{{Ed{BnJf}}}Jh}{{Jdc}{{Ed{BnJf}}}Jh}{{cJh}{{Ed{BnJf}}}{}}00000000000{c{{Ed{Hl}}}Jj}{c{{Ed{I`}}}Jj}{c{{Ed{If}}}Jj}{{cJl}{{Ed{BjJn}}}{}}00000{{HlHl}K`}{{I`I`}K`}{{IfIf}K`}{{ce}K`{}{}}00000000000{{cJl}{{Ed{BjKb}}}{}}00000{{HdDf}Dh}0{{IjDf}Dh}{{HhDf}Dh}{{J`Df}Dh}{{HjDf}Dh}{{HlDf}Dh}{{HnDf}Dh}{{I`Df}Dh}{{IbDf}Dh}{{JbDf}Dh}{{IdDf}Dh}{{IfDf}Dh}{{JdDf}Dh}{cc{}}0000000000000{{{Dd{Bd}}{Kf{ChKd}}}{{Ed{cKh}}}{}}0000000000000000011111111111111111111{{HfBn}{{Bb{Hd}}}}{{Hlc}BjKj}{{I`c}BjKj}{{Ifc}BjKj}`{ce{}{}}00000000000000{c{{Ff{e}}}{}{}}0000000000000{{}Hf}{HfBn}`{Hf{{Bb{c}}}{}}0{{HfBn}{{Bb{c}}}{}}{{Ijc}EdKl}{{J`c}EdKl}{{Hlc}EdKl}{{I`c}EdKl}{{Jbc}EdKl}{{Ifc}EdKl}{Hf{{Cf{Bn{Bb{Bn}}}}}}{c{{f{Bd}}}{}}00000000000000000000000=========={cCn{}}{c{{Ed{e}}}{}{}}000000000000000000000000000{cGn{}}0000000000000{ce{}{}}0000000000000","c":[],"p":[[5,"Lightning",0],[5,"ApiEndpoint",415],[5,"Vec",416],[5,"DynServerModule",417],[10,"Any",418],[10,"IDynCommonModuleInit",415],[5,"DatabaseTransaction",419],[5,"Audit",420],[8,"ModuleInstanceId",421],[10,"Future",422],[5,"Box",423],[5,"Pin",424],[1,"u16"],[5,"Database",419],[5,"ContractId",425],[1,"u64"],[6,"Option",426],[1,"u8"],[1,"array"],[5,"LightningInit",0],[1,"unit"],[5,"DatabaseVersion",419],[1,"usize"],[5,"AggregatePublicKey",427],[5,"PublicKeyShare",427],[5,"SecretKeyShare",427],[1,"tuple"],[5,"Decoder",421],[5,"PeerHandle",415],[5,"ConfigGenModuleParams",428],[5,"String",429],[10,"Iterator",430],[5,"Scalar",431],[1,"slice"],[5,"Formatter",432],[8,"Result",432],[5,"ServerModuleConsensusConfig",428],[5,"LightningClientConfig",433],[8,"Result",434],[5,"ClientModuleConfig",428],[5,"Error",434],[6,"Result",435],[17,"Output"],[1,"fn"],[5,"BTreeMap",436],[5,"ServerModuleInitArgs",415],[5,"NumPeers",437],[5,"ServerModuleConfig",428],[5,"TaskGroup",438],[5,"PeerId",437],[5,"Request",439],[5,"ModuleKind",421],[5,"LightningConfig",433],[5,"OutPoint",437],[6,"LightningConsensusItem",425],[5,"DynModuleConsensusItem",421],[5,"LightningInput",425],[5,"DynInput",421],[6,"LightningOutput",425],[5,"DynOutput",421],[5,"SupportedModuleApiVersions",440],[5,"DynCommonModuleInit",415],[5,"TypeId",418],[5,"CoreConsensusVersion",440],[5,"ModuleConsensusVersion",440],[6,"DbKeyPrefix",76],[5,"DbKeyPrefixIter",76],[5,"BlockCountVotePrefix",76],[5,"UnixTimeVotePrefix",76],[5,"IncomingContractKey",76],[5,"IncomingContractPrefix",76],[5,"OutgoingContractKey",76],[5,"OutgoingContractPrefix",76],[5,"LightningOutputOutcomePrefix",76],[5,"PreimageKey",76],[8,"ModuleDecoderRegistry",441],[5,"BlockCountVoteKey",76],[5,"DecodeError",442],[10,"Read",443],[5,"UnixTimeVoteKey",76],[5,"OutputOutcomeKey",76],[5,"PreimagePrefix",76],[5,"Error",444],[10,"Write",443],[10,"Deserializer",445],[10,"Serializer",446],[6,"ErrorImpl",446],[1,"bool"],[5,"Error",447],[6,"DecodingMode",441],[5,"ModuleRegistry",441],[6,"DecodingError",419],[10,"Hasher",448],[10,"Serializer",449]],"b":[[211,"impl-Debug-for-DbKeyPrefix"],[212,"impl-Display-for-DbKeyPrefix"]]}],\
["fedimint_load_test_tool",{"doc":"","t":"PGFFSPFGPGPFFFPPPPPONNNNNNNNOONNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNONCONNNNHHHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHHHHHHHHNNNHNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOHOOOOOOHOOOOOOOOOOOOOOOHHHHHNNOHHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOONNNNNNNNNNNNNNHOOOOOHHHHHHHHHHHHHHHHH","n":["ClnLightningCli","Command","EventMetricComparison","EventMetricSummary","GATEWAY_CREATE_INVOICE","LnCircularLoadTest","LnCircularLoadTestArgs","LnCircularStrategy","LnCli","LnInvoiceGeneration","LoadTest","LoadTestArgs","MetricEvent","Opts","PartnerPingPong","SelfPayment","TestConnect","TestDownload","TwoGateways","archive_dir","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","avg_ms","avg_ms_gain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_create_invoice","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command_for_update","common","current","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_ln_circular_test_user_task","do_load_test_user_task","do_partner_ping_pong","do_self_payment","duration","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","generate_invoice_with","get_coordinator_client","get_db_path","get_gateway_id","get_lightning_gateway","get_notes_for_users","get_required_notes","get_user_client","get_users_clients","group_id","group_id","group_id","handle_metrics_summary","has_subcommand","initial_notes","initial_notes","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","invite_code","invite_code_or_fallback","invoice_amount","invoice_amount","invoices_file","invoices_per_user","ln_payment_sleep_secs","ln_payment_sleep_secs","main","max_ms","max_ms_gain","median_ms","median_ms_gain","metrics_json_output","min_ms","min_ms_gain","n","name","name","note_denomination","note_denomination","notes_per_user","notes_per_user","previous","print_coordinator_notes","reissue_initial_notes","run_ln_circular_load_test","run_load_test","run_two_gateways_strategy","serialize","serialize","strategy","test_connect_raw_client","test_download_config","test_duration_secs","timestamp_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","url_to_string_with_default_port","users","users","validate_ip","validate_ipv4","validate_ipv6","value_variants","value_variants","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_invoice_payment","duration_secs","invite_code","invite_code","limit_endpoints","timeout_secs","await_spend_notes_finish","build_client","cln_create_invoice","cln_pay_invoice","cln_wait_invoice_payment","do_spend_notes","gateway_pay_invoice","get_invite_code_cli","get_note_summary","get_notes_cli","lnd_create_invoice","lnd_pay_invoice","lnd_wait_invoice_payment","parse_gateway_id","reissue_notes","remint_denomination","try_get_notes_cli"],"q":[[0,"fedimint_load_test_tool"],[265,"fedimint_load_test_tool::Command"],[270,"fedimint_load_test_tool::common"],[287,"clap_builder::builder::command"],[288,"fedimint_client"],[289,"fedimint_core"],[290,"tokio::sync::mpsc::unbounded"],[291,"fedimint_ln_common"],[292,"core::option"],[293,"fedimint_core::core"],[294,"lightning_invoice"],[295,"anyhow"],[296,"core::result"],[297,"serde::de"],[298,"erased_serde::ser"],[299,"erased_serde::ser"],[300,"fedimint_core::api"],[301,"fedimint_mint_client"],[302,"alloc::vec"],[303,"core::time"],[304,"erased_serde::error"],[305,"core::fmt"],[306,"core::fmt"],[307,"clap_builder"],[308,"std::path"],[309,"std::collections::hash::map"],[310,"clap_builder::util::id"],[311,"tokio::sync::mpsc::unbounded"],[312,"tonic::request"],[313,"anyhow"],[314,"clap_builder::builder::possible_value"],[315,"core::any"],[316,"fedimint_core::util"],[317,"fedimint_core::tiered_multi"],[318,"secp256k1::key"],[319,"secp256k1"]],"d":["","","","","","Run a load test where many users in parallel will receive …","","","","","","","","","Two clients will pay to each other using the same gateway","The user will pay its own invoice","","","One gateway will pay/receive to/from the other, then they …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[13,0,0,0,0,14,0,0,13,0,14,0,0,0,17,17,14,14,17,12,12,15,16,12,15,16,14,14,18,22,12,13,14,15,16,17,4,18,22,12,13,14,15,16,17,4,18,22,0,12,13,14,15,16,17,4,18,12,13,14,15,16,17,4,18,12,12,12,0,22,18,22,18,22,0,0,0,0,4,18,22,13,17,4,18,22,22,12,13,14,15,16,17,4,18,22,12,14,15,16,12,14,15,16,12,12,13,13,14,14,15,15,16,16,17,17,4,4,18,18,15,15,0,0,0,0,0,0,0,0,12,15,16,0,14,15,16,12,13,14,15,16,17,4,18,22,12,12,13,13,14,14,15,15,16,16,17,17,4,4,18,18,22,22,15,16,0,15,16,15,15,15,16,0,18,22,18,22,12,18,22,18,4,18,15,16,15,16,22,0,0,0,0,0,18,22,16,0,0,16,18,12,13,14,15,16,17,4,18,13,17,22,12,13,14,15,16,17,4,18,22,12,13,14,15,16,17,4,18,22,12,13,14,15,16,17,4,18,22,12,14,15,16,12,14,15,16,0,12,18,22,22,22,13,17,12,13,14,15,16,17,4,18,22,0,56,56,57,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"````````````````````{bb}0000000``{ce{}{}}00000000000000000{{df{j{h}}{n{l}}}{{Af{{Ad{A`Ab}}}}}}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{hh}{BdBd}{{ce}Bf{}{}}0000000{{}b}`0``{c{{Bh{Bd}}}Bj}{c{{Bh{Bl}}}Bj}{{cBn}{{Bh{BfC`}}}{}}0{{Cbd{n{Cd}}{Ch{Cf}}CjCjfBb{j{h}}}{{Af{Bf}}}}{{Cbd{Ch{Cf}}ClCjf{Ch{Ab}}{n{Aj}}{j{h}}{n{Cb}}}{{Af{Bf}}}}{{Cnddf{j{h}}}{{Af{Bf}}}}{{Cndf{j{h}}}{{Af{Bf}}}}`{{cBn}{{Bh{BfD`}}}{}}0{{AjDb}Dd}{{BbDb}Dd}{{hDb}Dd}{{BdDb}Dd}{{BlDb}Dd}0{cc{}}00000000{Df{{Bh{AhDh}}}}{Df{{Bh{AlDh}}}}{Df{{Bh{AnDh}}}}{Df{{Bh{B`Dh}}}}32104444444444444444``{{{n{Dj}}{n{Cd}}}{{Af{{Ad{d{n{Cd}}}}}}}}{{{n{Dj}}}{{n{Dj}}}}{Aj{{Af{Cb}}}}{{d{n{Cb}}}{{n{l}}}}{{ClCldf}{{Af{{Dl{Cl{Ch{Cf}}}}}}}}{{df{j{h}}}{{Af{Bf}}}}{{Cl{n{Dj}}{n{Cd}}}{{Af{{Ad{d{n{Cd}}}}}}}}{{Cl{n{Dj}}{n{Cd}}}{{Af{{Ch{d}}}}}}{{}{{n{Dn}}}}00{{Ah{E`{h}}}{{Af{Bf}}}}{CnEb}``{ce{}{}}00000000{c{{Ed{e}}}{}{}}{c{{Ef{e}}}{}{}}1001100110010110``{{{n{Cd}}}{{n{Cd}}}}``````{{}{{Af{Bf}}}}```````````````{d{{Af{Bf}}}}{{{n{Cf}}d{j{h}}}{{Af{Bf}}}}{{{n{Dj}}Cl{n{Cd}}{n{Cf}}CjCjClffBb{j{h}}}{{Af{{Ch{{Eh{{Af{Bf}}}}}}}}}}{{{n{Dj}}Cl{n{Cd}}{n{Cf}}{n{Aj}}ClCj{Ch{Ab}}{n{Cb}}Clff{j{h}}}{{Af{{Ch{{Eh{{Af{Bf}}}}}}}}}}{{CnAjf{j{h}}d{n{l}}}{{Bh{BfEj}}}}{{Bdc}BhEl}{{Blc}BhEl}`{{CdClCjCj{n{En}}{j{h}}}{{Af{{Ch{{Eh{{Af{Bf}}}}}}}}}}{{CdCl{j{h}}}{{Af{{Ch{{Eh{{Af{Bf}}}}}}}}}}``========{Aj{{n{F`}}}}{Bb{{n{F`}}}}{cCb{}}{c{{Bh{e}}}{}{}}00000000000000000{cFb{}}00000000{{AhDf}{{Bh{BfDh}}}}{{AlDf}{{Bh{BfDh}}}}{{AnDf}{{Bh{BfDh}}}}{{B`Df}{{Bh{BfDh}}}}3210{FdCb}``{cEb{}}00{{}{{Ff{Aj}}}}{{}{{Ff{Bb}}}}{ce{}{}}00000000{{CnCndA`{j{h}}Fh}{{Af{Bf}}}}`````{{dA`}{{Af{Bf}}}}{{{n{Cd}}{n{Dj}}}{{Af{{Ad{d{n{Cd}}}}}}}}{f{{Af{{Ad{AbCb}}}}}}{Ab{{Af{Bf}}}}{Cn{{Af{Bf}}}}{{df}{{Af{{Ad{A`Cf}}}}}}{{CnCndAb{j{h}}{n{l}}}{{Af{Bf}}}}{{}{{Af{Cd}}}}{d{{Af{Fj}}}}{f{{Af{Cf}}}}76{Cb{{Af{Bf}}}}{Cn{{Af{FlFn}}}}{{dCf{j{h}}}{{Af{Bf}}}}{{dfCl}{{Af{Bf}}}}{{fEn}{{Af{Cf}}}}","c":[],"p":[[5,"Command",287],[8,"ClientHandleArc",288],[5,"Amount",289],[5,"MetricEvent",0],[5,"UnboundedSender",290],[5,"LightningGateway",291],[6,"Option",292],[5,"OperationId",293],[5,"Bolt11Invoice",294],[1,"tuple"],[8,"Result",295],[5,"Opts",0],[6,"LnInvoiceGeneration",0],[6,"Command",0],[5,"LoadTestArgs",0],[5,"LnCircularLoadTestArgs",0],[6,"LnCircularStrategy",0],[5,"EventMetricSummary",0],[1,"unit"],[6,"Result",296],[10,"Deserializer",297],[5,"EventMetricComparison",0],[10,"Serializer",298],[6,"ErrorImpl",298],[5,"String",299],[5,"InviteCode",300],[5,"OOBNotes",301],[5,"Vec",302],[5,"Duration",303],[1,"u16"],[1,"str"],[5,"Error",304],[5,"Formatter",305],[8,"Result",305],[5,"ArgMatches",306],[8,"Error",307],[5,"PathBuf",308],[5,"HashMap",309],[5,"Id",310],[5,"UnboundedReceiver",290],[1,"bool"],[5,"Request",311],[5,"Request",311],[8,"BoxFuture",312],[5,"Error",295],[10,"Serializer",313],[1,"usize"],[5,"PossibleValue",314],[5,"TypeId",315],[5,"SafeUrl",312],[1,"slice"],[5,"SystemTime",316],[5,"TieredSummary",317],[5,"PublicKey",318],[6,"Error",319],[15,"TestConnect",265],[15,"TestDownload",265]],"b":[[85,"impl-Debug-for-EventMetricComparison"],[86,"impl-Display-for-EventMetricComparison"]]}],\
["fedimint_logging",{"doc":"Constants for categorizing the logging type","t":"SSSSSSSSSSSSSSSSSSSSSSSSFONNNONNNNNONNNNNNONNONO","n":["LOG_BLOCKCHAIN","LOG_CLIENT","LOG_CLIENT_BACKUP","LOG_CLIENT_DB","LOG_CLIENT_MODULE_META","LOG_CLIENT_MODULE_MINT","LOG_CLIENT_NET_API","LOG_CLIENT_REACTOR","LOG_CLIENT_RECOVERY","LOG_CLIENT_RECOVERY_MINT","LOG_CONSENSUS","LOG_CORE","LOG_DB","LOG_DEVIMINT","LOG_ECASH_RECOVERY","LOG_MODULE_META","LOG_NET","LOG_NET_API","LOG_NET_PEER","LOG_NET_PEER_DKG","LOG_TASK","LOG_TEST","LOG_TIMING","LOG_WALLET","TracingSetup","base_level","borrow","borrow_mut","default","extra_directives","from","init","into","into_request","tokio_console_bind","tokio_console_bind","try_from","try_into","type_id","vzip","with_base_level","with_chrome","with_chrome","with_directive","with_file","with_file","with_jaeger","with_jaeger"],"q":[[0,"fedimint_logging"],[48,"anyhow"],[49,"tonic::request"],[50,"core::net::socket_addr"],[51,"core::option"],[52,"core::result"],[53,"core::any"],[54,"alloc::string"],[55,"core::convert"],[56,"std::fs"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Consolidates the setup of server tracing into a helper","","","","","","Returns the argument unchanged.","Initialize the logging, must be called for tracing to begin","Calls <code>U::from(self)</code>.","","Setup a console server for tokio logging …","","","","","","Sets the log level applied to most modules. Some overly …","Setup telemetry through Chrome …","","Add a filter directive.","","","Setup telemetry through Jaeger …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"``````````````````````````{ce{}{}}0{{}b}`{cc{}}{b{{f{d}}}}3{c{{h{e}}}{}{}}{{b{l{j}}}b}`{c{{n{e}}}{}{}}0{cA`{}}7{{bc}b{{Ad{Ab}}}}{{bAf}b}`{{bAh}b}{{b{l{Aj}}}b}`2`","c":[],"p":[[5,"TracingSetup",0],[1,"unit"],[8,"Result",48],[5,"Request",49],[6,"SocketAddr",50],[6,"Option",51],[6,"Result",52],[5,"TypeId",53],[5,"String",54],[10,"Into",55],[1,"bool"],[1,"str"],[5,"File",56]],"b":[]}],\
["fedimint_meta_client",{"doc":"","t":"FFFNOCNNNNNNNNNNCNNNNENNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNCNNNNNNNNNNNNNNNNNNNNNNKMMMMPPPGPNNNNNNNNNNNHNNNNNNNNNNOOOOOOOOGFONNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["MetaClientContext","MetaClientInit","MetaClientModule","admin_auth","admin_auth","api","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cli","clone","clone","clone_into","clone_into","common","context","context","create_exact_output","create_sufficient_input","database_version","db","decoder","decoder","decoder","dump_database","dump_database","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_balance","get_balance","get_consensus_value","get_consensus_value_rev","get_database_migrations","get_database_migrations","get_submissions","handle_cli_command","handle_cli_command","init","init","input_amount","input_amount","into","into","into","into_request","into_request","into_request","meta_decoder","module_api","module_kind","module_kind","output_amount","output_amount","recover","states","submit","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","supports_being_primary","to_dyn_common","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MetaFederationApi","get_consensus","get_consensus_rev","get_submissions","submit","Get","GetRev","GetSubmissions","Opts","Submit","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","do_erased_serialize","erased_serialize","from","from_arg_matches","from_arg_matches_mut","handle_cli_command","has_subcommand","into","into_request","serialize","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","hex","hex","hex","key","key","key","key","value","DbKeyPrefix","DbKeyPrefixIter","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","from","from","from_ref","from_ref","get","idx","into","into","into_iter","into_request","into_request","iter","len","marker","next","next_back","nth","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MetaError","MetaInternalError","MetaStateMachine","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","into","into","into_dyn","into_request","into_request","operation_id","operation_id","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_meta_client"],[90,"fedimint_meta_client::api"],[95,"fedimint_meta_client::cli"],[122,"fedimint_meta_client::cli::Opts"],[130,"fedimint_meta_client::db"],[173,"fedimint_meta_client::states"],[240,"fedimint_core::module"],[241,"anyhow"],[242,"core::any"],[243,"fedimint_core::module"],[244,"fedimint_core"],[245,"core::future::future"],[246,"alloc::boxed"],[247,"core::pin"],[248,"fedimint_client::sm::state"],[249,"fedimint_core::db"],[250,"fedimint_core"],[251,"alloc::vec"],[252,"core::iter::traits::iterator"],[253,"core::fmt"],[254,"core::fmt"],[255,"fedimint_meta_common"],[256,"fedimint_core::module::registry"],[257,"fedimint_core::module::registry"],[258,"fedimint_client::db"],[259,"fedimint_core"],[260,"fedimint_client::module"],[261,"fedimint_core::config"],[262,"fedimint_core::config"],[263,"fedimint_derive_secret"],[264,"fedimint_client::sm::notifier"],[265,"fedimint_core::api"],[266,"fedimint_core::task"],[267,"fedimint_client::module::init"],[268,"fedimint_core::module"],[269,"fedimint_core::core"],[270,"fedimint_client::module::recovery"],[271,"fedimint_core::module::version"],[272,"core::any"],[273,"erased_serde::ser"],[274,"erased_serde::ser"],[275,"clap_builder::parser::matches::arg_matches"],[276,"clap_builder"],[277,"serde_json::value"],[278,"serde::ser"],[279,"fedimint_client::sm::state"],[280,"std::io"],[281,"std::io::error"],[282,"std::io"],[283,"core::hash"],[284,"fedimint_core::db"],[285,"fedimint_client::sm::state"]],"d":["Data needed by the state machine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the current meta consensus value along with it’s …","Get the current meta consensus value revision","","","Get current submissions to change the meta consensus value.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Submit a meta consensus value","","","","","","","","","","","","","","","","","","","","","","","","","","","Get current consensus value","Get current consensus value revision","Get value change submissions","","Submit value change proposal","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Tracks a transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,1,13,1,1,1,12,13,1,12,13,0,12,13,12,13,0,1,1,1,1,13,0,1,13,13,13,13,1,12,13,1,12,13,12,13,1,1,1,1,13,13,1,1,1,13,13,1,1,1,12,13,1,12,13,12,1,13,13,1,1,13,0,1,1,13,13,1,1,1,13,12,13,1,12,13,1,12,13,1,12,13,1,12,13,0,66,66,66,66,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,93,94,95,93,96,94,95,95,0,0,78,77,78,77,78,77,78,77,78,77,77,78,77,78,77,78,78,78,77,78,78,77,78,77,78,78,78,78,78,78,77,78,77,77,78,77,78,77,78,77,78,0,81,0,80,80,81,80,81,80,80,81,80,81,80,81,80,81,80,81,81,81,80,81,80,80,80,80,81,81,81,81,80,80,81,80,81,81,80,81,80,81,80,81,80,80,81,80,80,81,80,80,81,80,81,80,81,81,80,80,80,81,80,81,80,81,80,81],"f":"```{b{{f{d}}}}``{ch{}}{cj{}}{{cln}{{Ad{{Ab{A`}}}}}{}}{{cAf}{{Ad{{Ab{A`}}}}}{}}{ce{}{}}00000`{AhAh}{AjAj}{{ce}Al{}{}}0`{bc{}}{{cAf}An{}}{{cAfB`lBb}{{Ad{{Ab{A`}}}}}{}}0{cBd{}}`{cBf{}}00{{cB`{Bj{Bh}}}{{Ad{{Ab{A`}}}}}{}}{{AjB`{Bj{Bh}}}{{Ab{Bl}}}}{{bBn}C`}{{AhBn}C`}{{AjBn}C`}{cc{}}0000{{bB`}{{Ad{{Ab{A`}}}}}}{{cAfB`}{{Ad{{Ab{A`}}}}}{}}{{bCb}{{f{{Cf{Cd}}}}}}{{bCb}{{f{{Cf{Ch}}}}}}{c{{Df{Bd{Dd{B`Af{Bj{{Cl{{Bj{Cj}}l}}}}{Bj{{Cl{{Bj{Cj}}l}}}}{D`{BfCn}}}{{Db{{Ad{{Ab{A`}}}}}}}}}}}{}}{Aj{{Df{BdDh}}}}{{bCb}{{f{{Df{DjDl}}}}}}{{c{E`{Dn}}}{{Ad{{Ab{A`}}}}}{}}{{b{E`{Dn}}}{{Ad{{Ab{A`}}}}}}{{cEbEdEfEhEjAfElElEnF`Fb{Cf{d}}Fd}{{Ad{{Ab{A`}}}}}{}}{{Aj{Ff{Aj}}}{{Ad{{Ab{A`}}}}}}{b{{Cf{Fh}}}}{{cFj}{{Cf{Fh}}}{}}{ce{}{}}00{c{{Fl{e}}}{}{}}00``{cFn{}}04{{cG`}{{Cf{Fh}}}{}}{{cEbEdGbEhEjAfElElEnF`Fb{Cf{d}}{Cf{Gd}}{Gh{Gf}}}{{Ad{{Ab{A`}}}}}{}}`{{bCbDl}{{f{Al}}}}{c{{Ad{{Ab{A`}}}}}{}}{AjGj}{cGj{}}{cGl{}}{bGl}1{cGn{}};;{c{{H`{e}}}{}{}}00000{cHb{}}00===`{{HdCb}{{Ad{{Ab{A`}}}}}}0{{HdCbd}{{Ad{{Ab{A`}}}}}}{{HdCbDld}{{Ad{{Ab{A`}}}}}}`````{HfHf}0{ce{}{}}0{{}Hf}0{{cHh}{{H`{AlHj}}}{}}{{cHh}{{H`{AlHl}}}{}}{cc{}}{Hn{{H`{I`Ib}}}}0{{b{E`{Dn}}}{{f{Id}}}}{IfGl}7{c{{Fl{e}}}{}{}}{{I`c}H`Ih}??>{{I`Hn}{{H`{AlIb}}}}0:```````````::::{IjIj}{IlIl}{{ce}Al{}{}}0{{IjBn}C`}0{{IlBn}C`};;;;{{IlEf}{{Cf{Ij}}}}`{ce{}{}}0099{{}Il}{IlEf}`{Il{{Cf{c}}}{}}0{{IlEf}{{Cf{c}}}{}}{Il{{Cl{Ef{Cf{Ef}}}}}}55{cBh{}}{c{{H`{e}}}{}{}}000{cHb{}}088```{ch{}}9999{{cAf}In{}}{J`J`}{JbJb}{{ce}Al{}{}}0{{cJd}{{H`{J`Jf}}}Jh}{{cJd}{{H`{JbJf}}}Jh}{{J`c}{{H`{EfJj}}}Jl}{{Jbc}{{H`{EfJj}}}Jl}{{cJl}{{H`{EfJj}}}{}}0{c{{H`{Jb}}}Jn}{{cHh}{{H`{AlHj}}}{}}{{J`J`}Gl}{{JbJb}Gl}{{ce}Gl{}{}}0000000{{cIn}Gl{}}{{cK`}Al{}}{{cHh}{{H`{AlHl}}}{}}{{J`Bn}C`}{{JbBn}C`}0{cc{}}0{{{E`{Cj}}{D`{BfCn}}}{{H`{cKb}}}{}}011{{J`c}AlK`}{ce{}{}}0{{J`Kd}c{}}{c{{Fl{e}}}{}{}}0{J`l}{cl{}}{{Jbc}H`Ih}{c{{Bj{Cj}}}{}}066{cBh{}}{{J`cKf}{{Bj{{Kh{J`}}}}}{}}{{cAnKf}{{Bj{{Kh{In}}}}}{}}{c{{H`{e}}}{}{}}000{cHb{}}0;;","c":[],"p":[[5,"MetaClientModule",0],[5,"ApiAuth",240],[8,"Result",241],[10,"Any",242],[10,"IDynCommonModuleInit",240],[5,"OperationId",243],[5,"OutPoint",244],[10,"Future",245],[5,"Box",246],[5,"Pin",247],[1,"u16"],[5,"MetaClientContext",0],[5,"MetaClientInit",0],[1,"unit"],[5,"DynContext",248],[5,"DatabaseTransaction",249],[5,"Amount",244],[5,"DatabaseVersion",249],[5,"Decoder",243],[5,"String",250],[5,"Vec",251],[10,"Iterator",252],[5,"Formatter",253],[8,"Result",253],[5,"MetaKey",254],[5,"MetaConsensusValue",254],[6,"Option",255],[1,"u64"],[1,"u8"],[1,"tuple"],[6,"DecodingMode",256],[5,"ModuleRegistry",256],[17,"Output"],[1,"fn"],[5,"BTreeMap",257],[8,"ClientMigrationFn",258],[5,"PeerId",244],[5,"MetaValue",254],[5,"OsString",259],[1,"slice"],[5,"FinalClient",260],[5,"FederationId",261],[1,"usize"],[5,"ClientModuleConfig",261],[5,"Database",249],[5,"ApiVersion",262],[5,"DerivableSecret",263],[5,"Notifier",264],[5,"DynGlobalApi",265],[5,"TaskGroup",266],[5,"ClientModuleInitArgs",267],[5,"TransactionItemAmount",240],[5,"DynInput",243],[5,"Request",268],[5,"ModuleKind",243],[5,"DynOutput",243],[5,"NumPeers",244],[5,"DynModuleBackup",269],[5,"RecoveryProgress",269],[5,"Sender",270],[5,"MultiApiVersion",262],[1,"bool"],[5,"DynCommonModuleInit",240],[6,"Result",271],[5,"TypeId",242],[10,"MetaFederationApi",90],[5,"Command",272],[10,"Serializer",273],[6,"ErrorImpl",273],[5,"Error",274],[5,"ArgMatches",275],[6,"Opts",95],[8,"Error",276],[6,"Value",277],[1,"str"],[10,"Serializer",278],[6,"DbKeyPrefix",130],[5,"DbKeyPrefixIter",130],[5,"DynState",248],[6,"MetaStateMachine",173],[6,"MetaError",173],[8,"ModuleDecoderRegistry",256],[5,"DecodeError",279],[10,"Read",280],[5,"Error",281],[10,"Write",280],[10,"Deserializer",282],[10,"Hasher",283],[6,"DecodingError",249],[8,"ModuleInstanceId",243],[5,"DynGlobalClientContext",284],[5,"StateTransition",248],[15,"Get",122],[15,"GetSubmissions",122],[15,"Submit",122],[15,"GetRev",122]],"b":[[141,"impl-Display-for-DbKeyPrefix"],[142,"impl-Debug-for-DbKeyPrefix"],[208,"impl-Debug-for-MetaError"],[209,"impl-Display-for-MetaError"]]}],\
["fedimint_meta_common",{"doc":"","t":"SSTFFFFGFFFGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSFIFSFOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNONNN","n":["CONSENSUS_VERSION","KIND","MAX_LEN_BYTES","MetaCommonInit","MetaConsensusItem","MetaConsensusValue","MetaInput","MetaInputError","MetaKey","MetaModuleTypes","MetaOutput","MetaOutputError","MetaOutputOutcome","MetaValue","NotSupported","NotSupported","as_any","as_any","as_any","as_any","as_any","as_any","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","config","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","endpoint","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","partial_cmp","partial_cmp","revision","salt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MetaClientConfig","MetaConfig","MetaConfigConsensus","MetaConfigLocal","MetaConfigPrivate","MetaGenParams","MetaGenParamsConsensus","MetaGenParamsLocal","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GET_CONSENSUS_ENDPOINT","GET_CONSENSUS_REV_ENDPOINT","GET_SUBMISSIONS_ENDPOINT","GetConsensusRequest","GetSubmissionResponse","GetSubmissionsRequest","SUBMIT_ENDPOINT","SubmitRequest","_marker","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","key","length","root","serialize","serialize","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","vzip","vzip","vzip"],"q":[[0,"fedimint_meta_common"],[352,"fedimint_meta_common::config"],[546,"fedimint_meta_common::endpoint"],[602,"core::any"],[603,"fedimint_core::core"],[604,"fedimint_core::core"],[605,"fedimint_core::module::registry"],[606,"fedimint_core::encoding"],[607,"core::result"],[608,"std::io"],[609,"std::io::error"],[610,"std::io"],[611,"erased_serde::ser"],[612,"erased_serde::ser"],[613,"core::fmt"],[614,"core::fmt"],[615,"core::hash"],[616,"fedimint_core::core"],[617,"core::option"],[618,"serde::ser"],[619,"alloc::vec"],[620,"serde_json::value"],[621,"anyhow"],[622,"alloc::string"],[623,"core::any"]],"d":["Modules are non-compatible with older versions","Unique name for this module","Maximum size of a <code>MetaValue</code> More than 1MB would lead to …","","","A <code>MetaValue</code> in a consensus (which means it has a revision …","Input for a fedimint transaction","Errors that might be returned by the server","A key identifying a value in the meta module consensus","Contains the types defined above","Output for a fedimint transaction","Errors that might be returned by the server","Information needed by a client to update output funds","A value of the <code>MetaKey</code> peers are trying to establish …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all the configuration for the client","Contains all the configuration for the server","Will be the same for every federation member","Locally unencrypted config unique to each member","Will be encrypted and not shared such as private key …","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get consensus on the value of a given key","Get revision of the consensus on the value of a given key","Get the list of pending submissions for a given key. …","","","","Submit a change of value for a given key. Guardians only.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,0,0,0,0,0,0,0,0,0,0,0,17,18,8,10,12,15,17,18,2,68,5,2,8,9,10,12,15,17,18,38,68,5,2,8,9,10,12,15,17,18,38,5,2,8,8,9,10,10,12,12,15,15,17,17,18,18,5,2,8,9,10,12,15,17,18,5,2,5,2,0,2,5,8,9,10,12,15,17,18,5,2,8,9,10,12,15,17,18,5,2,8,9,10,12,15,17,18,38,5,2,8,9,10,12,15,5,2,8,9,10,12,15,8,10,12,15,17,18,0,5,2,8,9,10,12,15,17,18,5,5,5,5,2,2,2,2,8,8,8,8,9,9,9,9,10,10,10,10,12,12,12,12,15,15,15,15,17,17,17,17,18,18,18,18,8,10,12,15,17,18,5,2,8,9,10,12,15,5,5,2,2,8,8,9,10,10,12,12,15,15,17,17,18,18,38,68,5,2,2,8,9,10,12,15,17,18,38,5,2,8,9,10,12,15,17,18,5,2,8,9,10,12,15,17,18,5,2,5,2,8,10,12,15,17,18,68,5,2,8,9,10,12,15,17,18,38,8,10,12,15,17,18,68,5,2,8,9,10,12,15,17,18,38,8,5,2,9,8,5,2,8,9,10,12,15,5,2,8,9,10,12,15,17,18,2,5,2,8,9,10,12,15,17,18,5,2,8,10,12,15,17,18,68,5,2,8,9,10,12,15,17,18,38,68,5,2,8,9,10,12,15,17,18,38,68,5,2,8,9,10,12,15,17,18,38,8,9,68,5,2,8,9,10,12,15,17,18,38,0,0,0,0,0,0,0,0,57,53,54,55,56,57,59,60,61,53,54,55,56,57,59,60,61,53,54,55,56,57,57,59,60,61,53,54,55,56,57,59,60,61,53,56,57,59,60,57,59,60,57,59,60,53,54,53,54,55,56,57,59,60,61,53,54,55,56,57,59,60,61,57,57,57,57,57,57,57,53,54,55,56,57,59,60,61,53,54,55,56,57,57,59,60,61,53,54,55,56,57,59,60,61,57,59,60,53,56,53,54,55,56,57,59,60,61,57,53,54,55,56,57,59,60,61,57,53,54,55,56,57,59,60,61,60,53,56,56,53,54,55,56,57,59,60,61,57,59,60,57,53,54,55,56,57,59,60,61,53,56,57,53,54,55,56,57,59,60,61,53,54,55,56,57,59,60,61,53,54,55,56,57,59,60,61,60,53,54,55,56,57,59,60,61,0,0,0,0,0,0,0,0,69,69,65,66,67,65,66,67,65,66,67,65,66,67,65,66,67,65,66,67,65,66,67,65,66,67,65,66,67,65,69,69,65,66,67,65,66,67,65,66,67,65,66,67,65,65,66,67],"f":"````````````````{cb{}}00000{d{{h{f}}}}{ce{}{}}000000000000000000000{jj}{dd}{{cl}n{}}{A`A`}{AbAb}{AdAd}{{cl}Af{}}{AhAh}{{cl}Aj{}}{{cl}Al{}}{AnAn}{{cl}B`{}}{BbBb}{BdBd}{{cl}Bf{}}{{ce}Bh{}{}}00000000{{jj}Bj}{{dd}Bj}{{ce}Bj{}{}}0`{{cBl}{{C`{dBn}}}Cb}{{cBl}{{C`{jBn}}}Cb}{{cBl}{{C`{A`Bn}}}Cb}{{cBl}{{C`{AbBn}}}Cb}{{cBl}{{C`{AdBn}}}Cb}{{cBl}{{C`{AhBn}}}Cb}{{cBl}{{C`{AnBn}}}Cb}{{cBl}{{C`{BbBn}}}Cb}{{cBl}{{C`{BdBn}}}Cb}{{jc}{{C`{CdCf}}}Ch}{{dc}{{C`{CdCf}}}Ch}{{A`c}{{C`{CdCf}}}Ch}{{Abc}{{C`{CdCf}}}Ch}{{Adc}{{C`{CdCf}}}Ch}{{Ahc}{{C`{CdCf}}}Ch}{{Anc}{{C`{CdCf}}}Ch}{{Bbc}{{C`{CdCf}}}Ch}{{Bdc}{{C`{CdCf}}}Ch}{{cCh}{{C`{CdCf}}}{}}00000000{{}Cj}{c{{C`{j}}}Cl}{c{{C`{d}}}Cl}{c{{C`{A`}}}Cl}{c{{C`{Ab}}}Cl}{c{{C`{Ad}}}Cl}{c{{C`{Ah}}}Cl}{c{{C`{An}}}Cl}{{cCn}{{C`{BhD`}}}{}}000000{cDb{}}00000`{{jj}Dd}{{dd}Dd}{{A`A`}Dd}{{AbAb}Dd}{{AdAd}Dd}{{AhAh}Dd}{{AnAn}Dd}{{BbBb}Dd}{{BdBd}Dd}{{ce}Dd{}{}}00000000000000000000000000000000000{{cn}Dd{}}{{cAf}Dd{}}{{cAj}Dd{}}{{cAl}Dd{}}{{cB`}Dd{}}{{cBf}Dd{}}{{cCn}{{C`{BhDf}}}{}}000000{{jDh}Dj}0{{dDh}Dj}0{{A`Dh}Dj}0{{AbDh}Dj}{{AdDh}Dj}0{{AhDh}Dj}0{{AnDh}Dj}0{{BbDh}Dj}0{{BdDh}Dj}0{{DlDh}Dj}{cc{}}00{{{h{f}}}d}11111111{{{h{f}}{E`{CjDn}}}{{C`{cEb}}}{}}00000000222222222{Ed{{C`{jc}}}{}}{Ed{{C`{dc}}}{}}{{jc}BhEf}{{dc}BhEf}{{A`c}BhEf}{{Adc}BhEf}{{Ahc}BhEf}{{Anc}BhEf}{{Bbc}BhEf}{{Bdc}BhEf}{ce{}{}}0000000000{{A`Eh}c{}}{{AdEh}c{}}{{AhEh}c{}}{{AnEh}c{}}{{BbEh}c{}}{{BdEh}c{}}{c{{Ej{e}}}{}{}}0000000000`{{jj}{{El{Bj}}}}{{dd}{{El{Bj}}}}``{{jc}C`En}{{dc}C`En}{{A`c}C`En}{{Abc}C`En}{{Adc}C`En}{{Ahc}C`En}{{Anc}C`En}{c{{F`{f}}}{}}00000000{d{{Fd{Fb}}}}{ce{}{}}00000000{cFf{}}0000000{c{{C`{e}}}{}{}}000000000000000000000{cFh{}}0000000000``33333333333````````{cb{}}4444444444444444{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{{cl}Gd{}}{GfGf}{GhGh}{GjGj}{{ce}Bh{}{}}0000000``{{cBl}{{C`{GbBn}}}Cb}{{cBl}{{C`{GfBn}}}Cb}{{cBl}{{C`{GhBn}}}Cb}{{Gbc}{{C`{CdCf}}}Ch}{{Gfc}{{C`{CdCf}}}Ch}{{Ghc}{{C`{CdCf}}}Ch}{{cCh}{{C`{CdCf}}}{}}00{{}Fj}{{}Fl}{c{{C`{Fj}}}Cl}{c{{C`{Fl}}}Cl}{c{{C`{Fn}}}Cl}{c{{C`{G`}}}Cl}{c{{C`{Gb}}}Cl}{c{{C`{Gf}}}Cl}{c{{C`{Gh}}}Cl}{c{{C`{Gj}}}Cl}{{cCn}{{C`{BhD`}}}{}}0000000{cDb{}}{{GbGb}Dd}{{ce}Dd{}{}}000{{cGd}Dd{}}{{cCn}{{C`{BhDf}}}{}}0000000{{FjDh}Dj}{{FlDh}Dj}{{FnDh}Dj}{{G`Dh}Dj}{{GbDh}Dj}0{{GfDh}Dj}{{GhDh}Dj}{{GjDh}Dj}{cc{}}0000000{{{h{f}}{E`{CjDn}}}{{C`{cEb}}}{}}00{{ce}Fj{}{}}{{ceg}G`{}{}{}}33333333{{Gbc}BhEf}{ce{}{}}0000000{{GbEh}c{}}{c{{Ej{e}}}{}{}}0000000{GhGl}```{{Fjc}C`En}{{Flc}C`En}{{Fnc}C`En}{{G`c}C`En}{{Gbc}C`En}{{Gfc}C`En}{{Ghc}C`En}{{Gjc}C`En}{c{{F`{f}}}{}}00{c{{El{Fb}}}{}}========{Fj{{Gn{ce}}}{}{}}{G`{{Gn{Glceg}}}{}{}{}}{cFf{}}{c{{C`{e}}}{}{}}000000000000000{cFh{}}0000000{GhH`}{ce{}{}}0000000``````````000000{c{{C`{Hb}}}Cl}{c{{C`{Hd}}}Cl}{c{{C`{Hf}}}Cl}{{cCn}{{C`{BhD`}}}{}}00{{cCn}{{C`{BhDf}}}{}}00{{HbDh}Dj}{{HdDh}Dj}{{HfDh}Dj}{cc{}}00999{c{{Ej{e}}}{}{}}00```{{Hbc}C`En}{{Hdc}C`En}{{Hfc}C`En}{c{{C`{e}}}{}{}}00000{cFh{}}00`???","c":[],"p":[[10,"Any",602],[5,"MetaValue",0],[1,"u8"],[1,"slice"],[5,"MetaKey",0],[1,"u16"],[5,"DynModuleConsensusItem",603],[5,"MetaConsensusItem",0],[5,"MetaConsensusValue",0],[5,"MetaInput",0],[5,"DynInput",603],[5,"MetaOutput",0],[5,"DynOutput",603],[5,"DynOutputOutcome",603],[5,"MetaOutputOutcome",0],[5,"DynInputError",603],[6,"MetaInputError",0],[6,"MetaOutputError",0],[5,"DynOutputError",603],[1,"unit"],[6,"Ordering",604],[8,"ModuleDecoderRegistry",605],[5,"DecodeError",606],[6,"Result",607],[10,"Read",608],[1,"usize"],[5,"Error",609],[10,"Write",608],[5,"Decoder",603],[10,"Deserializer",610],[10,"Serializer",611],[6,"ErrorImpl",611],[1,"u64"],[1,"bool"],[5,"Error",612],[5,"Formatter",613],[8,"Result",613],[5,"MetaCommonInit",0],[6,"DecodingMode",605],[5,"ModuleRegistry",605],[6,"DecodingError",614],[1,"str"],[10,"Hasher",615],[8,"ModuleInstanceId",603],[5,"Request",616],[6,"Option",617],[10,"Serializer",618],[5,"Vec",619],[6,"Value",620],[8,"Result",621],[5,"String",622],[5,"TypeId",602],[5,"MetaGenParams",352],[5,"MetaGenParamsLocal",352],[5,"MetaGenParamsConsensus",352],[5,"MetaConfig",352],[5,"MetaClientConfig",352],[5,"DynClientConfig",603],[5,"MetaConfigLocal",352],[5,"MetaConfigConsensus",352],[5,"MetaConfigPrivate",352],[5,"ModuleKind",603],[1,"tuple"],[5,"ModuleConsensusVersion",623],[5,"SubmitRequest",546],[5,"GetConsensusRequest",546],[5,"GetSubmissionsRequest",546],[5,"MetaModuleTypes",0],[8,"GetSubmissionResponse",546]],"b":[[181,"impl-Debug-for-MetaKey"],[182,"impl-Display-for-MetaKey"],[183,"impl-Debug-for-MetaValue"],[184,"impl-Display-for-MetaValue"],[185,"impl-Debug-for-MetaConsensusItem"],[186,"impl-Display-for-MetaConsensusItem"],[188,"impl-Display-for-MetaInput"],[189,"impl-Debug-for-MetaInput"],[190,"impl-Debug-for-MetaOutput"],[191,"impl-Display-for-MetaOutput"],[192,"impl-Display-for-MetaOutputOutcome"],[193,"impl-Debug-for-MetaOutputOutcome"],[194,"impl-Debug-for-MetaInputError"],[195,"impl-Display-for-MetaInputError"],[196,"impl-Debug-for-MetaOutputError"],[197,"impl-Display-for-MetaOutputError"],[442,"impl-Display-for-MetaClientConfig"],[443,"impl-Debug-for-MetaClientConfig"]]}],\
["fedimint_meta_server",{"doc":"","t":"FFFFFNNNNNNNNNNNNNNNNONNNNNNNNNONNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGFPFFFFFFFFFPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNN","n":["Meta","MetaGenParams","MetaGenParamsConsensus","MetaGenParamsLocal","MetaInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","change_consensus","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","default","default","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_parts","from_ref","from_ref","from_ref","from_ref","get_client_config","get_client_config","get_consensus","get_database_migrations","get_database_migrations","get_desired","get_submission","handle_get_consensus_request","handle_get_consensus_revision_request","handle_get_submissions_request","handle_submit_request","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","local","module_kind","num_peers","our_peer_id","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","serialize","serialize","serialize","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_parts","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","vzip","vzip","vzip","Consensus","DbKeyPrefix","DbKeyPrefixIter","Desired","MetaConsensusKey","MetaConsensusKeyPrefix","MetaDesiredKey","MetaDesiredKeyPrefix","MetaDesiredValue","MetaSubmissionValue","MetaSubmissionsByKeyPrefix","MetaSubmissionsKey","MetaSubmissionsKeyPrefix","Submissions","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","hash","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","key","len","marker","next","next_back","nth","peer_id","salt","salt","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_meta_server"],[140,"fedimint_meta_server::db"],[401,"fedimint_core::core::server"],[402,"fedimint_core::module"],[403,"alloc::vec"],[404,"core::any"],[405,"fedimint_core::module"],[406,"fedimint_core::module::audit"],[407,"fedimint_core::core"],[408,"core::future::future"],[409,"alloc::boxed"],[410,"core::pin"],[411,"fedimint_core::db"],[412,"fedimint_meta_common"],[413,"fedimint_core::db"],[414,"serde::de"],[415,"fedimint_core::module"],[416,"erased_serde::ser"],[417,"erased_serde::ser"],[418,"core::iter::traits::iterator"],[419,"erased_serde::error"],[420,"core::fmt"],[421,"core::fmt"],[422,"anyhow"],[423,"fedimint_core::config"],[424,"alloc::collections::btree::map"],[425,"fedimint_core::db"],[426,"fedimint_meta_common"],[427,"tonic::request"],[428,"fedimint_core::core"],[429,"fedimint_core::module::version"],[430,"fedimint_core::module"],[431,"fedimint_core::encoding"],[432,"std::io"],[433,"std::io::error"],[434,"std::io"]],"d":["Meta module","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","Generates the module","","","","","","Queries the database and returns all assets and …","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","Check the difference between what’s desired vs submitted …","","","","","","","","","","Generates configs for all peers in an untrusted manner","","","","","","Dumps all database items for debugging","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Converts the consensus config into the client config","","","","DB migrations to move from old to newer versions","","","","","","","Initialize the module","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","Generates configs for all peers in a trusted manner for …","","","","","","","","","","","","","","","","","","","","Returns the version of this module","","","","","","Current consensuson","Namespaces DB keys for this module","An iterator over the variants of DbKeyPrefix","How we want to vote","","","","","","","","","","Current submitted votes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,4,4,22,4,4,19,20,21,22,4,19,20,21,22,4,4,4,19,20,21,22,19,20,21,22,19,4,4,22,0,22,4,19,20,19,20,21,22,22,19,20,21,22,22,19,20,21,19,20,21,22,4,19,20,21,22,4,19,19,20,21,22,22,22,4,22,22,4,4,4,4,4,4,22,22,19,20,21,22,4,19,20,21,22,4,19,22,4,4,4,4,4,4,4,4,4,4,19,20,21,22,22,22,19,20,21,22,19,22,22,19,20,21,22,4,19,20,21,22,4,19,20,21,22,4,22,22,22,22,19,20,21,22,4,79,0,0,79,0,0,0,0,0,0,0,0,0,79,80,79,80,81,87,47,82,88,83,89,90,49,79,80,81,87,47,82,88,83,89,90,49,79,80,81,82,83,79,80,81,82,83,81,87,47,82,88,83,89,90,49,81,87,47,82,88,83,89,90,49,81,87,47,82,88,83,89,90,49,81,47,82,83,49,81,47,82,83,49,81,81,81,81,47,47,47,47,82,82,82,82,83,83,83,83,49,49,49,49,81,47,82,83,49,79,79,80,81,87,47,82,88,83,89,90,49,79,80,81,87,47,82,88,83,89,90,49,81,81,87,47,82,82,88,83,83,89,90,49,79,80,81,82,83,80,81,82,83,80,79,80,81,87,47,82,88,83,89,90,49,80,79,80,81,87,47,82,88,83,89,90,49,79,83,80,80,80,80,80,83,47,49,81,47,82,83,49,80,81,81,87,87,47,82,82,88,88,83,83,89,89,90,90,49,79,80,81,82,83,79,79,80,81,87,47,82,88,83,89,90,49,79,80,81,87,47,82,88,83,89,90,49,79,80,81,87,47,82,88,83,89,90,49,47,49,79,80,81,87,47,82,88,83,89,90,49],"f":"`````{c{{f{{d{b}}}}}{}}{h{{f{{d{h}}}}}}{cj{}}{cl{}}{{hnA`Ab}{{Ah{{Af{Ad}}}}}}{{cnA`Aj}{{Ah{{Af{Ad}}}}}{}}{ce{}{}}000000000`{{{n{Al}}AnB`{f{Bb}}}Bd}{BfBf}{BhBh}{BjBj}{BlBl}{{ce}Bd{}{}}000`{{cnAj}{{Ah{{Af{Ad}}}}}{}}{{hn}{{Ah{{Af{Ad}}}}}}{cBn{}}`{cC`{}}0{{}Bf}{{}Bh}{c{{Cb{Bf}}}Cd}{c{{Cb{Bh}}}Cd}{c{{Cb{Bj}}}Cd}{{BlCfCh}{{Ah{{Af{Ad}}}}}}{{cCfCh}{{Ah{{Af{Ad}}}}}{}}{{cCj}{{Cb{BdCl}}}{}}00{{cn{f{Cn}}}{{Ah{{Af{Ad}}}}}{}}{{Bln{f{Cn}}}{{Af{D`}}}}{{cCj}{{Cb{BdDb}}}{}}00{{BfDd}{{Cb{BdDf}}}}{{BhDd}{{Cb{BdDf}}}}{{BjDd}{{Cb{BdDf}}}}{{BlDd}Dh}{{hDd}Dh}{cc{}}0000{{}Bf}1111{{BlDj}{{Dn{Dl}}}}{{cAjDj}{{Cb{E`Eb}}}{}}{{nAn}{{Ed{B`}}}}{c{{Ej{Bn{Eh{n}{{Ef{{Ah{{Af{Ad}}}}}}}}}}}{}}{Bl{{Ej{BnEl}}}}{n{{f{{F`{AnEn}}}}}}{{nAnBb}{{Ed{Fb}}}}{{h{n{Al}}Fd}{{Cb{{Ed{Ff}}Fh}}}}{{h{n{Al}}Fd}{{Cb{{Ed{Fj}}Fh}}}}{{h{n{Al}}FlFn}{{Cb{{Ej{BbB`}}Fh}}}}{{h{n{G`}}FlGb}{{Cb{BdFh}}}}{{Bl{Gd{Bl}}}{{Ah{{Af{Ad}}}}}}{{cGfGhGjGlBb}{{Ah{{Af{Ad}}}}}{}}{ce{}{}}0000{c{{Gn{e}}}{}{}}0000`{cH`{}}``{{hnHb}{{Ah{{Af{Ad}}}}}}{{cnHbAj}{{Ah{{Af{Ad}}}}}{}}{{cnHdBb}{{Ah{{Af{Ad}}}}}{}}{{hnHfBb}{{Ah{{Af{Ad}}}}}}{{cnHhAj}{{Ah{{Af{Ad}}}}}{}}{{hnHj}{{Ah{{Af{Ad}}}}}}{{cnHlHbAj}{{Ah{{Af{Ad}}}}}{}}{{hnHnHb}{{Ah{{Af{Ad}}}}}}{{Bfc}CbI`}{{Bhc}CbI`}{{Bjc}CbI`}{BlIb}{cIb{}}{cId{}}{ce{}{}}000{BfF`}{{Bl{If{Bb}}Ch}{{Ej{BbGh}}}}{{c{If{Bb}}Ch}{{Ej{BbGh}}}{}}{c{{Cb{e}}}{}{}}000000000{cIh{}}0000{{cBbGh}{{Cb{BdEb}}}{}}{{BlBbGh}{{Dn{Bd}}}}{{cCh}{{Cb{BdEb}}}{}}{{BlIj}{{If{Il}}}}99999```````````````9999999999999999999999{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{{ce}Bd{}{}}0000{{cJh}{{Cb{JbJj}}}Jl}{{cJh}{{Cb{JnJj}}}Jl}{{cJh}{{Cb{EnJj}}}Jl}{{cJh}{{Cb{JdJj}}}Jl}{{cJh}{{Cb{K`Jj}}}Jl}{{cJh}{{Cb{JfJj}}}Jl}{{cJh}{{Cb{KbJj}}}Jl}{{cJh}{{Cb{KdJj}}}Jl}{{cJh}{{Cb{FbJj}}}Jl}{{Jbc}{{Cb{KfKh}}}Kj}{{Jnc}{{Cb{KfKh}}}Kj}{{Enc}{{Cb{KfKh}}}Kj}{{Jdc}{{Cb{KfKh}}}Kj}{{K`c}{{Cb{KfKh}}}Kj}{{Jfc}{{Cb{KfKh}}}Kj}{{Kbc}{{Cb{KfKh}}}Kj}{{Kdc}{{Cb{KfKh}}}Kj}{{Fbc}{{Cb{KfKh}}}Kj}{{cKj}{{Cb{KfKh}}}{}}00000000{{cCj}{{Cb{BdCl}}}{}}0000{{JbJb}Kl}{{EnEn}Kl}{{JdJd}Kl}{{JfJf}Kl}{{FbFb}Kl}{{ce}Kl{}{}}0000000000000000000{{cCj}{{Cb{BdDb}}}{}}0000{{InDd}Dh}0{{J`Dd}Dh}{{JbDd}Dh}{{JnDd}Dh}{{EnDd}Dh}{{JdDd}Dh}{{K`Dd}Dh}{{JfDd}Dh}{{KbDd}Dh}{{KdDd}Dh}{{FbDd}Dh}{cc{}}0000000000{{{If{Kn}}{Lb{C`L`}}}{{Cb{cLd}}}{}}0000000000011111{{J`Kf}{{Ed{In}}}}{{Jbc}BdLf}{{Jdc}BdLf}{{Jfc}BdLf}`{ce{}{}}00000000000{c{{Gn{e}}}{}{}}0000000000{{}J`}`{J`Kf}`{J`{{Ed{c}}}{}}0{{J`Kf}{{Ed{c}}}{}}```{{Jbc}CbI`}{{Enc}CbI`}{{Jdc}CbI`}{{Jfc}CbI`}{{Fbc}CbI`}{J`{{F`{Kf{Ed{Kf}}}}}}{c{{f{Kn}}}{}}000000000000000<<<<<{cCn{}}{c{{Cb{e}}}{}{}}000000000000000000000{cIh{}}0000000000``???????????","c":[],"p":[[5,"DynServerModule",401],[5,"ApiEndpoint",402],[5,"Vec",403],[5,"Meta",0],[10,"Any",404],[10,"IDynCommonModuleInit",402],[5,"DatabaseTransaction",405],[5,"Audit",406],[8,"ModuleInstanceId",407],[10,"Future",408],[5,"Box",409],[5,"Pin",410],[1,"u16"],[5,"NonCommittable",405],[5,"MetaKey",411],[5,"MetaValue",411],[5,"PeerId",412],[1,"unit"],[5,"MetaGenParams",0],[5,"MetaGenParamsLocal",0],[5,"MetaGenParamsConsensus",0],[5,"MetaInit",0],[5,"DatabaseVersion",405],[5,"Decoder",407],[6,"Result",413],[10,"Deserializer",414],[5,"PeerHandle",402],[5,"ConfigGenModuleParams",415],[10,"Serializer",416],[6,"ErrorImpl",416],[5,"String",417],[10,"Iterator",418],[5,"Error",419],[5,"Formatter",420],[5,"Error",420],[8,"Result",420],[5,"ServerModuleConsensusConfig",415],[5,"MetaClientConfig",421],[8,"Result",422],[5,"ClientModuleConfig",415],[5,"Error",422],[6,"Option",423],[17,"Output"],[1,"fn"],[5,"BTreeMap",424],[8,"ServerMigrationFn",405],[5,"MetaDesiredValue",140],[1,"tuple"],[5,"MetaSubmissionValue",140],[5,"GetConsensusRequest",425],[5,"MetaConsensusValue",411],[5,"ApiError",402],[1,"u64"],[5,"ApiAuth",402],[5,"GetSubmissionsRequest",425],[5,"Committable",405],[5,"SubmitRequest",425],[5,"ServerModuleInitArgs",402],[5,"NumPeers",412],[5,"ServerModuleConfig",415],[5,"Database",405],[5,"TaskGroup",426],[5,"Request",427],[5,"ModuleKind",407],[5,"OutPoint",412],[5,"DynModuleConsensusItem",407],[5,"MetaConsensusItem",411],[5,"DynInput",407],[5,"MetaInput",411],[5,"DynOutput",407],[5,"MetaOutput",411],[10,"Serializer",428],[5,"SupportedModuleApiVersions",429],[5,"DynCommonModuleInit",402],[1,"slice"],[5,"TypeId",404],[5,"CoreConsensusVersion",429],[5,"ModuleConsensusVersion",429],[6,"DbKeyPrefix",140],[5,"DbKeyPrefixIter",140],[5,"MetaDesiredKey",140],[5,"MetaConsensusKey",140],[5,"MetaSubmissionsKey",140],[8,"ModuleDecoderRegistry",430],[5,"DecodeError",431],[10,"Read",432],[5,"MetaDesiredKeyPrefix",140],[5,"MetaConsensusKeyPrefix",140],[5,"MetaSubmissionsKeyPrefix",140],[5,"MetaSubmissionsByKeyPrefix",140],[1,"usize"],[5,"Error",433],[10,"Write",432],[1,"bool"],[1,"u8"],[6,"DecodingMode",430],[5,"ModuleRegistry",430],[6,"DecodingError",405],[10,"Hasher",434]],"b":[[249,"impl-Debug-for-DbKeyPrefix"],[250,"impl-Display-for-DbKeyPrefix"]]}],\
["fedimint_metrics",{"doc":"","t":"FKIIFIIIFFOONNNNNNNNNNNONNNNMNNNNNMNNNNNNNHNNQNNNNNNNNQNNNNNQEQQHNNNNNNNNNNNNNNOOOOONNNNN","n":["AMOUNTS_BUCKETS_SATS","Encoder","Gauge","GaugeVec","Histogram","HistogramVec","IntCounter","IntCounterVec","REGISTRY","TextEncoder","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect","core","default","deref","deref","desc","encode","encode","encode_to_string","encode_utf8","fmt","fmt","format_type","format_type","from","from","from","from","from_ref","from_ref","get_metrics","get_sample_count","get_sample_sum","histogram_opts","into","into","into","into","into_request","into_request","into_request","into_request","lazy_static","local","metric","new","observe","observe_closure_duration","opts","prometheus","register_histogram_with_registry","register_int_counter_vec_with_registry","run_api_server","start_timer","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","v","v","v","v","v","vzip","vzip","vzip","vzip","with_opts"],"q":[[0,"fedimint_metrics"],[89,"prometheus::proto"],[90,"alloc::vec"],[91,"prometheus::registry"],[92,"prometheus::desc"],[93,"prometheus::errors"],[94,"core::result"],[95,"std::io"],[96,"alloc::string"],[97,"core::fmt"],[98,"core::fmt"],[99,"tonic::request"],[100,"prometheus::histogram"],[101,"prometheus::proto"],[102,"core::net::socket_addr"],[103,"fedimint_core::task"],[104,"fedimint_core::task"],[105,"prometheus::histogram"],[106,"prometheus::histogram"]],"d":["","An interface for encoding metric families into an …","A <code>Metric</code> represents a single numerical value that can …","A <code>Collector</code> that bundles a set of <code>Gauge</code>s that all share …","A <code>Metric</code> counts individual observations from an event or …","A <code>Collector</code> that bundles a set of Histograms that all …","The integer version of <code>Counter</code>. Provides better …","The integer version of <code>CounterVec</code>. Provides better …","","An implementation of an <code>Encoder</code> that converts a …","","","","","","","","","","","","","","","","","","","<code>encode</code> converts a slice of MetricFamily proto messages …","","Converts metrics to <code>String</code>.","Appends metrics to a given <code>String</code> buffer.","","","<code>format_type</code> returns target format.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Return count of all samples.","Return accumulated sum of all samples.","Create a <code>HistogramOpts</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Return a <code>LocalHistogram</code> for single thread usage.","","Create a new text encoder.","Add a single observation to the <code>Histogram</code>.","Observe execution time of a closure, in second.","Create an <code>Opts</code>.","","Create a <code>Histogram</code> and registers to a custom registry.","Create an <code>IntCounterVec</code> and registers to a custom registry.","","Return a <code>HistogramTimer</code> to track a duration.","","","","","","","","","","","","","","","","","","","","","","","<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options."],"i":[0,0,0,0,0,0,0,0,0,0,6,8,6,8,5,1,6,8,5,1,1,1,1,1,5,6,8,1,11,5,5,5,5,1,11,5,6,8,5,1,1,1,0,1,1,0,6,8,5,1,6,8,5,1,0,1,1,5,1,1,0,0,0,0,0,1,1,6,8,5,1,6,8,5,1,6,8,5,1,35,36,37,38,39,6,8,5,1,1],"f":"````````````{ce{}{}}0000000{bb}{{ce}d{}{}}{b{{h{f}}}}`{{}j}{ln}{A`{{h{Ab}}}}{b{{h{Ad}}}}{{Af{Ah{f}}c}{{Al{dAj}}}An}{{j{Ah{f}}c}{{Al{dAj}}}An}{{j{Ah{f}}}{{Al{B`Aj}}}}{{j{Ah{f}}B`}{{Al{dAj}}}}{{jBb}{{Al{dBd}}}}{{bBb}{{Al{dBd}}}}{AfBf}{jBf}{cc{}}00000{{}{{Bj{BhB`}}}}{bBl}{bAb}`{ce{}{}}000{c{{Bn{e}}}{}{}}000`{bC`}{bCb}{{}j}{{bAb}d}{{be}c{}{{Cf{}{{Cd{c}}}}}}````{{ChCj}{{Cn{Cl}}}}{bD`}8{c{{Al{e}}}{}{}}0000000{cDb{}}000`````::::{Dd{{Al{bAj}}}}","c":[],"p":[[5,"Histogram",0],[1,"unit"],[5,"MetricFamily",89],[5,"Vec",90],[5,"TextEncoder",0],[5,"REGISTRY",0],[5,"Registry",91],[5,"AMOUNTS_BUCKETS_SATS",0],[1,"f64"],[5,"Desc",92],[10,"Encoder",0],[1,"slice"],[6,"Error",93],[6,"Result",94],[10,"Write",95],[5,"String",96],[5,"Formatter",97],[5,"Error",97],[1,"str"],[5,"StatusCode",98],[1,"tuple"],[1,"u64"],[5,"Request",99],[5,"LocalHistogram",100],[5,"Metric",89],[17,"Output"],[10,"FnOnce",101],[6,"SocketAddr",102],[5,"TaskGroup",103],[5,"TaskShutdownToken",103],[8,"Result",104],[5,"HistogramTimer",100],[5,"TypeId",105],[5,"HistogramOpts",100],[8,"IntCounter",0],[8,"IntCounterVec",0],[8,"Gauge",0],[8,"GaugeVec",0],[8,"HistogramVec",0]],"b":[]}],\
["fedimint_mint_client",{"doc":"","t":"SFFPPSPPPPPPPPPPFPPPPPSSSFFFGFGGGFFFGGFGGFFFGFFFPKPFGFFPPPGPFFFPFGFPPPFFFPPPPPPPNOOONNNNNNNNNNNNNNNCNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNONONNOCNNOCNNNNOONNNNOOOOOMNNNHNNNNNNNNNNNNNNNNNNNNNNNNOOONNNONNNHONNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOPGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNOONNNNNNNNNNNNOOFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNOONNOOOONNOOONNOONNNNNNNNNNNNNNNNNNONNNNPFFGFPFFPFFPFFPFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONOOOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFFFFFFFGPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNPFGFFFPPONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNHHNNNHNNNNNNNNNNNNNNNNNNNNPSPPFFGFFFFFSSPOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNN","n":["BASE64_URL_SAFE","BackupRequest","BlindNonce","Created","Created","DEFAULT_MAX_NOTES_PER_DENOMINATION","Default","Default","Default","Default","Default","Default","Done","Failed","FederationIdPrefix","Input","InsufficientBalanceError","InvalidAmountTier","InvalidAmountTier","InvalidSignature","Invite","Issuing","KIND","LOG_TARGET","MINT_E_CASH_TYPE_CHILD_ID","MintClientContext","MintClientInit","MintClientModule","MintClientStateMachines","MintCommonInit","MintConsensusItem","MintInput","MintInputError","MintInputV0","MintModuleTypes","MintOperationMeta","MintOperationMetaVariant","MintOutput","MintOutputBlindSignature","MintOutputError","MintOutputOutcome","MintOutputOutcomeV0","MintOutputV0","MintRestoreStateMachine","MintRestoreStates","Nonce","Note","NoteIndex","Notes","NotesSelector","OOB","OOBNotes","OOBNotesData","OOBReissueTag","OOBSpendTag","Output","Refunded","Reissuance","ReissueExternalNotesState","Restore","SelectNotesWithAtleastAmount","SelectNotesWithExactAmount","SignedBackupRequest","SpendOOB","SpendOOBRefund","SpendOOBState","SpendableNote","SpentCoin","Success","UnknownInputVariant","UnknownMintInputVariantError","UnknownMintOutputOutcomeVariantError","UnknownMintOutputVariantError","UnknownOutputVariant","UserCanceledFailure","UserCanceledProcessing","UserCanceledSuccess","V0","V0","V0","advance","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_common","as_u64","await_cancel_oob_payment","await_output_finalized","await_primary_module_output","await_primary_module_output","await_spend_oob_refund","backup","backup","backup","blind_nonce","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","client_db","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","common","compare","compare","config","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_exact_output","create_input","create_input_from_notes","create_output","create_sufficient_input","create_sufficient_input","database_version","decoder","decoder","decoder","decoder","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","engine","engine","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_meta","federation_id","federation_id_prefix","federation_invite","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_u64","get_all_spendable_notes","get_balance","get_balance","get_database_migrations","get_next_note_index","get_wallet_summary","handle_cli_command","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","init","init","input","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","leave","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","mint_decoder","mint_operation","module_db","module_kind","module_kind","new","new_ecash_note","new_note_secret","new_note_secret_static","new_v0","new_v0","new_v0","new_with_invite","next","nonce","nonce","note","note","notes","notes_json","notifier","oob","operation_id","operation_id","operation_id","output","output_amount","output_amount","partial_cmp","partial_cmp","payload","peer_tbs_pks","prepare_plaintext_ecash_backup","recover","recover","reissue_external_notes","request","requested_amount","secp","secret","secret","select_notes","select_notes","select_notes","select_notes","select_notes_from_stream","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","signature","signature","signature","source","source","spend_key","spend_key","spend_notes","spend_notes_oob","spend_notes_with_selector","spendable_notes_to_operation_id","state","subscribe_balance_changes","subscribe_balance_changes","subscribe_reissue_external_notes","subscribe_spend_notes","supported_api_versions","supported_api_versions","supports_backup","supports_backup","supports_being_primary","supports_being_primary","tbs_pks","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_amount","total_amount","transaction_id","transitions","transitions","try_cancel_spend_notes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_triggered","validate_notes","variant","variant","variant","variant","verify","verify_valid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bytes","variant","bytes","variant","legacy_out_point","oob_notes","out_point_indices","requested_amount","txid","bytes","variant","bytes","variant","bytes","variant","bytes","federation_id","peer_apis","variant","Default","EcashBackup","EcashBackupV0","V0","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","into","into","into_dyn","into_request","into_request","new_empty","new_v0","next_note_idx","pending_notes","recovery","serialize","serialize","session_count","spendable_notes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bytes","variant","CompressedBlindedMessage","EcashRecoveryFinalState","MintRecovery","MintRecoveryState","add_next_pending_nonce_in_pending_pool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","delete_dbtx","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fill_initial_pending_nonces","finalize","finalize_dbtx","fmt","fmt","fmt","fmt","from","from","from","from","from","from_backup","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","gap_limit","handle_input","handle_input","handle_output","handle_output","into","into","into","into","into_request","into_request","into_request","into_request","last_mined_nonce_idx","load_dbtx","load_finalized","new","next_note_idx","next_pending_note_idx","observe_nonce_idx_being_used","partial_cmp","pending_nonces","pending_outputs","pub_key_shares","secret","serialize","serialize","spendable_notes","spendable_notes","state","store_dbtx","store_finalized","tbs_pks","threshold","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unconfirmed_notes","vzip","vzip","vzip","vzip","CancelledOOBSpend","CancelledOOBSpendKey","CancelledOOBSpendKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","NextECashNoteIndex","NextECashNoteIndexKey","NextECashNoteIndexKeyPrefix","Note","NoteKey","NoteKeyPrefix","RecoveryFinalized","RecoveryFinalizedKey","RecoveryFinalizedKeyPrefix","RecoveryState","RecoveryStateKey","RestoreStateKeyPrefix","amount","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nonce","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FeeConsensus","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigLocal","MintConfigPrivate","MintGenParams","MintGenParamsConsensus","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","denomination_base","denomination_base","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gen_denominations","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","max_notes_per_denomination","max_notes_per_denomination","new","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Created","Error","MintInputCommon","MintInputStateCreated","MintInputStateError","MintInputStateMachine","MintInputStateRefund","MintInputStateRefundSuccess","MintInputStateSuccess","MintInputStates","Refund","RefundSuccess","Success","amount","as_any","await_refund_success","await_success","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","input_idx","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","refund","refund_txid","refund_txid","spendable_note","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transition_refund_success","transition_success","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Created","MintOOBStateMachine","MintOOBStates","MintOOBStatesCreated","MintOOBStatesTimeoutRefund","MintOOBStatesUserRefund","TimeoutRefund","UserRefund","amount","as_any","await_timeout_cancel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","refund_txid","refund_txid","spendable_note","state","timeout","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_timeout_cancel","transition_user_cancel","transitions","transitions","transitions","try_cancel_oob_spend","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Aborted","BLINDING_KEY_CHILD_ID","Created","Failed","MintOutputCommon","MintOutputStateMachine","MintOutputStates","MintOutputStatesAborted","MintOutputStatesCreated","MintOutputStatesFailed","MintOutputStatesSucceeded","NoteIssuanceRequest","RETRY_DELAY","SPEND_KEY_CHILD_ID","Succeeded","amount","amount","as_any","await_outcome_ready","await_tx_rejected","blinded_message","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","error","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","issuance_request","new","nonce","operation_id","operation_id","operation_id","out_point","serialize","spend_key","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transition_outcome_ready","transition_tx_rejected","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_client"],[1183,"fedimint_mint_client::MintConsensusItem"],[1185,"fedimint_mint_client::MintInput"],[1187,"fedimint_mint_client::MintOperationMetaVariant"],[1192,"fedimint_mint_client::MintOutput"],[1194,"fedimint_mint_client::MintOutputOutcome"],[1196,"fedimint_mint_client::MintRestoreStates"],[1198,"fedimint_mint_client::OOBNotesData"],[1202,"fedimint_mint_client::backup"],[1273,"fedimint_mint_client::backup::EcashBackup"],[1275,"fedimint_mint_client::backup::recovery"],[1397,"fedimint_mint_client::client_db"],[1678,"fedimint_mint_client::config"],[1899,"fedimint_mint_client::input"],[2137,"fedimint_mint_client::oob"],[2290,"fedimint_mint_client::output"],[2537,"core::any"],[2538,"fedimint_core::module"],[2539,"fedimint_core::core"],[2540,"fedimint_core::util"],[2541,"fedimint_core"],[2542,"fedimint_core"],[2543,"core::future::future"],[2544,"alloc::boxed"],[2545,"core::pin"],[2546,"fedimint_core::core"],[2547,"core::cmp"],[2548,"fedimint_core::module::registry"],[2549,"fedimint_core::encoding"],[2550,"core::result"],[2551,"std::io"],[2552,"fedimint_core::core"],[2553,"std::io"],[2554,"fedimint_client::transaction::builder"],[2555,"alloc::vec"],[2556,"fedimint_core::tiered_multi"],[2557,"fedimint_client::transaction::builder"],[2558,"erased_serde::ser"],[2559,"erased_serde::ser"],[2560,"core::iter::traits::iterator"],[2561,"bitcoin_hashes::sha256"],[2562,"core::hash"],[2563,"erased_serde::error"],[2564,"fedimint_core::config"],[2565,"fedimint_core::api"],[2566,"core::option"],[2567,"core::fmt"],[2568,"core::fmt"],[2569,"fedimint_core::tiered_multi"],[2570,"fedimint_client::module::init"],[2571,"fedimint_client::module"],[2572,"fedimint_core::config"],[2573,"fedimint_derive_secret"],[2574,"fedimint_client::sm::notifier"],[2575,"fedimint_core::api"],[2576,"fedimint_core::module"],[2577,"fedimint_client::oplog"],[2578,"fedimint_core::core"],[2579,"serde_json::value"],[2580,"serde_json::error"],[2581,"fedimint_client::module"],[2582,"fedimint_client::module::recovery"],[2583,"serde::ser"],[2584,"core::marker"],[2585,"futures_core::stream"],[2586,"serde::ser"],[2587,"anyhow"],[2588,"secp256k1::key"],[2589,"fedimint_client::oplog"],[2590,"fedimint_client::sm::state"],[2591,"secp256k1"],[2592,"secp256k1::context"],[2593,"tbs"],[2594,"fedimint_core::core"],[2595,"std::time"],[2596,"tbs"]],"d":["","","<code>Nonce</code> but blinded by the user key","The operation has been created and is waiting to be …","The e-cash has been selected and given to the caller","By default, the maximum notes per denomination when …","","","","","","","The operation has been completed successfully.","Some error happened and the operation failed.","","","","","","","Invite code to join the federation by which the e-cash was …","We are waiting for blind signatures to arrive but can …","","","","","","The <code>MintClientModule</code> is responsible for handling e-cash …","","","The mint module currently doesn’t define any consensus …","","","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","","","","Old and no longer used, will be deleted in the future","Old and no longer used, will be deleted in the future","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","An index used to deterministically derive <code>Note</code>s","","","","An encapsulation of <code>FederationId</code> and e-cash notes in the …","","","","","We tried to cancel the operation automatically after the …","Either <code>legacy_out_point</code> or both <code>txid</code> and <code>out_point_indices</code> …","The high-level state of a reissue operation started with …","","Select notes with total amount of <em>at least</em> <code>request_amount</code>. …","Select notes with total amount of <em>exactly</em> <code>request_amount</code>. …","","","","The high-level state of a raw e-cash spend operation …","A <code>Note</code> with associated secret key that allows to proof …","","We tried to cancel the operation automatically after the …","","","","","","The user-requested cancellation failed, the e-cash notes …","The user requested a cancellation of the operation, we are …","The user-requested cancellation was successful, we got all …","","","","","","","","","","","","","","","","","","","Wait for the e-cash notes to be retrieved. If this is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Database keys used throughout the mint client module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mint input of at least <code>min_amount</code>.","Create a mint input from external, potentially untrusted …","Creates a mint output with exactly the given <code>amount</code>, …ase64 encode a set of e-cash notes for out-of-band …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode a set of out-of-band e-cash notes from a base64 …","","","","","","","Returns the number of held e-cash notes per denomination","","","","","","","","","","","","","","","","","","","","","","","","","","State machines for mint inputs","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We always keep track of an incrementing index in the …","Derive the note <code>DerivableSecret</code> from the Mint’s <code>secret</code> …","","","","","","","","","","","","","State machines for out-of-band transmitted e-cash notes","","","","State machines for mint outputs","","","","","","","","","","Try to reissue e-cash notes received from a third party to …","","","","","","Select notes from stream for requested_amount. The stream …","","","Select notes with <code>requested_amount</code> using <code>notes_selector</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","Fetches and removes notes of <em>at least</em> amount <code>min_amount</code> …","","Same as <code>spend_notes</code> but allows different to select notes …","","","","","Subscribe to updates on the progress of a reissue …","Subscribe to updates on the progress of a raw e-cash spend …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","Try to cancel a spend operation started with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the given notes and return the total amount of …","","","","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Snapshot of a ecash state (notes)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","An empty backup with, like a one created by a newly …","","","","","","","","","","","","","","","","","","","","","","","Newtype over <code>BlindedMessage</code> to enable <code>Ord</code>","","","The state machine used for fast-forwarding backup from …","Add next nonce from <code>amount</code> tier to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill each tier pool to the gap limit","","Handle session outcome, adjusting the current state","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","The number of nonces we look-ahead when looking for mints …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>LastECashNoteIndex</code> but tracked in flight. Basically max …","","","","Note index to derive next note in a given amount tier","Tail of <code>pending</code>. <code>pending_notes</code> is filled by generating …","React to a valid pending nonce being tracked being used in …","","Next nonces that we expect might soon get used. Once we …","Nonces that we track that are currently spendable.","Public key shares for each peer","","","","","","","","","Aggregate public key for each amount tier","Threshold","","","","","","","","","","","","","","","","","","","Unsigned notes","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeees charged for ecash transactions","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum amount of change a client can request","","","","","The set of public keys for blind-signing all peers and note","","","","","","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine managing the e-cash redemption process …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The e-cash has been taken out of the wallet and we are …","","State machine managing e-cash that has been taken out of …","","","","The timeout of this out-of-band transaction was hit and we …","The user has triggered a refund.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction containing the issuance was rejected, we …","Child ID used to derive the blinding key from a note’s …","Issuance request was created, we are waiting for blind …","The transaction containing the issuance was accepted but …","","","State machine managing the e-cash issuance process related …","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","Keeps the data to generate <code>SpendableNote</code> once the mint …","","Child ID used to derive the spend key from a note’s …","The issuance was completed successfully and the e-cash …","","","","","","","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the blind signature to create spendable e-cash notes","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generate a request session for a single note and returns …","Return nonce of the e-cash note being requested","","","","","","Spend key from which the note nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","","","","","","","",""],"i":[0,0,0,42,43,0,19,24,28,32,41,48,42,42,41,51,0,37,38,37,41,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,51,0,0,0,0,51,43,45,0,51,0,0,0,45,0,0,0,37,43,37,0,0,0,38,43,43,43,24,28,32,1,27,31,44,19,24,28,32,37,38,9,51,46,1,6,9,9,9,9,0,9,9,31,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,9,9,0,19,19,20,21,22,23,24,24,26,27,28,28,30,31,32,32,34,35,37,37,38,38,40,41,42,43,44,45,46,6,47,48,49,51,51,52,1,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,6,47,48,49,51,52,1,22,1,0,22,1,0,40,61,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,41,48,49,51,52,1,61,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,48,49,51,52,1,61,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,48,49,51,52,1,9,9,9,9,9,9,9,9,9,46,87,46,46,9,1,61,73,19,20,21,22,23,24,26,27,28,30,31,32,34,35,40,42,43,44,45,52,1,61,73,19,20,21,22,23,24,26,27,28,30,31,32,34,35,40,42,43,44,45,52,1,46,46,19,24,28,32,37,38,210,211,24,28,32,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,45,48,49,51,52,1,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,26,26,26,26,27,27,27,27,28,28,28,28,30,30,30,30,31,31,31,31,32,32,32,32,34,34,34,34,35,35,35,35,37,37,37,37,38,38,38,38,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,45,45,45,45,48,48,48,48,49,49,49,49,51,51,51,51,52,52,52,52,1,1,1,1,19,24,28,32,37,38,51,51,61,73,19,20,21,22,23,24,26,27,28,30,31,32,34,35,40,42,43,44,45,52,1,44,9,40,40,61,73,19,19,20,21,22,23,87,24,24,26,26,27,27,28,28,30,30,31,31,32,32,34,34,35,35,37,37,38,38,40,40,41,42,43,44,45,46,9,6,47,47,48,49,51,52,1,1,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,37,38,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,61,19,20,21,22,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,48,49,51,52,1,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,6,47,48,49,51,52,1,40,1,9,9,9,46,9,9,9,9,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,48,49,51,52,61,46,46,0,9,9,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,19,24,28,32,37,38,51,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,9,24,28,32,6,9,6,46,46,40,9,9,9,24,28,32,40,1,52,21,52,27,40,40,9,0,51,51,49,0,9,9,22,1,61,6,9,46,46,9,73,47,9,9,6,128,131,132,9,0,61,73,19,20,21,22,23,24,26,27,28,30,31,32,34,35,40,42,43,44,45,52,1,61,73,21,52,37,38,21,52,9,9,9,0,49,9,9,9,9,46,46,9,9,9,9,6,61,61,19,20,21,22,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,48,49,51,52,1,46,22,19,20,21,22,23,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,6,47,48,49,51,52,1,19,24,26,27,28,30,31,32,34,35,37,38,40,47,1,40,47,16,51,51,9,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,16,9,26,30,34,44,21,73,209,16,131,132,61,210,211,73,19,20,21,22,23,87,24,26,27,28,30,31,32,34,35,37,38,40,41,42,43,44,45,46,9,6,47,48,49,51,52,1,212,212,213,213,214,215,214,215,214,216,216,217,217,218,218,219,220,220,219,120,0,0,120,120,120,151,120,151,120,120,151,120,151,120,151,120,151,120,151,120,151,120,151,120,151,120,120,120,120,151,151,151,151,120,120,151,120,151,120,151,120,151,120,151,120,151,120,120,151,151,120,151,151,0,120,151,151,151,120,151,120,151,120,151,120,151,120,151,120,151,221,221,0,0,0,0,153,154,155,156,153,154,155,156,153,154,155,156,153,154,155,156,153,156,156,156,153,156,153,156,153,154,156,153,156,153,156,153,156,156,156,156,153,153,153,153,156,153,153,153,154,154,155,156,153,154,155,156,156,153,153,156,153,154,155,156,153,153,154,153,154,153,154,155,156,153,154,155,156,153,153,154,154,154,155,153,153,156,153,153,153,154,156,153,155,153,154,154,154,153,153,156,153,154,155,156,153,154,155,156,153,154,155,156,153,154,155,156,153,155,154,155,156,153,162,0,0,0,0,162,0,0,162,0,0,162,0,0,162,0,0,164,163,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,164,165,166,167,168,169,170,171,172,173,164,165,166,167,168,169,170,171,172,173,164,165,166,167,168,169,170,171,172,173,164,166,168,170,172,173,164,166,168,170,172,173,162,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,164,164,165,166,166,167,168,168,169,170,170,171,172,172,173,162,163,164,165,166,167,168,169,170,171,172,173,163,163,162,163,164,165,166,167,168,169,170,171,172,173,163,162,163,164,165,166,167,168,169,170,171,172,173,162,163,163,163,163,164,163,164,166,168,170,172,173,163,164,164,165,165,166,166,167,167,168,168,169,170,170,171,172,172,173,173,162,163,164,165,166,167,168,169,170,171,172,173,162,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,162,163,164,165,166,167,168,169,170,171,172,173,0,0,0,0,0,0,0,0,180,174,175,176,177,178,179,180,182,174,175,176,177,178,179,180,182,174,175,176,177,178,179,180,180,182,174,175,176,177,178,179,180,182,174,176,177,178,180,182,177,178,180,182,177,178,180,182,174,182,175,175,174,175,176,177,178,179,180,182,174,175,176,177,178,179,180,182,180,180,182,180,180,180,180,182,182,182,182,180,174,175,176,177,178,179,180,182,175,175,178,180,174,175,176,177,178,179,180,180,182,174,175,176,177,178,179,180,182,177,178,180,182,174,176,174,175,176,177,178,179,180,182,175,180,182,174,175,176,177,178,179,180,182,180,174,175,176,177,178,179,180,182,178,174,176,178,180,175,182,182,178,180,176,174,175,176,177,178,179,180,182,180,179,177,178,180,182,180,174,175,176,177,178,179,180,182,174,176,180,174,175,176,177,178,179,180,182,174,175,176,177,178,179,180,182,174,175,176,177,178,179,180,182,178,174,175,176,177,178,179,180,182,186,186,0,0,0,0,0,0,0,0,186,186,186,188,187,189,188,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,185,187,187,188,189,190,191,192,186,185,187,188,189,190,191,192,187,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,186,186,186,185,185,185,185,187,187,187,187,188,188,188,188,189,189,189,189,190,190,190,190,191,191,191,191,192,192,192,192,187,187,191,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,185,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,187,187,185,188,189,192,188,187,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,189,188,187,187,188,189,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,185,186,185,187,188,189,190,191,192,186,185,187,188,189,190,191,192,195,0,0,0,0,0,195,195,197,196,0,195,196,197,198,199,195,196,197,198,199,195,196,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,195,195,195,196,196,196,196,197,197,197,197,198,198,198,198,199,199,199,199,196,196,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,196,196,196,198,199,197,196,197,195,196,197,198,199,195,196,197,198,199,0,0,196,196,197,0,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,195,196,197,198,199,201,0,201,201,0,0,0,0,0,0,0,0,0,0,201,203,206,202,203,203,115,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,202,203,204,205,206,115,201,200,202,203,204,205,206,115,202,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,115,115,201,200,202,203,204,205,206,115,201,201,201,201,200,200,200,200,202,202,202,202,203,203,203,203,204,204,204,204,205,205,205,205,206,206,206,206,115,115,115,115,202,202,115,205,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,203,115,115,202,202,200,200,115,115,202,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,203,203,202,202,203,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,201,200,202,203,204,205,206,115,0,201,200,202,203,204,205,206,115],"f":"````````````````````````````````````````````````````````````````````````````````{bd}```{cf{}}0000000{ch{}}{bj}{{ln}{{A`{d}}}}{{AbnAd}{{Ah{Af}}}}{{cnAd}{{An{{Al{Aj}}}}}{}}{{AbnAd}{{An{{Al{Aj}}}}}}{{Abn}B`}`{{cBb}{{An{{Al{Aj}}}}}{}}{Ab{{An{{Al{Aj}}}}}}`{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000```{{cBb}Bd{}}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{C`C`}{{cBb}Cb{}}{CdCd}{CfCf}{ChCh}{{cBb}Cj{}}{ClCl}{CnCn}{D`D`}{{cBb}Db{}}{DdDd}{DfDf}{{cBb}Dh{}}{DjDj}{DlDl}{{cBb}Dn{}}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{ll}{EnEn}{F`F`}{FbFb}{{cBb}Fd{}}{FfFf}{FhFh}{bb}{{ce}d{}{}}00000000000000000000000000000{{BlBl}Fj}{{bb}Fj}`{{ce}Fj{}{}}0`{{cFl}{{G`{E`Fn}}}Gb}{{c{Gh{GdGf}}}{{G`{GjFn}}}Gb}{{c{Gh{GdGf}}}{{G`{BfFn}}}Gb}{{c{Gh{GdGf}}}{{G`{BhFn}}}Gb}{{c{Gh{GdGf}}}{{G`{BjFn}}}Gb}{{c{Gh{GdGf}}}{{G`{BlFn}}}Gb}{{c{Gh{GdGf}}}{{G`{BnFn}}}Gb}{{c{Gh{GdGf}}}{{G`{C`Fn}}}Gb}{{c{Gh{GdGf}}}{{G`{CdFn}}}Gb}{{c{Gh{GdGf}}}{{G`{CfFn}}}Gb}{{c{Gh{GdGf}}}{{G`{ChFn}}}Gb}{{c{Gh{GdGf}}}{{G`{ClFn}}}Gb}{{c{Gh{GdGf}}}{{G`{CnFn}}}Gb}{{c{Gh{GdGf}}}{{G`{D`Fn}}}Gb}{{c{Gh{GdGf}}}{{G`{DdFn}}}Gb}{{c{Gh{GdGf}}}{{G`{DfFn}}}Gb}{{c{Gh{GdGf}}}{{G`{DjFn}}}Gb}{{c{Gh{GdGf}}}{{G`{DlFn}}}Gb}{{cFl}{{G`{EbFn}}}Gb}{{cFl}{{G`{F`Fn}}}Gb}{{cFl}{{G`{FbFn}}}Gb}{{cFl}{{G`{FfFn}}}Gb}{{cFl}{{G`{FhFn}}}Gb}{{cFl}{{G`{bFn}}}Gb}{{Gjc}{{G`{GlGn}}}H`}{{Bfc}{{G`{GlGn}}}H`}{{Bhc}{{G`{GlGn}}}H`}{{Bjc}{{G`{GlGn}}}H`}{{Blc}{{G`{GlGn}}}H`}{{Bnc}{{G`{GlGn}}}H`}{{C`c}{{G`{GlGn}}}H`}{{Cdc}{{G`{GlGn}}}H`}{{Cfc}{{G`{GlGn}}}H`}{{Chc}{{G`{GlGn}}}H`}{{Clc}{{G`{GlGn}}}H`}{{Cnc}{{G`{GlGn}}}H`}{{D`c}{{G`{GlGn}}}H`}{{Ddc}{{G`{GlGn}}}H`}{{Dfc}{{G`{GlGn}}}H`}{{Djc}{{G`{GlGn}}}H`}{{Dlc}{{G`{GlGn}}}H`}{{E`c}{{G`{GlGn}}}H`}{{Ebc}{{G`{GlGn}}}H`}{{F`c}{{G`{GlGn}}}H`}{{Fbc}{{G`{GlGn}}}H`}{{Ffc}{{G`{GlGn}}}H`}{{Fhc}{{G`{GlGn}}}H`}{{bc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}00000000000000000000000{{cBb}Hb{}}{Abc{}}{{AbHdnAf}{{An{{Al{Aj}}}}}}{{cBbHdnAf}{{An{{Al{Aj}}}}}{}}{{AbHdnAf}{{Ah{{Hh{{Hf{C`Ff}}}}}}}}{{Abn{Hj{Fh}}}{{Ah{{Hh{{Hf{C`Ff}}}}}}}}{{AbHdnBbAf}{{Hh{{Hl{ChFf}}}}}}34{cHn{}}{{}Gd}{cGd{}}00{{}b}{c{{G`{Gj}}}I`}{c{{G`{Ib}}}I`}{c{{G`{Bf}}}I`}{c{{G`{Bh}}}I`}{c{{G`{Bj}}}I`}{c{{G`{Bl}}}I`}{c{{G`{Bn}}}I`}{c{{G`{C`}}}I`}{c{{G`{Cd}}}I`}{c{{G`{Cf}}}I`}{c{{G`{Ch}}}I`}{c{{G`{Cl}}}I`}{c{{G`{Cn}}}I`}{c{{G`{D`}}}I`}{c{{G`{Dd}}}I`}{c{{G`{Df}}}I`}{c{{G`{E`}}}I`}{c{{G`{Ed}}}I`}{c{{G`{Ef}}}I`}{c{{G`{Eh}}}I`}{c{{G`{Ej}}}I`}{c{{G`{Fh}}}I`}{c{{G`{b}}}I`}{{cId}{{G`{dIf}}}{}}0000000000000000000000{{ElHd{Hh{Ih}}}{{Al{Ij}}}}{{cHd{Hh{Ih}}}{{An{{Al{Aj}}}}}{}}{cj{}}00000{{}Il}0{C`{{G`{CfCd}}}}{Ch{{G`{CnCl}}}}{D`{{G`{DfDd}}}}{{BfBf}In}{{BhBh}In}{{BjBj}In}{{BlBl}In}{{BnBn}In}{{C`C`}In}{{CdCd}In}{{CfCf}In}{{ChCh}In}{{ClCl}In}{{CnCn}In}{{D`D`}In}{{DdDd}In}{{DfDf}In}{{DjDj}In}{{DlDl}In}{{E`E`}In}{{EbEb}In}{{EdEd}In}{{EfEf}In}{{EjEj}In}{{F`F`}In}{{FbFb}In}{{FfFf}In}{{FhFh}In}{{bb}In}{{ce}In{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{cBd}In{}}{{cCb}In{}}{{cCj}In{}}{{cDb}In{}}{{cDh}In{}}{{cDn}In{}}{{cFd}In{}}{{cJ`}d{}}{{cId}{{G`{dJb}}}{}}0000000000000000000000``{E`Jd}{E`{{Jh{Jf}}}}{{GjJj}{{G`{dJl}}}}{{IbJj}{{G`{dJl}}}}{{BfJj}{{G`{dJl}}}}0{{BhJj}{{G`{dJl}}}}{{BjJj}{{G`{dJl}}}}{{BlJj}{{G`{dJl}}}}{{BnJj}{{G`{dJl}}}}{{JnJj}{{G`{dJl}}}}{{C`Jj}{{G`{dJl}}}}0{{CdJj}{{G`{dJl}}}}0{{CfJj}{{G`{dJl}}}}0{{ChJj}{{G`{dJl}}}}0{{ClJj}{{G`{dJl}}}}0{{CnJj}{{G`{dJl}}}}0{{D`Jj}{{G`{dJl}}}}0{{DdJj}{{G`{dJl}}}}0{{DfJj}{{G`{dJl}}}}0{{DjJj}{{G`{dJl}}}}0{{DlJj}{{G`{dJl}}}}0{{E`Jj}K`}0{{EbJj}K`}{{EdJj}K`}{{EfJj}K`}{{EhJj}K`}{{EjJj}K`}{{ElJj}K`}{{AbJj}K`}{{lJj}K`}{{EnJj}K`}0{{F`Jj}K`}{{FbJj}K`}{{FfJj}K`}{{FhJj}K`}{{bJj}K`}0{cc{}}0000000000000000000000{CdDj}1{ClDl}2222222222222222{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}000{{{Kd{Kb}}}Bl}11111111111111111111444444444444444444444444444444{Kh{{G`{E`c}}}{}}{jb}{Hd{{Hj{Fh}}}}{{AbHd}{{An{{Al{Aj}}}}}}{{cBbHd}{{An{{Al{Aj}}}}}{}}{c{{L`{Hn{Kn{HdBb{Hh{{Kj{{Hh{Kb}}n}}}}{Hh{{Kj{{Hh{Kb}}n}}}}{Gh{GdGf}}}{{Kl{{An{{Al{Aj}}}}}}}}}}}{}}{{AbHdAf}b}{{AbHd}Lb}{{Ab{Kd{Ld}}}{{An{{Al{Aj}}}}}}{{c{Kd{Ld}}}{{An{{Al{Aj}}}}}{}}{{Bfc}dJ`}{{Bhc}dJ`}{{Bjc}dJ`}{{Blc}dJ`}{{Bnc}dJ`}{{C`c}dJ`}{{Cdc}dJ`}{{Cfc}dJ`}{{Chc}dJ`}{{Clc}dJ`}{{Cnc}dJ`}{{D`c}dJ`}{{Ddc}dJ`}{{Dfc}dJ`}{{Djc}dJ`}{{Dlc}dJ`}{{F`c}dJ`}{{Fbc}dJ`}{{Ffc}dJ`}{{Fhc}dJ`}`{{El{Lf{El}}}{{An{{Al{Aj}}}}}}{{cLhLjGlLlLnBbM`M`MbMdMf{Jh{Mh}}Mj}{{An{{Al{Aj}}}}}{}}`{{cCb}{{Jh{Ml}}}{}}{Ab{{Jh{Ml}}}}{ce{}{}}000000000000000000000000000000000000000{{BfBb}}{{C`Bb}}{{ChBb}}{{D`Bb}}{{DjBb}}{{DlBb}}{{FfMn}c{}}{c{{N`{e}}}{}{}}000000000000000000000000000000000000000{{AbHd}{{An{{Al{Aj}}}}}}{C`{{Jh{Cf}}}}{Ch{{Jh{Cn}}}}{D`{{Jh{Df}}}}`{{Abn}{{Ah{Nb}}}}`{cNd{}}0{{Jd{Hj{Fh}}}E`}{{AbAfHd}{{Kj{NfBn}}}}{{AbAfHd}Mb}{{MbAfb}Mb}{{AfBj}C`}{{AfBn}Ch}{NhD`}{{{Hj{Fh}}Jf}E`}{bb}{FhBl}`{FhBj}`{E`{{Hj{Fh}}}}{E`{{G`{NjNl}}}}``{cn{}}{Ffn}``{{cCj}{{Jh{Ml}}}{}}{Ab{{Jh{Ml}}}}{{BlBl}{{Jh{Fj}}}}{{bb}{{Jh{Fj}}}}``{{Ab{Nn{Ab}}}{{Ah{O`}}}}{{El{Ob{El}}Jh}{{An{{Al{Aj}}}}}}{{cLhLjOdLlLnBbM`M`MbMdMf{Jh{Mh}}{Jh{Of}}{Oj{Oh}}}{{An{{Al{Aj}}}}}{}}{{AbE`c}{{Ah{n}}}{OlOn}}`````{{A`eAfAf}{{An{{Al{Aj}}}}}{}{{Ad{}{{Ab{{Kj{Afc}}}}}}On}}{{AfeAfAf}{{An{{Al{Aj}}}}}On{{Ad{}{{Ab{{Kj{Afc}}}}}}On}}{{AheAfAf}{{An{{Al{Aj}}}}}On{{Ad{}{{Ab{{Kj{Afc}}}}}}On}}{{HdcAfAf}{{Ah{{Hj{Fh}}}}}{{A`{Fh}}}}{{eAfAf}{{G`{{Hj{c}}En}}}{}{{Ad{}{{Ab{{Kj{Afc}}}}}}}}{{Gjc}G`Aj}{{Ibc}G`Aj}{{Bfc}G`Aj}{{Bhc}G`Aj}{{Bjc}G`Aj}{{Blc}G`Aj}{{Bnc}G`Aj}{{C`c}G`Aj}{{Cdc}G`Aj}{{Cfc}G`Aj}{{Chc}G`Aj}{{Clc}G`Aj}{{Cnc}G`Aj}{{D`c}G`Aj}{{Ddc}G`Aj}{{Dfc}G`Aj}{{E`c}G`Aj}{{Edc}G`Aj}{{Efc}G`Aj}{{Ehc}G`Aj}{{Ejc}G`Aj}{{Fhc}G`Aj}{{bc}G`Aj}{{GjAl}{{G`{IbAn}}}}```{Dj{{Jh{AA`}}}}{Dl{{Jh{AA`}}}}{BjAAb}`{{AbAfAAdInc}{{Ah{{Kj{nE`}}}}}{OlOn}}{{AbHdcAfAAd}{{Ah{{Kj{n{Hh{Ff}}{Hj{Fh}}}}}}}{{A`{Fh}}}}{{AbcAfAAdIne}{{Ah{{Kj{nE`}}}}}{{A`{Fh}}}{OlOn}}{{{Hj{Fh}}}n}`{Ab{{An{{Al{Aj}}}}}}{c{{An{{Al{Aj}}}}}{}}{{Abn}{{Ah{{AAf{Ed}}}}}}{{Abn}{{Ah{{AAf{Ef}}}}}}{ElAAh}{cAAh{}}{AbIn}{cIn{}}01``{c{{Hh{Kb}}}{}}000{Bl{{Hh{Kb}}}}11111111111111111111{cAAj{}}{BlAAl}{ce{}{}}00000000000000000000000000000{cIh{}}00000000000000{E`Af}``{{cHbAAn}{{Hh{{AB`{Fd}}}}}{}}{{FfcAAn}{{Hh{{AB`{Ff}}}}}{}}{{Abn}d}{c{{G`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000{cABb{}}000000000000000000000000000000000000000`{{AbE`}{{Ah{Af}}}}````{{BjABd}In}{{Ib{ABf{c}}}{{G`{GjABh}}}{ABjABl}}::::::::::::::::::::::::::::::::::::::::```````````````````````{cf{}};;;;{O`O`}{{cBb}Of{}}{ABnABn}{{ce}d{}{}}0{{cFl}{{G`{O`Fn}}}Gb}{{cFl}{{G`{ABnFn}}}Gb}{{O`c}{{G`{GlGn}}}H`}{{ABnc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}0{c{{G`{O`}}}I`}{c{{G`{ABn}}}I`}{{cId}{{G`{dIf}}}{}}0{{O`O`}In}{{ABnABn}In}{{ce}In{}{}}0000000{{cOf}In{}}{{cId}{{G`{dJb}}}{}}0{{O`Jj}K`}{{ABnJj}K`}{cc{}}0{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}011{ce{}{}}0{{O`Mn}c{}}{c{{N`{e}}}{}{}}0{{}ABn}{{{Hj{Fh}}{Hh{{Kj{AdAfNf}}}}j{AC`{b}}}O`}```{{O`c}G`Aj}{{ABnc}G`Aj}``{c{{Hh{Kb}}}{}}077{c{{G`{e}}}{}{}}000{cABb{}}099``````{{ACbAfMb}d}::::::::{ACdACd}{ACfACf}{AChACh}{ACbACb}{{ce}d{}{}}000{{AChACh}Fj}{{ce}Fj{}{}}{{cFl}{{G`{AChFn}}}Gb}{{cFl}{{G`{ACbFn}}}Gb}{{AChc}{{G`{GlGn}}}H`}{{ACbc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}0{{ACdHd}{{An{{Al{Aj}}}}}}{c{{G`{ACh}}}I`}{c{{G`{ACb}}}I`}{{cId}{{G`{dIf}}}{}}0{{AChACh}In}{{ACbACb}In}{{ce}In{}{}}0000000{{cId}{{G`{dJb}}}{}}0{{ACbAfMb}d}{ACbACf}{{ACd{Nn{Ab}}}{{An{{Al{Aj}}}}}}{{ACdJj}K`}{{ACfJj}K`}{{AChJj}K`}{{ACbJj}K`}{cc{}}0{ACjACh}11{{ABnj{AC`{ABd}}{L`{ACl{AC`{ACn}}}}Mb}ACb}{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}03333`{{ACd{AD`{Ab}}GlC`}{{An{{Al{Aj}}}}}}{{ACbC`}d}{{ACd{AD`{Ab}}AdCh}{{An{{Al{Aj}}}}}}{{ACbAdChMb}d}{ce{}{}}000{c{{N`{e}}}{}{}}000`{{Hd{Ob{c}}}{{An{{Al{Aj}}}}}{}}{Hd{{An{{Al{Aj}}}}}}{{{Ob{c}}{Jh{O`}}}{{An{{Al{Aj}}}}}{}}``{{ACbAfbMb}d}{{AChACh}{{Jh{Fj}}}}````{{AChc}G`Aj}{{ACbc}G`Aj}```{{ACdHdADb}{{An{{Al{Aj}}}}}}{{HdIn}{{An{{Al{Aj}}}}}}``{c{{Hh{Kb}}}{}}0;;;;{c{{G`{e}}}{}{}}0000000{cABb{}}000`====```````````````````========================{ADdADd}{ADfADf}{ADhADh}{ADjADj}{ADlADl}{ADnADn}{AE`AE`}{AEbAEb}{AEdAEd}{AEfAEf}{AEhAEh}{AEjAEj}{{ce}d{}{}}00000000000{{cFl}{{G`{ADhFn}}}Gb}{{cFl}{{G`{ADjFn}}}Gb}{{cFl}{{G`{ADlFn}}}Gb}{{cFl}{{G`{ADnFn}}}Gb}{{cFl}{{G`{AE`Fn}}}Gb}{{cFl}{{G`{AEbFn}}}Gb}{{cFl}{{G`{AEdFn}}}Gb}{{cFl}{{G`{AEfFn}}}Gb}{{cFl}{{G`{AEhFn}}}Gb}{{cFl}{{G`{AEjFn}}}Gb}{{ADhc}{{G`{GlGn}}}H`}{{ADjc}{{G`{GlGn}}}H`}{{ADlc}{{G`{GlGn}}}H`}{{ADnc}{{G`{GlGn}}}H`}{{AE`c}{{G`{GlGn}}}H`}{{AEbc}{{G`{GlGn}}}H`}{{AEdc}{{G`{GlGn}}}H`}{{AEfc}{{G`{GlGn}}}H`}{{AEhc}{{G`{GlGn}}}H`}{{AEjc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}000000000{{cId}{{G`{dIf}}}{}}00000{{cId}{{G`{dJb}}}{}}00000{{ADdJj}K`}0{{ADfJj}K`}{{ADhJj}K`}{{ADjJj}K`}{{ADlJj}K`}{{ADnJj}K`}{{AE`Jj}K`}{{AEbJj}K`}{{AEdJj}K`}{{AEfJj}K`}{{AEhJj}K`}{{AEjJj}K`}{cc{}}00000000000{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}00000000000000111111111111{{ADfGl}{{Jh{ADd}}}}`{ce{}{}}000000000000{c{{N`{e}}}{}{}}00000000000{{}ADf}{ADfGl}`{ADf{{Jh{c}}}{}}0`{{ADfGl}{{Jh{c}}}{}}{{ADhc}G`Aj}{{ADlc}G`Aj}{{AE`c}G`Aj}{{AEdc}G`Aj}{{AEhc}G`Aj}{{AEjc}G`Aj}{ADf{{Kj{Gl{Jh{Gl}}}}}}{c{{Hh{Kb}}}{}}00000000000000000============{cIh{}}{c{{G`{e}}}{}{}}00000000000000000000000{cABb{}}00000000000{ce{}{}}00000000000````````{cf{}}1111111111111111{AElAEl}{AEnAEn}{AF`AF`}{AFbAFb}{AFdAFd}{AFfAFf}{AFhAFh}{{cBb}AFj{}}{AFlAFl}{{ce}d{}{}}0000000``{{c{Gh{GdGf}}}{{G`{AFbFn}}}Gb}{{c{Gh{GdGf}}}{{G`{AFdFn}}}Gb}{{c{Gh{GdGf}}}{{G`{AFhFn}}}Gb}{{c{Gh{GdGf}}}{{G`{AFlFn}}}Gb}{{AFbc}{{G`{GlGn}}}H`}{{AFdc}{{G`{GlGn}}}H`}{{AFhc}{{G`{GlGn}}}H`}{{AFlc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}000{{}AEl}{{}AFl}{AEnBb}`{c{{G`{AEl}}}I`}{c{{G`{AEn}}}I`}{c{{G`{AF`}}}I`}{c{{G`{AFb}}}I`}{c{{G`{AFd}}}I`}{c{{G`{AFf}}}I`}{c{{G`{AFh}}}I`}{c{{G`{AFl}}}I`}{{cId}{{G`{dIf}}}{}}0000000{cj{}}{{AFhAFh}In}{{AFlAFl}In}{{ce}In{}{}}0000000{{cAFj}In{}}{{cId}{{G`{dJb}}}{}}0000000{AEnAFl}```{{AElJj}{{G`{dJl}}}}{{AEnJj}{{G`{dJl}}}}{{AF`Jj}{{G`{dJl}}}}{{AFbJj}{{G`{dJl}}}}{{AFdJj}{{G`{dJl}}}}{{AFfJj}{{G`{dJl}}}}{{AFhJj}{{G`{dJl}}}}0{{AFlJj}{{G`{dJl}}}}{cc{}}0000000{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}000{{}AEl}{{}AF`}33333333{AEn{{Hh{Af}}}}{{AFhc}dJ`}{{AFlc}dJ`}{ce{}{}}0000000{{AFhBb}}{c{{N`{e}}}{}{}}0000000{AFdNd}````{{BbAFl}AEn}`````{{AElc}G`Aj}{{AEnc}G`Aj}{{AF`c}G`Aj}{{AFbc}G`Aj}{{AFdc}G`Aj}{{AFfc}G`Aj}{{AFhc}G`Aj}{{AFlc}G`Aj}``{c{{Hh{Kb}}}{}}000{c{{Jh{Nj}}}{}}>>>>>>>>{AElKj}{AF`{{Kj{Nd}}}}{cIh{}}{c{{G`{e}}}{}{}}000000000000000{cABb{}}0000000{AFdAFn}{ce{}{}}0000000``````````````{cf{}}{{AAnAG`}{{G`{dIh}}}}{{AGbAAn}{{G`{dIh}}}}3333333333333333{AGdAGd}{AGbAGb}{{cBb}Fd{}}{AGfAGf}{AGhAGh}{AGjAGj}{AGlAGl}{AGnAGn}{AH`AH`}{{ce}d{}{}}0000000`{{cFl}{{G`{AGdFn}}}Gb}{{cFl}{{G`{AGbFn}}}Gb}{{cFl}{{G`{AGfFn}}}Gb}{{cFl}{{G`{AGhFn}}}Gb}{{cFl}{{G`{AGjFn}}}Gb}{{cFl}{{G`{AGlFn}}}Gb}{{cFl}{{G`{AGnFn}}}Gb}{{cFl}{{G`{AH`Fn}}}Gb}{{AGdc}{{G`{GlGn}}}H`}{{AGbc}{{G`{GlGn}}}H`}{{AGfc}{{G`{GlGn}}}H`}{{AGhc}{{G`{GlGn}}}H`}{{AGjc}{{G`{GlGn}}}H`}{{AGlc}{{G`{GlGn}}}H`}{{AGnc}{{G`{GlGn}}}H`}{{AH`c}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}0000000{{AGdAGd}In}{{AGbAGb}In}{{AGfAGf}In}{{AGhAGh}In}{{AGjAGj}In}{{AGlAGl}In}{{AGnAGn}In}{{AH`AH`}In}{{ce}In{}{}}0000000000000000000000000000000{{cFd}In{}}{{cJ`}d{}}`{{AGdJj}K`}{{AGbJj}K`}{{AGfJj}K`}{{AGhJj}K`}{{AGjJj}K`}{{AGlJj}K`}{{AGnJj}K`}{{AH`Jj}K`}{cc{}}0000000{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}000000011111111{{AGdc}dJ`}{{AGbc}dJ`}{{AGfc}dJ`}{{AGhc}dJ`}{{AGjc}dJ`}{{AGlc}dJ`}{{AGnc}dJ`}{{AH`c}dJ`}`{ce{}{}}0000000{c{{N`{e}}}{}{}}0000000{cn{}}{AGfn}`{{AHbAGfAAn}AGf}````{c{{Hh{Kb}}}{}}000000055555555{{{G`{dIh}}AGf}AGf}{{{G`{dIh}}AGfAHbAAn}AGf}{{AGfcAAn}{{Hh{{AB`{AGf}}}}}{}}{{cHbAAn}{{Hh{{AB`{Fd}}}}}{}}{{AGhAGbAAn}{{Hh{{AB`{AGf}}}}}}{{AGjAAn}{{Hh{{AB`{AGf}}}}}}{c{{G`{e}}}{}{}}000000000000000`{cABb{}}0000000========`````````{cf{}}{AHdd}??????????{AHfAHf}{AHhAHh}{{cBb}Fd{}}{AHjAHj}{AHlAHl}{AHnAHn}{{ce}d{}{}}0000{{cFl}{{G`{AHfFn}}}Gb}{{cFl}{{G`{AHhFn}}}Gb}{{cFl}{{G`{AHjFn}}}Gb}{{cFl}{{G`{AHlFn}}}Gb}{{cFl}{{G`{AHnFn}}}Gb}{{AHfc}{{G`{GlGn}}}H`}{{AHhc}{{G`{GlGn}}}H`}{{AHjc}{{G`{GlGn}}}H`}{{AHlc}{{G`{GlGn}}}H`}{{AHnc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}0000{{AHfAHf}In}{{AHhAHh}In}{{AHjAHj}In}{{AHlAHl}In}{{AHnAHn}In}{{ce}In{}{}}0000000000000000000{{cFd}In{}}{{cJ`}d{}}{{AHfJj}K`}{{AHhJj}K`}{{AHjJj}K`}{{AHlJj}K`}{{AHnJj}K`}{cc{}}0000{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}000011111{{AHfc}dJ`}{{AHhc}dJ`}{{AHjc}dJ`}{{AHlc}dJ`}{{AHnc}dJ`}{ce{}{}}0000{c{{N`{e}}}{}{}}0000{AHhn}{cn{}}``````{c{{Hh{Kb}}}{}}000044444{{AHhAHbAAn}AHh}0{{AHhcAAn}{{Hh{{AB`{AHh}}}}}{}}{{cHbAAn}{{Hh{{AB`{Fd}}}}}{}}{{AHjnlAAn}{{Hh{{AB`{AHh}}}}}}{{AHbnAfFhAAn}AG`}{c{{G`{e}}}{}{}}000000000{cABb{}}0000;;;;;`````````````````{cf{}}{{AAnAI`GdAfACj{L`{ACl{AC`{ACn}}}}}{{L`{AClNh}}}}{{AAnAI`}d}{NfACj}`????????????????{AIbAIb}{AI`AI`}{AIdAId}{{cBb}Fd{}}{AIfAIf}{AIhAIh}{AIjAIj}{AIlAIl}{NfNf}{{ce}d{}{}}0000000`{{cFl}{{G`{AIbFn}}}Gb}{{cFl}{{G`{AI`Fn}}}Gb}{{cFl}{{G`{AIdFn}}}Gb}{{cFl}{{G`{AIfFn}}}Gb}{{cFl}{{G`{AIhFn}}}Gb}{{cFl}{{G`{AIjFn}}}Gb}{{cFl}{{G`{AIlFn}}}Gb}{{cFl}{{G`{NfFn}}}Gb}{{AIbc}{{G`{GlGn}}}H`}{{AI`c}{{G`{GlGn}}}H`}{{AIdc}{{G`{GlGn}}}H`}{{AIfc}{{G`{GlGn}}}H`}{{AIhc}{{G`{GlGn}}}H`}{{AIjc}{{G`{GlGn}}}H`}{{AIlc}{{G`{GlGn}}}H`}{{Nfc}{{G`{GlGn}}}H`}{{cH`}{{G`{GlGn}}}{}}0000000{c{{G`{Nf}}}I`}{{cId}{{G`{dIf}}}{}}{{AIbAIb}In}{{AI`AI`}In}{{AIdAId}In}{{AIfAIf}In}{{AIhAIh}In}{{AIjAIj}In}{{AIlAIl}In}{{NfNf}In}{{ce}In{}{}}0000000000000000000000000000000{{cFd}In{}}{{cJ`}d{}}{{cId}{{G`{dJb}}}{}}`{{NfAIn}Fh}{{AIbJj}K`}{{AI`Jj}K`}{{AIdJj}K`}{{AIfJj}K`}{{AIhJj}K`}{{AIjJj}K`}{{AIlJj}K`}{{NfJj}K`}{cc{}}0000000{{{Kd{Kb}}{Gh{GdGf}}}{{G`{cKf}}}{}}000000011111111{{AIbc}dJ`}{{AI`c}dJ`}{{AIdc}dJ`}{{AIfc}dJ`}{{AIhc}dJ`}{{AIjc}dJ`}{{AIlc}dJ`}{{Nfc}dJ`}{ce{}{}}0000000{c{{N`{e}}}{}{}}0000000`{{{ABf{c}}Mb}{{Kj{NfBn}}}ABj}{NfBl}{AIdn}{cn{}}``{{Nfc}G`Aj}``{c{{Hh{Kb}}}{}}000000077777777{{AHb{L`{AClNh}}AId{AC`{ABd}}}AId}{AIdAId}{{AIdcAAn}{{Hh{{AB`{AId}}}}}{}}{{cHbAAn}{{Hh{{AB`{Fd}}}}}{}}{{AIflAAnAI`}{{Hh{{AB`{AId}}}}}}{c{{G`{e}}}{}{}}000000000000000{cABb{}}0000000{{AClAJ`AfACjGd{L`{ACl{AC`{ACn}}}}}{{Ah{Nh}}}}????????","c":[],"p":[[5,"NoteIndex",0],[1,"unit"],[10,"Any",2537],[10,"IDynCommonModuleInit",2538],[1,"u64"],[5,"MintClientContext",0],[5,"OperationId",2539],[8,"BoxFuture",2540],[5,"MintClientModule",0],[5,"OutPoint",2541],[5,"Amount",2541],[8,"Result",2542],[10,"Future",2543],[5,"Box",2544],[5,"Pin",2545],[5,"SpendOOBRefund",0],[1,"u16"],[5,"DynModuleConsensusItem",2539],[6,"MintConsensusItem",0],[5,"MintOutputBlindSignature",0],[5,"Note",0],[5,"Nonce",0],[5,"BlindNonce",0],[6,"MintInput",0],[5,"DynInput",2539],[5,"UnknownMintInputVariantError",0],[5,"MintInputV0",0],[6,"MintOutput",0],[5,"DynOutput",2539],[5,"UnknownMintOutputVariantError",0],[5,"MintOutputV0",0],[6,"MintOutputOutcome",0],[5,"DynOutputOutcome",2539],[5,"UnknownMintOutputOutcomeVariantError",0],[5,"MintOutputOutcomeV0",0],[5,"DynInputError",2539],[6,"MintInputError",0],[6,"MintOutputError",0],[5,"DynOutputError",2539],[5,"OOBNotes",0],[6,"OOBNotesData",0],[6,"ReissueExternalNotesState",0],[6,"SpendOOBState",0],[5,"MintOperationMeta",0],[6,"MintOperationMetaVariant",0],[5,"MintClientInit",0],[5,"InsufficientBalanceError",0],[6,"MintRestoreStates",0],[5,"MintRestoreStateMachine",0],[5,"DynState",2546],[6,"MintClientStateMachines",0],[5,"SpendableNote",0],[6,"Ordering",2547],[8,"ModuleDecoderRegistry",2548],[5,"DecodeError",2549],[6,"Result",2550],[10,"Read",2551],[5,"Decoder",2539],[6,"DecodingMode",2548],[5,"ModuleRegistry",2548],[5,"BackupRequest",0],[1,"usize"],[5,"Error",2552],[10,"Write",2551],[5,"DynContext",2546],[5,"DatabaseTransaction",2553],[5,"ClientInput",2554],[5,"Vec",2555],[5,"TieredMulti",2556],[5,"ClientOutput",2554],[5,"DatabaseVersion",2553],[10,"Deserializer",2557],[5,"SignedBackupRequest",0],[10,"Serializer",2558],[6,"ErrorImpl",2558],[5,"String",2559],[10,"Iterator",2560],[5,"HashEngine",2561],[1,"bool"],[10,"Hasher",2562],[5,"Error",2563],[5,"FederationIdPrefix",2564],[5,"InviteCode",2565],[6,"Option",2566],[5,"Formatter",2567],[5,"Error",2567],[5,"MintCommonInit",0],[8,"Result",2567],[1,"u8"],[1,"slice"],[6,"DecodingError",2553],[1,"str"],[1,"tuple"],[17,"Output"],[1,"fn"],[5,"BTreeMap",2568],[5,"TieredSummary",2556],[5,"OsString",2569],[5,"ClientModuleInitArgs",2570],[5,"FinalClient",2571],[5,"FederationId",2564],[5,"ClientModuleConfig",2564],[5,"Database",2553],[5,"ApiVersion",2572],[5,"DerivableSecret",2573],[5,"Notifier",2574],[5,"DynGlobalApi",2565],[5,"ApiAuth",2538],[5,"TaskGroup",2575],[5,"TransactionItemAmount",2538],[8,"ModuleInstanceId",2539],[5,"Request",2576],[5,"OperationLogEntry",2577],[5,"ModuleKind",2539],[5,"NoteIssuanceRequest",2290],[5,"BlindedSignatureShare",2578],[6,"Value",2579],[5,"Error",2580],[5,"ClientDbTxContext",2571],[6,"EcashBackup",1202],[5,"ClientModuleRecoverArgs",2570],[5,"NumPeers",2541],[5,"DynModuleBackup",2581],[5,"RecoveryProgress",2581],[5,"Sender",2582],[10,"Serialize",2583],[10,"Send",2584],[10,"NotesSelector",0],[17,"Item"],[10,"Stream",2585],[5,"SelectNotesWithAtleastAmount",0],[5,"SelectNotesWithExactAmount",0],[10,"Serializer",2583],[5,"KeyPair",2586],[5,"Error",2542],[10,"Error",2587],[5,"PublicKey",2586],[5,"Duration",2588],[6,"UpdateStreamOrOutcome",2577],[5,"MultiApiVersion",2572],[5,"DynCommonModuleInit",2538],[5,"Message",2578],[5,"DynGlobalClientContext",2589],[5,"StateTransition",2546],[5,"TypeId",2537],[5,"AggregatePublicKey",2578],[5,"Secp256k1",2590],[6,"Error",2590],[10,"Signing",2591],[10,"Verification",2591],[5,"EcashBackupV0",1202],[5,"Tiered",2592],[5,"MintRecoveryState",1275],[5,"MintRecovery",1275],[5,"EcashRecoveryFinalState",1275],[5,"CompressedBlindedMessage",1275],[5,"BlindedMessage",2578],[5,"PeerId",2541],[5,"PublicKeyShare",2578],[5,"ClientContext",2571],[5,"RecoveryFromHistoryCommon",2593],[6,"DbKeyPrefix",1397],[5,"DbKeyPrefixIter",1397],[5,"NoteKey",1397],[5,"NoteKeyPrefix",1397],[5,"NextECashNoteIndexKey",1397],[5,"NextECashNoteIndexKeyPrefix",1397],[5,"RecoveryStateKey",1397],[5,"RestoreStateKeyPrefix",1397],[5,"RecoveryFinalizedKey",1397],[5,"RecoveryFinalizedKeyPrefix",1397],[5,"CancelledOOBSpendKey",1397],[5,"CancelledOOBSpendKeyPrefix",1397],[5,"MintGenParams",1678],[5,"MintGenParamsConsensus",1678],[5,"MintConfig",1678],[5,"MintConfigLocal",1678],[5,"MintConfigConsensus",1678],[5,"MintConfigPrivate",1678],[5,"MintClientConfig",1678],[5,"DynClientConfig",2539],[5,"FeeConsensus",1678],[5,"ModuleConsensusVersion",2572],[5,"TransactionId",2541],[5,"MintInputCommon",1899],[6,"MintInputStates",1899],[5,"MintInputStateMachine",1899],[5,"MintInputStateCreated",1899],[5,"MintInputStateRefund",1899],[5,"MintInputStateSuccess",1899],[5,"MintInputStateError",1899],[5,"MintInputStateRefundSuccess",1899],[5,"ClientSMDatabaseTransaction",2594],[5,"SystemTime",2595],[6,"MintOOBStates",2137],[5,"MintOOBStateMachine",2137],[5,"MintOOBStatesCreated",2137],[5,"MintOOBStatesUserRefund",2137],[5,"MintOOBStatesTimeoutRefund",2137],[5,"MintOutputCommon",2290],[6,"MintOutputStates",2290],[5,"MintOutputStateMachine",2290],[5,"MintOutputStatesCreated",2290],[5,"MintOutputStatesAborted",2290],[5,"MintOutputStatesFailed",2290],[5,"MintOutputStatesSucceeded",2290],[5,"BlindedSignature",2578],[8,"SerdeOutputOutcome",2565],[5,"MintModuleTypes",0],[5,"OOBSpendTag",0],[5,"OOBReissueTag",0],[15,"Default",1183],[15,"Default",1185],[15,"Reissuance",1187],[15,"SpendOOB",1187],[15,"Default",1192],[15,"Default",1194],[15,"Default",1196],[15,"Default",1198],[15,"Invite",1198],[15,"Default",1273]],"b":[[572,"impl-Debug-for-MintConsensusItem"],[573,"impl-Display-for-MintConsensusItem"],[579,"impl-Debug-for-MintInput"],[580,"impl-Display-for-MintInput"],[581,"impl-Display-for-UnknownMintInputVariantError"],[582,"impl-Debug-for-UnknownMintInputVariantError"],[583,"impl-Debug-for-MintInputV0"],[584,"impl-Display-for-MintInputV0"],[585,"impl-Debug-for-MintOutput"],[586,"impl-Display-for-MintOutput"],[587,"impl-Display-for-UnknownMintOutputVariantError"],[588,"impl-Debug-for-UnknownMintOutputVariantError"],[589,"impl-Display-for-MintOutputV0"],[590,"impl-Debug-for-MintOutputV0"],[591,"impl-Display-for-MintOutputOutcome"],[592,"impl-Debug-for-MintOutputOutcome"],[593,"impl-Display-for-UnknownMintOutputOutcomeVariantError"],[594,"impl-Debug-for-UnknownMintOutputOutcomeVariantError"],[595,"impl-Display-for-MintOutputOutcomeV0"],[596,"impl-Debug-for-MintOutputOutcomeV0"],[597,"impl-Display-for-MintInputError"],[598,"impl-Debug-for-MintInputError"],[599,"impl-Debug-for-MintOutputError"],[600,"impl-Display-for-MintOutputError"],[601,"impl-Debug-for-OOBNotes"],[602,"impl-Display-for-OOBNotes"],[611,"impl-Display-for-InsufficientBalanceError"],[612,"impl-Debug-for-InsufficientBalanceError"],[617,"impl-Display-for-NoteIndex"],[618,"impl-Debug-for-NoteIndex"],[1506,"impl-Debug-for-DbKeyPrefix"],[1507,"impl-Display-for-DbKeyPrefix"],[1784,"impl-Debug-for-MintClientConfig"],[1785,"impl-Display-for-MintClientConfig"]]}],\
["fedimint_mint_common",{"doc":"","t":"EFSSPPPPPPPSFGGGFFGFGGFFFFEPPFFFPPPPOONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNOOOOOOOOFFNNNNNNNNNNNNNNNNNNNONNNNOONNNOONNNNNNNNNNFSFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONOOOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BackupRequest","BlindNonce","CONSENSUS_VERSION","DEFAULT_MAX_NOTES_PER_DENOMINATION","Default","Default","Default","Default","InvalidAmountTier","InvalidAmountTier","InvalidSignature","KIND","MintCommonInit","MintConsensusItem","MintInput","MintInputError","MintInputV0","MintModuleTypes","MintOutput","MintOutputBlindSignature","MintOutputError","MintOutputOutcome","MintOutputOutcomeV0","MintOutputV0","Nonce","Note","SignedBackupRequest","SpentCoin","UnknownInputVariant","UnknownMintInputVariantError","UnknownMintOutputOutcomeVariantError","UnknownMintOutputVariantError","UnknownOutputVariant","V0","V0","V0","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","blind_nonce","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","common","compare","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","new_v0","new_v0","new_v0","nonce","note","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","source","source","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant","variant","variant","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bytes","variant","bytes","variant","bytes","variant","bytes","variant","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","deserialize","deserialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","FeeConsensus","MAX_DENOMINATION_SIZE","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigLocal","MintConfigPrivate","MintGenParams","MintGenParamsConsensus","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","denomination_base","denomination_base","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gen_denominations","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","max_notes_per_denomination","max_notes_per_denomination","new","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_common"],[598,"fedimint_mint_common::MintConsensusItem"],[600,"fedimint_mint_common::MintInput"],[602,"fedimint_mint_common::MintOutput"],[604,"fedimint_mint_common::MintOutputOutcome"],[606,"fedimint_mint_common::common"],[649,"fedimint_mint_common::config"],[871,"core::any"],[872,"fedimint_core::core"],[873,"fedimint_core::core"],[874,"fedimint_core::module::registry"],[875,"fedimint_core::encoding"],[876,"core::result"],[877,"std::io"],[878,"std::io::error"],[879,"std::io"],[880,"erased_serde::ser"],[881,"erased_serde::ser"],[882,"core::fmt"],[883,"core::fmt"],[884,"core::hash"],[885,"fedimint_core::core"],[886,"core::option"],[887,"fedimint_core"],[888,"tbs"],[889,"serde::ser"],[890,"core::error"],[891,"secp256k1::key"],[892,"alloc::vec"],[893,"tbs"],[894,"core::any"],[895,"secp256k1::key"],[896,"secp256k1"],[897,"secp256k1"],[898,"secp256k1::context"],[899,"fedimint_core::module::version"]],"d":["","<code>Nonce</code> but blinded by the user key","","By default, the maximum notes per denomination when …","","","","","","","","","","The mint module currently doesn’t define any consensus …","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","","","","Unique ID of a mint note.","An verifiable one time use IOU from the minteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum amount of change a client can request","","","","","The set of public keys for blind-signing all peers and note","","","","","","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,2,9,13,17,22,24,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,24,9,13,17,12,16,2,9,13,17,22,24,16,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,2,2,5,6,7,8,9,9,11,12,13,13,15,16,17,17,19,20,22,22,24,24,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,7,0,7,0,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,43,2,5,6,7,8,9,11,12,13,15,16,17,19,20,2,5,6,7,8,9,11,12,13,15,16,17,19,20,2,9,13,17,22,24,9,13,17,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,2,2,2,2,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,11,11,11,11,12,12,12,12,13,13,13,13,15,15,15,15,16,16,16,16,17,17,17,17,19,19,19,19,20,20,20,20,22,22,22,22,24,24,24,24,2,9,13,17,22,24,2,5,6,7,8,9,11,12,13,15,16,17,19,20,2,2,5,6,7,8,43,9,9,11,11,12,12,13,13,15,15,16,16,17,17,19,19,20,20,22,22,24,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,22,24,24,2,5,6,7,7,8,9,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,2,9,13,17,22,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,9,13,17,9,13,17,6,12,7,2,5,6,7,8,9,11,12,13,15,16,17,19,20,6,22,24,6,2,5,6,7,7,8,9,11,12,13,15,16,17,19,20,22,24,7,2,5,6,7,8,9,11,12,13,15,16,17,19,20,22,24,2,9,11,12,13,15,16,17,19,20,22,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,11,15,19,6,85,2,5,6,7,8,43,9,11,12,13,15,16,17,19,20,22,24,86,86,87,87,88,88,89,89,0,0,63,64,63,64,63,63,63,63,64,63,64,63,64,63,64,63,64,63,63,63,63,64,63,64,63,64,63,64,63,64,63,63,63,64,63,64,63,64,64,63,64,0,0,0,0,0,0,0,0,0,79,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,79,80,72,73,74,75,76,77,79,80,72,74,75,76,79,80,75,76,79,80,75,76,79,80,72,80,73,73,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,79,79,80,79,79,79,79,80,80,80,80,79,72,73,74,75,76,77,79,80,73,73,76,79,72,73,74,75,76,77,79,79,80,72,73,74,75,76,77,79,80,75,76,79,80,72,74,72,73,74,75,76,77,79,80,73,79,80,72,73,74,75,76,77,79,80,79,72,73,74,75,76,77,79,80,76,72,74,76,79,73,80,80,76,79,74,72,73,74,75,76,77,79,80,79,77,75,76,79,80,79,72,73,74,75,76,77,79,80,72,74,79,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,72,73,74,75,76,77,79,80,76,72,73,74,75,76,77,79,80],"f":"``````````````````````````````````````{cb{}}00000`{ce{}{}}00000000000000000000000000000000000{dd}{{cf}h{}}{jj}{ll}{nn}{A`A`}{AbAb}{{cf}Ad{}}{AfAf}{AhAh}{AjAj}{{cf}Al{}}{AnAn}{B`B`}{BbBb}{{cf}Bd{}}{BfBf}{BhBh}{{cf}Bj{}}{BlBl}{{cf}Bn{}}{C`C`}{{ce}Cb{}{}}000000000000000{{nn}Cd}`{{ce}Cd{}{}}`{{cCf}{{Cj{dCh}}}Cl}{{cCf}{{Cj{jCh}}}Cl}{{cCf}{{Cj{lCh}}}Cl}{{cCf}{{Cj{nCh}}}Cl}{{cCf}{{Cj{A`Ch}}}Cl}{{cCf}{{Cj{AbCh}}}Cl}{{cCf}{{Cj{AfCh}}}Cl}{{cCf}{{Cj{AhCh}}}Cl}{{cCf}{{Cj{AjCh}}}Cl}{{cCf}{{Cj{AnCh}}}Cl}{{cCf}{{Cj{B`Ch}}}Cl}{{cCf}{{Cj{BbCh}}}Cl}{{cCf}{{Cj{BfCh}}}Cl}{{cCf}{{Cj{BhCh}}}Cl}{{cCf}{{Cj{BlCh}}}Cl}{{cCf}{{Cj{C`Ch}}}Cl}{{dc}{{Cj{CnD`}}}Db}{{jc}{{Cj{CnD`}}}Db}{{lc}{{Cj{CnD`}}}Db}{{nc}{{Cj{CnD`}}}Db}{{A`c}{{Cj{CnD`}}}Db}{{Abc}{{Cj{CnD`}}}Db}{{Afc}{{Cj{CnD`}}}Db}{{Ahc}{{Cj{CnD`}}}Db}{{Ajc}{{Cj{CnD`}}}Db}{{Anc}{{Cj{CnD`}}}Db}{{B`c}{{Cj{CnD`}}}Db}{{Bbc}{{Cj{CnD`}}}Db}{{Bfc}{{Cj{CnD`}}}Db}{{Bhc}{{Cj{CnD`}}}Db}{{Blc}{{Cj{CnD`}}}Db}{{C`c}{{Cj{CnD`}}}Db}{{cDb}{{Cj{CnD`}}}{}}000000000000000{{}Dd}{c{{Cj{d}}}Df}{c{{Cj{j}}}Df}{c{{Cj{l}}}Df}{c{{Cj{n}}}Df}{c{{Cj{A`}}}Df}{c{{Cj{Ab}}}Df}{c{{Cj{Af}}}Df}{c{{Cj{Ah}}}Df}{c{{Cj{Aj}}}Df}{c{{Cj{An}}}Df}{c{{Cj{B`}}}Df}{c{{Cj{Bb}}}Df}{c{{Cj{Bf}}}Df}{c{{Cj{Bh}}}Df}{{cDh}{{Cj{CbDj}}}{}}0000000000000{cDl{}}00000{Ab{{Cj{AhAf}}}}{Aj{{Cj{B`An}}}}{Bb{{Cj{BhBf}}}}{{dd}Dn}{{jj}Dn}{{ll}Dn}{{nn}Dn}{{A`A`}Dn}{{AbAb}Dn}{{AfAf}Dn}{{AhAh}Dn}{{AjAj}Dn}{{AnAn}Dn}{{B`B`}Dn}{{BbBb}Dn}{{BfBf}Dn}{{BhBh}Dn}{{BlBl}Dn}{{C`C`}Dn}{{ce}Dn{}{}}000000000000000000000000000000000000000000000000000000000000000{{ch}Dn{}}{{cAd}Dn{}}{{cAl}Dn{}}{{cBd}Dn{}}{{cBj}Dn{}}{{cBn}Dn{}}{{cDh}{{Cj{CbE`}}}{}}0000000000000{{dEb}Ed}0{{jEb}Ed}{{lEb}Ed}{{nEb}Ed}{{A`Eb}Ed}{{EfEb}Ed}{{AbEb}Ed}0{{AfEb}Ed}0{{AhEb}Ed}0{{AjEb}Ed}0{{AnEb}Ed}0{{B`Eb}Ed}0{{BbEb}Ed}0{{BfEb}Ed}0{{BhEb}Ed}0{{BlEb}Ed}0{{C`Eb}Ed}0{cc{}}0000000000000000{AfBl}1{AnC`}{{{Ej{Eh}}{En{DdEl}}}{{Cj{cF`}}}{}}00{{{Ej{Eh}}}n}11111111111114444444444444444{{dc}CbFb}{{jc}CbFb}{{lc}CbFb}{{nc}CbFb}{{A`c}CbFb}{{Abc}CbFb}{{Afc}CbFb}{{Ahc}CbFb}{{Ajc}CbFb}{{Anc}CbFb}{{B`c}CbFb}{{Bbc}CbFb}{{Bfc}CbFb}{{Bhc}CbFb}{{Blc}CbFb}{{C`c}CbFb}{ce{}{}}00000000000000000{{dFd}c{}}{{AbFd}c{}}{{AjFd}c{}}{{BbFd}c{}}{{BlFd}c{}}{{C`Fd}c{}}{c{{Ff{e}}}{}{}}00000000000000000{Ab{{Fh{Ah}}}}{Aj{{Fh{B`}}}}{Bb{{Fh{Bh}}}}{{Fjl}Ab}{{FjA`}Aj}{FlBb}``{{nn}{{Fh{Cd}}}}{{dc}CjFn}{{jc}CjFn}{{lc}CjFn}{{nc}CjFn}{{A`c}CjFn}{{Abc}CjFn}{{Afc}CjFn}{{Ahc}CjFn}{{Ajc}CjFn}{{Anc}CjFn}{{B`c}CjFn}{{Bbc}CjFn}{{Bfc}CjFn}{{Bhc}CjFn}`{Bl{{Fh{G`}}}}{C`{{Fh{G`}}}}{lGb}{c{{Gd{Eh}}}{}}00{n{{Gd{Eh}}}}1111111111111{nGf}{ce{}{}}000000000000000{cGh{}}00000000000{c{{Cj{e}}}{}{}}00000000000000000000000000000000000{cGj{}}00000000000000000```{{lGl}Dn}444444444444444444``````````4444{{cCf}{{Cj{GnCh}}}Cl}{{Gnc}{{Cj{CnD`}}}Db}{{cDb}{{Cj{CnD`}}}{}}{c{{Cj{Gn}}}Df}{c{{Cj{H`}}}Df}{{cDh}{{Cj{CbDj}}}{}}0{{cDh}{{Cj{CbE`}}}{}}0{{GnEb}Ed}{{H`Eb}Ed}{cc{}}0{{{Ej{Eh}}{En{DdEl}}}{{Cj{cF`}}}{}}{GnHb}`{ce{}{}}0{c{{Ff{e}}}{}{}}0``{{Gnc}CjFn}{{H`c}CjFn}{{GnHd}{{Hf{H`}}}}``{c{{Gd{Eh}}}{}}{c{{Cj{e}}}{}{}}000{cGj{}}0{{H`{Hh{c}}}{{Cj{GnHj}}}{HlHn}}88`````````{cb{}}9999999999999999{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{{cf}Il{}}{InIn}{J`J`}{{ce}Cb{}{}}0000000``{{cCf}{{Cj{IfCh}}}Cl}{{cCf}{{Cj{IhCh}}}Cl}{{cCf}{{Cj{InCh}}}Cl}{{cCf}{{Cj{J`Ch}}}Cl}{{Ifc}{{Cj{CnD`}}}Db}{{Ihc}{{Cj{CnD`}}}Db}{{Inc}{{Cj{CnD`}}}Db}{{J`c}{{Cj{CnD`}}}Db}{{cDb}{{Cj{CnD`}}}{}}000{{}I`}{{}J`}{Ibf}`{c{{Cj{I`}}}Df}{c{{Cj{Ib}}}Df}{c{{Cj{Id}}}Df}{c{{Cj{If}}}Df}{c{{Cj{Ih}}}Df}{c{{Cj{Ij}}}Df}{c{{Cj{In}}}Df}{c{{Cj{J`}}}Df}{{cDh}{{Cj{CbDj}}}{}}0000000{cDl{}}{{InIn}Dn}{{J`J`}Dn}{{ce}Dn{}{}}0000000{{cIl}Dn{}}{{cDh}{{Cj{CbE`}}}{}}0000000{IbJ`}```{{I`Eb}Ed}{{IbEb}Ed}{{IdEb}Ed}{{IfEb}Ed}{{IhEb}Ed}{{IjEb}Ed}{{InEb}Ed}0{{J`Eb}Ed}{cc{}}0000000{{{Ej{Eh}}{En{DdEl}}}{{Cj{cF`}}}{}}000{{ce}I`{}{}}{{ceg}Id{}{}{}}33333333{Ib{{Gd{Fj}}}}{{Inc}CbFb}{{J`c}CbFb}{ce{}{}}0000000{{InFd}c{}}{c{{Ff{e}}}{}{}}0000000{IhJb}````{{fJ`}Ib}`````{{I`c}CjFn}{{Ibc}CjFn}{{Idc}CjFn}{{Ifc}CjFn}{{Ihc}CjFn}{{Ijc}CjFn}{{Inc}CjFn}{{J`c}CjFn}``{c{{Gd{Eh}}}{}}000{c{{Fh{Jd}}}{}}>>>>>>>>{I`{{Jf{ce}}}{}{}}{Id{{Jf{Jbceg}}}{}{}{}}{cGh{}}{c{{Cj{e}}}{}{}}000000000000000{cGj{}}0000000{IhJh}{ce{}{}}0000000","c":[],"p":[[10,"Any",871],[6,"MintConsensusItem",0],[1,"u16"],[5,"DynModuleConsensusItem",872],[5,"MintOutputBlindSignature",0],[5,"Note",0],[5,"Nonce",0],[5,"BlindNonce",0],[6,"MintInput",0],[5,"DynInput",872],[5,"UnknownMintInputVariantError",0],[5,"MintInputV0",0],[6,"MintOutput",0],[5,"DynOutput",872],[5,"UnknownMintOutputVariantError",0],[5,"MintOutputV0",0],[6,"MintOutputOutcome",0],[5,"DynOutputOutcome",872],[5,"UnknownMintOutputOutcomeVariantError",0],[5,"MintOutputOutcomeV0",0],[5,"DynInputError",872],[6,"MintInputError",0],[5,"DynOutputError",872],[6,"MintOutputError",0],[1,"unit"],[6,"Ordering",873],[8,"ModuleDecoderRegistry",874],[5,"DecodeError",875],[6,"Result",876],[10,"Read",877],[1,"usize"],[5,"Error",878],[10,"Write",877],[5,"Decoder",872],[10,"Deserializer",879],[10,"Serializer",880],[6,"ErrorImpl",880],[1,"u64"],[1,"bool"],[5,"Error",881],[5,"Formatter",882],[8,"Result",882],[5,"MintCommonInit",0],[1,"u8"],[1,"slice"],[6,"DecodingMode",874],[5,"ModuleRegistry",874],[6,"DecodingError",883],[10,"Hasher",884],[8,"ModuleInstanceId",872],[5,"Request",885],[6,"Option",886],[5,"Amount",887],[5,"BlindedSignatureShare",888],[10,"Serializer",889],[10,"Error",890],[5,"PublicKey",891],[5,"Vec",892],[5,"Message",888],[5,"String",893],[5,"TypeId",871],[5,"AggregatePublicKey",888],[5,"BackupRequest",606],[5,"SignedBackupRequest",606],[5,"Hash",894],[5,"KeyPair",891],[8,"Result",895],[5,"Secp256k1",896],[6,"Error",896],[10,"Signing",897],[10,"Verification",897],[5,"MintGenParams",649],[5,"MintGenParamsConsensus",649],[5,"MintConfig",649],[5,"MintConfigLocal",649],[5,"MintConfigConsensus",649],[5,"MintConfigPrivate",649],[5,"DynClientConfig",872],[5,"MintClientConfig",649],[5,"FeeConsensus",649],[5,"ModuleKind",872],[6,"Value",898],[1,"tuple"],[5,"ModuleConsensusVersion",899],[5,"MintModuleTypes",0],[15,"Default",598],[15,"Default",600],[15,"Default",602],[15,"Default",604]],"b":[[309,"impl-Display-for-MintConsensusItem"],[310,"impl-Debug-for-MintConsensusItem"],[316,"impl-Debug-for-MintInput"],[317,"impl-Display-for-MintInput"],[318,"impl-Display-for-UnknownMintInputVariantError"],[319,"impl-Debug-for-UnknownMintInputVariantError"],[320,"impl-Debug-for-MintInputV0"],[321,"impl-Display-for-MintInputV0"],[322,"impl-Debug-for-MintOutput"],[323,"impl-Display-for-MintOutput"],[324,"impl-Display-for-UnknownMintOutputVariantError"],[325,"impl-Debug-for-UnknownMintOutputVariantError"],[326,"impl-Display-for-MintOutputV0"],[327,"impl-Debug-for-MintOutputV0"],[328,"impl-Display-for-MintOutputOutcome"],[329,"impl-Debug-for-MintOutputOutcome"],[330,"impl-Display-for-UnknownMintOutputOutcomeVariantError"],[331,"impl-Debug-for-UnknownMintOutputOutcomeVariantError"],[332,"impl-Debug-for-MintOutputOutcomeV0"],[333,"impl-Display-for-MintOutputOutcomeV0"],[334,"impl-Debug-for-MintInputError"],[335,"impl-Display-for-MintInputError"],[336,"impl-Debug-for-MintOutputError"],[337,"impl-Display-for-MintOutputError"],[756,"impl-Debug-for-MintClientConfig"],[757,"impl-Display-for-MintClientConfig"]]}],\
["fedimint_mint_server",{"doc":"","t":"FFFFNNNNNNNNNNNNNNHHONNENNNNNNCHNNNNNNNNNNNNHNNNNNNNNNNNNNNNNONNNNNNNNNNCNNNNONNNNNNNOOONNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNGFFPFFPPPGFFFFFPPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BackupRequest","Mint","MintInit","SignedBackupRequest","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_mint_issued_ecash_metrics","calculate_mint_redeemed_ecash_metrics","cfg","clone","clone_into","common","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","consensus_proposal","consensus_proposal","database_version","db","dealer_keygen","decoder","decoder","deserialize","deserialize","distributed_gen","distributed_gen","do_erased_serialize","do_erased_serialize","dump_database","dump_database","erased_serialize","erased_serialize","eval_polynomial","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_ref","from_ref","get_client_config","get_client_config","get_database_migrations","handle_backup_request","handle_recover_request","id","init","init","into","into","into","into","into_request","into_request","into_request","into_request","metrics","module_kind","new","output_status","output_status","payload","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","pub_key","pub_key","request","sec_key","serialize","serialize","sign","signature","supported_api_versions","supported_api_versions","timestamp","to_bytes","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_params","verify_valid","versions","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","MintOutputOutcomeKey","MintOutputOutcomePrefix","NonceKey","NonceKeyPrefix","NoteNonce","OutputOutcome","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MINT_INOUT_FEES_SATS","MINT_INOUT_SATS","MINT_ISSUED_ECASH_FEES_SATS","MINT_ISSUED_ECASH_SATS","MINT_REDEEMED_ECASH_FEES_SATS","MINT_REDEEMED_ECASH_SATS","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","from","from","from","from","from","from","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_server"],[121,"fedimint_mint_server::db"],[384,"fedimint_mint_server::metrics"],[456,"fedimint_core::core::server"],[457,"fedimint_core::module"],[458,"alloc::vec"],[459,"core::any"],[460,"fedimint_core::module"],[461,"fedimint_core::module::audit"],[462,"core::future::future"],[463,"alloc::boxed"],[464,"core::pin"],[465,"fedimint_core::core"],[466,"fedimint_core"],[467,"fedimint_core::core"],[468,"fedimint_core::module::registry"],[469,"core::result"],[470,"std::io"],[471,"std::io::error"],[472,"std::io"],[473,"tbs"],[474,"fedimint_core::module"],[475,"erased_serde::ser"],[476,"erased_serde::ser"],[477,"core::iter::traits::iterator"],[478,"erased_serde::error"],[479,"bls12_381::scalar"],[480,"core::fmt"],[481,"core::fmt"],[482,"fedimint_mint_common::config"],[483,"anyhow"],[484,"fedimint_core::module"],[485,"core::option"],[486,"fedimint_core"],[487,"fedimint_core"],[488,"fedimint_core::core"],[489,"fedimint_mint_common"],[490,"serde::ser"],[491,"secp256k1::key"],[492,"fedimint_core::module"],[493,"secp256k1"],[494,"secp256k1::context"],[495,"prometheus::histogram"],[496,"prometheus::histogram"]],"d":["","Federated mint member mint","","","","","","","Queries the database and returns all assets and …","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constructs a new mint","","Retrieve the current status of the output. Depending on …","","This function is called once for every consensus item. The …","","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","Transaction id and output index identifying an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,4,4,4,16,4,4,16,4,20,33,16,4,20,33,0,0,4,16,16,0,20,20,20,4,4,16,0,0,16,4,20,33,16,16,20,33,16,16,20,33,0,16,4,20,33,16,4,20,33,20,16,16,16,16,16,4,4,20,16,16,16,4,20,33,16,4,20,33,0,16,4,4,4,20,4,4,4,4,4,4,4,4,33,4,20,33,20,33,16,16,20,20,16,16,16,16,16,4,20,33,16,4,20,33,16,4,20,33,16,16,16,33,16,16,4,20,33,0,0,0,88,0,0,92,92,88,0,0,0,0,0,0,88,88,92,92,89,88,89,90,95,91,96,92,97,93,98,58,88,89,90,95,91,96,92,97,93,98,58,88,89,90,91,92,93,58,88,89,90,91,92,93,58,90,95,91,96,92,97,93,98,58,90,95,91,96,92,97,93,98,58,90,95,91,96,92,97,93,98,58,58,58,90,91,92,93,58,90,58,90,90,90,90,58,58,58,58,90,91,92,93,58,88,88,89,90,95,91,96,92,97,93,98,58,88,89,90,95,91,96,92,97,93,98,58,90,90,95,91,91,96,92,92,97,93,93,98,58,88,88,89,89,90,90,91,91,92,92,93,93,58,58,89,90,89,88,89,90,95,91,96,92,97,93,98,58,89,88,89,90,95,91,96,92,97,93,98,58,88,89,89,89,89,89,90,91,92,93,58,89,58,90,90,95,95,91,91,96,96,92,92,97,97,93,93,98,98,58,88,89,90,91,92,93,58,88,88,89,90,95,91,96,92,97,93,98,58,88,89,90,95,91,96,92,97,93,98,58,88,89,90,95,91,96,92,97,93,98,58,88,89,90,95,91,96,92,97,93,98,58,0,0,0,0,0,0,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108,101,103,104,106,107,108],"f":"````{c{{f{{d{b}}}}}{}}{h{{f{{d{h}}}}}}{cj{}}{cl{}}{{cnA`Ab}{{Ah{{Af{Ad}}}}}{}}{{hnA`Aj}{{Ah{{Af{Ad}}}}}}{ce{}{}}0000000{{nAlAl}An}0`{B`B`}{{ce}An{}{}}`{{c{Bf{BbBd}}}{{Bl{BhBj}}}Bn}{{Bhc}{{Bl{C`Cb}}}Cd}{{cCd}{{Bl{C`Cb}}}{}}{{cnAb}{{Ah{{Af{Ad}}}}}{}}{{hn}{{Ah{{Af{Ad}}}}}}{cCf{}}`{{C`C`}{{Cn{Ch{f{Cj}}{f{Cl}}}}}}{cBb{}}0{c{{Bl{Bh}}}D`}{c{{Bl{Db}}}D`}{{cDdDf}{{Ah{{Af{Ad}}}}}{}}{{B`DdDf}{{Ah{{Af{Ad}}}}}}{{cDh}{{Bl{AnDj}}}{}}0{{B`n{f{Dl}}}{{Af{Dn}}}}{{cn{f{Dl}}}{{Ah{{Af{Ad}}}}}{}}{{cDh}{{Bl{AnE`}}}{}}0{{{Ed{Eb}}Eb}Eb}{{B`Ef}Eh}{{hEf}Eh}{{BhEf}{{Bl{AnEj}}}}{{DbEf}{{Bl{AnEj}}}}{cc{}}000{{{Ed{El}}{Bf{BbBd}}}{{Bl{cEn}}}{}}11{{cAbF`}{{Bl{FbFd}}}{}}{{B`F`}{{Fh{Ff}}}}{c{{Fn{Cf{Fl{n}{{Fj{{Ah{{Af{Ad}}}}}}}}}}}{}}{{hnDb}{{Bl{AnG`}}}}{{hnGb}{{Gf{Gd}}}}`{{cGhGjGlGnH`}{{Ah{{Af{Ad}}}}}{}}{{B`{Hb{B`}}}{{Ah{{Af{Ad}}}}}}{ce{}{}}000{c{{Hd{e}}}{}{}}000`{cHf{}}{Hhh}{{hnHj}{{Ah{{Af{Ad}}}}}}{{cnHjAb}{{Ah{{Af{Ad}}}}}{}}`{{cnHlH`}{{Ah{{Af{Ad}}}}}{}}{{hnHnH`}{{Ah{{Af{Ad}}}}}}{{hnI`}{{Ah{{Af{Ad}}}}}}{{cnIbAb}{{Ah{{Af{Ad}}}}}{}}{{cnIdHjAb}{{Ah{{Af{Ad}}}}}{}}{{hnIfHj}{{Ah{{Af{Ad}}}}}}{h{{Ih{AlCh}}}}```{{Bhc}BlIj}{{Dbc}BlIj}{{BhIl}{{Bl{DbFd}}}}`{B`In}{cIn{}}`{c{{f{El}}}{}}{cJ`{}}{ce{}{}}{{B`{Ed{H`}}Df}{{Fn{H`Gj}}}}{{c{Ed{H`}}Df}{{Fn{H`Gj}}}{}}{c{{Bl{e}}}{}{}}0000000{cJb{}}000{{cH`Gj}{{Bl{AnFd}}}{}}{{B`H`Gj}{{Fh{An}}}}{{cDf}{{Bl{AnFd}}}{}}{{Db{Jd{c}}}{{Bl{BhJf}}}{JhJj}}{{B`Jl}{{Ed{Jn}}}}9999````````````````````9999999999999999999999{K`K`}{KbKb}{KdKd}{KfKf}{KhKh}{KjKj}{GdGd}{{ce}An{}{}}000000{{cKl}{{Bl{KdBj}}}Bn}{{cKl}{{Bl{KnBj}}}Bn}{{cKl}{{Bl{KfBj}}}Bn}{{cKl}{{Bl{L`Bj}}}Bn}{{cKl}{{Bl{KhBj}}}Bn}{{cKl}{{Bl{LbBj}}}Bn}{{cKl}{{Bl{KjBj}}}Bn}{{cKl}{{Bl{LdBj}}}Bn}{{cKl}{{Bl{GdBj}}}Bn}{{Kdc}{{Bl{C`Cb}}}Cd}{{Knc}{{Bl{C`Cb}}}Cd}{{Kfc}{{Bl{C`Cb}}}Cd}{{L`c}{{Bl{C`Cb}}}Cd}{{Khc}{{Bl{C`Cb}}}Cd}{{Lbc}{{Bl{C`Cb}}}Cd}{{Kjc}{{Bl{C`Cb}}}Cd}{{Ldc}{{Bl{C`Cb}}}Cd}{{Gdc}{{Bl{C`Cb}}}Cd}{{cCd}{{Bl{C`Cb}}}{}}00000000`{c{{Bl{Gd}}}D`}{{cDh}{{Bl{AnDj}}}{}}0000{{KdKd}Lf}{{GdGd}Lf}{{ce}Lf{}{}}0000000{{cDh}{{Bl{AnE`}}}{}}0000{{K`Ef}Eh}0{{KbEf}Eh}{{KdEf}Eh}{{KnEf}Eh}{{KfEf}Eh}{{L`Ef}Eh}{{KhEf}Eh}{{LbEf}Eh}{{KjEf}Eh}{{LdEf}Eh}{{GdEf}Eh}{cc{}}0000000000{{{Ed{El}}{Bf{BbBd}}}{{Bl{cEn}}}{}}00000000000011111111111111{{KbC`}{{Gf{K`}}}}{{Kdc}AnLh}`{ce{}{}}00000000000{c{{Hd{e}}}{}{}}0000000000{{}Kb}{KbC`}`{Kb{{Gf{c}}}{}}0{{KbC`}{{Gf{c}}}{}}{{Kdc}BlIj}{{Kfc}BlIj}{{Khc}BlIj}{{Kjc}BlIj}{{Gdc}BlIj}{Kb{{Cn{C`{Gf{C`}}}}}}`{c{{f{El}}}{}}0000000000000000<<<<<<<{cDl{}}{c{{Bl{e}}}{}{}}000000000000000000000{cJb{}}0000000000???????????````````````????????????{LjLl}{LnLl}{M`Mb}{MdMb}{MfMb}{MhMb}{cc{}}00000{ce{}{}}00000{c{{Hd{e}}}{}{}}00000::::::::::::999999111111","c":[],"p":[[5,"DynServerModule",456],[5,"ApiEndpoint",457],[5,"Vec",458],[5,"Mint",0],[10,"Any",459],[10,"IDynCommonModuleInit",457],[5,"DatabaseTransaction",460],[5,"Audit",461],[1,"u16"],[10,"Future",462],[5,"Box",463],[5,"Pin",464],[8,"ModuleInstanceId",465],[5,"Amount",466],[1,"unit"],[5,"MintInit",0],[5,"Decoder",465],[6,"DecodingMode",467],[5,"ModuleRegistry",467],[5,"BackupRequest",0],[5,"DecodeError",468],[6,"Result",469],[10,"Read",470],[1,"usize"],[5,"Error",471],[10,"Write",470],[5,"DatabaseVersion",460],[5,"AggregatePublicKey",472],[5,"PublicKeyShare",472],[5,"SecretKeyShare",472],[1,"tuple"],[10,"Deserializer",473],[5,"SignedBackupRequest",0],[5,"PeerHandle",457],[5,"ConfigGenModuleParams",474],[10,"Serializer",475],[6,"ErrorImpl",475],[5,"String",476],[10,"Iterator",477],[5,"Error",478],[5,"Scalar",479],[1,"slice"],[5,"Formatter",480],[8,"Result",480],[5,"Error",480],[1,"u8"],[6,"DecodingError",460],[5,"ServerModuleConsensusConfig",474],[5,"ClientModuleConfig",474],[5,"Error",481],[5,"MintClientConfig",482],[8,"Result",481],[17,"Output"],[1,"fn"],[5,"BTreeMap",483],[5,"ApiError",457],[5,"PublicKey",484],[5,"ECashUserBackupSnapshot",121],[6,"Option",485],[5,"NumPeers",466],[5,"ServerModuleConfig",474],[5,"Database",460],[5,"TaskGroup",486],[5,"PeerId",466],[5,"ServerModuleInitArgs",457],[5,"Request",487],[5,"ModuleKind",465],[5,"MintConfig",482],[5,"OutPoint",466],[5,"DynModuleConsensusItem",465],[6,"MintConsensusItem",488],[6,"MintInput",488],[5,"DynInput",465],[5,"DynOutput",465],[6,"MintOutput",488],[5,"HashMap",489],[10,"Serializer",490],[5,"KeyPair",484],[5,"SupportedModuleApiVersions",491],[5,"DynCommonModuleInit",457],[5,"TypeId",459],[5,"Secp256k1",492],[6,"Error",492],[10,"Signing",493],[10,"Verification",493],[5,"CoreConsensusVersion",491],[5,"ModuleConsensusVersion",491],[6,"DbKeyPrefix",121],[5,"DbKeyPrefixIter",121],[5,"NonceKey",121],[5,"MintOutputOutcomeKey",121],[6,"MintAuditItemKey",121],[5,"EcashBackupKey",121],[8,"ModuleDecoderRegistry",467],[5,"NonceKeyPrefix",121],[5,"MintOutputOutcomePrefix",121],[5,"MintAuditItemKeyPrefix",121],[5,"EcashBackupKeyPrefix",121],[1,"bool"],[10,"Hasher",494],[5,"MINT_INOUT_SATS",384],[8,"HistogramVec",495],[5,"MINT_INOUT_FEES_SATS",384],[5,"MINT_REDEEMED_ECASH_SATS",384],[5,"Histogram",495],[5,"MINT_REDEEMED_ECASH_FEES_SATS",384],[5,"MINT_ISSUED_ECASH_SATS",384],[5,"MINT_ISSUED_ECASH_FEES_SATS",384]],"b":[[226,"impl-Display-for-DbKeyPrefix"],[227,"impl-Debug-for-DbKeyPrefix"]]}],\
["fedimint_portalloc",{"doc":"A library for cooperative port allocation between multiple …","t":"ICHCHHCFFNNNNNNCNHNNNNNNNNOOONNOONNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNONNNNNNNNNNSHHH","n":["UnixTimestamp","data","data_dir","envs","now_ts","port_alloc","util","DataDir","LockedRoot","borrow","borrow","borrow_mut","borrow_mut","data_file_path","drop","dto","ensure_locked","ensure_root_exists","from","from","into","into","into_request","into_request","load_data","lock","lock_file","lock_file","locked","new","new","path","path","store_data","try_from","try_from","try_into","try_into","type_id","type_id","unlock","vzip","vzip","with_lock","yield","RangeData","RootData","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","default","default","deserialize","deserialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","expires","fmt","fmt","from","from","from_ref","from_ref","insert","into","into","into_request","into_request","keys","reclaim","serialize","serialize","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FM_PORTALLOC_DATA_DIR_ENV","open_lock_file","store_json_pretty_to_file","store_to_file_with"],"q":[[0,"fedimint_portalloc"],[7,"fedimint_portalloc::data"],[45,"fedimint_portalloc::data::dto"],[91,"fedimint_portalloc::envs"],[92,"fedimint_portalloc::util"],[95,"std::path"],[96,"anyhow"],[97,"tonic::request"],[98,"core::convert"],[99,"std::fs"],[100,"core::result"],[101,"core::any"],[102,"core::ops::function"],[103,"core::time"],[104,"core::ops::range"],[105,"serde::de"],[106,"erased_serde::ser"],[107,"erased_serde::ser"],[108,"core::fmt"],[109,"core::fmt"],[110,"std::path"],[111,"std::io"],[112,"core::ops::function"]],"d":["","","","","","","","Root directory where we keep the lock &amp; data file","A handle passed to <code>with_lock</code> argument after root was …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","local time unix timestamp","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,9,5,9,5,5,5,0,5,0,9,5,9,5,9,5,5,5,9,5,5,9,5,9,5,5,9,5,9,5,9,5,5,9,5,9,5,0,0,17,8,17,8,17,8,17,8,8,17,8,17,8,17,8,17,8,17,17,8,17,8,17,8,8,17,8,17,8,8,8,17,8,17,17,8,17,8,17,8,17,8,17,8,0,0,0,0],"f":"``{{}{{d{b}}}}`{{}f}{h{{d{h}}}}```{ce{}{}}000{jb}{jl}`{j{{d{l}}}}{b{{d{l}}}}{cc{}}055{c{{n{e}}}{}{}}0{{jf}{{d{A`}}}}4```{c{{d{Ab}}}{{Ad{b}}}}{{bAf}{{d{j}}}}``{{jA`}{{d{l}}}}{c{{Ah{e}}}{}{}}000{cAj{}}09<<{{Abe}{{d{c}}}{}{{An{j}{{Al{{d{c}}}}}}}}{{jB`}{{d{l}}}}``>>>>{BbBb}{A`A`}{{ce}l{}{}}0{{A`{Bd{h}}}Bf}{{}Bb}{{}A`}{c{{Ah{Bb}}}Bh}{c{{Ah{A`}}}Bh}{{cBj}{{Ah{lBl}}}{}}0{{cBj}{{Ah{lBn}}}{}}0`{{BbC`}Cb}{{A`C`}Cb}{cc{}}000{{A`{Bd{h}}f}l}{ce{}{}}0{c{{n{e}}}{}{}}0`{{A`f}A`}{{Bbc}AhCd}{{A`c}AhCd}`44{c{{Ah{e}}}{}{}}000{cAj{}}066`{Cf{{d{Af}}}}{{Cfc}{{d{l}}}Ch}{{Cfe}{{Cj{{Ah{lc}}}}}{}{{Cn{Cl}{{Al{{Ah{lc}}}}}}}}","c":[],"p":[[5,"PathBuf",95],[8,"Result",96],[1,"u64"],[1,"u16"],[5,"LockedRoot",7],[1,"unit"],[5,"Request",97],[5,"RootData",45],[5,"DataDir",7],[10,"Into",98],[5,"File",99],[6,"Result",100],[5,"TypeId",101],[17,"Output"],[10,"FnOnce",102],[5,"Duration",103],[5,"RangeData",45],[5,"Range",104],[1,"bool"],[10,"Deserializer",105],[10,"Serializer",106],[6,"ErrorImpl",106],[5,"Error",107],[5,"Formatter",108],[8,"Result",108],[10,"Serializer",109],[5,"Path",95],[10,"Serialize",109],[8,"Result",110],[10,"Write",111],[10,"Fn",102]],"b":[]}],\
["fedimint_rocksdb",{"doc":"","t":"FFFFNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNHHNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNS","n":["RocksDb","RocksDbReadOnly","RocksDbReadOnlyTransaction","RocksDbTransaction","begin_transaction","begin_transaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","commit_tx","envs","fmt","fmt","fmt","fmt","from","from","from","from","from","get_default_options","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_power_of_two","next_prefix","open","open_read_only","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","rocksdb","rollback_tx_to_savepoint","rollback_tx_to_savepoint","set_tx_savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FM_ROCKSDB_WRITE_BUFFER_SIZE_ENV"],"q":[[0,"fedimint_rocksdb"],[73,"fedimint_rocksdb::envs"],[74,"core::future::future"],[75,"alloc::boxed"],[76,"core::pin"],[77,"core::fmt"],[78,"core::fmt"],[79,"rocksdb::db_options"],[80,"anyhow"],[81,"tonic::request"],[82,"alloc::vec"],[83,"core::option"],[84,"std::path"],[85,"core::convert"],[86,"core::result"],[87,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,5,6,7,1,5,6,7,1,5,6,7,0,6,7,1,5,6,7,1,1,5,0,1,6,7,1,5,6,7,1,5,0,0,1,5,6,7,6,7,6,7,6,7,6,7,6,7,0,6,7,6,7,6,7,1,5,6,7,1,5,6,7,1,5,6,7,1,5,0],"f":"````{b{{h{{f{d}}}}}}{j{{h{{f{d}}}}}}{ce{}{}}0000000{l{{h{{f{d}}}}}}{n{{h{{f{d}}}}}}`{{lA`}Ab}{{nA`}Ab}{{bA`}Ab}{{jA`}Ab}{cc{}}0{Adb}11{{}{{Ah{Af}}}}{bAd}::::{c{{Aj{e}}}{}{}}000{AlAn}{{{Bb{B`}}}{{Bf{{Bd{B`}}}}}}{c{{Ah{b}}}{{Bj{Bh}}}}{c{{Ah{j}}}{{Bj{Bh}}}}{{l{Bb{B`}}}{{h{{f{d}}}}}}{{n{Bb{B`}}}{{h{{f{d}}}}}}1010{{l{Bb{B`}}{Bb{B`}}}{{h{{f{d}}}}}}{{n{Bb{B`}}{Bb{B`}}}{{h{{f{d}}}}}}3232`{l{{h{{f{d}}}}}}{n{{h{{f{d}}}}}}10{c{{Bl{e}}}{}{}}0000000{cBn{}}000{ce{}{}}000`","c":[],"p":[[5,"RocksDb",0],[10,"Future",74],[5,"Box",75],[5,"Pin",76],[5,"RocksDbReadOnly",0],[5,"RocksDbTransaction",0],[5,"RocksDbReadOnlyTransaction",0],[5,"Formatter",77],[8,"Result",77],[8,"OptimisticTransactionDB",78],[5,"Options",79],[8,"Result",80],[5,"Request",81],[1,"usize"],[1,"bool"],[1,"u8"],[1,"slice"],[5,"Vec",82],[6,"Option",83],[5,"Path",84],[10,"AsRef",85],[6,"Result",86],[5,"TypeId",87]],"b":[]}],\
["fedimint_server",{"doc":"","t":"SIPFFKPCNNNNNHCCMOCOCNNNNNHONNNNCCCNNNNOONNNNNNNNNONNPEFPGCNNNNNNNNNNNCNNNNNNNNCNNNNNNNNNNNNNCCNCNHNNHNNNNNNNNFNNNONNNHNNNNONPFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONONNNNNNNNNNFNNNNNNNONNNNFNNNNNNNNNNNNNONNNNOOONNNNNNNNNFFINNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNPPSPFFRSSSSPGGIPPPPFFFGRPPFPPPFRPFFFFFFIKNCOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHOOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNOONOOOHONOOOOOOOONNNONNNNOONCCCNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOONNNNNNNNNNNNNNNNNFFFFFNOOOONONNNNNNNNNNNNNNNNNNNNNNNONONNOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOONNOONOOOOONONONNNNNHNNNNNONNOOOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNFFFGPKPFNNNNNNNNNNNNNNNNNNOOHHHMMOONNNNNNNNNNNNNNONNONNNNNNNNNNNNNOOOOOOOHHNMNMNNHOOONNONNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSHHHHHHHHHHHHHFNNNNCNONONNOHCNNNNNFNNNNNNNNNNFISOONNONNNOONNNHNNOOONNONNNNNNNNOOHNNNNPFFPFFPFFGFSPPFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSFFFFFFFFFFFFFFFFOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNONNNNNNNNONNNOONNNNNNNNNNNNNNISIIFFFNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOONOONONNONNNNNNNNNNNNONNNCCCCCCFFFNNNNNNNNNNOONNNNNNONNOOONNNNNNNNNNNNNNNNNNNNNNOONNOOHNNONONNNNNNNNNNNNNNNIIIKPPFIFFNONNNNNNNONNNNMNHNNNNNNNNNNNNNNNNNNMNCNNOOOHOOOOOOONNNNNNNNNNNNNNTFPTFTTFFPGFFTNNNNNNNNNNNNNNOOONNNNNNNNHNNNNNOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNONOONNNNNNNNNNNNOOOOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOIFFIIKIONNNNNMNNNNNNNOONNNNNNNNNNNNNNNNOONOONNNNNNNNNTFPFFPFPFSTTTFGFIGIIFFPFTTTNONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONOOOONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNOONNOOOOOOOOONNNNONONNNONNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPFPFSFGFIFIIFFFONNNNNNNNNNNNNNNNNNNNNOONNNNONOOOONNNNNONNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNOONNOOOOOONNNNNNONOONNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONNNONNNNNNNNNNNNNNNNN","n":["API_ENDPOINT_TIMEOUT","ApiResult","Err","FedimintApiHandler","FedimintServer","HasApiContext","Ok","atomic_broadcast","attach_endpoints","borrow","borrow","borrow_mut","borrow_mut","check_auth","config","consensus","context","data_dir","db","db","envs","fmt","from","from","generate_config","get_config","get_verification_hashes","handle","into","into","into_request","into_request","metrics","multiplexed","net","new","run","run_cfg","run_dkg","runtime","settings","spawn_api","spawn_consensus_api","stop","try_from","try_from","try_into","try_into","type_id","type_id","version_hash","vzip","vzip","Everyone","Keychain","Message","Peer","Recipient","backup","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","data_provider","deserialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","finalization_handler","fmt","fmt","from","from","from_bytes","from_ref","from_ref","from_ref","from_ref","into","into","into_request","into_request","keychain","network","serialize","spawner","to_bytes","to_node_index","to_owned","to_owned","to_peer_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","UnitSaver","append","borrow","borrow_mut","db","from","into","into_request","load_session","new","try_from","try_into","type_id","units_index","vzip","Batch","DataProvider","Signature","UnitData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","from_ref","get_data","hash","into","into","into_request","into_request","is_valid","leftover_item","mempool_item_receiver","new","signature_receiver","size_hint","submitted_transactions","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FinalizationHandler","borrow","borrow_mut","data_finalized","from","into","into_request","new","sender","try_from","try_into","type_id","vzip","Keychain","bootstrap_multi","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","from_ref","index","into","into_request","is_complete","keypair","new","node_count","peer_count","peer_id","peer_id","public_keys","secp","sign","tagged_hash","threshold","to_owned","try_from","try_into","type_id","verify","vzip","Hasher","Network","NetworkData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connections","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","from_ref","hash","into","into","into_request","into_request","new","next_event","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Spawner","borrow","borrow_mut","clone","clone_into","default","from","from_ref","from_ref","into","into_request","new","spawn","spawn_essential","to_owned","try_from","try_into","type_id","vzip","Auth","Bft","CORE_CONSENSUS_VERSION","Cancelled","ClientConfig","ConfigGenParams","Consensus","DEFAULT_BROADCAST_EXPECTED_ROUNDS_PER_SESSION","DEFAULT_BROADCAST_MAX_ROUNDS_PER_SESSION","DEFAULT_BROADCAST_ROUND_DELAY_MS","DEFAULT_MAX_CLIENT_CONNECTIONS","DistributedGen","DkgError","DkgPeerMsg","DkgResult","Done","Epoch","Err","Failed","FederationId","GlobalClientConfig","JsonWithKind","KeyType","Local","Module","ModuleDecodeError","ModuleInitRegistry","ModuleNotFound","Ok","ParamsNotFound","PeerUrl","Private","PublicKey","ServerConfig","ServerConfigConsensus","ServerConfigLocal","ServerConfigPrivate","ServerModuleConfig","ServerModuleConsensusConfig","ServerModuleInitRegistry","TypedServerModuleConfig","add_modules","api","api_auth","api_bind","api_endpoints","api_endpoints","api_urls","attach","available_decoders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_expected_rounds_per_session","broadcast_max_rounds_per_session","broadcast_public_keys","broadcast_round_delay_ms","broadcast_secret_key","calculate_federation_id","calculate_federation_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_version","compare","config","connect","consensus","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash","consensus_json","consensus_version","decoders","decoders_strict","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributedgen","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","download_from_invite_code","dummy","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fed_bind","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_iter","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","gen_cert_and_key","get","get_federation_id","get_first_module_by_kind","get_first_module_by_kind_cfg","get_incoming_count","get_invite_code","get_module","get_module_cfg","get_module_cfg_by_instance_id","get_module_config","get_module_config_typed","get_module_id_by_kind","global","hash","hash","hash","identity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","io","is_kind","iter_module_instances","iter_module_instances","kind","kind","kind","kinds","local","local","local","max_connections","max_connections","meta","meta","meta","modules","modules","modules","modules","modules_json","name","network_config","new","new","p2p_endpoints","p2p_network","p2p_urls","partial_cmp","peer_ids","private","private","redecode_raw","serde_binary_human_readable","serde_tls_cert_map","serde_tls_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","supported_api_versions","supported_api_versions_summary","tls_certs","tls_certs","tls_config","tls_config","tls_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_common","to_erased","to_fake_ln_pub_key","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_prefix","to_string","to_string","to_typed","trusted_dealer_gen","try_download_client_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","value","value","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","ConfigGenApi","ConfigGenLocalConnection","ConfigGenParamsLocal","ConfigGenSettings","ConfigGenState","add_config_gen_peer","api_auth","api_bind","api_bind","api_url","auth","auth","await_leader_restart","await_peer_restart","bad_request","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","config_gen_peers","config_generated_tx","consensus_config_gen_params","context","data_dir","db","default_config_gen_params","default_params","download_token_limit","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_config_gen_params","get_peer_info","get_requested_params","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","leader_api_url","local","local_connection","max_connections","max_connections","new","new","our_id","our_name","our_peer_info","our_private_key","p2p_bind","p2p_bind","p2p_url","peers","persist_staged_configs","registry","remove_staged_configs","requested_params","require_any_status","require_status","reset","restart_federation_setup","run_dkg","server_endpoints","server_status","set_config_gen_connections","set_config_gen_params","set_password","set_request","settings","stage_configs","start_consensus","state","status","task_group","tls_cert","tls_private","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_leader","verified_configs","verify_config_hash","version_hash","vzip","vzip","vzip","vzip","vzip","Dkg","DkgKeys","DkgRunner","DkgStep","Messages","PeerHandleOps","Result","ThresholdKeys","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone_into","clone_into","clone_into","commitments","dkg_config","evaluate_polynomial_g1","evaluate_polynomial_g2","evaluate_polynomial_scalar","exchange_pubkeys","exchange_with_peers","f1_poly","f2_poly","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gen_g","gen_h","hash","hashed_commits","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","multi","new","new","our_id","our_id","peers","peers","pk_shares","public_key_set","public_key_set","random_scalar","random_scalar_coefficients","run","run_dkg_g1","run_dkg_key","run_dkg_multi_g2","run_g1","run_g2","scalar","secret_key_share","secret_key_share","sk_shares","step","tbs","threshold","threshold_crypto","to_owned","to_owned","to_owned","tpe","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CLIENT_CONFIG","CLIENT_INVITE_CODE_FILE","CONFIG_STAGING_DIR","CONSENSUS_CONFIG","DB_FILE","ENCRYPTED_EXT","JSON_EXT","LOCAL_CONFIG","PLAINTEXT_PASSWORD","PRIVATE_CONFIG","SALT_FILE","encrypted_json_read","encrypted_json_write","plaintext_display_write","plaintext_json_read","plaintext_json_write","read_server_config","write_server_config","deserialize","serialize","deserialize","serialize","deserialize","serialize","FundingVerifier","add_input","add_output","borrow","borrow_mut","debug_fmt","default","fee_amount","from","input_amount","into","into_request","output_amount","process_transaction_with_dbtx","server","try_from","try_into","type_id","verify_funding","vzip","FmtDbgConsensusItem","borrow","borrow_mut","fmt","from","into","into_request","try_from","try_into","type_id","vzip","ConsensusServer","LatestContributionByPeer","TRANSACTION_BUFFER","api_endpoints","base","borrow","borrow_mut","cfg","complete_session","complete_signed_session_outcome","confirm_server_config_consensus_hash","connections","db","decoders","from","get_finished_session_count","get_finished_session_count_static","into","into_request","keychain","latest_contribution_by_peer","modules","new","new_with","peer_id_str","pending_accepted_items","process_consensus_item","process_consensus_item_with_db_transaction","request_signed_session_outcome","run","run_consensus","run_session","run_single_guardian","self_id_str","submission_receiver","submit_module_consensus_items","try_from","try_into","type_id","vzip","AcceptedItem","AcceptedItemKey","AcceptedItemPrefix","AcceptedTransaction","AcceptedTransactionKey","AcceptedTransactionKeyPrefix","AlephUnits","AlephUnitsKey","AlephUnitsPrefix","DbKeyPrefix","DbKeyPrefixIter","GLOBAL_DATABASE_VERSION","Module","SignedSessionOutcome","SignedSessionOutcomeKey","SignedSessionOutcomePrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_global_database_migrations","idx","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FM_MAX_CLIENT_CONNECTIONS_ENV","FM_PEER_ID_SORT_BY_URL_ENV","BACKUP_WRITE_SIZE_BYTES","CONSENSUS_ITEMS_PROCESSED_TOTAL","CONSENSUS_ITEM_PROCESSING_DURATION_SECONDS","CONSENSUS_ITEM_PROCESSING_MODULE_AUDIT_DURATION_SECONDS","CONSENSUS_PEER_CONTRIBUTION_SESSION_IDX","CONSENSUS_SESSION_COUNT","CONSENSUS_TX_PROCESSED_INPUTS","CONSENSUS_TX_PROCESSED_OUTPUTS","JSONRPC_API_REQUEST_DURATION_SECONDS","JSONRPC_API_REQUEST_RESPONSE_CODE","PEER_BANS_COUNT","PEER_CONNECT_COUNT","PEER_DISCONNECT_COUNT","PEER_MESSAGES_COUNT","STORED_BACKUPS_COUNT","TX_ELEMS_BUCKETS","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","initialize_gauge_metrics","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jsonrpsee","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MetricsLayer","MetricsService","ResponseFuture","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","fmt","fmt","from","from","from","from_ref","from_ref","fut","into","into","into","into_future","into_request","into_request","into_request","layer","method","poll","project","project_ref","service","timer","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","Callback","MAX_PEER_OUT_OF_ORDER_MESSAGES","ModuleId","ModuleIdRef","ModuleMultiplexed","ModuleMultiplexerOutOfOrder","PeerConnectionMultiplexer","ban_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callbacks","clone","clone","clone_into","clone_into","default","deserialize","do_erased_serialize","erased_serialize","fmt","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into_request","into_request","into_request","key","msg","msgs","new","peer_bans_tx","peer_counts","receive","receive_callbacks_tx","run","send","send_requests_tx","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vec","vzip","vzip","vzip","api","connect","framed","peers","peers_reliable","queue","ConsensusApi","ExpiringCache","RpcHandlerCtx","api_versions_summary","await_output_outcome","await_signed_session_outcome","await_transaction","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","client_cfg","clone","clone","clone","clone_into","clone_into","clone_into","consensus_status_cache","context","context","data","db","duration","fmt","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_federation_audit","get_federation_status","get_guardian_config_backup","handle_backup_request","handle_recover_request","into","into","into","into_request","into_request","into_request","latest_contribution_by_peer","modules","new","new_module","peer_status_channels","rpc_context","server_endpoints","session_count","session_status","submission_sender","submit_transaction","supported_api_versions","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AnyConnector","ConnectResult","ConnectionListener","Connector","Err","Ok","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","alloc","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","dns_sanitize","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","from_ref","get_peer_by_cert","into","into","into","into_dyn","into_request","into_request","into_request","listen","listen","mock","new","new","our_certificate","our_private_key","our_private_key","parse_host_port","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","phantom","ptr","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BROKEN","FailureRate","FullyReliable","INTEGRATION_TEST","LatencyInterval","MAX","MILDLY_UNRELIABLE","MockConnector","MockNetwork","RandomlyUnreliable","StreamReliability","UnreliabilityGenerator","UnreliableDuplexStream","ZERO","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broken","clients","clients","clone","clone","clone","clone_into","clone_into","clone_into","connect_framed","connector","do_handshake","eq","equivalent","equivalent","equivalent","equivalent","failure_rate","flush_generator","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate","id","inner","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","latency","listen","max_millis","min_millis","new","new","new","new","new","poll_broken","poll_flush","poll_read","poll_shutdown","poll_write","random","random_fail","read_generator","reliability","shutdown_generator","sleep_future","successes","timeout","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_generator","flush_failure_rate","flush_latency","read_failure_rate","read_latency","shutdown_failure_rate","shutdown_latency","write_failure_rate","write_latency","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","encode","fmt","fmt","from","from","inner","inner","into","into","into_dyn","into_request","into_request","into_streaming_request","new","new","new_from_tcp","new_from_tcp","next_or_pending","ok","poll_close","poll_flush","poll_next","poll_ready","sink","sink","start_send","stream","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","BASE_MS","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","DelayCalculator","Disconnected","DisconnectedPeerConnectionState","Message","NetworkConfig","PING_INTERVAL","PROD_DEFAULT","PROD_MAX_RETRY_DURATION_MS","PROD_MIN_RETRY_DURATION_MS","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerStatusChannelReceiver","PeerStatusChannelSender","PeerStatusChannels","PeerStatusQuery","Ping","ReconnectPeerConnections","TEST_DEFAULT","TEST_MAX_RETRY_DURATION_MS","TEST_MIN_RETRY_DURATION_MS","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chan","chan","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","connect","connect","connection","connections","delay_calculator","deserialize","deserialize","disconnect","disconnect_err","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","failed_reconnect_counter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_all_status","identity","incoming","incoming","incoming_connections","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_retry_duration_ms","min_retry_duration_ms","new","new","next_ping","our_id","our_id_str","outgoing","outgoing","peer_address","peer_id","peer_id_str","peers","receive","receive","receive_connection","reconnect","reconnect_at","reconnection_delay","response_sender","run","run_io_thread","run_listen_task","self_id","send","send","send_message_connected","send_sync","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","status_query_receiver","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","Disconnected","DisconnectedPeerConnectionState","PING_INTERVAL","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerStatusChannelReceiver","PeerStatusChannelSender","PeerStatusChannels","PeerStatusQuery","ReconnectPeerConnectionsReliable","ack","ban_peer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chan","chan","clone","clone","clone_into","clone_into","common","connect","connect","connection","connections","delay_calculator","deserialize","disconnect","disconnect_err","do_erased_serialize","erased_serialize","failed_reconnect_counter","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_all_status","incoming","incoming","incoming_connections","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_received","msg","new","new","next_ping","our_id","outgoing","outgoing","peer_address","peer_id","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","resend_buffer_contents","resend_queue","response_sender","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","send_message_connected_inner","send_ping","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","status_query_receiver","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","default","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","id","increment","into","into","into","into_request","into_request","into_request","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"fedimint_server"],[53,"fedimint_server::atomic_broadcast"],[110,"fedimint_server::atomic_broadcast::backup"],[125,"fedimint_server::atomic_broadcast::data_provider"],[173,"fedimint_server::atomic_broadcast::finalization_handler"],[186,"fedimint_server::atomic_broadcast::keychain"],[217,"fedimint_server::atomic_broadcast::network"],[254,"fedimint_server::atomic_broadcast::spawner"],[273,"fedimint_server::config"],[795,"fedimint_server::config::api"],[939,"fedimint_server::config::distributedgen"],[1052,"fedimint_server::config::io"],[1070,"fedimint_server::config::serde_binary_human_readable"],[1072,"fedimint_server::config::serde_tls_cert_map"],[1074,"fedimint_server::config::serde_tls_key"],[1076,"fedimint_server::consensus"],[1096,"fedimint_server::consensus::debug_fmt"],[1107,"fedimint_server::consensus::server"],[1147,"fedimint_server::db"],[1352,"fedimint_server::envs"],[1354,"fedimint_server::metrics"],[1548,"fedimint_server::metrics::jsonrpsee"],[1596,"fedimint_server::multiplexed"],[1660,"fedimint_server::net"],[1666,"fedimint_server::net::api"],[1742,"fedimint_server::net::connect"],[1817,"fedimint_server::net::connect::mock"],[1952,"fedimint_server::net::connect::mock::StreamReliability"],[1960,"fedimint_server::net::framed"],[2013,"fedimint_server::net::peers"],[2241,"fedimint_server::net::peers_reliable"],[2414,"fedimint_server::net::queue"],[2500,"jsonrpsee_core::server::rpc_module"],[2501,"fedimint_core::module"],[2502,"alloc::vec"],[2503,"fedimint_core::core"],[2504,"core::option"],[2505,"core::marker"],[2506,"core::marker"],[2507,"alloc::boxed"],[2508,"core::pin"],[2509,"core::fmt"],[2510,"core::fmt"],[2511,"anyhow"],[2512,"std::path"],[2513,"fedimint_core"],[2514,"bitcoin_hashes::sha256"],[2515,"alloc::collections::btree::map"],[2516,"tonic::request"],[2517,"std::path"],[2518,"alloc::string"],[2519,"core::net::socket_addr"],[2520,"core::result"],[2521,"core::any"],[2522,"fedimint_core::module::registry"],[2523,"fedimint_core::encoding"],[2524,"std::io"],[2525,"std::io::error"],[2526,"std::io"],[2527,"erased_serde::ser"],[2528,"erased_serde::ser"],[2529,"fedimint_core::core"],[2530,"aleph_bft_crypto::node"],[2531,"std::io::cursor"],[2532,"parity_scale_codec::error"],[2533,"parity_scale_codec::codec"],[2534,"parity_scale_codec::codec"],[2535,"fedimint_core::epoch"],[2536,"async_channel"],[2537,"fedimint_core::session_outcome"],[2538,"tokio::sync::watch"],[2539,"async_channel"],[2540,"secp256k1::key"],[2541,"aleph_bft_types::network"],[2542,"aleph_bft_types::tasks"],[2543,"fedimint_core::module"],[2544,"core::convert"],[2545,"core::clone"],[2546,"core::cmp"],[2547,"fedimint_core::net::peers"],[2548,"core::fmt"],[2549,"core::fmt"],[2550,"fedimint_core::config"],[2551,"rustls::key"],[2552,"rustls::key"],[2553,"serde_json::value"],[2554,"core::error"],[2555,"fedimint_core::module::version"],[2556,"fedimint_core::module::version"],[2557,"secp256k1"],[2558,"fedimint_core::admin_client"],[2559,"fedimint_core::module"],[2560,"fedimint_core::api"],[2561,"fedimint_core::admin_client"],[2562,"bls12_381::scalar"],[2563,"bls12_381::g1"],[2564,"bls12_381::g2"],[2565,"fedimint_core::net::peers"],[2566,"ring::aead::less_safe_key"],[2567,"core::fmt"],[2568,"fedimint_core::transaction"],[2569,"prometheus::counter"],[2570,"prometheus::histogram"],[2571,"prometheus::gauge"],[2572,"jsonrpsee_server::middleware::rpc"],[2573,"core::task::wake"],[2574,"core::task::poll"],[2575,"jsonrpsee_core::server::method_response"],[2576,"serde::de"],[2577,"fedimint_core::task"],[2578,"fedimint_core::module::audit"],[2579,"fedimint_core::api"],[2580,"fedimint_core::module"],[2581,"core::time"],[2582,"fedimint_core::session_outcome"],[2583,"tokio_rustls"],[2584,"fedimint_core::util"],[2585,"tokio::io::async_read"],[2586,"tokio::io::async_write"],[2587,"std::io::error"],[2588,"tokio::io::read_buf"],[2589,"futures_sink"],[2590,"futures_core::stream"],[2591,"bytes::bytes_mut"],[2592,"tokio::io::split"],[2593,"tokio::io::split"],[2594,"fedimint_core::api"]],"d":["How long to wait before timing out client connections","","Contains the error value","","Main server for running Fedimint consensus and APIs","Has the context necessary for serving API endpoints","Contains the success value","This module implements fedimints custom atomic broadcast …","Attaches <code>endpoints</code> to the <code>RpcModule</code>","","","","","","Fedimint toplevel config","The actual implementation of consensus","","Location where configs are stored","Provides interfaces for ACID-compliant data store backends","Database shared by the API and consensus","","","Returns the argument unchanged.","Returns the argument unchanged.","Generates the <code>ServerConfig</code>","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Implementation of multiplexed peer connections","Networking for mint-to-mint and client-to-mint …","","","Starts the <code>ConfigGenApi</code> with existing configs","Starts server that will run DKG After configs are …","","Module and endpoint settings necessary for starting the API","Spawns an API server","Runs the <code>ConsensusApi</code> which serves endpoints while …","Attempts to stop the API","","","","","","","Version hash","","","","This keychain implements naive threshold schnorr …","The majority of these messages need to be delivered to the …","","This enum defines the intended destination of a Message.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The UnitSaver enables aleph bft to store its local …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","This function loads the aleph bft backup from disk and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","User has cancelled the DKG task","Total client config","All the parameters necessary for generating the …","Shared consensus-critical config","","","","The default maximum open connections the API can handle","","Captures an error occurring in DKG","Things that a <code>distributed_gen</code> config can send between peers","Result of running DKG","","","Contains the error value","Error running DKG","The federation id is a copy of the authentication …","Federation-wide client config","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","The types of keys to run distributed key generation for","Local non-consensus, not security-sensitive settings","","","","","Contains the success value","","","Private for this federation member data that are security …","","All the serializable configuration for the fedimint server","","","","Config for the server-side of a particular Federation …","","","Module (server side) config, typed","","","Secret API auth string","Our bind address for our API endpoints","Network addresses and names for all peer APIs","API endpoints for each federation member","","","Get decoders for <code>modules</code> and skip unsupported ones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines how long a session is expected to run. Has to …","Maximum number of rounds permitted per session.","Public keys for the atomic broadcast to authenticate …","Influences the atomic broadcast latency, should be higher …","Secret key for the atomic broadcast to sign messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the binary code running","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","Returns the consensus hash for a given client config","","Core consensus version","","Get decoders for <code>modules</code> and fail if any is unsupported","","","","","","","","","","","","","","","Runs the distributed key gen algorithm","","","","","","","","","","","","","","","Tries to download the client config from the federation, …","Random dummy id for testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Our bind address for communicating with peers","Federation name from config metadata (if set)","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new config from the results of a trusted or …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Assemble from the three functionally distinct parts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","(soft-deprecated): Get the first instance of a module of a …","","","","","","","Constructs a module config by id","Constructs a module config by name","","","","","","Our peer id (generally should not change)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create an invite code with the api endpoint of the given …","","","","","","","","","Contains all configuration that is locally configurable …","","","","How many API connections we will accept","Get the value of a given meta field","Additional config the federation wants to transmit to the …","Additional config the federation wants to transmit to the …","","Secret material from modules","All configuration that needs to be the same for modules","Non-consensus, non-private configuration from modules","Human readable representation of <code>Self::modules</code>","The peer’s name","","","","Network addresses and names for all p2p connections","","","","","Contains all configuration that will be encrypted such as …","","See <code>DynRawFallback::redecode_raw</code>.","","","","","","","","","","","","","","","","","","Api versions supported by this server","","","Certs for TLS communication, required for peer …","","","Secret key for TLS communication, required for peer …","","","","","","","","Turn the typed config into type-erased version","Converts a federation id to a public key to which we know …","","","","","","","","","","","","","","","","Split the config into its three functionally distinct parts","","","","","","Tries to download the client config only once.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)","","","","Agreed on core consensus version","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","Serves the config gen API endpoints","Our local connection info","Config gen params that are only used locally, shouldn’t …","All the info we configure prior to config gen starting","State held by the API after receiving a …","Called from <code>set_config_gen_connections</code> to add a peer’s …","Secret API auth string","Bind address for API communication","Bind address for our API connection","URL for our API connection","","Our auth string","","","","","","","","","","","","","","","","","","","","","","","","Configs that have been generated","Returns the peers that have called <code>add_config_gen_peer</code> on …","Tracks when the config is generated","Gets the consensus config gen params","","Directory the configs will be created in","DB not really used","Returns default config gen params that can be modified by …","The default params for the modules","Limit on the number of times a config download token can …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Validates and returns the params using our <code>request</code> and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","URL of “leader” guardian to send our connection info to","Our local connection","","How many API connections we will accept","How many API connections we will accept","","","Our peer id","Our guardian name","","Our TLS private key","Bind address for P2P communication","Bind address for our P2P connection","URL for our P2P connection","Connection info received from other guardians, unique by …","Moves configuration artifacts from a staging directory to …","Registry for config gen","","The config gen params requested by the leader","","","","","Once configs are generated, updates status to …","","Returns the server status","Sets our connection info, possibly sending it to a leader","Sets and validates the config gen params","","","Our config gen settings configured locally","Writes the configs to a staging directory disk after they …","Attempts to decrypt the config files from disk using the …","In-memory state machine","Our status","Task group for running DKG","Our TLS public cert","Our TLS private key","","","","","","","","","","","","","","","","","","","","","Sends our updated peer info to the leader (if we have one)","We have verified all our peer configs","Returns the consensus config hash, tweaked by our TLS …","Version hash","","","","","","","","","","","","","Our secret key share of a threshold key","Create another DKG with <code>threshold</code> signatures required","","","","","","","","","","","","","","","","","","","","","","","Exchanges a <code>DkgPeerMsg::PublicKey(key)</code> with all peers. …","Exchanges a <code>DkgPeerMsg::Module(Vec&lt;u8&gt;)</code> with all peers. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Get a second generator by hashing the first one to the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create multiple DKGs with the same <code>threshold</code> signatures …","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","","","","","","","","","Runs the DKG algorithms with our peers","","Runs the DKG algorithms for a given key and module id","","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client configuration file","Client connection string file","Temporary directiry where server configs are stored / …","Server consensus-only configurable file","Database file name","","","Server locally configurable file","Plain-text stored password, used to restart the server …","Server encrypted private keys file","Salt backup for combining with the private key","Reads an encrypted json file into a struct","Writes struct into an encrypted json file","","Reads a plaintext json file into a struct","Writes struct into a plaintext json file","Reads the server from the local, private, and consensus …","Writes the server into configuration files (private keys …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A newtype for a nice <code>fmt::Debug</code> of a <code>ConsensusItem</code>","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Runs the main server consensus loop","","How many txs can be stored in memory before blocking the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the number of sessions already saved in the …","","Calls <code>U::from(self)</code>.","","","","","Creates a server with real network and no delays","Creates a server that can simulate network and delays","Just a string version of peer ids for performance","","","","","","","","","Just a string version of <code>cfg.local.identity</code> for performance","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The env var for maximum open connections the API can handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize gauges or other metrics that need eager …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","jsonrpsee/tower rpc layer that collects rpc stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of per-peer messages after which we will stop …","TODO: Use proper ModuleId after modularization is complete","","A <code>Msg</code> that can target a specific destination module","","A wrapper around <code>AnyPeerConnections</code> multiplexing …","","","","","","","","Callback queue from tasks that want to receive","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Cached messages per <code>ModuleId</code> waiting for callback","","Sender of peer bans","Track pending messages per peer to avoid a potential DoS","Await receipt of a message from any connected peer.","Sender of receive callbacks","","","Sender of send requests","","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","Implements a connection manager for communication with …","","","Very simple cache mostly used to protect endpoints against …","A state that has context for the API, passed to each rpc …","","","","","","","","","","","Our server configuration","Cached client config","","","","","","","","","","","Database for serving the API","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Uses the in-memory config to write a config backup tar …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Modules registered with the federation","","","","","","","","For sending API events to consensus such as transactions","","","","","","","","","","","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","Contains the error value","Contains the success value","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","Sanitizes name as valid domain name","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","","","","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","Parses the host and port from a url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","","","","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","","","","","","","","","","","","","Calculates delays for reconnecting to peers","","","","Specifies the network configuration for …","Every how many seconds to send an empty message to our …","","Production defaults will try to reconnect fast but then …","","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","","Keeps the references to a <code>PeerStatusChannelSender</code> for each …","","","Connection manager that automatically reconnects to peers","","For tests we don’t want low min/floor delays because …","","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Our federation member’s identity","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Every how many seconds to send an empty message to our …","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnectionsReliable</code>…","","","Keeps the references to a <code>PeerStatusChannelSender</code> for each …","","Connection manager that automatically reconnects to peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,12,0,0,0,12,0,17,37,17,37,17,0,0,0,10,17,0,17,0,17,37,17,17,17,0,37,37,17,37,17,0,0,0,17,17,17,17,37,17,17,17,37,37,17,37,17,37,17,17,37,17,42,0,0,42,0,0,41,42,41,42,41,42,41,42,41,41,41,0,41,41,42,42,42,42,42,41,0,41,42,41,42,41,41,41,42,42,41,42,41,42,0,0,41,0,41,0,41,42,0,41,42,41,42,41,42,41,42,0,61,61,61,61,61,61,61,0,61,61,61,61,61,61,65,0,65,0,70,65,70,65,65,65,65,65,65,65,65,65,65,65,65,65,65,70,65,65,65,70,65,70,65,70,65,65,70,70,70,70,65,70,65,65,70,65,70,65,70,65,70,65,0,76,76,76,76,76,76,76,76,76,76,76,76,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,85,83,85,83,83,83,85,83,83,83,83,83,83,85,83,83,83,83,85,83,85,83,85,85,85,83,85,83,85,83,85,83,85,83,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,111,111,0,126,0,0,133,0,0,0,0,113,0,0,0,113,111,123,126,0,0,0,0,133,113,126,0,126,123,126,0,133,113,0,0,0,0,0,0,0,0,21,0,107,109,108,105,92,94,94,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,108,108,108,109,107,103,105,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,104,108,104,112,0,21,92,91,93,103,105,104,112,93,103,108,105,104,112,93,103,108,105,104,112,103,91,105,94,94,94,106,93,21,103,107,108,105,109,104,111,112,91,113,21,0,106,93,21,103,107,108,105,109,104,111,112,91,113,103,104,106,93,103,105,104,111,112,91,106,106,106,106,93,93,93,93,103,103,103,103,105,105,105,105,104,104,104,104,111,111,111,111,112,112,112,112,91,91,91,91,106,93,21,103,107,108,105,109,104,111,112,91,113,109,105,106,93,21,103,107,108,105,109,104,104,92,94,111,112,91,113,126,126,106,93,21,21,103,107,108,105,109,104,92,94,94,111,112,91,91,113,126,126,126,93,103,105,104,112,94,133,106,106,93,93,21,21,103,103,107,107,108,108,105,105,109,109,104,104,92,92,94,94,111,111,112,112,91,91,113,113,104,0,94,21,103,103,21,21,103,103,21,21,21,21,103,93,104,111,109,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,103,0,106,21,108,106,106,112,94,21,92,91,0,109,103,108,105,103,107,108,109,108,93,21,106,94,109,92,92,104,92,21,91,103,0,0,0,106,93,21,103,107,108,105,109,104,111,112,91,113,126,21,21,92,108,21,92,107,93,103,105,104,112,108,94,133,104,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,133,104,104,126,91,21,103,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,93,21,106,106,108,112,106,93,21,103,107,108,105,109,104,92,94,111,112,91,113,126,106,0,0,0,0,0,150,155,155,29,29,152,152,150,150,150,150,155,29,152,156,150,155,29,152,156,150,155,29,152,156,150,155,29,152,156,152,150,150,150,150,150,150,150,29,29,155,29,152,156,150,155,29,152,156,150,150,155,155,29,29,152,152,156,156,152,152,150,150,155,29,152,156,150,155,29,152,156,156,152,152,155,29,150,152,155,156,152,155,155,29,29,152,150,29,150,152,150,150,152,150,150,0,150,150,150,150,152,152,150,150,150,152,150,156,156,150,155,29,152,156,150,155,29,152,156,150,155,29,152,156,150,155,29,152,156,150,150,150,150,150,155,29,152,156,0,0,0,0,169,0,169,0,164,167,164,169,171,172,167,164,169,171,172,167,169,171,172,169,171,172,167,164,0,0,0,178,178,167,167,169,171,172,167,164,169,171,172,169,169,171,171,172,172,167,167,167,167,167,164,169,171,172,167,164,169,171,172,164,167,164,167,164,167,164,167,171,172,0,0,164,178,164,178,164,164,0,171,172,167,167,171,167,171,169,171,172,171,167,164,169,171,172,167,164,169,171,172,167,164,169,171,172,167,164,169,171,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,185,185,185,185,0,185,185,185,185,185,185,185,0,0,185,185,185,185,185,0,191,191,191,191,191,191,191,191,191,191,0,0,0,192,322,192,192,192,192,192,192,192,192,192,192,192,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,192,192,192,192,198,0,0,198,0,0,198,0,0,0,0,0,198,198,0,0,199,198,199,200,201,202,203,204,205,206,207,198,199,200,201,202,203,204,205,206,207,198,199,200,201,198,199,200,201,200,201,202,203,204,205,206,207,200,201,202,203,204,205,206,207,200,201,202,203,204,205,206,207,202,202,198,198,199,200,201,202,203,204,205,206,207,198,199,200,201,202,203,204,205,206,207,200,200,201,202,202,203,204,204,205,206,206,207,198,198,199,199,200,200,201,201,199,0,199,198,199,200,201,202,203,204,205,206,207,199,198,199,200,201,202,203,204,205,206,207,198,199,199,199,199,199,202,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,198,199,200,201,198,198,199,200,201,202,203,204,205,206,207,198,199,200,201,202,203,204,205,206,207,198,199,200,201,202,203,204,205,206,207,198,199,200,201,202,203,204,205,206,207,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,0,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,0,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,210,212,214,215,217,219,220,221,222,224,226,227,228,229,230,231,0,0,0,232,236,235,232,236,235,232,235,235,236,235,232,236,235,235,235,236,232,236,235,236,232,236,235,235,236,236,236,236,232,236,235,232,236,235,232,236,235,236,232,236,235,232,236,235,0,0,0,0,0,0,0,240,242,241,240,242,241,240,242,241,240,241,240,242,241,241,241,241,242,241,240,241,241,240,240,242,241,240,242,241,240,241,241,242,240,240,242,240,240,240,240,240,241,241,240,242,241,240,242,241,240,242,241,240,323,242,241,240,0,0,0,0,0,0,0,0,0,38,38,38,38,1,38,252,1,38,252,38,38,1,38,252,1,38,252,38,38,38,252,38,252,1,1,38,252,1,1,38,38,252,252,252,38,38,38,38,38,1,38,252,1,38,252,38,38,252,1,38,1,0,38,38,38,38,38,1,38,252,1,38,252,1,38,252,1,38,252,1,38,252,0,0,0,0,324,324,0,0,0,0,262,300,262,268,116,262,268,116,262,268,116,262,116,262,266,268,0,268,116,262,268,116,262,116,116,262,262,262,268,116,262,266,268,116,262,266,268,0,268,262,268,268,116,0,262,268,116,268,116,300,300,116,262,268,116,262,268,116,262,268,116,262,268,116,262,272,0,272,272,0,271,272,0,0,272,0,0,0,270,277,278,274,273,270,271,272,277,278,274,273,270,271,272,277,274,273,270,271,272,270,271,272,273,274,0,270,270,270,270,270,278,277,277,270,271,272,277,278,274,273,270,271,272,270,270,271,271,272,272,278,273,277,277,278,274,273,270,271,272,277,278,274,273,270,271,272,278,273,270,270,277,278,274,270,271,277,277,277,277,277,270,271,277,273,277,278,278,0,270,271,272,277,278,274,273,270,271,272,277,278,274,273,270,271,272,277,278,274,273,270,271,272,277,278,274,273,270,271,272,277,325,325,325,325,325,325,325,325,0,0,0,0,0,0,0,288,282,288,282,288,282,285,282,288,288,282,288,282,288,283,284,282,288,285,282,288,282,282,288,293,282,282,282,282,282,282,282,293,282,282,293,282,282,288,282,288,282,282,288,282,288,117,0,298,0,0,298,0,295,0,0,117,117,117,0,0,0,0,0,0,0,0,0,295,0,117,117,117,84,115,303,301,297,302,304,298,84,294,115,295,296,117,303,301,297,302,304,298,84,294,115,295,296,117,326,327,84,294,115,295,296,117,84,294,115,295,296,117,303,297,297,304,84,297,115,295,297,297,115,295,115,295,302,115,295,117,303,301,297,302,304,298,84,294,115,295,296,117,84,84,294,294,115,115,295,295,296,296,117,117,296,115,297,294,297,303,301,297,302,304,298,84,294,115,295,296,117,303,301,297,302,304,298,84,294,115,295,296,117,117,117,84,294,304,297,297,297,294,297,297,297,115,84,294,297,297,302,117,301,303,294,84,84,84,294,297,84,115,295,303,303,297,297,297,84,294,115,295,296,117,303,301,297,302,304,298,84,294,115,295,296,117,303,301,297,302,304,298,84,294,115,295,296,117,297,303,301,297,302,304,298,84,294,115,295,296,117,303,301,297,302,304,298,84,294,115,295,296,117,0,309,0,309,0,0,0,0,0,0,0,0,0,0,0,0,306,305,305,312,315,311,308,313,314,309,306,307,305,312,315,311,308,313,314,309,306,307,328,329,306,307,306,307,315,308,308,314,305,308,306,308,308,306,306,313,306,305,312,315,311,308,313,314,309,306,307,306,306,307,307,307,312,308,308,305,312,315,311,308,313,314,309,306,307,305,312,315,311,308,313,314,309,306,307,308,306,305,312,314,308,312,308,308,308,305,312,308,308,308,308,313,308,308,311,315,312,305,305,312,308,308,308,308,306,315,315,308,308,308,306,307,305,312,315,311,308,313,314,309,306,307,305,312,315,311,308,313,314,309,306,307,308,305,312,315,311,308,313,314,309,306,307,305,312,315,311,308,313,314,309,306,307,0,0,0,317,317,318,316,317,318,316,317,318,316,317,318,316,318,316,318,316,317,318,316,318,316,317,318,316,317,317,317,317,318,318,318,318,316,316,316,316,318,316,317,318,316,317,318,316,317,317,318,318,316,316,316,318,317,318,316,317,318,316,317,316,317,318,316,317,317,318,316,317,318,316,317,318,316,317,318,316,317,318,316,317,318,316],"f":"````````{{{d{{b{e}}}}{h{{f{c}}}}{l{j}}}n{A`Ab}{{Ad{c}}A`Ab}}{ce{}{}}000{Af{{Ah{n}}}}``{{AdAj{l{j}}}{{B`{{An{Al}}}}}}````{{BbBd}Bf}{cc{}}0{{BbBh}{{Bl{Bj}}}}{Bn{{Bl{{l{Bj}}}}}}{Bj{{Cd{C`Cb}}}}`77{c{{Cf{e}}}{}{}}0```{{ChCjClCn}Bb}{{BbD`Bh}{{Bl{n}}}}{{BbBjBh}{{Bl{n}}}}6``{{DbDd{d{{b{c}}}}DfDh}Dj{}}{{DlDh}Dj}{Djn}{c{{Dn{e}}}{}{}}000{cE`{}}0`{ce{}{}}0``````0000{EbEb}{EdEd}{{ce}n{}{}}0{{cEf}{{Dn{EbEh}}}Ej}{{Ebc}{{Dn{ElEn}}}F`}{{cF`}{{Dn{ElEn}}}{}}`{c{{Dn{Eb}}}Fb}{{cFd}{{Dn{nFf}}}{}}{{EdEd}Dh}{{ce}Dh{}{}}000{{cFd}{{Dn{nFh}}}{}}`{{EbBd}Bf}{{EdBd}Bf}{cc{}}0{{{Fl{Fj}}{Gb{FnG`}}}{{Dn{cGd}}}{}}1111??{c{{Cf{e}}}{}{}}0``{{Ebc}DnGf}`{c{{h{Fj}}}{}}{C`Gh}{ce{}{}}0{GhC`}{c{{Dn{e}}}{}{}}000{cE`{}}033`{{Gj{Fl{Fj}}}{{B`{{An{Al}}}}}}44`:48{Cl{{Gn{{Gl{{h{Fj}}}}Gj}}}}{{ClH`}Gj}443`6````6666{HbHb}{{ce}n{}{}}{c{{Dn{HbHd}}}Hf}{{{Fl{Fj}}}{{Dn{cHd}}}{}}{{Df{Fl{Fj}}}{{Dn{cHd}}}{}}{{Dfc}{{Dn{eHd}}}Hf{}}{{Hbc}n{HhHj}}{{HbHb}Dh}{{ce}Dh{}{}}000{{HbBd}Bf}{cc{}}000{Hl{{B`{{An{Al}}}}}}{{Hbc}nHn}{ce{}{}}0{c{{Cf{e}}}{}{}}0{HbDh}``{{{Ib{I`}}{If{{l{Id}}}}}Hl}`{HbEl}`{{c{Fl{Fj}}}{{h{Fj}}}{}}5{c{{Dn{e}}}{}{}}000{cE`{}}077`77{{IhHbGh}n};87{{{Ij{{Gn{HbC`}}}}}Ih}`3329`{{IlcGh}e{}{}}::{IlIl}{{ce}n{}{}}{{IlBd}Bf}{cc{}}00{IlGh}?>{{Il{Fl{Fj}}c}Dh{}}`{{C`{Cd{C`In}}J`}Il}{IlJb}{IlEl}{IlC`}```{{Il{Fl{Fj}}}c{}}{{Il{Fl{Fj}}}Jd}3{ce{}{}}{c{{Dn{e}}}{}{}}0{cE`{}}{{Il{Fl{Fj}}cGh}Dh{}}3```3333{JfJf}?`{{JfJf}Dh}{{ce}Dh{}{}}000{{JfBd}Bf}{cc{}}000{{{Fl{Fj}}}c{}}99{c{{Cf{e}}}{}{}}0{{{Jh{Eb}}}Jj}{Jj{{B`{{An{Al}}}}}}{{JjJlJn}n}=<<<<;;==`=={K`K`}{{ce}n{}{}}{{}K`}888{ce{}{}}71{{K`Dbc}n{{Al{}{{Kb{n}}}}Ab}}{{K`Dbc}Kd{{Al{}{{Kb{n}}}}Ab}}2{c{{Dn{e}}}{}{}}0{cE`{}}4`````````````````````````````````````````{{Bj{Cd{jKf}}}n}`````{Kh{{Cd{C`Kj}}}}{{{Kl{c}}e}n{{L`{Kn}}}{{Lb{c}}AbA`}}{{{Kl{c}}e}{{Dn{{Gb{FnG`}}Ld}}}{{L`{Kn}}}{{Ll{}{{Lf{{Gn{LhLj}}}}}}}}88888888888888888888888888888888`````{LnM`}{MbM`}{MdMd}{KjKj}{BjBj}{LnLn}{MfMf}{MhMh}{MbMb}{MjMj}{M`M`}{KhKh}{{{Kl{c}}}{{Kl{c}}}Ml}{MnMn}{N`N`}{KfKf}{NbNb}{{ce}n{}{}}00000000000000{{M`M`}Nd}`{{ce}Nd{}{}}`{{NfNhNjBh}{{Nl{c}}}{NnMlO`ObOdAbA`}}```{{c{Gb{FnG`}}}{{Dn{KjEh}}}Ej}{{c{Gb{FnG`}}}{{Dn{LnEh}}}Ej}{{c{Gb{FnG`}}}{{Dn{MbEh}}}Ej}{{c{Gb{FnG`}}}{{Dn{M`Eh}}}Ej}{{c{Gb{FnG`}}}{{Dn{N`Eh}}}Ej}{{Kjc}{{Dn{ElEn}}}F`}{{Lnc}{{Dn{ElEn}}}F`}{{Mhc}{{Dn{ElEn}}}F`}{{Mbc}{{Dn{ElEn}}}F`}{{M`c}{{Dn{ElEn}}}F`}{{N`c}{{Dn{ElEn}}}F`}{{cF`}{{Dn{ElEn}}}{}}00000{LnCb}``{{{Kl{c}}e}{{Dn{{Gb{FnG`}}Ld}}}{{L`{Kn}}}{{Ll{}{{Lf{{Gn{LhLj}}}}}}}}0{{}{{Kl{c}}}{}}{c{{Dn{Md}}}Fb}{c{{Dn{Kj}}}Fb}{c{{Dn{Bj}}}Fb}{c{{Dn{Ln}}}Fb}{c{{Dn{Mf}}}Fb}{c{{Dn{Mh}}}Fb}{c{{Dn{Mb}}}Fb}{c{{Dn{Mj}}}Fb}{c{{Dn{M`}}}Fb}{c{{Dn{Mn}}}Fb}{c{{Dn{N`}}}Fb}{c{{Dn{Kf}}}Fb}{c{{Dn{Nb}}}Fb}{{KhD`NjBhCn}{{Of{Bj}}}}`{{cFd}{{Dn{nFf}}}{}}000000000000{Oh{{Dn{LnLd}}}}{{}M`}{{MdMd}Dh}{{KjKj}Dh}{{LnLn}Dh}{{MbMb}Dh}{{M`M`}Dh}{{MnMn}Dh}{{N`N`}Dh}{{KfKf}Dh}{{ce}Dh{}{}}0000000000000000000000000000000{{cFd}{{Dn{nFh}}}{}}000000000000`{Mb{{l{Db}}}}{{MdBd}{{Dn{nOj}}}}{{KjBd}{{Dn{nOj}}}}{{BjBd}Bf}{{LnBd}{{Dn{nOj}}}}{{MfBd}Bf}{{MhBd}Bf}{{MbBd}{{Dn{nOj}}}}{{MjBd}Bf}{{M`Bd}{{Dn{nOj}}}}0{{KhBd}Bf}{{{Kl{c}}Bd}{{Dn{nOj}}}Nn}{{MnBd}Bf}{{N`Bd}{{Dn{nOj}}}}{{KfBd}{{Dn{nOj}}}}{{NbBd}{{Dn{nOj}}}}{{OlBd}{{Dn{nOj}}}}0{cc{}}00{{KhC`{Cd{C`On}}J`{Cd{jKf}}Cn}Bj}11111111{{{h{c}}}{{Kl{c}}}{{L`{Kn}}}}22{{MdMdN`Md}Kf}33{A`Ol}{LdOl}5{{{Fl{Fj}}{Gb{FnG`}}}{{Dn{cGd}}}{}}0000{e{{Kl{c}}}{{L`{Kn}}}{{Ab{}{{Lf{c}}}}}}{{ceg}{{Aj{}{{Ad{c}}{Af{e}}{Ah{g}}}}}{ObO`}{ObO`}Al}888888888888888888888888888888{Db{{Dn{M`}}}}{Db{{Dn{{Gn{AnAA`}}Ld}}}}{{{Kl{c}}Lj}{{l{c}}}{}}{BjM`}{{Lnc}{{Dn{{Gn{Lhe}}Ld}}}{{Lb{Lj}}}AAb}{{Lnc}{{Dn{{Gn{LhAAd}}Ld}}}{{Lb{Lj}}}}{BjLh}{BjOh}{{LnLh}{{Dn{cLd}}}AAb}{{LnLh}{{Dn{AAdLd}}}}{{{Cd{jMd}}j}{{Bl{Md}}}}{{Bjj}{{Bl{Kf}}}}{{Bjj}{{Bl{c}}}Aj}{{Bjc}{{Bl{j}}}{{Lb{Lj}}}}`{{Kjc}nHn}{{M`c}nHn}{{Mnc}nHn}`{ce{}{}}000000000000000{c{{Cf{e}}}{}{}}000000000000000{{LnC`}{{l{Oh}}}}`{{MdLj}Dh}{Bj{{`{{Ll{}{{Lf{{Gn{jLj}}}}}}}}}}{Mh{{`{{Ll{}{{Lf{{Gn{jLj}}}}}}}}}}{MdLj}``{{{Kl{c}}}{{AAf{Lj}}}{}}```{{}Df}`{{LnDb}{{Dn{{l{c}}Ld}}}Ob}````````{BjNf}{{LjAAh}Md}{{}{{Kl{c}}}{}}`{KhNf}{Kh{{Cd{C`Kj}}}}{{M`M`}{{l{Nd}}}}{Kh{{h{C`}}}}``{{Ln{Gb{FnG`}}}{{Dn{LnEh}}}}```{{Mdc}DnGf}{{Kjc}DnGf}{{Bjc}DnGf}{{Lnc}DnGf}{{Mfc}DnGf}{{Mhc}DnGf}{{Mbc}DnGf}{{Mjc}DnGf}{{M`c}DnGf}{{Mnc}DnGf}{{N`c}DnGf}{{Kfc}DnGf}{{Nbc}DnGf}{Ol{{l{AAj}}}}{{}AAl}{{{Cd{jN`}}D`}AAn}{Kh{{Cd{C`An}}}}`{BjNh}{KhNh}`{c{{h{Fj}}}{}}0000{{Mh{Kl{AB`}}}{{Dn{LnLd}}}}{{{Kl{AB`}}}{{Kl{ABb}}}}{{{Aj{}{{Ad{c}}{Af{e}}{Ah{g}}}}}Kf{ObO`}{ObO`}Al}{{M`{ABf{ABd}}}{{Dn{InLd}}}}{ce{}{}}00000000000000{{{Aj{}{{Ad{c}}{Af{e}}{Ah{g}}}}}{{Gn{Ljceg}}}{ObO`}{ObO`}Al}{M`ABh}{cCn{}}0{Kf{{Dn{cLd}}}Aj}{{{ABj{C`Kh}}D`Cn}{{Cd{C`Bj}}}}{Oh{{Dn{LnLd}}}}{c{{Dn{e}}}{}{}}0000000000000000000000000000000{cE`{}}000000000000000`{{BjC`D`}{{Bl{n}}}}{MdAAh}```::::::::::::::::{MdMd}`````{{ABlABn}{{Ah{n}}}}````{AC`{{Ah{ACb}}}}`{{ABlACd}{{Ah{n}}}}{ABln}{Db{{Ah{c}}}{}}{ce{}{}}000000000{ABlABl}{ACfACf}{CjCj}{AC`AC`}{AChACh}{{ce}n{}{}}0000`{ABl{{Ah{{h{ABn}}}}}}`{{ABlACj}{{Ah{ACl}}}}{{ABlAj{l{j}}}{{B`{{An{Al}}}}}}``{ABl{{Ah{ACj}}}}``{{ACfBd}Bf}{{CjBd}Bf}{{AC`Bd}Bf}{{AChBd}Bf}{cc{}}00000000000000{{AC`ACjACn}{{Ah{Kh}}}}{AC`{{Cd{C`ABn}}}}7{ce{}{}}0000{c{{Cf{e}}}{}{}}0000``{AC`{{Ah{ACh}}}}``{{ChCjCl{AD`{Bj}}BhCn}ABl}{CjAC`}``{AC`{{Ah{ABn}}}}`````{{ABlCh}{{Ah{n}}}}`0`{{ABl{Fl{ADb}}}{{Ah{{ADd{AC`}}}}}}{{ABlADb}{{Ah{{ADd{AC`}}}}}}{AC`n}{ABl{{Ah{n}}}}0{{}{{h{{f{ABl}}}}}}{ABlADb}{{ABlADf}{{Ah{n}}}}{{ABlACj}{{Ah{n}}}}{{ABlACb}{{Ah{n}}}}{{AC`ADf}{{Ah{n}}}}`{{ABlBjAC`}{{Ah{n}}}}2`````{ce{}{}}0000{c{{Dn{e}}}{}{}}000000000{cE`{}}0000::{ABl{{Ah{{Cd{C`Cb}}}}}}`33333````````{{{ADh{c}}cEl}n{O`ObOdAbMlADjADl}}4444444444{{{ADn{c}}{AE`{c}}}{{AEb{c}}}AEd}{{{AEb{c}}}{{AEb{c}}}{MlAEd}}{{{AEf{c}}}{{AEf{c}}}Ml}{AEhAEh}{{ce}n{}{}}00``{{{Fl{AEj}}AEl}AEn}{{{Fl{AF`}}AEl}AFb}{{{Fl{AEl}}AEl}AEl}{{AFdCnOn}{{B`{{An{Al}}}}}}{{AFdCncLjFn}{{B`{{An{Al}}}}}{AFfAAbAbA`}}``{{{AEb{c}}Bd}Bf{NnAEd}}{{{AEf{c}}Bd}BfNn}{{AEhBd}Bf}{cc{}}0000000000`{{{ADn{c}}}cAEd}{{{ADn{c}}{h{c}}}CbAEd}`{ce{}{}}0000{c{{Cf{e}}}{}{}}0000{{{h{c}}ElC`{Fl{C`}}}{{ADh{c}}}{O`ObOdAbMlADjADl}}{{cC`{h{C`}}Ele}{{Gn{{ADn{c}}{AEb{c}}}}}AEdAFh}{{cElC`{Fl{C`}}}{{ADh{c}}}{O`ObOdAbMlADjADl}}```````{cAElAFh}{{Elc}{{h{AEl}}}AFh}{{{ADh{c}}je{AFj{{Gn{jCn}}Nb}}}{{Of{{ABj{c{AEf{e}}}}}}}{O`ObOdAbMlADjADl}AEd}{{AFdc}{{B`{{An{Al}}}}}{O`ObOdAbMlADjADlA`}}{{{Gn{jCn}}{AFj{{Gn{jCn}}Nb}}{ADn{c}}{AEb{c}}}{{Of{{AEf{c}}}}}AEd}{{AFd{h{c}}}{{B`{{An{Al}}}}}{O`ObOdAbMlADjADlA`}}{{{ADh{c}}j{AFj{{Gn{jCn}}Nb}}}{{Of{{ABj{c{AEf{AEj}}}}}}}{O`ObOdAbMlADjADl}}{{{ADh{c}}j{AFj{{Gn{jCn}}Nb}}}{{Of{{ABj{c{AEf{AF`}}}}}}}{O`ObOdAbMlADjADl}}{C`AEl}```{{{ADn{c}}C`{AE`{c}}}{{Bl{{AEb{c}}}}}AEd}{{{AEf{AF`}}}{{Gn{{h{AF`}}AFl}}}}`{{{AEf{AEj}}}AEh}{ce{}{}}00{{{AEf{AEj}}}{{Gn{{h{AEj}}AEl}}}}{c{{Dn{e}}}{}{}}000000000{cE`{}}000033333```````````{{AFnCh}{{Bl{c}}}{O`Ob}}{{cAFnCh}{{Bl{n}}}{O`Ob}}{{cBn}{{Bl{n}}}AG`}{Ch{{Bl{c}}}{O`Ob}}{{cCh}{{Bl{n}}}{O`Ob}}{{DbCh}{{Bl{Bj}}}}{{BjChDbD`}{{Bl{n}}}}{c{{Dn{e}}}FbOb}{{ce}DnO`Gf}{c{{Dn{{Cd{C`An}}}}}Fb}{{{Cd{C`An}}c}DnGf}{c{{Dn{AA`}}}Fb}{{AA`c}DnGf}`{{AGbAGd}n}0{ce{}{}}0`{{}AGb}`{cc{}}`2{c{{Cf{e}}}{}{}}`{{AGfAGhAGj}{{Dn{nAGl}}}}`{c{{Dn{e}}}{}{}}0{cE`{}}{AGb{{Dn{nAGl}}}}7`77{{AGnBd}Bf}6853328`````88`{{AH`H`AHb}n}{{AH`H`El{Ib{{Gn{HbC`}}}}{AHd{{l{Id}}}}}{{Bl{AHb}}}}{AH`{{Bl{n}}}}``{AH`Ef}:{AH`H`}{AGhH`}>;```{{BjClD`Bh}{{Bl{{Gn{AH`Dl}}}}}}{{BjClD`{AHf{Eb}}NjBh}{{Bl{{Gn{AH`Dl}}}}}}`{AH`{{h{AHh}}}}{{AH`H`H`I`C`}{{Bl{n}}}}{{AH`AGhI`C`}{{Bl{n}}}}{{AH`H`}AHb}{{AH`AHj}{{Bl{n}}}}0{{AH`H`}{{Bl{n}}}}1``{{BhClAGf{Ij{I`}}}n}{c{{Dn{e}}}{}{}}0{cE`{}}{ce{}{}}`````````````````00000000000000000000{AHlAHl}{AHnAHn}{AI`AI`}{AIbAIb}{{ce}n{}{}}000{{cEf}{{Dn{AI`Eh}}}Ej}{{cEf}{{Dn{AIbEh}}}Ej}{{cEf}{{Dn{AIdEh}}}Ej}{{cEf}{{Dn{AIfEh}}}Ej}{{cEf}{{Dn{AIhEh}}}Ej}{{cEf}{{Dn{AIjEh}}}Ej}{{cEf}{{Dn{AIlEh}}}Ej}{{cEf}{{Dn{AInEh}}}Ej}{{AI`c}{{Dn{ElEn}}}F`}{{AIbc}{{Dn{ElEn}}}F`}{{AIdc}{{Dn{ElEn}}}F`}{{AIfc}{{Dn{ElEn}}}F`}{{AIhc}{{Dn{ElEn}}}F`}{{AIjc}{{Dn{ElEn}}}F`}{{AIlc}{{Dn{ElEn}}}F`}{{AInc}{{Dn{ElEn}}}F`}{{cF`}{{Dn{ElEn}}}{}}0000000{{cFd}{{Dn{nFf}}}{}}{{cFd}{{Dn{nFh}}}{}}{{AHlBd}Bf}0{{AHnBd}Bf}{{AI`Bd}Bf}{{AIbBd}Bf}{{AIdBd}Bf}{{AIfBd}Bf}{{AIhBd}Bf}{{AIjBd}Bf}{{AIlBd}Bf}{{AInBd}Bf}{cc{}}000000000{{{Fl{Fj}}{Gb{FnG`}}}{{Dn{cGd}}}{}}0000000000011111111{{AHnEl}{{l{AHl}}}}{{}{{Cd{AJ`AJb}}}}`{ce{}{}}0000000000{c{{Cf{e}}}{}{}}000000000{{}AHn}{AHnEl}`{AHn{{l{c}}}{}}0{{AHnEl}{{l{c}}}{}}{{AIdc}DnGf}{AHn{{Gn{El{l{El}}}}}}{c{{h{Fj}}}{}}0000000000000008888{cCn{}}{c{{Dn{e}}}{}{}}0000000000000000000{cE`{}}000000000;;;;;;;;;;``````````````````````````````````;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{AJd{{h{AJf}}}}{AJhAJj}{AJlAJj}{AJnAK`}{AKbAKd}{AKfAKd}{AKhAKd}{AKjAK`}{AKlAKn}{AL`ALb}{ALdAJj}{ALfAKn}{ALhAK`}{ALjAK`}{ALlAK`}{ALnAK`}{cc{}}000000000000000{Cln}{ce{}{}}000000000000000{c{{Cf{e}}}{}{}}000000000000000`{c{{Dn{e}}}{}{}}0000000000000000000000000000000{cE`{}}0000000000000003333333333333333```333333{{{AM`{c}}AMb}e{AMdAbA`}{}}{AMfAMf}{{ce}n{}{}}{{{AMh{c}}Bd}Bf{}}{{AMfBd}Bf}:::::`888{c{}{}}888{{AMfc}e{}{}}`{{{B`{{AMh{c}}}}AMj}{{AMl{e}}}{{Al{}{{Kb{AMn}}}}}{}}{{{B`{{AMh{c}}}}}{{`{c}}}{}}0``<::::::{{{B`{c}}AMj}AMl{}}:::===```````{{{AN`{ce}}C`}{{B`{{An{Al}}}}}{O`ObOdAbNnADjADlMl}{O`ObOdAbNn}}>>>>>>`{{{ANb{ce}}}{{ANb{ce}}}MlMl}{{{AN`{ce}}}{{AN`{ce}}}MlMl}::{{}{{ANd{ce}}}{}{}}{c{{Dn{{ANb{eg}}}}}FbANfANf}{{cFd}{{Dn{nFf}}}{}}{{cFd}{{Dn{nFh}}}{}}{{{ANb{ce}}Bd}BfNnNn}{cc{}}000000{ce{}{}}00{c{{Cf{e}}}{}{}}00```{{{Nl{{ANb{ce}}}}}{{AN`{ce}}}{O`ObOdAbNnADjADlMl}{O`ObOdAbNn}}``{{{AN`{ce}}c}{{B`{{An{Al}}}}}{O`ObOdAbNnADjADlMl}{O`ObOdAbNn}}`{{{Nl{{ANb{ce}}}}{ANd{ce}}{ANh{{Gn{{h{C`}}ce}}}}{ANh{{Gn{c{ANj{{Gn{C`e}}}}}}}}{ANh{C`}}}{{ANl{n}}}{O`ObOdAbNnADjADlMl}{O`ObOdAbNn}}{{{AN`{ce}}{Fl{C`}}ce}{{B`{{An{Al}}}}}{O`ObOdAbNnADjADlMl}{O`ObOdAbNn}}`{{{ANb{ce}}g}DnO`O`Gf}66{c{{Dn{e}}}{}{}}00000{cE`{}}00`888`````````{DlAAn}{{DlANn}{{Bl{{AOb{AO`}}}}}}{{DlH`}AHb}{{DlAOd}{{Gn{{h{j}}{AGh{AOf}}}}}}<<<<<<``{{{b{c}}}{{b{c}}}Ml}{DlDl}{{{AOh{c}}}{{AOh{c}}}Ml}{{ce}n{}{}}00`{{DlAj{l{j}}}{{B`{{An{Al}}}}}}0```{{{b{c}}Bd}BfNn}{cc{}}00000000{{{AOh{c}}g}cMl{{Al{}{{Kb{c}}}}}{{AOj{}{{Kb{e}}}}}}{Dl{{Ah{AOl}}}}{Dl{{Ah{AOn}}}}{{DlCn}{{Ah{B`}}}}{{DlAGhBb}{{Bl{nBd}}}}{{DlAGhIn}{{l{Bf}}}}{ce{}{}}00{c{{Cf{e}}}{}{}}00``{Bh{{AOh{c}}}Ml}{c{{d{{b{c}}}}}{}}``{{}{{h{{f{Dl}}}}}}{DlH`}{{DlH`}Bj}`{{DlAGj}{{Bl{AOdAGl}}}}`777{c{{Dn{e}}}{}{}}00000{cE`{}}00999``````````{{BlBnBA`}{{Dn{{Gn{C`{BAb{c}}}}Ld}}}{NnO`ObAbOd}}`{{Bl{l{{Fl{An}}}}}{{Dn{C`Ld}}}};;;;;;`{NhNh}{BlBl}{{ce}n{}{}}0{{BAdBAfC`}{{B`{{An{Al}}}}}}{{BAhBAfC`}{{B`{{An{Al}}}}}}{DbCn}{{BAhBd}Bf}{{NhBd}Bf}{{BlBd}Bf}{cc{}}000000{{BlAn}{{l{C`}}}}{ce{}{}}00{BAd{{BAj{c}}}{}}{c{{Cf{e}}}{}{}}00{{BAdDd}{{B`{{An{Al}}}}}}{{BAhDd}{{B`{{An{Al}}}}}}`{{NhC`}BAh}{cBl{{Ab{}{{Lf{{Gn{C`An}}}}}}}}```{BAf{{Bl{Cn}}}}```````77{c{{Dn{e}}}{}{}}00000{cE`{}}00999``````````````99999999999999```{BAlBAl}{BAnBAn}{BB`BB`}{{ce}n{}{}}00{{BBbBAfC`}{{B`{{An{Al}}}}}}{{BBdC`BB`}BBb}{{C`c}{{Dn{C`Ld}}}{BBfBBhOd}}{{BAlBAl}Dh}{{ce}Dh{}{}}000``{{BBjBd}Bf}{{BAlBd}Bf}{{BAnBd}Bf}{{BB`Bd}Bf}{cc{}}000000000000{{BBlAMj}{{AMl{{BBn{n}}}}}}``{ce{}{}}000000{c{{Cf{e}}}{}{}}000000`{{BBbDd}{{B`{{An{Al}}}}}}``{{BC`BB`}BBj}{{BAlBAn}BBl}{{}BBd}{{BhBh}BAl}{AJfBAn}{{BBjAMj}Dh}{{{B`{BBj}}AMj}{{AMl{{Dn{nEn}}}}}}{{{B`{BBj}}AMjBCb}{{AMl{{BBn{n}}}}}}1{{{B`{BBj}}AMj{Fl{Fj}}}{{AMl{{Dn{ElEn}}}}}}{BAlBh}{BAnDh}`````{e{{l{c}}}{}{{Al{}{{Kb{c}}}}}}>>>{c{{Dn{e}}}{}{}}0000000000000{cE`{}}000000{ce{}{}}000000`````````````````0000{{{BCd{ceg}}}{{Gn{{BCf{ec}}{BCh{gc}}}}}{O`Ob}BBhBBf}{BCj{{Gn{BClBCn}}}}{{{BCd{ceg}}}{{Gn{BClBCn}}}{NnO`ObAb}{BBhAbOd}{BBfAbOd}}{{{BD`{c}}BDb}{{Dn{{l{e}}g}}}Ob{}{}}{{{BD`{c}}cBDb}{{Dn{ne}}}{O`Nn}{}}{{{BCd{ceg}}Bd}BfNnNnNn}{{{BD`{c}}Bd}BfNn}{cc{}}0``88{BCj{{BAb{c}}}{}}{c{{Cf{e}}}{}{}}00{c{{BCd{e{BDd{c}}{BDf{c}}}}}{BBfBBh}{O`Ob}}{{}{{BD`{c}}}{}}{BDh{{BDj{c}}}{O`Ob}}0{c{{B`{{An{Al}}}}}{}}0{{{B`{{BCd{ceg}}}}AMj}{{AMl{{Dn{ni}}}}}{NnO`}{BBhOd}Od{}}0{{{B`{{BCd{ceg}}}}AMj}{{AMl{{l{i}}}}}ObOd{BBfOd}{}}1``{{{B`{{BCd{ceg}}}}c}{{Dn{ni}}}{NnO`}{BBhOd}Od{}}``{c{{Dn{e}}}{}{}}000{{{B`{c}}AMj}{{AMl{{l{Dn}}}}}{}}{cE`{}}0{ce{}{}}0```````````````````````````{{{Jh{c}}C`}{{B`{{An{Al}}}}}{NnO`ObMlOdAbA`}}`111111111111111111111111``{{{Jh{c}}}{{Jh{c}}}Ml}{{{BDl{c}}}{{BDl{c}}}Ml}{NfNf}{{{BDn{c}}}{{BDn{c}}}Ml}{BE`BE`}{NjNj}{{ce}n{}{}}00000`{{{BEb{c}}{BAb{{BDn{c}}}}H`}{{BEd{c}}}{NnMl}}````{c{{Dn{Nf}}}Fb}{c{{Dn{{BDn{e}}}}}FbANf}{{{BEb{c}}H`}{{BEd{c}}}{NnMl}}{{{BEb{c}}LdH`}{{BEd{c}}}{NnMl}}{{cFd}{{Dn{nFf}}}{}}0{{cFd}{{Dn{nFh}}}{}}0`{{NfBd}Bf}{{{BDn{c}}Bd}BfNn}{{NjBd}Bf}{cc{}}00000000000000000000000{BE`{{ABj{C`{Bl{BEf}}}}}}````{ce{}{}}00000000000{c{{Cf{e}}}{}{}}00000000000``{{NfNj{AHf{c}}Bh}{{Gn{{Jh{c}}BE`}}}{NnMlO`ObOdAbA`}}{{C`C`BAfNj{BEh{{BDn{c}}}}{ANh{{BAb{{BDn{c}}}}}}{ANh{BEj}}Bh}{{BDl{c}}}{NnMlAbA`}}`````````{{{Jh{c}}}{{B`{{An{Al}}}}}{NnO`ObMlOdAbA`}}{{{BDl{c}}}{{ANl{c}}}{NnMlAbA`}}{{{BEb{c}}BEl{BAb{{BDn{c}}}}}{{BEd{c}}}{NnMl}}{{{BEb{c}}BEl}{{BEd{c}}}{NnMl}}`{{NjH`}Bh}`{{{BEn{c}}AHj}n{NnMl}}{{{Ij{c}}{Ib{c}}C`C`BAfNj{BEh{{BDn{c}}}}{ANh{{BAb{{BDn{c}}}}}}{ANh{BEj}}AHj}n{NnMlAbA`}}{{Nf{BEh{{BDn{c}}}}{ABj{C`{AD`{{BAb{{BDn{c}}}}}}}}AHj}n{NnMlO`ObOdAbA`}}`{{{Jh{c}}{Fl{C`}}c}{{B`{{An{Al}}}}}{NnO`ObMlOdAbA`}}{{{BDl{c}}c}n{NnMlAbA`}}{{{BEb{c}}{BF`{c}}{BDn{c}}}{{BEd{c}}}{NnMl}}{{{Jh{c}}cEd}n{NnMlO`ObOdAbA`}}{{Nfc}DnGf}{{{BDn{c}}e}DnO`Gf}`{{{BEn{c}}AHj}{{l{{BEn{c}}}}}{NnMl}}{{{BEb{c}}{BF`{c}}AHj}{{l{{BEd{c}}}}}{NnMl}}{{{BEb{c}}BElAHj}{{l{{BEd{c}}}}}{NnMl}}`{ce{}{}}00000{c{{Dn{e}}}{}{}}00000000000000000000000{{{BEb{c}}}{{Dn{{BAb{{BDn{c}}}}Ld}}}{NnMl}}{cE`{}}00000000000333333333333`````````````````{{{BFb{c}}C`}{{B`{{An{Al}}}}}{NnO`ObMlOdAbA`}}44444444444444444444``{{{BFd{c}}}{{BFd{c}}}Ml}{BFfBFf}{{ce}n{}{}}0`{{{BFh{c}}{BAb{{BFd{c}}}}H`}{{BFj{c}}}{NnMl}}````{c{{Dn{{BFd{e}}}}}FbANf}{{{BFh{c}}H`}{{BFj{c}}}{NnMl}}{{{BFh{c}}LdH`}{{BFj{c}}}{NnMl}}{{cFd}{{Dn{nFf}}}{}}{{cFd}{{Dn{nFh}}}{}}`{{{BFd{c}}Bd}BfNn}{cc{}}0000000000000{BFf{{ABj{C`{Bl{BEf}}}}}}```{ce{}{}}000000000{c{{Cf{e}}}{}{}}000000000``{{NfNj{BFl{c}}Bh}{{Gn{{BFb{c}}BFf}}}{NnMlO`ObOdAbA`}}{{C`C`BAfNj{BEh{{BFd{c}}}}{ANh{{BAb{{BFd{c}}}}}}{ANh{BFn}}Bh}{{BG`{c}}}{NnMlAbA`}}``````{{{BFb{c}}}{{B`{{An{Al}}}}}{NnO`ObMlOdAbA`}}{{{BG`{c}}}{{ANl{c}}}{NnMlAbA`}}{{{BFh{c}}BGb{BAb{{BFd{c}}}}}{{BFj{c}}}{NnMl}}{{{BFh{c}}{BGd{c}}{Dn{{BFd{c}}Ld}}}{{BFj{c}}}{NnMl}}{{{BFh{c}}{Dn{{BFd{c}}Ld}}}{{Dn{nLd}}}{NnMl}}{{{BFh{c}}BGb}{{BFj{c}}}{NnMl}}`{{{BFh{c}}{BAb{{BFd{c}}}}}{{Dn{nLd}}}{NnMl}}``{{{BGf{c}}AHj}n{NnMl}}{{{AD`{c}}{ANh{c}}C`C`BAfNj{BEh{{BFd{c}}}}{ANh{{BAb{{BFd{c}}}}}}{ANh{BFn}}AHj}n{NnMlAbA`}}{{Nf{BEh{{BFd{c}}}}{ABj{C`{AD`{{BAb{{BFd{c}}}}}}}}AHj}n{NnMlO`ObOdAbA`}}{{{BFb{c}}{Fl{C`}}c}{{B`{{An{Al}}}}}{NnO`ObMlOdAbA`}}{{{BG`{c}}c}{{ANl{n}}}{NnMlAbA`}}{{{BFh{c}}BGbc}{{BFj{c}}}{NnMl}}{{{BFh{c}}{BGd{c}}c}{{BFj{c}}}{NnMl}}{{{BFh{c}}{BGd{c}}{l{{BGh{c}}}}}{{BFj{c}}}{NnMl}}{{{BFh{c}}{BGd{c}}}{{BFj{c}}}{NnMl}}{{{BFd{c}}e}DnO`Gf}`{{{BGf{c}}AHj}{{l{{BGf{c}}}}}{NnMl}}{{{BFh{c}}{BGd{c}}AHj}{{l{{BFj{c}}}}}{NnMl}}{{{BFh{c}}BGbAHj}{{l{{BFj{c}}}}}{NnMl}}`{ce{}{}}0{c{{Dn{e}}}{}{}}0000000000000000000{{{BFh{c}}}{{Dn{{BAb{{BFd{c}}}}Ld}}}{NnMl}}{cE`{}}0000000003333333333```{{{BGj{c}}BGl}nMl}444444{{{BGj{c}}}{{BGj{c}}}Ml}{BGlBGl}{{{BGh{c}}}{{BGh{c}}}Ml}{{ce}n{}{}}00{{BGlBGl}Nd}{{{BGh{c}}{BGh{c}}}NdBGn}{{ce}Nd{}{}}0{{}{{BGj{c}}}{}}{c{{Dn{BGl}}}Fb}{c{{Dn{{BGh{e}}}}}FbANf}{{cFd}{{Dn{nFf}}}{}}0{{{BGj{c}}{BGj{c}}}DhBH`}{{BGlBGl}Dh}{{{BGh{c}}{BGh{c}}}DhBH`}{{ce}Dh{}{}}00000000000{{cFd}{{Dn{nFh}}}{}}0{{{BGj{c}}Bd}BfNn}{{BGlBd}Bf}{{{BGh{c}}Bd}BfNn}{cc{}}00000000`{BGlBGl}{ce{}{}}00{c{{Cf{e}}}{}{}}00{{{BGj{c}}}{{`{{Ll{}{{Lf{{BGh{c}}}}}}}}}Ml}``{{BGlBGl}{{l{Nd}}}}{{{BGh{c}}{BGh{c}}}{{l{Nd}}}BHb}{{{BGj{c}}c}{{BGh{c}}}Ml}`{{BGlc}DnGf}{{{BGh{c}}e}DnO`Gf}777{c{{Dn{e}}}{}{}}00000{cE`{}}00999","c":[420],"p":[[5,"RpcHandlerCtx",1666],[5,"RpcModule",2500],[5,"ApiEndpoint",2501],[5,"Vec",2502],[8,"ModuleInstanceId",2503],[6,"Option",2504],[1,"unit"],[10,"Sync",2505],[10,"Send",2505],[10,"HasApiContext",0],[5,"ApiEndpointContext",2501],[8,"ApiResult",0],[8,"ApiRequestErased",2501],[10,"Future",2506],[5,"Box",2507],[5,"Pin",2508],[5,"FedimintServer",0],[5,"Formatter",2509],[8,"Result",2509],[5,"TaskGroup",2510],[5,"ServerConfig",273],[8,"Result",2511],[5,"Path",2512],[5,"PeerId",2513],[5,"Hash",2514],[5,"BTreeMap",2515],[5,"Request",2516],[5,"PathBuf",2512],[5,"ConfigGenSettings",795],[5,"Database",2517],[5,"String",2518],[8,"ServerModuleInitRegistry",273],[1,"str"],[6,"SocketAddr",2519],[1,"u32"],[1,"bool"],[5,"FedimintApiHandler",0],[5,"ConsensusApi",1666],[6,"Result",2520],[5,"TypeId",2521],[5,"Message",53],[6,"Recipient",53],[8,"ModuleDecoderRegistry",2522],[5,"DecodeError",2523],[10,"Read",2524],[1,"usize"],[5,"Error",2525],[10,"Write",2524],[10,"Deserializer",2526],[10,"Serializer",2527],[6,"ErrorImpl",2527],[5,"Error",2528],[1,"u8"],[1,"slice"],[5,"Decoder",2503],[6,"DecodingMode",2522],[5,"ModuleRegistry",2522],[6,"DecodingError",2517],[10,"Serializer",2529],[5,"NodeIndex",2530],[5,"UnitSaver",110],[5,"Cursor",2531],[1,"tuple"],[1,"u64"],[6,"UnitData",125],[5,"Error",2532],[10,"Input",2533],[10,"Output",2533],[10,"Sized",2505],[5,"DataProvider",125],[10,"Hasher",2534],[6,"ConsensusItem",2535],[5,"Receiver",2536],[5,"SchnorrSignature",2537],[5,"Receiver",2538],[5,"FinalizationHandler",173],[5,"Sender",2536],[5,"Keychain",186],[5,"PublicKey",2539],[5,"SecretKey",2539],[5,"NodeCount",2530],[5,"Message",2540],[5,"Hasher",217],[5,"ReconnectPeerConnections",2013],[5,"Network",217],[8,"NetworkData",217],[6,"Recipient",2541],[5,"Spawner",254],[17,"Output"],[8,"TaskHandle",2542],[5,"ServerModuleConfig",273],[5,"ConfigGenParams",273],[5,"PeerUrl",273],[5,"ModuleInitRegistry",273],[10,"IDynCommonModuleInit",2501],[10,"AsRef",2543],[10,"Into",2543],[5,"Error",2511],[17,"Item"],[1,"u16"],[5,"ModuleKind",2503],[10,"Iterator",2544],[5,"ClientConfig",273],[5,"FederationId",273],[5,"GlobalClientConfig",273],[5,"JsonWithKind",273],[5,"ServerConfigPrivate",273],[5,"ServerConfigConsensus",273],[5,"ServerConfigLocal",273],[10,"Clone",2545],[6,"KeyType",273],[5,"ServerModuleConsensusConfig",273],[6,"DkgPeerMsg",273],[6,"Ordering",2546],[5,"NetworkConfig",2013],[5,"TlsConfig",1742],[5,"DelayCalculator",2013],[5,"PeerConnections",2547],[10,"Debug",2509],[10,"Serialize",2529],[10,"DeserializeOwned",2526],[10,"Unpin",2505],[8,"DkgResult",273],[5,"InviteCode",2548],[5,"Error",2509],[6,"DkgError",273],[5,"PublicKey",2539],[5,"Cancelled",2510],[10,"IntoIterator",2549],[17,"Local"],[17,"Private"],[17,"Consensus"],[10,"TypedServerModuleConfig",273],[10,"TypedServerModuleConsensusConfig",2550],[5,"Certificate",2551],[5,"PrivateKey",2551],[10,"Decodable",2523],[5,"ClientModuleConfig",2550],[5,"BTreeSet",2552],[6,"Value",2553],[10,"Error",2554],[5,"SupportedCoreApiVersions",2555],[5,"SupportedApiVersionsSummary",2555],[5,"DynServerModuleInit",2501],[5,"DynCommonModuleInit",2501],[6,"All",2556],[5,"Secp256k1",2540],[5,"FederationIdPrefix",2550],[5,"HashMap",2557],[5,"ConfigGenApi",795],[5,"PeerServerParams",2558],[5,"ConfigGenState",795],[5,"ApiAuth",2501],[5,"DynGlobalApi",2548],[5,"ConfigGenParamsLocal",795],[5,"ConfigGenLocalConnection",795],[5,"ConfigGenParamsRequest",2558],[5,"ConfigGenParamsResponse",2558],[5,"ConfigGenParamsConsensus",2558],[5,"Sender",2559],[6,"ServerStatus",2548],[5,"MutexGuard",2560],[5,"ConfigGenConnectionsRequest",2558],[5,"DkgRunner",939],[10,"Eq",2546],[10,"Hash",2534],[5,"Dkg",939],[6,"DkgMessage",2550],[6,"DkgStep",939],[10,"DkgGroup",2550],[5,"DkgKeys",939],[5,"ThresholdKeys",939],[5,"G1Projective",2561],[5,"Scalar",2562],[5,"G1Affine",2561],[5,"G2Projective",2563],[5,"G2Affine",2563],[10,"PeerHandleOps",939],[10,"Encodable",2523],[10,"RngCore",2564],[5,"MuxPeerConnections",2547],[5,"SecretKeyShare",2565],[5,"LessSafeKey",2566],[10,"Display",2509],[5,"FundingVerifier",1076],[5,"TransactionItemAmount",2501],[8,"ServerModuleRegistry",2522],[5,"DatabaseTransaction",2517],[5,"Transaction",2567],[6,"TransactionError",2567],[5,"FmtDbgConsensusItem",1096],[5,"ConsensusServer",1107],[5,"SignedSessionOutcome",2537],[5,"Sender",2538],[8,"PeerConnector",2013],[5,"AcceptedItem",2537],[5,"TaskHandle",2510],[6,"DbKeyPrefix",1147],[5,"DbKeyPrefixIter",1147],[5,"AcceptedItemKey",1147],[5,"AcceptedItemPrefix",1147],[5,"AcceptedTransactionKey",1147],[5,"AcceptedTransactionKeyPrefix",1147],[5,"SignedSessionOutcomeKey",1147],[5,"SignedSessionOutcomePrefix",1147],[5,"AlephUnitsKey",1147],[5,"AlephUnitsPrefix",1147],[5,"DatabaseVersion",2517],[8,"ServerMigrationFn",2517],[5,"TX_ELEMS_BUCKETS",1354],[1,"f64"],[5,"CONSENSUS_TX_PROCESSED_INPUTS",1354],[5,"Histogram",2568],[5,"CONSENSUS_TX_PROCESSED_OUTPUTS",1354],[5,"CONSENSUS_ITEMS_PROCESSED_TOTAL",1354],[8,"IntCounterVec",2569],[5,"CONSENSUS_ITEM_PROCESSING_DURATION_SECONDS",1354],[8,"HistogramVec",2568],[5,"CONSENSUS_ITEM_PROCESSING_MODULE_AUDIT_DURATION_SECONDS",1354],[5,"JSONRPC_API_REQUEST_DURATION_SECONDS",1354],[5,"JSONRPC_API_REQUEST_RESPONSE_CODE",1354],[5,"CONSENSUS_SESSION_COUNT",1354],[8,"IntGauge",2570],[5,"CONSENSUS_PEER_CONTRIBUTION_SESSION_IDX",1354],[8,"IntGaugeVec",2570],[5,"BACKUP_WRITE_SIZE_BYTES",1354],[5,"STORED_BACKUPS_COUNT",1354],[5,"PEER_CONNECT_COUNT",1354],[5,"PEER_DISCONNECT_COUNT",1354],[5,"PEER_MESSAGES_COUNT",1354],[5,"PEER_BANS_COUNT",1354],[5,"MetricsService",1548],[5,"Request",2571],[10,"RpcServiceT",2572],[5,"MetricsLayer",1548],[5,"ResponseFuture",1548],[5,"Context",2573],[6,"Poll",2574],[5,"MethodResponse",2575],[5,"PeerConnectionMultiplexer",1596],[5,"ModuleMultiplexed",1596],[5,"ModuleMultiplexerOutOfOrder",1596],[10,"Deserialize",2526],[5,"Receiver",2559],[5,"Sender",2576],[8,"Cancellable",2510],[5,"OutPoint",2513],[5,"DynOutputOutcome",2503],[5,"SerdeModuleEncoding",2501],[5,"TransactionId",2513],[5,"Committable",2517],[5,"ExpiringCache",1666],[10,"FnOnce",2577],[5,"AuditSummary",2578],[5,"FederationStatus",2548],[5,"GuardianConfigBackup",2548],[5,"SignedBackupRequest",2579],[5,"ApiError",2501],[5,"ClientBackupSnapshot",2580],[5,"Duration",2581],[6,"SessionStatus",2537],[5,"PeerCertStore",1742],[5,"TcpListener",2582],[5,"TlsAcceptor",2583],[8,"AnyFramedTransport",1960],[10,"Connector",1742],[5,"SafeUrl",2584],[5,"TlsTcpConnector",1742],[8,"AnyConnector",1742],[5,"LatencyInterval",1817],[5,"FailureRate",1817],[6,"StreamReliability",1817],[5,"MockConnector",1817],[5,"MockNetwork",1817],[10,"AsyncRead",2585],[10,"AsyncWrite",2586],[5,"UnreliableDuplexStream",1817],[5,"UnreliabilityGenerator",1817],[8,"Result",2525],[5,"DuplexStream",2587],[5,"ReadBuf",2588],[5,"BidiFramed",1960],[8,"FramedSink",1960],[8,"FramedStream",1960],[10,"FramedTransport",1960],[10,"Sink",2589],[10,"Stream",2590],[5,"BincodeCodec",1960],[5,"BytesMut",2591],[5,"WriteHalf",2592],[5,"ReadHalf",2592],[5,"TcpStream",2593],[8,"TcpBidiFramed",1960],[5,"PeerConnection",2013],[6,"PeerMessage",2013],[5,"PeerStatusChannels",2013],[5,"CommonPeerConnectionState",2013],[6,"PeerConnectionState",2013],[6,"PeerConnectionStatus",2548],[8,"SharedAnyConnector",1742],[5,"PeerStatusQuery",2013],[5,"DisconnectedPeerConnectionState",2013],[5,"PeerConnectionStateMachine",2013],[5,"ConnectedPeerConnectionState",2013],[5,"ReconnectPeerConnectionsReliable",2241],[5,"PeerMessage",2241],[5,"PeerStatusChannels",2241],[5,"CommonPeerConnectionState",2241],[6,"PeerConnectionState",2241],[8,"PeerConnector",2241],[5,"PeerStatusQuery",2241],[5,"PeerConnection",2241],[5,"DisconnectedPeerConnectionState",2241],[5,"ConnectedPeerConnectionState",2241],[5,"PeerConnectionStateMachine",2241],[5,"UniqueMessage",2414],[5,"MessageQueue",2414],[5,"MessageId",2414],[10,"Ord",2546],[10,"PartialEq",2546],[10,"PartialOrd",2546],[8,"LatestContributionByPeer",1107],[8,"ModuleId",1596],[8,"ConnectResult",1742],[15,"RandomlyUnreliable",1952],[8,"PeerStatusChannelSender",2013],[8,"PeerStatusChannelReceiver",2013],[8,"PeerStatusChannelSender",2241],[8,"PeerStatusChannelReceiver",2241]],"b":[[516,"impl-Display-for-FederationId"],[517,"impl-Debug-for-FederationId"],[524,"impl-Debug-for-DkgError"],[525,"impl-Display-for-DkgError"],[544,"impl-From%3CCancelled%3E-for-DkgError"],[545,"impl-From%3CError%3E-for-DkgError"],[1218,"impl-Display-for-DbKeyPrefix"],[1219,"impl-Debug-for-DbKeyPrefix"],[1688,"impl-HasApiContext%3CDynServerModule%3E-for-ConsensusApi"],[1689,"impl-HasApiContext%3CConsensusApi%3E-for-ConsensusApi"]]}],\
["fedimint_testing",{"doc":"","t":"CCCCCCCKMMMMMCMCMFFOOONNNNNNNNONNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNHONNONONNNNNNNNNNNNNTTFFFFOONNNNNNNNONNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNSSSSSSHHHHHHHHHHHHSSSSSSSSSSSFONNONNONNNNNNNNHNNNNOONNNNNNFSNONONNNONNONONNNNNNNNNOOOOOHNNNNNNPSFFGPFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONOONNONNNNNNNNNNNNNNNNNNNONNNNNNKMMMMCCNFSONNNNNNNOONNNNNNNNNNONNNNNNFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOONNOONNNNNNNNOONNNNNNNN","n":["btc","db","envs","federation","fixtures","gateway","ln","BitcoinTest","get_mempool_tx_fee","get_new_address","lock_exclusive","mine_block_and_get_received","mine_blocks","mock","prepare_funding_wallet","real","send_and_mine_block","FakeBitcoinFactory","FakeBitcoinTest","addresses","bitcoin","blocks","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","create_connection","default","fmt","fmt","from","from","from_ref","from_ref","from_ref","from_ref","get_block_count","get_block_hash","get_fee_rate","get_mempool_tx_fee","get_network","get_new_address","get_script_history","get_tx_block_height","get_txout_proof","inputs","into","into","into_request","into_request","into_request","into_request","lock_exclusive","mine_block","mine_block_and_get_received","mine_blocks","new","new_transaction","output_sum","pending","pending_merkle_tree","prepare_funding_wallet","proofs","register_new","scripts","send_and_mine_block","submit_transaction","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","ERROR","ERROR","REAL_BITCOIN_LOCK","RealBitcoinTest","RealBitcoinTestLocked","RealBitcoinTestNoLock","__private_field","_guard","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","deref","from","from","from","from","from_ref","from_ref","get_mempool_tx_fee","get_mempool_tx_fee","get_mempool_tx_fee","get_new_address","get_new_address","get_new_address","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lock_exclusive","lock_exclusive","lock_exclusive","mine_block_and_get_received","mine_block_and_get_received","mine_block_and_get_received","mine_blocks","mine_blocks","mine_blocks","new","prepare_funding_wallet","prepare_funding_wallet","prepare_funding_wallet","rpc","send_and_mine_block","send_and_mine_block","send_and_mine_block","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BYTE_20","BYTE_32","BYTE_33","BYTE_8","STRING_64","TEST_MODULE_INSTANCE_ID","copy_directory","create_snapshot","get_project_root","get_temp_database","open_snapshot_db","open_temp_db_and_copy","snapshot_db_migrations","snapshot_db_migrations_client","snapshot_db_migrations_with_decoders","validate_migrations_client","validate_migrations_global","validate_migrations_server","FM_GATEWAY_LIGHTNING_ADDR_ENV","FM_LND_MACAROON_ENV","FM_LND_RPC_ADDR_ENV","FM_LND_TLS_CERT_ENV","FM_PORT_CLN_ENV","FM_PORT_ESPLORA_ENV","FM_PORT_LND_LISTEN_ENV","FM_PREPARE_DB_MIGRATION_SNAPSHOTS_ENV","FM_TEST_BITCOIND_RPC_ENV","FM_TEST_DIR_ENV","FM_TEST_USE_REAL_DAEMONS_ENV","FederationTest","_task","borrow","borrow_mut","client_init","clone","clone_into","configs","from","from_ref","from_ref","id","into","into_request","into_request","invite_code","local_config_gen_params","new","new_client","new_client_rocksdb","new_client_with","primary_client","server_init","to_owned","try_from","try_into","two_clients","type_id","vzip","Fixtures","TIMEOUT","bitcoin","bitcoin","bitcoin_client","bitcoin_rpc","bitcoin_server","borrow","borrow_mut","clients","cln","dyn_bitcoin_rpc","dyn_bitcoin_rpc","from","id","into","into_request","into_request","is_real_test","lnd","new_fed","new_fed_with_peers","new_gateway","new_primary","num_offline","num_peers","params","primary_client","servers","test_dir","try_from","try_into","type_id","vzip","with_module","with_server_only_module","Cln","DEFAULT_GATEWAY_PASSWORD","FakeLightningBuilder","GatewayTest","LightningNodeType","Lnd","RealLightningBuilder","_config_dir","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone_into","clone_into","clone_into","connect_fed","drop","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway","get_gateway_id","get_rpc","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","listening_addr","new","node_pub_key","node_type","remove_client_hack","select_client","task_group","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","versioned_api","vzip","vzip","vzip","vzip","wait_for_gateway_state","wait_for_webserver","LightningTest","invoice","is_shared","lightning_node_type","listening_address","mock","real","unpayable_invoice","FakeLightningTest","INVALID_INVOICE_DESCRIPTION","amount_sent","borrow","borrow_mut","complete_htlc","create_invoice","default","fmt","from","gateway_node_pub_key","gateway_node_sec_key","info","into","into_request","into_request","invoice","is_shared","lightning_node_type","listening_address","new","pay","receiver","route_htlcs","routehints","try_from","try_into","type_id","vzip","ClnLightningTest","LndLightningTest","borrow","borrow","borrow_mut","borrow_mut","channel_balance","channel_balance","complete_htlc","complete_htlc","create_invoice","create_invoice","fmt","fmt","from","from","info","info","initial_balance","initial_balance","into","into","into_request","into_request","into_request","into_request","invoice","invoice","is_shared","is_shared","lightning_node_type","lightning_node_type","listening_address","listening_address","lnrpc","lnrpc","new","new","node_pub_key","node_pub_key","pay","pay","pubkey","pubkey","route_htlcs","route_htlcs","routehints","routehints","rpc_cln","rpc_lnd","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_testing"],[7,"fedimint_testing::btc"],[17,"fedimint_testing::btc::mock"],[83,"fedimint_testing::btc::real"],[163,"fedimint_testing::db"],[181,"fedimint_testing::envs"],[192,"fedimint_testing::federation"],[221,"fedimint_testing::fixtures"],[257,"fedimint_testing::gateway"],[343,"fedimint_testing::ln"],[351,"fedimint_testing::ln::mock"],[380,"fedimint_testing::ln::real"],[438,"bitcoin::hash_types::newtypes"],[439,"core::future::future"],[440,"alloc::boxed"],[441,"core::pin"],[442,"bitcoin::util::address"],[443,"bitcoin::util::amount"],[444,"fedimint_core::util"],[445,"fedimint_core::task"],[446,"fedimint_bitcoind"],[447,"anyhow"],[448,"core::fmt"],[449,"core::fmt"],[450,"bitcoin::blockdata::transaction"],[451,"bitcoin::blockdata::transaction"],[452,"tonic::request"],[453,"tonic::request"],[454,"alloc::collections::btree::map"],[455,"bitcoin::blockdata::block"],[456,"bitcoin::blockdata::transaction"],[457,"core::result"],[458,"core::any"],[459,"tokio::sync::mutex"],[460,"std::path"],[461,"std::io::error"],[462,"std::path"],[463,"fedimint_core::db"],[464,"futures_core::future"],[465,"core::ops::function"],[466,"tempfile::dir"],[467,"alloc::string"],[468,"core::ops::function"],[469,"core::marker"],[470,"fedimint_core::db"],[471,"fedimint_core::config"],[472,"fedimint_core::api"],[473,"fedimint_core"],[474,"std::collections::hash::map"],[475,"fedimint_core::config"],[476,"fedimint_client"],[477,"fedimint_core::config"],[478,"fedimint_core::envs"],[479,"core::option"],[480,"fedimint_client::module::init"],[481,"core::fmt"],[482,"ln_gateway::rpc::rpc_client"],[483,"ln_gateway"],[484,"ln_gateway"],[485,"ln_gateway::gateway_lnrpc"],[486,"ln_gateway::gateway_lnrpc"],[487,"fedimint_tonic_lnd"]],"d":["","","","","","","","","Waits till tx is found in mempool and returns the fees","Returns a new address.","Make the underlying instance act as if it was exclusively …","Mine a block to include any pending transactions then get …","Mines a given number of blocks","","Prepare funding wallet","","Send some bitcoin to an address then mine a block to …","","","Tracks how much bitcoin was sent to an address (doesn’t …","","Simulates mined bitcoin blocks","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Simulates pending transactions in the mempool","","","Simulates the merkle tree proofs","Registers a fake bitcoin rpc factory for testing","Simulates the script history","","","","","","","","","","","","","","","","Global lock we use to isolate tests that need exclusive …","Fixture implementing bitcoin node under test by talking to …","Fixture implementing bitcoin node under test by talking to …","Fixture implementing bitcoin node under test by talking to …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","RPC used to connect to bitcoind, used for waiting for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function that recursively copies all of the …","Creates a backup database in the <code>snapshot_dir</code> according to …","Get the project root (relative to closest Cargo.lock file)","Retrieves a temporary database from the database backup …","Opens the backup database in the <code>snapshot_dir</code>. If the …","Open a temporary database located at <code>temp_path</code> and copy …","Creates the database backup directory for a server module …","Create the database backup directory for a client module. …","Creates the database backup for <code>snapshot_name</code> to …","Validates the database migrations for a client module. …","Validates the database migrations. <code>decoders</code> need to be …","Validates the database migrations for a server module. …","","","","","","","","","","","","Test fixture for a running fedimint federation","","","","","","","","Returns the argument unchanged.","","","Return first id for gateways","Calls <code>U::from(self)</code>.","","","Return first invite code for gateways","Creates the config gen params for each peer","","Create a client connected to this fed","Create a client connected to this fed but using RocksDB …","","","","","","","Create two clients, useful for send/receive tests","","","A tool for easily writing fedimint integration tests","A default timeout for things happening in tests","Get a test bitcoin fixture","","Get a client bitcoin RPC config","","Get a server bitcoin RPC config","","","","Returns the CLN lightning node","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Returns the LND lightning node","Starts a new federation with default number of peers for …","Starts a new federation with number of peers","Starts a new gateway with a given lightning node","","","","","","","If <code>FM_TEST_DIR</code> is set, use it as a base, otherwise use a …","","","","","Add a module to the fed","","","","","Fixture for creating a gateway","","","","Temporary dir that stores the gateway config","","","","","","","","","","","","","","","","","Connects to a new federation and stores the info","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Handle of the running gateway","","RPC client for communicating with the gateway admin API","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Removes a client from the gateway and keeps it alive","","<code>TaskGroup</code> that is running the test","","","","","","","","","","","","","","","","","","","","URL for the RPC","","","","","","Waits for the webserver to be ready.","","Creates invoice from the lightning implementation","Is this a LN instance shared with other tests","","","","","Creates an invoice that is not payable","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,10,9,10,9,10,9,10,9,10,9,10,9,9,10,9,10,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,0,9,10,9,9,10,10,10,10,10,10,10,10,0,10,10,10,10,9,10,10,10,9,10,9,10,9,10,9,10,9,10,10,36,33,0,0,0,0,34,37,36,37,34,33,36,37,34,33,33,33,33,34,36,37,34,33,33,33,36,37,33,36,37,33,36,37,36,37,34,33,36,36,37,37,34,34,33,33,36,37,33,36,37,33,36,37,33,36,36,37,33,33,36,37,33,33,36,37,34,33,36,37,34,33,36,37,34,33,36,37,34,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,59,59,59,59,59,59,59,59,59,59,59,59,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,71,71,71,71,71,71,85,0,0,0,0,85,0,77,77,85,83,84,77,85,83,84,83,84,85,83,84,85,83,84,77,77,85,85,77,85,83,84,85,85,83,83,84,84,77,77,77,77,85,83,84,77,77,85,85,83,83,84,84,77,77,77,83,77,77,77,85,83,84,85,77,85,83,84,77,85,83,84,77,85,83,84,85,85,85,77,77,85,83,84,77,77,0,74,74,74,74,0,0,74,0,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,101,102,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102],"f":"````````{{bd}{{j{{h{f}}}}}}{b{{j{{h{f}}}}}}0{{bl}{{j{{h{f}}}}}}{{bn}{{j{{h{f}}}}}}`2`{{blA`}{{j{{h{f}}}}}}`````{ce{}{}}000{AbAb}{AdAd}{{ce}Af{}{}}0`{{AbAhAj}{{An{Al}}}}{{}Ad}{{AbB`}Bb}{{AdB`}Bb}{cc{}}00000{Ad{{j{{h{f}}}}}}{{Adn}{{j{{h{f}}}}}}{{AdBd}{{j{{h{f}}}}}}{{Add}{{j{{h{f}}}}}}33{{AdBf}{{j{{h{f}}}}}}11{Bh{{Bl{Bj}}}}>>{c{{Bn{e}}}{}{}}{c{{C`{e}}}{}{}}107{{{Cd{dCb}}{Bl{Cf}}{Bl{Bh}}}Af}{{Adl}{{j{{h{f}}}}}}8={{{Bl{Ch}}}Bh}{Bhn}`{{{Cj{Bh}}}Cl}<`{{}Ab}`{{AdlA`}{{j{{h{f}}}}}}{{AdBh}{{j{{h{f}}}}}}{ce{}{}}0{c{{Cn{e}}}{}{}}000{cD`{}}022>````````22222222`{DbDb}{{ce}Af{}{}}{Dd{{Df{Af}}}}{cc{}}00000{{Dhd}{{j{{h{f}}}}}}{{Djd}{{j{{h{f}}}}}}{{Dbd}{{j{{h{f}}}}}}{Dh{{j{{h{f}}}}}}{Dj{{j{{h{f}}}}}}{Db{{j{{h{f}}}}}}``<<<<{c{{C`{e}}}{}{}}{c{{Bn{e}}}{}{}}011001432{{Dhl}{{j{{h{f}}}}}}{{Djl}{{j{{h{f}}}}}}{{Dbl}{{j{{h{f}}}}}}{{Dhn}{{j{{h{f}}}}}}{{Djn}{{j{{h{f}}}}}}{{Dbn}{{j{{h{f}}}}}}{{AhAl}Dh};:9`{{DhlA`}{{j{{h{f}}}}}}{{DjlA`}{{j{{h{f}}}}}}{{DblA`}{{j{{h{f}}}}}}{ce{}{}}{c{{Cn{e}}}{}{}}0000000{cD`{}}0002222``````{{DlDl}{{Dn{Af}}}}{{E`EbEdc}{{An{Af}}}{{El{Ef}{{Eh{{Ej{Af}}}}}}}}{{}{{Dn{E`}}}}{{EnEb}{{An{{Fb{EfF`}}}}}}{{EbE`Ed}{{An{Ef}}}}{{FdDlEb}{{An{{Fb{EfF`}}}}}}{{Enc}{{An{Af}}}{{Ff{Ef}{{Eh{{Ej{Af}}}}}}}}{{Ence}{{An{Af}}}{{Ff{Ef}{{Eh{{Ej{Af}}}}}}FhFj}{{Ff{}{{Eh{{Fb{{Bl{{Bl{Fl}}}}{Bl{{Bl{Fl}}}}}}}}}}FhFj}}{{EncEb}{{An{Af}}}{{Ff{Ef}{{Eh{{Ej{Af}}}}}}}}{{FnEne}{{An{Af}}}{{f{}{{Eh{{An{Af}}}}}}}{{Ff{EfBlBl}{{Eh{c}}}}}}{{eEnG`{Cd{G`Gb}}Eb}{{An{Af}}}{{f{}{{Eh{{An{Af}}}}}}}{{Ff{Ef}{{Eh{c}}}}}}{{GdEne}{{An{Af}}}{{f{}{{Eh{{An{Af}}}}}}}{{Ff{Ef}{{Eh{c}}}}}}`````````````>>`{GfGf}{{ce}Af{}{}}`{cc{}}00{GfGh}{ce{}{}}{c{{C`{e}}}{}{}}{c{{Bn{e}}}{}{}}{GfGj}{{{Cj{Gl}}BdGn}{{An{{Hb{GlH`}}}}}}{{BdBdBdGnHdHfHhFd}Gf}{GfHj}0{{GfHlEf}Hj}``7{c{{Cn{e}}}{}{}}0{Gf{{Fb{HjHj}}}}{cD`{}}:``{Hn{{I`{b}}}}`{HnIb}`0<<`{Hn{{h{Id}}}}{HnAl}`{cc{}}`?=>{{}Ed}3{HnGf}{{HnBdBd}Gf}{{Hn{h{Id}}If{Ih{Fd}}}Ij}{{ceg}Hn{IlInJ`}{JbInJ`}Jd}`````{En{{Fb{E`{Ih{F`}}}}}}==;{ce{}{}}{{Hnceg}Hn{IlInJ`}{JbInJ`}Jd}{{Hnce}Hn{JbInJ`}Jd}````````22222222{Jf{{j{{h{f}}}}}}{Jh{{j{{h{f}}}}}}{JjJj}{JfJf}{JhJh}{{ce}Af{}{}}00{{IjGf}Jl}{IjAf}{{JjB`}Bb}{{JjB`}{{Cn{AfJn}}}}{cc{}}000000000`{IjK`}{IjKb}????{c{{C`{e}}}{}{}}{c{{Bn{e}}}{}{}}101001`{{Bd{Ih{Fd}}{h{Id}}EbHfIf}Ij}``{{IjGf}Hj}{{IjGh}Hj}`{ce{}{}}00{cFd{}}{c{{Cn{e}}}{}{}}0000000{cD`{}}000{cEd{}}00`4444{{Kdc}{{An{Af}}}{{Ff{Kf}{{Eh{Ed}}}}}}{{Ah{Ih{Fd}}}{{An{Af}}}}`{{IdCb{Ih{n}}}{{j{{h{f}}}}}}{IdEd}{IdJj}{IdFd}``{{IdCb{Ih{n}}}Kh}```;;{{KjKl}{{j{{h{f}}}}}}{{KjKn}{{j{{h{f}}}}}}{{}Kj}{{KjB`}Bb}{cc{}}``{Kj{{j{{h{f}}}}}}{ce{}{}}{c{{C`{e}}}{}{}}{c{{Bn{e}}}{}{}}{{KjCb{Ih{n}}}{{j{{h{f}}}}}}{KjEd}{KjJj}{KjFd}:{{KjL`}{{j{{h{f}}}}}}`{{{h{Kj}}Lb}{{j{{h{f}}}}}}{{KjLd}{{j{{h{f}}}}}}{c{{Cn{e}}}{}{}}0{cD`{}};``;;;;{{{I`{{Df{Lf}}}}}Cb}{{{I`{{Df{Lh}}}}}Cb}{{LjKl}{{j{{h{f}}}}}}{{LlKl}{{j{{h{f}}}}}}{{LjKn}{{j{{h{f}}}}}}{{LlKn}{{j{{h{f}}}}}}{{LjB`}Bb}{{LlB`}Bb}{cc{}}0{Lj{{j{{h{f}}}}}}{Ll{{j{{h{f}}}}}}``{ce{}{}}0{c{{Bn{e}}}{}{}}{c{{C`{e}}}{}{}}01{{LjCb{Ih{n}}}{{j{{h{f}}}}}}{{LlCb{Ih{n}}}{{j{{h{f}}}}}}{LjEd}{LlEd}{LjJj}{LlJj}{LjFd}{LlFd}``{{}Lj}{{}Ll}``{{LjL`}{{j{{h{f}}}}}}{{LlL`}{{j{{h{f}}}}}}{{{I`{{Df{Lf}}}}}K`}{{{I`{{Df{Lh}}}}}K`}{{{h{Lj}}Lb}{{j{{h{f}}}}}}{{{h{Ll}}Lb}{{j{{h{f}}}}}}{{LjLd}{{j{{h{f}}}}}}{{LlLd}{{j{{h{f}}}}}}``{c{{Cn{e}}}{}{}}000{cD`{}}0{ce{}{}}0","c":[],"p":[[10,"BitcoinTest",7],[5,"Txid",438],[10,"Future",439],[5,"Box",440],[5,"Pin",441],[5,"Address",442],[1,"u64"],[5,"Amount",443],[5,"FakeBitcoinFactory",17],[5,"FakeBitcoinTest",17],[1,"unit"],[5,"SafeUrl",444],[5,"TaskHandle",445],[5,"DynBitcoindRpc",446],[8,"Result",447],[5,"Formatter",448],[8,"Result",448],[1,"u16"],[5,"Script",449],[5,"Transaction",450],[5,"OutPoint",450],[5,"Vec",451],[5,"Request",452],[5,"Request",452],[5,"Amount",453],[5,"BTreeMap",454],[5,"Block",455],[5,"TxOut",450],[1,"slice"],[5,"PartialMerkleTree",456],[6,"Result",457],[5,"TypeId",458],[5,"RealBitcoinTestNoLock",83],[5,"REAL_BITCOIN_LOCK",83],[5,"Mutex",459],[5,"RealBitcoinTest",83],[5,"RealBitcoinTestLocked",83],[5,"Path",460],[8,"Result",461],[5,"PathBuf",460],[8,"ModuleDecoderRegistry",462],[1,"bool"],[5,"Database",463],[17,"Output"],[8,"BoxFuture",464],[10,"FnOnce",465],[1,"str"],[5,"TempDir",466],[1,"tuple"],[5,"String",467],[10,"Fn",465],[10,"Send",468],[10,"Sync",468],[1,"u8"],[5,"DynClientModuleInit",469],[5,"DatabaseVersion",463],[8,"ServerMigrationFn",463],[5,"DynServerModuleInit",470],[5,"FederationTest",192],[5,"FederationId",471],[5,"InviteCode",472],[5,"PeerId",453],[8,"ServerModuleConfigGenParamsRegistry",471],[5,"ConfigGenParams",473],[5,"HashMap",474],[8,"ServerModuleInitRegistry",471],[8,"ClientModuleInitRegistry",469],[8,"ModuleInstanceId",475],[8,"ClientHandleArc",476],[5,"ClientConfig",471],[5,"Fixtures",221],[5,"Arc",477],[5,"BitcoinRpcConfig",478],[10,"LightningTest",343],[1,"u32"],[6,"Option",479],[5,"GatewayTest",257],[10,"IClientModuleInit",469],[10,"MaybeSend",445],[10,"MaybeSync",445],[10,"IServerModuleInit",470],[10,"ModuleInitParams",471],[5,"RealLightningBuilder",257],[5,"FakeLightningBuilder",257],[6,"LightningNodeType",257],[5,"FederationInfo",480],[5,"Error",448],[5,"PublicKey",481],[5,"GatewayRpcClient",482],[5,"Gateway",483],[6,"GatewayState",483],[5,"Bolt11Invoice",484],[5,"FakeLightningTest",351],[5,"InterceptHtlcResponse",485],[5,"CreateInvoiceRequest",485],[5,"PayInvoiceRequest",485],[5,"TaskGroup",445],[1,"usize"],[5,"ClnRpc",486],[5,"Client",487],[5,"ClnLightningTest",380],[5,"LndLightningTest",380]],"b":[[283,"impl-Debug-for-LightningNodeType"],[284,"impl-Display-for-LightningNodeType"]]}],\
["fedimint_unknown_common",{"doc":"","t":"SSFFFGFFGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CONSENSUS_VERSION","KIND","UnknownCommonInit","UnknownConsensusItem","UnknownInput","UnknownInputError","UnknownModuleTypes","UnknownOutput","UnknownOutputError","UnknownOutputOutcome","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","UnknownClientConfig","UnknownConfig","UnknownConfigConsensus","UnknownConfigLocal","UnknownConfigPrivate","UnknownGenParams","UnknownGenParamsConsensus","UnknownGenParamsLocal","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_unknown_common"],[239,"fedimint_unknown_common::config"],[432,"core::any"],[433,"fedimint_core::core"],[434,"fedimint_core::core"],[435,"fedimint_core::encoding"],[436,"core::result"],[437,"std::io"],[438,"std::io::error"],[439,"std::io"],[440,"erased_serde::ser"],[441,"erased_serde::ser"],[442,"core::fmt"],[443,"core::fmt"],[444,"core::hash"],[445,"fedimint_core::core"],[446,"serde::ser"],[447,"alloc::vec"],[448,"alloc::string"],[449,"core::any"],[450,"core::option"],[451,"fedimint_core::module::version"]],"d":["Modules are non-compatible with older versions","Unique name for this module","","Non-transaction items that will be submitted to consensus","Input for a fedimint transaction","Errors that might be returned by the server","Contains the types defined above","Output for a fedimint transaction","Errors that might be returned by the server","Information needed by a client to update output funds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all the configuration for the client","Contains all the configuration for the server","Will be the same for every federation member","Locally unencrypted config unique to each member","Will be encrypted and not shared such as private key …","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,4,6,8,10,11,13,59,4,6,8,10,11,13,32,59,4,6,8,10,11,13,32,4,4,6,6,8,8,10,10,11,11,13,13,4,6,8,10,11,13,0,4,6,8,10,11,13,4,6,8,10,11,13,4,6,8,10,11,13,32,4,6,8,10,4,6,8,10,4,6,8,10,11,13,4,6,8,10,11,13,4,4,4,4,6,6,6,6,8,8,8,8,10,10,10,10,11,11,11,11,13,13,13,13,4,6,8,10,11,13,4,6,8,10,4,4,6,6,8,8,10,10,11,11,13,13,32,59,4,6,8,10,11,13,32,4,6,8,10,11,13,4,6,8,10,11,13,4,6,8,10,11,13,59,4,6,8,10,11,13,32,4,6,8,10,11,13,59,4,6,8,10,11,13,32,4,6,8,10,4,6,8,10,11,13,4,6,8,10,11,13,4,6,8,10,11,13,59,4,6,8,10,11,13,32,59,4,6,8,10,11,13,32,59,4,6,8,10,11,13,32,59,4,6,8,10,11,13,32,0,0,0,0,0,0,0,0,50,45,46,47,48,50,51,52,53,45,46,47,48,50,51,52,53,45,46,47,48,50,50,51,52,53,45,46,47,48,50,51,52,53,45,48,50,51,52,50,51,52,50,51,52,45,45,46,47,48,50,51,52,53,45,46,47,48,50,51,52,53,50,50,50,50,50,50,50,45,46,47,48,50,51,52,53,45,46,47,48,50,50,51,52,53,45,46,47,48,50,51,52,53,50,51,52,45,48,45,46,47,48,50,51,52,53,50,45,46,47,48,50,51,52,53,50,45,46,47,48,50,51,52,53,52,45,48,48,45,46,47,48,50,51,52,53,50,51,52,50,45,46,47,48,50,51,52,53,45,48,50,45,46,47,48,50,51,52,53,45,46,47,48,50,51,52,53,45,46,47,48,50,51,52,53,52,45,46,47,48,50,51,52,53],"f":"``````````{cb{}}00000{ce{}{}}000000000000000{{cd}f{}}{hh}{{cd}j{}}{ll}{{cd}n{}}{A`A`}{{cd}Ab{}}{AdAd}{AfAf}{{cd}Ah{}}{AjAj}{{cd}Al{}}{{ce}An{}{}}00000`{{cB`}{{Bd{hBb}}}Bf}{{cB`}{{Bd{lBb}}}Bf}{{cB`}{{Bd{A`Bb}}}Bf}{{cB`}{{Bd{AdBb}}}Bf}{{cB`}{{Bd{AfBb}}}Bf}{{cB`}{{Bd{AjBb}}}Bf}{{hc}{{Bd{BhBj}}}Bl}{{lc}{{Bd{BhBj}}}Bl}{{A`c}{{Bd{BhBj}}}Bl}{{Adc}{{Bd{BhBj}}}Bl}{{Afc}{{Bd{BhBj}}}Bl}{{Ajc}{{Bd{BhBj}}}Bl}{{cBl}{{Bd{BhBj}}}{}}00000{{}Bn}{c{{Bd{h}}}C`}{c{{Bd{l}}}C`}{c{{Bd{A`}}}C`}{c{{Bd{Ad}}}C`}{{cCb}{{Bd{AnCd}}}{}}000{cCf{}}00000{{hh}Ch}{{ll}Ch}{{A`A`}Ch}{{AdAd}Ch}{{AfAf}Ch}{{AjAj}Ch}{{ce}Ch{}{}}00000000000000000000000{{cf}Ch{}}{{cj}Ch{}}{{cn}Ch{}}{{cAb}Ch{}}{{cAh}Ch{}}{{cAl}Ch{}}{{cCb}{{Bd{AnCj}}}{}}000{{hCl}Cn}0{{lCl}Cn}0{{A`Cl}Cn}0{{AdCl}Cn}0{{AfCl}Cn}0{{AjCl}Cn}0{{D`Cl}Cn}{cc{}}0000000{{{Dd{Db}}{Dh{BnDf}}}{{Bd{cDj}}}{}}00000111111{{hc}AnDl}{{lc}AnDl}{{A`c}AnDl}{{Adc}AnDl}{{Afc}AnDl}{{Ajc}AnDl}{ce{}{}}0000000{{hDn}c{}}{{lDn}c{}}{{A`Dn}c{}}{{AdDn}c{}}{{AfDn}c{}}{{AjDn}c{}}{c{{E`{e}}}{}{}}0000000{{hc}BdEb}{{lc}BdEb}{{A`c}BdEb}{{Adc}BdEb}{c{{Ed{Db}}}{}}00000<<<<<<{cEf{}}00000{c{{Bd{e}}}{}{}}000000000000000{cEh{}}0000000????????````````{cb{}}{ce{}{}}000000000000000{EjEj}{ElEl}{EnEn}{F`F`}{{cd}Fb{}}{FdFd}{FfFf}{FhFh}{FjFj}{{ce}An{}{}}0000000``{{cB`}{{Bd{FdBb}}}Bf}{{cB`}{{Bd{FfBb}}}Bf}{{cB`}{{Bd{FhBb}}}Bf}{{Fdc}{{Bd{BhBj}}}Bl}{{Ffc}{{Bd{BhBj}}}Bl}{{Fhc}{{Bd{BhBj}}}Bl}{{cBl}{{Bd{BhBj}}}{}}00{{}Ej}{c{{Bd{Ej}}}C`}{c{{Bd{El}}}C`}{c{{Bd{En}}}C`}{c{{Bd{F`}}}C`}{c{{Bd{Fd}}}C`}{c{{Bd{Ff}}}C`}{c{{Bd{Fh}}}C`}{c{{Bd{Fj}}}C`}{{cCb}{{Bd{AnCd}}}{}}0000000{cCf{}}{{FdFd}Ch}{{ce}Ch{}{}}000{{cFb}Ch{}}{{cCb}{{Bd{AnCj}}}{}}0000000{{EjCl}Cn}{{ElCl}Cn}{{EnCl}Cn}{{F`Cl}Cn}{{FdCl}Cn}0{{FfCl}Cn}{{FhCl}Cn}{{FjCl}Cn}{cc{}}0000000{{{Dd{Db}}{Dh{BnDf}}}{{Bd{cDj}}}{}}00{{ce}Ej{}{}}{{ceg}F`{}{}{}}33333333{{Fdc}AnDl}{ce{}{}}0000000{{FdDn}c{}}{c{{E`{e}}}{}{}}0000000{FhFl}```{{Ejc}BdEb}{{Elc}BdEb}{{Enc}BdEb}{{F`c}BdEb}{{Fdc}BdEb}{{Ffc}BdEb}{{Fhc}BdEb}{{Fjc}BdEb}{c{{Ed{Db}}}{}}00{c{{G`{Fn}}}{}}========{Ej{{Gb{ce}}}{}{}}{F`{{Gb{Flceg}}}{}{}{}}{cEf{}}{c{{Bd{e}}}{}{}}000000000000000{cEh{}}0000000{FhGd}{ce{}{}}0000000","c":[],"p":[[10,"Any",432],[1,"u16"],[5,"DynModuleConsensusItem",433],[5,"UnknownConsensusItem",0],[5,"DynInput",433],[5,"UnknownInput",0],[5,"DynOutput",433],[5,"UnknownOutput",0],[5,"DynOutputOutcome",433],[6,"UnknownOutputOutcome",0],[6,"UnknownInputError",0],[5,"DynInputError",433],[6,"UnknownOutputError",0],[5,"DynOutputError",433],[1,"unit"],[8,"ModuleDecoderRegistry",434],[5,"DecodeError",435],[6,"Result",436],[10,"Read",437],[1,"usize"],[5,"Error",438],[10,"Write",437],[5,"Decoder",433],[10,"Deserializer",439],[10,"Serializer",440],[6,"ErrorImpl",440],[1,"u64"],[1,"bool"],[5,"Error",441],[5,"Formatter",442],[8,"Result",442],[5,"UnknownCommonInit",0],[1,"u8"],[1,"slice"],[6,"DecodingMode",434],[5,"ModuleRegistry",434],[6,"DecodingError",443],[10,"Hasher",444],[8,"ModuleInstanceId",433],[5,"Request",445],[10,"Serializer",446],[5,"Vec",447],[5,"String",448],[5,"TypeId",432],[5,"UnknownGenParams",239],[5,"UnknownGenParamsLocal",239],[5,"UnknownGenParamsConsensus",239],[5,"UnknownConfig",239],[5,"DynClientConfig",433],[5,"UnknownClientConfig",239],[5,"UnknownConfigLocal",239],[5,"UnknownConfigConsensus",239],[5,"UnknownConfigPrivate",239],[5,"ModuleKind",433],[6,"Value",449],[6,"Option",450],[1,"tuple"],[5,"ModuleConsensusVersion",451],[5,"UnknownModuleTypes",0]],"b":[[124,"impl-Debug-for-UnknownConsensusItem"],[125,"impl-Display-for-UnknownConsensusItem"],[126,"impl-Display-for-UnknownInput"],[127,"impl-Debug-for-UnknownInput"],[128,"impl-Display-for-UnknownOutput"],[129,"impl-Debug-for-UnknownOutput"],[130,"impl-Display-for-UnknownOutputOutcome"],[131,"impl-Debug-for-UnknownOutputOutcome"],[132,"impl-Display-for-UnknownInputError"],[133,"impl-Debug-for-UnknownInputError"],[134,"impl-Debug-for-UnknownOutputError"],[135,"impl-Display-for-UnknownOutputError"],[328,"impl-Debug-for-UnknownClientConfig"],[329,"impl-Display-for-UnknownClientConfig"]]}],\
["fedimint_unknown_server",{"doc":"","t":"FFNNNNNNNNNNONNENNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFONNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNN","n":["Unknown","UnknownInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","borrow","borrow","borrow_mut","borrow_mut","cfg","clone","clone_into","common","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","from","from","from_ref","get_client_config","get_client_config","get_database_migrations","get_database_migrations","init","init","into","into","into_request","into_request","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_into","try_into","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","from","from","from_ref","from_ref","get","idx","into","into","into_iter","into_request","into_request","iter","len","marker","next","next_back","nth","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_unknown_server"],[69,"fedimint_unknown_server::db"],[112,"fedimint_core::core::server"],[113,"fedimint_core::module"],[114,"alloc::vec"],[115,"core::any"],[116,"fedimint_core::module"],[117,"fedimint_core::module::audit"],[118,"core::future::future"],[119,"alloc::boxed"],[120,"core::pin"],[121,"fedimint_core::core"],[122,"fedimint_core::db"],[123,"alloc::string"],[124,"core::iter::traits::iterator"],[125,"core::fmt"],[126,"core::fmt"],[127,"core::result"],[128,"fedimint_unknown_common::config"],[129,"anyhow"],[130,"fedimint_core::db"],[131,"fedimint_core::config"],[132,"fedimint_core"],[133,"fedimint_core::core"],[134,"fedimint_core::core"],[135,"fedimint_core::module"]],"d":["Unknown module","Generates the module","","","","","Queries the database and returns all assets and …","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","Generates configs for all peers in an untrusted manner","Dumps all database items for debugging","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Converts the consensus config into the client config","","DB migrations to move from old to newer versions","","Initialize the module","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create new module instance","Retrieve the current status of the output. Depending on …","","","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","Generates configs for all peers in a trusted manner for …","","","","","","","","","","Returns the version of this module","","","Namespaces DB keys for this module","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,14,4,4,14,4,14,4,4,14,14,0,4,4,14,0,14,4,14,14,14,14,14,4,14,4,14,14,14,14,14,14,14,14,4,14,4,14,4,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,4,14,4,14,4,14,14,14,14,14,4,0,0,57,56,57,56,57,56,57,56,57,56,56,57,56,57,56,57,57,57,56,57,57,56,57,56,57,57,57,57,57,57,56,57,56,56,57,56,57,56,57,56,57],"f":"``{c{{f{{d{b}}}}}{}}{h{{f{{d{h}}}}}}{cj{}}{cl{}}{{cnA`Ab}{{Ah{{Af{Ad}}}}}{}}{{hnA`Aj}{{Ah{{Af{Ad}}}}}}{ce{}{}}000`{AlAl}{{ce}An{}{}}`{{cnAb}{{Ah{{Af{Ad}}}}}{}}{{hn}{{Ah{{Af{Ad}}}}}}{cB`{}}`{cBb{}}0{{cBdBf}{{Ah{{Af{Ad}}}}}{}}{{AlBdBf}{{Ah{{Af{Ad}}}}}}{{Aln{f{Bh}}}{{Af{Bj}}}}{{cn{f{Bh}}}{{Ah{{Af{Ad}}}}}{}}{{AlBl}Bn}{{hBl}Bn}{cc{}}00{{cAbC`}{{Cf{CbCd}}}{}}{{AlC`}{{Cj{Ch}}}}{c{{D`{B`{Cn{n}{{Cl{{Ah{{Af{Ad}}}}}}}}}}}{}}{Al{{D`{B`Db}}}}{{cDdDfDhDjDl}{{Ah{{Af{Ad}}}}}{}}{{Al{Dn{Al}}}{{Ah{{Af{Ad}}}}}}{ce{}{}}0{c{{E`{e}}}{}{}}0{cEb{}}{Edh}{{cnEfAb}{{Ah{{Af{Ad}}}}}{}}{{hnEf}{{Ah{{Af{Ad}}}}}}{{hnEhDl}{{Ah{{Af{Ad}}}}}}{{cnEjDl}{{Ah{{Af{Ad}}}}}{}}{{hnEl}{{Ah{{Af{Ad}}}}}}{{cnEnAb}{{Ah{{Af{Ad}}}}}{}}{{cnF`EfAb}{{Ah{{Af{Ad}}}}}{}}{{hnFbEf}{{Ah{{Af{Ad}}}}}}{cFd{}}{AlFd}{cFf{}}>{{c{Fh{Dl}}Bf}{{D`{DlDf}}}{}}{{Al{Fh{Dl}}Bf}{{D`{DlDf}}}}{c{{Cf{e}}}{}{}}000{cFj{}}0{{AlDlDf}{{Cj{An}}}}{{cDlDf}{{Cf{AnCd}}}{}}{{cBf}{{Cf{AnCd}}}{}}{{AlFl}{{Fh{Fn}}}}{ce{}{}}0```0000{G`G`}{GbGb}{{ce}An{}{}}0{{G`Bl}Bn}0{{GbBl}Bn}{cc{}}000{{GbGd}{{Gf{G`}}}}`777{c{{E`{e}}}{}{}}0{{}Gb}{GbGd}`{Gb{{Gf{c}}}{}}0{{GbGd}{{Gf{c}}}{}}{Gb{{Gh{Gd{Gf{Gd}}}}}}=={cBh{}}{c{{Cf{e}}}{}{}}000{cFj{}}0{ce{}{}}0","c":[],"p":[[5,"DynServerModule",112],[5,"ApiEndpoint",113],[5,"Vec",114],[5,"Unknown",0],[10,"Any",115],[10,"IDynCommonModuleInit",113],[5,"DatabaseTransaction",116],[5,"Audit",117],[1,"u16"],[10,"Future",118],[5,"Box",119],[5,"Pin",120],[8,"ModuleInstanceId",121],[5,"UnknownInit",0],[1,"unit"],[5,"DatabaseVersion",116],[5,"Decoder",121],[5,"PeerHandle",113],[5,"ConfigGenModuleParams",122],[5,"String",123],[10,"Iterator",124],[5,"Formatter",125],[8,"Result",125],[5,"ServerModuleConsensusConfig",122],[5,"ClientModuleConfig",122],[5,"Error",126],[6,"Result",127],[5,"UnknownClientConfig",128],[8,"Result",126],[17,"Output"],[1,"fn"],[5,"BTreeMap",129],[8,"ServerMigrationFn",116],[5,"NumPeers",130],[5,"ServerModuleConfig",122],[5,"Database",116],[5,"TaskGroup",131],[5,"PeerId",130],[5,"ServerModuleInitArgs",113],[5,"Request",132],[5,"ModuleKind",121],[5,"UnknownConfig",128],[5,"OutPoint",130],[5,"UnknownConsensusItem",133],[5,"DynModuleConsensusItem",121],[5,"UnknownInput",133],[5,"DynInput",121],[5,"DynOutput",121],[5,"UnknownOutput",133],[5,"SupportedModuleApiVersions",134],[5,"DynCommonModuleInit",113],[1,"slice"],[5,"TypeId",115],[5,"CoreConsensusVersion",134],[5,"ModuleConsensusVersion",134],[6,"DbKeyPrefix",69],[5,"DbKeyPrefixIter",69],[1,"usize"],[6,"Option",135],[1,"tuple"]],"b":[[80,"impl-Display-for-DbKeyPrefix"],[81,"impl-Debug-for-DbKeyPrefix"]]}],\
["fedimint_wallet_client",{"doc":"","t":"PPFPSPPPPPPPPPGPPPPPPSPPPIPIPFPPFPFPPGFPPPPPPFPPPPPPPFFFPPPSPPFFFGFGGGGFFFGGGGFGPPGPPPPPNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNONNONNNNNNHHONNONNHNONOOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNOOOOOOOOOOOOOOOOKMMGFPFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFNOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPFFGSPFPFNHHHNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNOHHHNNNNNNNNNNNNNNOONNNNNNNNNNNNSFNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNKKMMPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNONONNNNNNNNNNPFPFSPFFGNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNHNNNNNNNNNNNNONNNNNNNNNN","n":["Bare","BelowMinRelayFee","BitcoinTransactionData","BlockCount","CONFIRMATION_TARGET","Claimed","Confirmed","Created","Default","Default","Default","Default","Deposit","Deposit","DepositState","DuplicateSignature","ErrorFinalizingPsbt","Failed","Failed","Feerate","InvalidSignature","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOut","PegOutFeeBelowConsensus","PegOutFees","PegOutSignature","PegOutSignatureItem","PegOutUnderDustLimit","Pkh","ProcessPegOutSigError","Rbf","Rbf","RbfTransactionIdNotFound","RbfWithdraw","RpcError","Sh","SighashError","SpendableUTXO","Succeeded","Tr","TxWeightIncorrect","UnknownInputVariant","UnknownOutputVariant","UnknownPegInProofBlock","UnknownTransaction","UnknownWalletInputVariantError","UnknownWalletOutputOutcomeVariantError","UnknownWalletOutputVariantError","V0","V0","V0","WALLET_TWEAK_CHILD_ID","WaitingForConfirmation","WaitingForTransaction","WalletClientContext","WalletClientInit","WalletClientModule","WalletClientStates","WalletCommonInit","WalletConsensusItem","WalletCreationError","WalletInput","WalletInputError","WalletInputV0","WalletModuleTypes","WalletOperationMeta","WalletOperationMetaVariant","WalletOutput","WalletOutputError","WalletOutputOutcome","WalletOutputOutcomeV0","WalletOutputV0","Withdraw","Withdraw","WithdrawState","Wpkh","WrongNetwork","WrongNetwork","WrongSignatureCount","Wsh","amount","amount","amount","amount","api","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_transaction","buf","cfg","check_address","client_ctx","client_db","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_rbf_withdraw_output","create_sufficient_input","create_withdraw_output","database_version","decoder","decoder","decoder","decoder","default","deposit","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","envs","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_meta","fee_rate","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_balance","get_database_migrations","get_deposit_address","get_deposit_address_inner","get_network","get_next_peg_in_tweak_child_id","get_rpc_config","get_withdraw_fees","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","len","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","module_api","module_kind","module_kind","module_root_secret","new","new","new_v0","new_v0","new_v0_peg_out","new_v0_rbf","next_deposit_state","next_withdraw_state","notifier","operation_id","operation_id","out_idx","output_amount","output_amount","proprietary_tweak_key","rbf_withdraw","recipient","recover","rpc","rpc","secp","secp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","source","source","subscribe_balance_changes","subscribe_deposit_updates","subscribe_withdraw_updates","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweakable","txid","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","variant","variant","variant","variant","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_decoder","wallet_descriptor","withdraw","withdraw","bytes","variant","bytes","variant","address","address","amount","change","change","expires_at","fee","rbf","bytes","variant","bytes","variant","WalletFederationApi","fetch_consensus_block_count","fetch_peg_out_fees","DbKeyPrefix","DbKeyPrefixIter","NextPegInTweakIndex","NextPegInTweakIndexKey","back_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","do_erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","idx","into","into","into","into_iter","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","WalletGenParams","WalletGenParamsConsensus","WalletGenParamsLocal","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_default_bitcoin_rpc","client_default_bitcoin_rpc","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_bitcoin_rpc","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","finality_delay","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","network","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Claiming","ClaimingDepositState","Created","CreatedDepositState","DepositStateMachine","DepositStates","TRANSACTION_STATUS_FETCH_INTERVAL","TimedOut","TimedOutDepositState","WaitingForConfirmations","WaitingForConfirmationsDepositState","as_any","await_btc_transaction_confirmed","await_created_btc_transaction_submitted","await_deposit_address_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_transaction","change","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","out_idx","state","timeout_at","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_id","transition_btc_tx_confirmed","transition_deposit_timeout","transition_tx_seen","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tweak_key","tweak_key","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","FM_PORT_ESPLORA_ENV","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","deserialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_bytes","from_ref","from_str","hash","into","into_request","is_uncompressed","key","new","num_der_paths","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","identity","into","into","into_request","into_request","new","outpoint","output_idx","proof_block","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","validate","validate_ip","validate_ipv4","validate_ipv6","validate_with_args","verify","vzip","vzip","Aborted","AbortedWithdrawState","Created","CreatedWithdrawState","RETRY_DELAY","Success","SuccessWithdrawState","WithdrawStateMachine","WithdrawStates","as_any","await_withdraw_processed","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","error","fm_outpoint","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_withdraw_processed","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_wallet_client"],[1014,"fedimint_wallet_client::WalletConsensusItem"],[1016,"fedimint_wallet_client::WalletInput"],[1018,"fedimint_wallet_client::WalletOperationMetaVariant"],[1026,"fedimint_wallet_client::WalletOutput"],[1028,"fedimint_wallet_client::WalletOutputOutcome"],[1030,"fedimint_wallet_client::api"],[1033,"fedimint_wallet_client::client_db"],[1105,"fedimint_wallet_client::config"],[1354,"fedimint_wallet_client::deposit"],[1538,"fedimint_wallet_client::envs"],[1539,"fedimint_wallet_client::keys"],[1588,"fedimint_wallet_client::tweakable"],[1592,"fedimint_wallet_client::txoproof"],[1670,"fedimint_wallet_client::withdraw"],[1819,"bitcoin::util::amount"],[1820,"core::any"],[1821,"fedimint_core::module"],[1822,"fedimint_core::core"],[1823,"fedimint_core"],[1824,"core::future::future"],[1825,"alloc::boxed"],[1826,"core::pin"],[1827,"bitcoin::util::address"],[1828,"bitcoin::network::constants"],[1829,"anyhow"],[1830,"fedimint_core::core"],[1831,"fedimint_core::core"],[1832,"fedimint_core::module::registry"],[1833,"core::result"],[1834,"std::io"],[1835,"fedimint_core::module::registry"],[1836,"std::io"],[1837,"fedimint_core"],[1838,"fedimint_core::db"],[1839,"erased_serde::ser"],[1840,"erased_serde::ser"],[1841,"alloc::vec"],[1842,"core::iter::traits::iterator"],[1843,"core::hash"],[1844,"erased_serde::error"],[1845,"core::fmt"],[1846,"core::fmt"],[1847,"std::time"],[1848,"serde::ser"],[1849,"fedimint_core::task"],[1850,"fedimint_core::task"],[1851,"fedimint_core::envs"],[1852,"std::ffi::os_str"],[1853,"fedimint_client::module"],[1854,"fedimint_core::config"],[1855,"fedimint_core::config"],[1856,"fedimint_derive_secret"],[1857,"fedimint_core::api"],[1858,"fedimint_core::module"],[1859,"fedimint_core::task"],[1860,"fedimint_core::module"],[1861,"fedimint_core::core"],[1862,"futures_core::stream"],[1863,"core::marker"],[1864,"bitcoin::util::psbt::raw"],[1865,"fedimint_core"],[1866,"fedimint_client::module::recovery"],[1867,"serde::ser"],[1868,"fedimint_client::oplog"],[1869,"fedimint_core::module::version"],[1870,"fedimint_client::sm::state"],[1871,"miniscript::descriptor"],[1872,"serde_json::value"],[1873,"fedimint_core::module::version"],[1874,"secp256k1::key"],[1875,"fedimint_client::sm::dbtx"],[1876,"core::cmp"],[1877,"secp256k1::key"],[1878,"miniscript::miniscript::hash256"],[1879,"bitcoin::crypto::key"],[1880,"bitcoin_hashes::ripemd160"],[1881,"bitcoin_hashes::sha256"],[1882,"secp256k1"],[1883,"secp256k1::context"],[1884,"secp256k1::context"]],"d":["A raw scriptpubkey (including pay-to-pubkey) under Legacy …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pay-to-PubKey-Hash","","Allows a user to bump the fees of a <code>PendingTransaction</code>","","","","","Pay-to-ScriptHash(includes nested wsh/wpkh/sorted multi)","","","","Pay-to-Taproot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","Pay-to-Witness-PubKey-Hash","","","","Pay-to-Witness-ScriptHash with Segwitv0 context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitcoin transaction is saved as soon as we see it so …ees expressed as an increase over existing peg-out fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the child index to derive the next peg-in tweak …","","Fetches the fees that would need to be paid to make the …","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the deposit output","","","","Attempt to increase the fee of a onchain withdraw …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bitcoin tx id to bump the fees for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to withdraw a given <code>amount</code> of Bitcoin to a …","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","See <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.","Points to a Bitcoin API that the client can use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Points to a Bitcoin API that the client can use to …","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The state machine driving forward a deposit (aka peg-in).","","","","","","","","","","","","","","","","","","","","","","","The bitcoin transaction is saved as soon as we see it so …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Index of the deposit output","","","","","","","","","","","","","","","Fedimint transaction id in which the deposit is being …","","","","","","","","","","","","","","","","","","","Key pair of which the public was used to tweak the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","An object that can be used as a Ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifiable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graph LR Created –&gt; Success Created –&gt; Aborted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[180,45,0,22,0,17,17,18,22,30,34,39,25,28,0,77,77,17,18,22,77,0,77,77,45,0,44,0,44,0,3,45,0,22,0,45,180,0,0,3,45,25,42,180,77,0,18,180,45,44,45,44,77,0,0,0,30,34,39,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,28,0,180,42,45,77,180,1,3,24,29,0,22,58,28,30,34,39,44,45,19,58,58,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,16,182,58,0,58,0,16,17,18,19,20,22,22,23,24,25,26,28,28,1,29,30,30,32,33,34,34,36,37,39,39,40,3,41,42,44,44,45,45,16,17,18,19,20,22,23,24,25,26,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,0,22,23,24,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,22,23,24,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,22,23,24,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,58,58,58,58,58,58,19,19,19,58,76,19,0,37,37,16,17,18,20,22,23,24,25,1,29,30,32,33,34,36,37,39,40,3,41,16,17,18,20,22,23,24,25,1,29,30,32,33,34,36,37,39,40,3,41,19,19,22,30,34,39,44,45,30,34,39,0,16,17,18,22,23,24,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,16,16,16,16,17,17,17,17,18,18,18,18,22,22,22,22,23,23,23,23,24,24,24,24,28,28,28,28,1,1,1,1,29,29,29,29,30,30,30,30,32,32,32,32,33,33,33,33,34,34,34,34,36,36,36,36,37,37,37,37,39,39,39,39,40,40,40,40,3,3,3,3,41,41,41,41,42,42,42,42,44,44,44,44,45,45,45,45,22,28,30,34,39,44,45,28,16,17,18,20,22,23,24,25,1,29,30,32,33,34,36,37,39,40,3,41,20,1,29,41,16,17,18,19,20,22,22,23,24,25,58,26,28,1,29,30,30,32,32,33,33,76,34,34,36,36,37,37,39,39,40,40,3,3,41,42,42,44,44,45,45,77,77,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,44,44,45,45,77,22,23,24,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,16,17,18,19,20,22,23,24,25,26,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,58,19,58,58,58,0,58,58,58,22,23,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,19,19,58,58,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,22,28,30,34,39,44,45,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,0,182,30,34,39,58,19,19,58,19,1,30,34,39,39,0,0,58,28,28,16,58,58,0,58,29,19,58,26,58,26,16,17,18,20,22,23,24,25,1,29,30,32,33,34,36,37,39,40,3,41,23,44,45,58,58,58,19,19,58,58,22,23,24,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,19,16,17,18,19,20,22,23,24,25,26,28,1,29,30,32,33,34,36,37,39,40,3,41,42,44,45,22,30,32,33,34,36,37,39,40,3,42,44,45,77,1,28,28,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,24,0,23,41,0,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,22,30,32,33,34,36,37,39,40,3,42,44,45,77,22,30,32,33,34,36,37,39,40,3,42,44,45,77,22,30,32,33,34,36,37,39,40,3,42,44,45,77,20,32,36,40,181,16,17,18,19,20,22,23,24,25,58,26,28,1,29,30,32,33,76,34,36,37,39,40,3,41,42,44,45,77,26,26,0,58,183,183,184,184,185,186,186,186,187,185,186,187,188,188,189,189,0,130,130,0,0,131,0,132,131,132,133,131,132,133,131,132,133,131,132,133,133,133,133,133,133,131,131,132,133,131,132,133,133,133,131,132,133,132,132,131,132,133,132,131,132,133,131,132,132,132,132,132,133,132,133,133,131,132,133,131,131,132,133,131,132,133,131,132,133,131,131,131,131,132,133,0,0,0,0,0,0,0,0,0,91,135,138,134,135,136,137,138,139,140,91,142,134,135,136,137,138,139,140,91,142,136,140,134,135,136,137,138,139,140,91,91,142,134,135,136,137,138,139,140,91,142,134,137,138,140,91,142,138,140,91,142,138,140,91,142,142,91,140,134,135,136,137,138,139,140,91,142,134,135,136,137,138,139,140,91,142,91,91,142,91,91,91,91,142,142,142,142,91,134,135,136,137,138,139,140,91,142,140,91,136,140,91,134,135,136,137,138,139,140,91,91,142,134,135,136,137,138,139,140,91,142,138,140,91,142,134,137,134,135,136,137,138,139,140,91,142,91,142,134,135,136,137,138,139,140,91,142,91,134,135,136,137,138,139,140,91,142,140,134,137,136,140,91,137,91,140,142,140,91,139,142,137,134,134,135,136,137,138,139,140,91,142,138,140,91,142,91,134,135,136,137,138,139,140,91,142,134,137,91,134,135,136,137,138,139,140,91,142,134,135,136,137,138,139,140,91,142,134,135,136,137,138,139,140,91,142,91,91,91,140,134,135,136,137,138,139,140,91,142,112,0,112,0,0,0,0,112,0,112,0,154,0,0,0,154,112,155,150,156,157,154,112,155,150,156,157,150,156,154,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,154,154,154,112,112,112,112,155,155,155,155,150,150,150,150,156,156,156,156,157,157,157,157,154,154,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,112,155,150,156,157,154,154,154,150,154,155,154,112,155,150,156,157,154,112,155,150,156,157,156,0,0,0,154,154,154,112,155,150,156,157,154,112,155,150,156,157,155,150,154,112,155,150,156,157,154,112,155,150,156,157,0,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,168,171,78,0,0,78,78,78,111,78,111,78,111,78,111,78,111,78,111,78,111,78,111,111,111,78,111,111,111,111,78,78,78,78,111,111,78,78,111,78,111,78,111,78,111,78,111,111,78,111,78,111,111,111,111,111,111,78,111,78,78,111,111,78,111,78,111,111,111,111,111,78,111,78,78,78,111,111,111,78,116,0,116,0,0,116,0,0,0,177,0,177,116,176,178,179,177,116,176,178,179,177,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,177,177,177,116,116,116,116,176,176,176,176,178,178,178,178,179,179,179,179,177,177,179,176,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,116,176,178,179,177,177,177,177,177,116,176,178,179,177,116,176,178,179,0,177,177,177,116,176,178,179,177,116,176,178,179,178,177,116,176,178,179,177,116,176,178,179],"f":"````````````````````````````````````````````````````````````````````````````````````````{bd}{fd}```{ch{}}0000000{cj{}}{{cln}{{Ad{{Ab{A`}}}}}{}}{{cAf}{{Ad{{Ab{A`}}}}}{}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000```{{AhAj}{{An{Al}}}}``{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{{cAf}Bj{}}{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{{cAf}Cf{}}{ChCh}{bb}{CjCj}{ClCl}{{cAf}Cn{}}{D`D`}{DbDb}{DdDd}{{cAf}Df{}}{DhDh}{DjDj}{{cAf}Dl{}}{DnDn}{E`E`}{ff}{EbEb}{EdEd}{{cAf}Ef{}}{EhEh}{EjEj}{{cAf}El{}}{{ce}Al{}{}}0000000000000000000000000`{{c{Fb{EnF`}}}{{Ff{BlFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{BnFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{C`Fd}}}Fh}{{cFj}{{Ff{ChFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{bFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{CjFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{ClFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{D`Fd}}}Fh}{{c{Fb{EnF`}}}{{Ff{DbFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{DdFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{DhFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{DjFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{DnFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{E`Fd}}}Fh}{{c{Fb{EnF`}}}{{Ff{fFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{EbFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{EdFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{EhFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{EjFd}}}Fh}{{Blc}{{Ff{FlFn}}}G`}{{Bnc}{{Ff{FlFn}}}G`}{{C`c}{{Ff{FlFn}}}G`}{{Chc}{{Ff{FlFn}}}G`}{{bc}{{Ff{FlFn}}}G`}{{Cjc}{{Ff{FlFn}}}G`}{{Clc}{{Ff{FlFn}}}G`}{{D`c}{{Ff{FlFn}}}G`}{{Dbc}{{Ff{FlFn}}}G`}{{Ddc}{{Ff{FlFn}}}G`}{{Dhc}{{Ff{FlFn}}}G`}{{Djc}{{Ff{FlFn}}}G`}{{Dnc}{{Ff{FlFn}}}G`}{{E`c}{{Ff{FlFn}}}G`}{{fc}{{Ff{FlFn}}}G`}{{Ebc}{{Ff{FlFn}}}G`}{{Edc}{{Ff{FlFn}}}G`}{{Ehc}{{Ff{FlFn}}}G`}{{Ejc}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}000000000000000000{{cAf}Gb{}}{Gdc{}}{{cAfGflGh}{{Ad{{Ab{A`}}}}}{}}{{GdlEb}{{An{{Gj{DnCh}}}}}}1{{GdlAhdb}{{An{{Gj{DnCh}}}}}}{cGl{}}{cEn{}}00{{}En}{{}Bf}`{Dj}0{c{{Ff{B`}}}Gn}{c{{Ff{Bb}}}Gn}{c{{Ff{Bd}}}Gn}{c{{Ff{Bh}}}Gn}{c{{Ff{Bl}}}Gn}{c{{Ff{Bn}}}Gn}{c{{Ff{C`}}}Gn}{c{{Ff{Cb}}}Gn}{c{{Ff{b}}}Gn}{c{{Ff{Cj}}}Gn}{c{{Ff{Cl}}}Gn}{c{{Ff{D`}}}Gn}{c{{Ff{Db}}}Gn}{c{{Ff{Dd}}}Gn}{c{{Ff{Dh}}}Gn}{c{{Ff{Dj}}}Gn}{c{{Ff{Dn}}}Gn}{c{{Ff{E`}}}Gn}{c{{Ff{f}}}Gn}{c{{Ff{Eb}}}Gn}{{cH`}{{Ff{AlHb}}}{}}0000000000000000000{{BfGf{Hf{Hd}}}{{Ab{Hh}}}}{{cGf{Hf{Hd}}}{{Ad{{Ab{A`}}}}}{}}{cHj{}}00000{Cl{{Ff{DbD`}}}}{Dd{{Ff{DjDh}}}}{Dn{{Ff{fE`}}}}`{{B`B`}Hl}{{BbBb}Hl}{{BdBd}Hl}{{BlBl}Hl}{{BnBn}Hl}{{C`C`}Hl}{{ChCh}Hl}{{bb}Hl}{{CjCj}Hl}{{ClCl}Hl}{{D`D`}Hl}{{DbDb}Hl}{{DdDd}Hl}{{DhDh}Hl}{{DjDj}Hl}{{DnDn}Hl}{{E`E`}Hl}{{ff}Hl}{{EbEb}Hl}{{EdEd}Hl}{{EhEh}Hl}{{EjEj}Hl}{{ce}Hl{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{cBj}Hl{}}{{cCf}Hl{}}{{cCn}Hl{}}{{cDf}Hl{}}{{cDl}Hl{}}{{cEf}Hl{}}{{cEl}Hl{}}{{cHn}Al{}}{{cH`}{{Ff{AlI`}}}{}}0000000000000000000````{{B`Ib}Id}{{BbIb}Id}{{BdIb}Id}{{BfIb}Id}{{BhIb}Id}{{BlIb}{{Ff{AlIf}}}}0{{BnIb}{{Ff{AlIf}}}}{{C`Ib}{{Ff{AlIf}}}}{{CbIb}Id}{{GdIb}Id}{{CdIb}Id}{{ChIb}Id}{{bIb}{{Ff{AlIf}}}}{{CjIb}{{Ff{AlIf}}}}{{ClIb}{{Ff{AlIf}}}}0{{D`Ib}{{Ff{AlIf}}}}0{{DbIb}{{Ff{AlIf}}}}0{{IhIb}{{Ff{AlIf}}}}{{DdIb}{{Ff{AlIf}}}}0{{DhIb}{{Ff{AlIf}}}}0{{DjIb}{{Ff{AlIf}}}}0{{DnIb}{{Ff{AlIf}}}}0{{E`Ib}{{Ff{AlIf}}}}0{{fIb}{{Ff{AlIf}}}}0{{EbIb}{{Ff{AlIf}}}}{{EdIb}{{Ff{AlIf}}}}0{{EhIb}{{Ff{AlIf}}}}0{{EjIb}{{Ff{AlIf}}}}0{{IjIb}{{Ff{AlIf}}}}0{cc{}}00000000000000000000000000{IlEh}{DhEh}2{E`Ej}33{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}00000000000000000044444444444444444444444444{{cAfGf}{{Ad{{Ab{A`}}}}}{}}{c{{Jj{Gl{Jh{GfAf{Hf{{Jd{{Hf{In}}l}}}}{Hf{{Jd{{Hf{In}}l}}}}{Fb{EnF`}}}{{Jf{{Ad{{Ab{A`}}}}}}}}}}}{}}{{GdJlc}{{An{{Jd{lAh}}}}}{JnK`Kb}}{{GdJlGf}{{Jd{lChAh}}}}{GdAj}{GfKd}{KfKh}{{GdAhd}{{An{b}}}}{{c{J`{Kj}}}{{Ad{{Ab{A`}}}}}{}}{{Blc}AlHn}{{Bnc}AlHn}{{Chc}AlHn}{{bc}AlHn}{{Cjc}AlHn}{{Clc}AlHn}{{D`c}AlHn}{{Dbc}AlHn}{{Ddc}AlHn}{{Dhc}AlHn}{{Djc}AlHn}{{Dnc}AlHn}{{E`c}AlHn}{{fc}AlHn}{{Ebc}AlHn}{{Edc}AlHn}{{Ehc}AlHn}{{Ejc}AlHn}{{cKlKnFlL`LbAfLdLdLfLhLj{Ln{Ll}}M`}{{Ad{{Ab{A`}}}}}{}}{{Bf{Mb{Bf}}}{{Ad{{Ab{A`}}}}}}{{cDf}{{Ln{Md}}}{}}{Gd{{Ln{Md}}}}{ce{}{}}00000000000000000000000000000{{BlAf}}{{ChMf}c{}}{{ClAf}}{{DdAf}}{{DnAf}}{{EhAf}}{{EjAf}}{c{{Mh{e}}}{}{}}00000000000000000000000000000``{Cl{{Ln{Db}}}}{Dd{{Ln{Dj}}}}{Dn{{Ln{f}}}}`{cMj{}}0`{KhBf}{{HjHj}b}{MlCl}{MnDd}{{Ahdb}Dn}{{bMl}Dn}{c{{Ln{N`}}}{{Nd{}{{Nb{Ch}}}}Nf}}{c{{Ln{Nh}}}{{Nd{}{{Nb{Ch}}}}Nf}}`{cl{}}{Chl}`{Gd{{Ln{Md}}}}{{cDl}{{Ln{Md}}}{}}{{}Nj}{{GdEbc}{{An{l}}}{JnKbK`}}`{{cKlKnNlL`LbAfLdLdLfLhLj{Ln{Ll}}{Ln{Nn}}{Ob{O`}}}{{Ad{{Ab{A`}}}}}{}}````{{B`c}FfOd}{{Bbc}FfOd}{{Bdc}FfOd}{{Bhc}FfOd}{{Blc}FfOd}{{Bnc}FfOd}{{C`c}FfOd}{{Cbc}FfOd}{{bc}FfOd}{{Cjc}FfOd}{{Clc}FfOd}{{D`c}FfOd}{{Dbc}FfOd}{{Ddc}FfOd}{{Dhc}FfOd}{{Djc}FfOd}{{Dnc}FfOd}{{E`c}FfOd}{{fc}FfOd}{{Ebc}FfOd}`{Eh{{Ln{Of}}}}{Ej{{Ln{Of}}}}{c{{Ad{{Ab{A`}}}}}{}}{{Gdl}{{An{{Oh{Bb}}}}}}{{Gdl}{{An{{Oh{Bd}}}}}}{BfOj}{cOj{}}{cHl{}}0{c{{Hf{In}}}{}}000000000000000000{cOl{}}{ce{}{}}0000000000000000000000000{cHd{}}0000000000000`{{cGbOn}{{Hf{{A`{Cf}}}}}{}}{{ChcOn}{{Hf{{A`{Ch}}}}}{}}{c{{Ff{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000`````{cAb{}}00000000000000000000000000000888888888888888888888888888888888888888888````555555555555555555555555555555```{{GdAhdbc}{{An{l}}}{JnK`Kb}}`````````````````{Ad{{Ad{{Ab{A`}}}}}}{{AdAhd}{{Ad{{Ab{A`}}}}}}`````888888{AfAf}{AhAh}{AjAj}{{ce}Al{}{}}00{{cFj}{{Ff{AjFd}}}Fh}{{Ajc}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}{{cH`}{{Ff{AlHb}}}{}}{{cH`}{{Ff{AlI`}}}{}}{{AfIb}Id}0{{AhIb}Id}{{AjIb}Id}{cc{}}00{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}0111{{AhFl}{{Ln{Af}}}}`{ce{}{}}000{c{{Mh{e}}}{}{}}00{{}Ah}{AhFl}`{Ah{{Ln{c}}}{}}0{{AhFl}{{Ln{c}}}{}}{{Ajc}FfOd}{Ah{{Jd{Fl{Ln{Fl}}}}}}{c{{Hf{In}}}{}}0888{cHd{}}{c{{Ff{e}}}{}{}}00000{cAb{}}00{cHl{}}00<<<`````````{ch{}}``==================``{AlAl}{AnAn}{AA`AA`}{AAbAAb}{AAdAAd}{AAfAAf}{AAhAAh}{KfKf}{{cAf}AAj{}}{AAlAAl}{{ce}Al{}{}}00000000``{{c{Fb{EnF`}}}{{Ff{AAdFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{AAhFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{KfFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{AAlFd}}}Fh}{{AAdc}{{Ff{FlFn}}}G`}{{AAhc}{{Ff{FlFn}}}G`}{{Kfc}{{Ff{FlFn}}}G`}{{AAlc}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}000{{}AAl}``{c{{Ff{Al}}}Gn}{c{{Ff{An}}}Gn}{c{{Ff{AA`}}}Gn}{c{{Ff{AAb}}}Gn}{c{{Ff{AAd}}}Gn}{c{{Ff{AAf}}}Gn}{c{{Ff{AAh}}}Gn}{c{{Ff{Kf}}}Gn}{c{{Ff{AAl}}}Gn}{{cH`}{{Ff{AlHb}}}{}}00000000{cHj{}}{{KfKf}Hl}{{AAlAAl}Hl}{{ce}Hl{}{}}0000000{{cAAj}Hl{}}{{cH`}{{Ff{AlI`}}}{}}00000000`````{{AlIb}{{Ff{AlIf}}}}{{AnIb}{{Ff{AlIf}}}}{{AA`Ib}{{Ff{AlIf}}}}{{AAbIb}{{Ff{AlIf}}}}{{AAdIb}{{Ff{AlIf}}}}{{AAfIb}{{Ff{AlIf}}}}{{AAhIb}{{Ff{AlIf}}}}{{KfIb}{{Ff{AlIf}}}}0{{AAlIb}{{Ff{AlIf}}}}{cc{}}00000000{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}000{{}Al}{{}AAb}333333333{{Kfc}AlHn}{{AAlc}AlHn}{ce{}{}}00000000{{KfAf}}{c{{Mh{e}}}{}{}}00000000{AAhMj}`````{{{Jj{AAnAB`}}ABbFlAjABdKhKh}AAb}{{{ABf{AB`}}AjABdKh}Kf}```````{KhAl}{{Alc}FfOd}{{Anc}FfOd}{{AA`c}FfOd}{{AAbc}FfOd}{{AAdc}FfOd}{{AAfc}FfOd}{{AAhc}FfOd}{{Kfc}FfOd}{{AAlc}FfOd}{c{{Hf{In}}}{}}000{c{{Ln{ABh}}}{}}{ce{}{}}00000000{AlJd}{AAb{{Jd{Mj}}}}{cHd{}}{c{{Ff{e}}}{}{}}00000000000000000{cAb{}}00000000{cHl{}}00{AAhABj}777777777```````````{ch{}}{{CdOnABl}ABn}{{CdAC`}{{Jd{ACbABd}}}}{JlAl};;;;;;;;;;;;``{ACdACd}{{cAf}Cf{}}{N`N`}{ACfACf}{ABlABl}{AChACh}{ACjACj}{{ce}Al{}{}}00000{{cFj}{{Ff{ACdFd}}}Fh}{{cFj}{{Ff{N`Fd}}}Fh}{{cFj}{{Ff{ACfFd}}}Fh}{{cFj}{{Ff{ABlFd}}}Fh}{{cFj}{{Ff{AChFd}}}Fh}{{cFj}{{Ff{ACjFd}}}Fh}{{ACdc}{{Ff{FlFn}}}G`}{{N`c}{{Ff{FlFn}}}G`}{{ACfc}{{Ff{FlFn}}}G`}{{ABlc}{{Ff{FlFn}}}G`}{{AChc}{{Ff{FlFn}}}G`}{{ACjc}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}00000{{ACdACd}Hl}{{N`N`}Hl}{{ACfACf}Hl}{{ABlABl}Hl}{{AChACh}Hl}{{ACjACj}Hl}{{ce}Hl{}{}}00000000000000000000000{{cCf}Hl{}}{{cHn}Al{}}{{ACdIb}Id}{{N`Ib}Id}{{ACfIb}Id}{{ABlIb}Id}{{AChIb}Id}{{ACjIb}Id}{cc{}}00000{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}00000111111{{ACdc}AlHn}{{N`c}AlHn}{{ACfc}AlHn}{{ABlc}AlHn}{{AChc}AlHn}{{ACjc}AlHn}{ce{}{}}00000{c{{Mh{e}}}{}{}}00000{cl{}}{ACdl}````{c{{Hf{In}}}{}}00000444444`{{AClOnACdABn}ACd}{ACdACd}{{ACdACbABd}ACd}{{cGbOn}{{Hf{{A`{Cf}}}}}{}}{{ACdcOn}{{Hf{{A`{ACd}}}}}{}}{c{{Ff{e}}}{}{}}00000000000``{cAb{}}00000;;;;;;``;;{AB`AB`}{{ce}Al{}{}}{{AB`AB`}ACn}{{ce}ACn{}{}}{{c{Fb{EnF`}}}{{Ff{AB`Fd}}}Fh}{{AB`c}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}{c{{Ff{AB`}}}Gn}{{cH`}{{Ff{AlHb}}}{}}{{AB`AB`}Hl}{{ce}Hl{}{}}000{{cH`}{{Ff{AlI`}}}{}}{{AB`Ib}{{Ff{AlIf}}}}0{cc{}}{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}1{AD`{{Ff{AB`}}}}{{AB`c}AlHn}{ce{}{}}{c{{Mh{e}}}{}{}}{AB`Hl}`{ADbAB`}{AB`Fl}{{AB`AB`}{{Ln{ACn}}}}{{AB`c}FfOd}{c{{Hf{In}}}{}}{{}ADd}{{}ADf}9{AB`ADh}{{}ADj}{{}ADl}{cHd{}}{c{{Ff{e}}}{}{}}0{{AB`c{ADn{e}}}AB`AE`{AEbAEd}}{cAb{}}{cHl{}}00{ce{}{}}``{{AE`c}{{Ff{AlFn}}}G`}{{AEfc{ADn{e}}}AEfAE`{AEbAEd}}``````2222{MnMn}{IlIl}{{ce}Al{}{}}0{{c{Fb{EnF`}}}{{Ff{MnFd}}}Fh}{{c{Fb{EnF`}}}{{Ff{IlFd}}}Fh}{{Mnc}{{Ff{FlFn}}}G`}{{Ilc}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}0{c{{Ff{Mn}}}Gn}{{cH`}{{Ff{AlHb}}}{}}{{MnMn}Hl}{{IlIl}Hl}{{ce}Hl{}{}}0000000{{cH`}{{Ff{AlI`}}}{}}{{MnIb}{{Ff{AlIf}}}}{{IlIb}{{Ff{AlIf}}}}0{cc{}}0{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}011{{Mnc}AlHn}{{Ilc}AlHn}{Mn{{Jd{ADbMl}}}}{ce{}{}}0{c{{Mh{e}}}{}{}}0{{ABnACbABdADb}{{Ff{MnIl}}}}{MnAEh}`{MnAEj}{{Mnc}FfOd}{c{{Hf{In}}}{}}066{cHd{}}`{c{{Ff{e}}}{}{}}000{MnADb}`{MnAEl}`{cAb{}}0{Mn{{Ff{AlAEn}}}}{cHl{}}001{{Mn{ADn{c}}{ABf{AB`}}}{{Ff{AlIl}}}{AEbAEd}}>>`````````{ch{}}{{OnCdlAF`}{{Ff{MlHd}}}}{ce{}{}}000000000{AFbAFb}{{cAf}Cf{}}{NhNh}{AF`AF`}{AFdAFd}{AFfAFf}{{ce}Al{}{}}0000{{cFj}{{Ff{AFbFd}}}Fh}{{cFj}{{Ff{NhFd}}}Fh}{{cFj}{{Ff{AF`Fd}}}Fh}{{cFj}{{Ff{AFdFd}}}Fh}{{cFj}{{Ff{AFfFd}}}Fh}{{AFbc}{{Ff{FlFn}}}G`}{{Nhc}{{Ff{FlFn}}}G`}{{AF`c}{{Ff{FlFn}}}G`}{{AFdc}{{Ff{FlFn}}}G`}{{AFfc}{{Ff{FlFn}}}G`}{{cG`}{{Ff{FlFn}}}{}}0000{{AFbAFb}Hl}{{NhNh}Hl}{{AF`AF`}Hl}{{AFdAFd}Hl}{{AFfAFf}Hl}{{ce}Hl{}{}}0000000000000000000{{cCf}Hl{}}{{cHn}Al{}}``{{AFbIb}Id}{{NhIb}Id}{{AF`Ib}Id}{{AFdIb}Id}{{AFfIb}Id}{cc{}}0000{{{J`{In}}{Fb{EnF`}}}{{Ff{cJb}}}{}}000011111{{AFbc}AlHn}{{Nhc}AlHn}{{AF`c}AlHn}{{AFdc}AlHn}{{AFfc}AlHn}{ce{}{}}0000{c{{Mh{e}}}{}{}}0000{AFbl}{cl{}}``{c{{Hf{In}}}{}}000044444{{{Ff{MlHd}}AFb}AFb}{{AFbcOn}{{Hf{{A`{AFb}}}}}{}}{{cGbOn}{{Hf{{A`{Cf}}}}}{}}{c{{Ff{e}}}{}{}}000000000`{cAb{}}000099999","c":[],"p":[[5,"PegOutFees",0],[5,"Amount",1819],[6,"WalletOutputV0",0],[10,"Any",1820],[10,"IDynCommonModuleInit",1821],[5,"OperationId",1822],[5,"OutPoint",1823],[10,"Future",1824],[5,"Box",1825],[5,"Pin",1826],[1,"u16"],[5,"Address",1827],[6,"Network",1828],[1,"unit"],[8,"Result",1829],[5,"BitcoinTransactionData",0],[6,"DepositState",0],[6,"WithdrawState",0],[5,"WalletClientInit",0],[5,"WalletOperationMeta",0],[5,"DynModuleConsensusItem",1822],[6,"WalletConsensusItem",0],[5,"PegOutSignatureItem",0],[5,"SpendableUTXO",0],[6,"WalletOperationMetaVariant",0],[5,"WalletClientContext",0],[5,"DynState",1830],[6,"WalletClientStates",0],[5,"PegOut",0],[6,"WalletOutputOutcome",0],[5,"DynOutputOutcome",1822],[5,"UnknownWalletOutputOutcomeVariantError",0],[5,"WalletOutputOutcomeV0",0],[6,"WalletInput",0],[5,"DynInput",1822],[5,"UnknownWalletInputVariantError",0],[5,"WalletInputV0",0],[5,"DynOutput",1822],[6,"WalletOutput",0],[5,"UnknownWalletOutputVariantError",0],[5,"Rbf",0],[6,"WalletCreationError",0],[5,"DynInputError",1822],[6,"WalletInputError",0],[6,"WalletOutputError",0],[5,"DynOutputError",1822],[5,"Decoder",1822],[6,"DecodingMode",1831],[5,"ModuleRegistry",1831],[5,"DecodeError",1832],[6,"Result",1833],[10,"Read",1834],[8,"ModuleDecoderRegistry",1831],[1,"usize"],[5,"Error",1835],[10,"Write",1834],[5,"DynContext",1830],[5,"WalletClientModule",0],[5,"DatabaseTransaction",1836],[5,"Amount",1823],[5,"ClientOutput",1837],[5,"DatabaseVersion",1836],[10,"Deserializer",1838],[10,"Serializer",1839],[6,"ErrorImpl",1839],[5,"String",1840],[5,"Vec",1841],[10,"Iterator",1842],[1,"u64"],[1,"bool"],[10,"Hasher",1843],[5,"Error",1844],[5,"Formatter",1845],[8,"Result",1845],[5,"Error",1845],[5,"WalletCommonInit",0],[6,"ProcessPegOutSigError",0],[6,"PegInProofError",1592],[1,"u8"],[1,"slice"],[6,"DecodingError",1836],[1,"tuple"],[17,"Output"],[1,"fn"],[5,"BTreeMap",1846],[5,"SystemTime",1847],[10,"Serialize",1848],[10,"MaybeSend",1849],[10,"MaybeSync",1849],[5,"ChildId",1850],[5,"WalletClientConfig",1105],[5,"BitcoinRpcConfig",1851],[5,"OsString",1852],[5,"FinalClient",1853],[5,"FederationId",1854],[5,"ClientModuleConfig",1854],[5,"Database",1836],[5,"ApiVersion",1855],[5,"DerivableSecret",1850],[5,"Notifier",1856],[5,"DynGlobalApi",1857],[5,"ApiAuth",1821],[6,"Option",1858],[5,"TaskGroup",1849],[5,"ClientModuleInitArgs",1859],[5,"TransactionItemAmount",1821],[8,"ModuleInstanceId",1822],[5,"Request",1860],[5,"ModuleKind",1822],[5,"Txid",1861],[5,"PegInProof",1592],[6,"DepositStates",1354],[17,"Item"],[10,"Stream",1862],[10,"Unpin",1863],[6,"WithdrawStates",1670],[5,"ProprietaryKey",1864],[5,"NumPeers",1823],[5,"DynModuleBackup",1865],[5,"RecoveryProgress",1865],[5,"Sender",1866],[10,"Serializer",1848],[10,"Error",1867],[6,"UpdateStreamOrOutcome",1868],[5,"MultiApiVersion",1855],[5,"DynCommonModuleInit",1821],[5,"DynGlobalClientContext",1869],[5,"StateTransition",1830],[5,"TypeId",1820],[10,"WalletFederationApi",1030],[6,"DbKeyPrefix",1033],[5,"DbKeyPrefixIter",1033],[5,"NextPegInTweakIndexKey",1033],[5,"WalletGenParams",1105],[5,"WalletGenParamsLocal",1105],[5,"WalletGenParamsConsensus",1105],[5,"WalletConfig",1105],[5,"WalletConfigLocal",1105],[5,"WalletConfigPrivate",1105],[5,"WalletConfigConsensus",1105],[5,"DynClientConfig",1822],[5,"FeeConsensus",1105],[5,"PeerId",1823],[5,"CompressedPublicKey",1539],[5,"SecretKey",1870],[1,"u32"],[6,"Descriptor",1871],[6,"Value",1872],[5,"ModuleConsensusVersion",1855],[5,"WaitingForConfirmationsDepositState",1354],[5,"TxOutProof",1873],[5,"KeyPair",1870],[5,"Transaction",1874],[5,"DepositStateMachine",1354],[5,"CreatedDepositState",1354],[5,"ClaimingDepositState",1354],[5,"TimedOutDepositState",1354],[5,"ClientSMDatabaseTransaction",1875],[6,"Ordering",1876],[1,"str"],[5,"PublicKey",1870],[5,"Hash",1877],[5,"Hash",1878],[5,"PublicKey",1879],[5,"Hash",1880],[5,"Hash",1881],[5,"Secp256k1",1882],[10,"Contract",1588],[10,"Verification",1883],[10,"Signing",1883],[10,"Tweakable",1588],[5,"OutPoint",1874],[5,"BlockHash",1861],[5,"TxOut",1874],[5,"ValidationErrors",1884],[5,"CreatedWithdrawState",1670],[5,"WithdrawStateMachine",1670],[5,"SuccessWithdrawState",1670],[5,"AbortedWithdrawState",1670],[8,"PegInDescriptor",0],[5,"WalletModuleTypes",0],[8,"PartialSig",0],[15,"Default",1014],[15,"Default",1016],[15,"Deposit",1018],[15,"Withdraw",1018],[15,"RbfWithdraw",1018],[15,"Default",1026],[15,"Default",1028]],"b":[[501,"impl-Debug-for-WalletConsensusItem"],[502,"impl-Display-for-WalletConsensusItem"],[511,"impl-Debug-for-WalletOutputOutcome"],[512,"impl-Display-for-WalletOutputOutcome"],[513,"impl-Debug-for-UnknownWalletOutputOutcomeVariantError"],[514,"impl-Display-for-UnknownWalletOutputOutcomeVariantError"],[515,"impl-Debug-for-WalletOutputOutcomeV0"],[516,"impl-Display-for-WalletOutputOutcomeV0"],[518,"impl-Debug-for-WalletInput"],[519,"impl-Display-for-WalletInput"],[520,"impl-Debug-for-UnknownWalletInputVariantError"],[521,"impl-Display-for-UnknownWalletInputVariantError"],[522,"impl-Debug-for-WalletInputV0"],[523,"impl-Display-for-WalletInputV0"],[524,"impl-Display-for-WalletOutput"],[525,"impl-Debug-for-WalletOutput"],[526,"impl-Display-for-UnknownWalletOutputVariantError"],[527,"impl-Debug-for-UnknownWalletOutputVariantError"],[528,"impl-Display-for-WalletOutputV0"],[529,"impl-Debug-for-WalletOutputV0"],[531,"impl-Debug-for-WalletCreationError"],[532,"impl-Display-for-WalletCreationError"],[533,"impl-Display-for-WalletInputError"],[534,"impl-Debug-for-WalletInputError"],[535,"impl-Display-for-WalletOutputError"],[536,"impl-Debug-for-WalletOutputError"],[537,"impl-Display-for-ProcessPegOutSigError"],[538,"impl-Debug-for-ProcessPegOutSigError"],[566,"impl-From%3CPegInProofError%3E-for-WalletInputError"],[567,"impl-From%3CUnknownWalletInputVariantError%3E-for-WalletInputError"],[1055,"impl-Debug-for-DbKeyPrefix"],[1056,"impl-Display-for-DbKeyPrefix"],[1224,"impl-Display-for-WalletClientConfig"],[1225,"impl-Debug-for-WalletClientConfig"],[1557,"impl-Display-for-CompressedPublicKey"],[1558,"impl-Debug-for-CompressedPublicKey"],[1626,"impl-Display-for-PegInProofError"],[1627,"impl-Debug-for-PegInProofError"]]}],\
["fedimint_wallet_common",{"doc":"","t":"PPPSSPPPPPPPPSPPPIPIPFPPFPFPPGFPPPPPFPPPPPPFFFPPPFGGGGFFGGGFGPPPPPNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNHONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNOOOOOOOOFFFFFFFFFNOONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNKKMMPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNONONNNNNNHNNNN","n":["Bare","BelowMinRelayFee","BlockCount","CONFIRMATION_TARGET","CONSENSUS_VERSION","Default","Default","Default","Default","DuplicateSignature","ErrorFinalizingPsbt","Feerate","InvalidSignature","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOut","PegOutFeeBelowConsensus","PegOutFees","PegOutSignature","PegOutSignatureItem","PegOutUnderDustLimit","Pkh","ProcessPegOutSigError","Rbf","Rbf","RbfTransactionIdNotFound","RpcError","Sh","SighashError","SpendableUTXO","Tr","TxWeightIncorrect","UnknownInputVariant","UnknownOutputVariant","UnknownPegInProofBlock","UnknownTransaction","UnknownWalletInputVariantError","UnknownWalletOutputOutcomeVariantError","UnknownWalletOutputVariantError","V0","V0","V0","WalletCommonInit","WalletConsensusItem","WalletCreationError","WalletInput","WalletInputError","WalletInputV0","WalletModuleTypes","WalletOutput","WalletOutputError","WalletOutputOutcome","WalletOutputOutcomeV0","WalletOutputV0","Wpkh","WrongNetwork","WrongNetwork","WrongSignatureCount","Wsh","amount","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_v0_ref","ensure_v0_ref","ensure_v0_ref","envs","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_rate","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","len","maybe_v0_ref","maybe_v0_ref","maybe_v0_ref","new","new_v0","new_v0","new_v0_peg_out","new_v0_rbf","proprietary_tweak_key","recipient","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","source","source","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweakable","txid","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","variant","variant","variant","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bytes","variant","bytes","variant","bytes","variant","bytes","variant","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","WalletGenParams","WalletGenParamsConsensus","WalletGenParamsLocal","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_default_bitcoin_rpc","client_default_bitcoin_rpc","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_bitcoin_rpc","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","finality_delay","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","network","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FM_PORT_ESPLORA_ENV","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","deserialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_bytes","from_ref","from_str","hash","into","into_request","is_uncompressed","key","new","num_der_paths","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","identity","into","into","into_request","into_request","new","outpoint","output_idx","proof_block","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","validate","validate_ip","validate_ipv4","validate_ipv6","validate_peg_in_proof","validate_with_args","verify","vzip","vzip"],"q":[[0,"fedimint_wallet_common"],[747,"fedimint_wallet_common::WalletConsensusItem"],[749,"fedimint_wallet_common::WalletInput"],[751,"fedimint_wallet_common::WalletOutput"],[753,"fedimint_wallet_common::WalletOutputOutcome"],[755,"fedimint_wallet_common::config"],[1004,"fedimint_wallet_common::envs"],[1005,"fedimint_wallet_common::keys"],[1054,"fedimint_wallet_common::tweakable"],[1058,"fedimint_wallet_common::txoproof"],[1137,"bitcoin::util::amount"],[1138,"core::any"],[1139,"fedimint_core::core"],[1140,"fedimint_core::core"],[1141,"fedimint_core::encoding"],[1142,"core::result"],[1143,"std::io"],[1144,"std::io::error"],[1145,"std::io"],[1146,"erased_serde::ser"],[1147,"erased_serde::ser"],[1148,"core::fmt"],[1149,"core::fmt"],[1150,"core::hash"],[1151,"fedimint_core::core"],[1152,"core::option"],[1153,"bitcoin::hash_types::newtypes"],[1154,"bitcoin::util::address"],[1155,"bitcoin::util::psbt::raw"],[1156,"serde::ser"],[1157,"core::error"],[1158,"alloc::vec"],[1159,"alloc::string"],[1160,"core::any"],[1161,"alloc::collections::btree::map"],[1162,"secp256k1::key"],[1163,"bitcoin::network::constants"],[1164,"fedimint_core::envs"],[1165,"serde_json::value"],[1166,"fedimint_core::module::version"],[1167,"core::cmp"],[1168,"secp256k1::key"],[1169,"miniscript::miniscript::hash256"],[1170,"bitcoin::crypto::key"],[1171,"bitcoin_hashes::ripemd160"],[1172,"bitcoin_hashes::sha256"],[1173,"secp256k1"],[1174,"secp256k1::context"],[1175,"secp256k1::context"],[1176,"bitcoin::blockdata::transaction"],[1177,"bitcoin::blockdata::transaction"],[1178,"validator::types"]],"d":["A raw scriptpubkey (including pay-to-pubkey) under Legacy …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pay-to-PubKey-Hash","","Allows a user to bump the fees of a <code>PendingTransaction</code>","","","","Pay-to-ScriptHash(includes nested wsh/wpkh/sorted multi)","","","Pay-to-Taproot","","","","","","","","","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","Pay-to-Witness-PubKey-Hash","","","","Pay-to-Witness-ScriptHash with Segwitv0 contextees expressed as an increase over existing peg-out fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bitcoin tx id to bump the fees for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","See <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.","Points to a Bitcoin API that the client can use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Points to a Bitcoin API that the client can use to …","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","An object that can be used as a Ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifiable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[84,26,7,0,0,7,11,16,19,46,46,7,46,0,46,46,26,0,24,0,24,0,3,26,0,7,0,26,84,0,0,3,26,23,84,46,0,84,26,24,26,24,46,0,0,0,11,16,19,0,0,0,0,0,0,0,0,0,0,0,0,84,23,26,46,84,1,3,9,10,7,11,16,19,24,26,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,111,7,7,8,9,1,10,11,11,13,14,16,16,17,18,19,19,21,3,22,23,24,24,26,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,0,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,45,18,18,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,7,11,16,19,24,26,11,16,19,0,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,7,7,7,8,8,8,8,9,9,9,9,1,1,1,1,10,10,10,10,11,11,11,11,13,13,13,13,14,14,14,14,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,21,21,21,21,3,3,3,3,22,22,22,22,23,23,23,23,24,24,24,24,26,26,26,26,7,11,16,19,24,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,1,10,22,7,7,8,9,1,10,11,11,13,13,14,14,45,16,16,17,17,18,18,19,19,21,21,3,3,22,23,23,24,24,26,26,46,46,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,24,24,26,26,46,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,8,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,7,11,16,19,24,26,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,0,111,11,16,19,1,11,16,19,19,0,10,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,8,24,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,8,9,1,10,11,13,14,16,17,18,19,21,3,22,23,24,26,7,11,13,14,16,17,18,19,21,3,23,24,26,46,1,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,9,0,8,22,0,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,7,11,13,14,16,17,18,19,21,3,23,24,26,46,7,11,13,14,16,17,18,19,21,3,23,24,26,46,7,11,13,14,16,17,18,19,21,3,23,24,26,46,13,17,21,110,7,8,9,1,10,11,13,14,45,16,17,18,19,21,3,22,23,24,26,46,112,112,113,113,114,114,115,115,0,0,0,0,0,0,0,0,0,74,67,70,66,67,68,69,70,71,72,74,75,66,67,68,69,70,71,72,74,75,68,72,66,67,68,69,70,71,72,74,74,75,66,67,68,69,70,71,72,74,75,66,69,70,72,74,75,70,72,74,75,70,72,74,75,75,74,72,66,67,68,69,70,71,72,74,75,66,67,68,69,70,71,72,74,75,74,74,75,74,74,74,74,75,75,75,75,74,66,67,68,69,70,71,72,74,75,72,74,68,72,74,66,67,68,69,70,71,72,74,74,75,66,67,68,69,70,71,72,74,75,70,72,74,75,66,69,66,67,68,69,70,71,72,74,75,74,75,66,67,68,69,70,71,72,74,75,74,66,67,68,69,70,71,72,74,75,72,66,69,68,72,74,69,74,72,75,72,74,71,75,69,66,66,67,68,69,70,71,72,74,75,70,72,74,75,74,66,67,68,69,70,71,72,74,75,66,69,74,66,67,68,69,70,71,72,74,75,66,67,68,69,70,71,72,74,75,66,67,68,69,70,71,72,74,75,74,74,74,72,66,67,68,69,70,71,72,74,75,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,97,101,47,0,0,47,47,47,58,47,58,47,58,47,58,47,58,47,58,47,58,47,58,58,58,47,58,58,58,58,47,47,47,47,58,58,47,47,58,47,58,47,58,47,58,47,58,58,47,58,47,58,58,58,58,58,58,47,58,47,47,58,58,47,58,47,58,58,58,58,58,47,58,47,47,47,0,58,58,58,47],"f":"``````````````````````````````````````````````````````````````````{bd}{fd}``{ch{}}00000{ce{}{}}00000000000000000000000000000000000000000`{{cj}l{}}{nn}{A`A`}{AbAb}{bb}{AdAd}{AfAf}{{cj}Ah{}}{AjAj}{AlAl}{{cj}An{}}{B`B`}{BbBb}{BdBd}{BfBf}{{cj}Bh{}}{BjBj}{ff}{BlBl}{BnBn}{C`C`}{{cj}Cb{}}{CdCd}{{cj}Cf{}}{{ce}Ch{}{}}00000000000000000`{{cCj}{{Cn{nCl}}}D`}{{cCj}{{Cn{A`Cl}}}D`}{{cCj}{{Cn{AbCl}}}D`}{{cCj}{{Cn{bCl}}}D`}{{cCj}{{Cn{AdCl}}}D`}{{cCj}{{Cn{AfCl}}}D`}{{cCj}{{Cn{AjCl}}}D`}{{cCj}{{Cn{AlCl}}}D`}{{cCj}{{Cn{B`Cl}}}D`}{{cCj}{{Cn{BbCl}}}D`}{{cCj}{{Cn{BdCl}}}D`}{{cCj}{{Cn{BfCl}}}D`}{{cCj}{{Cn{BjCl}}}D`}{{cCj}{{Cn{fCl}}}D`}{{cCj}{{Cn{BlCl}}}D`}{{cCj}{{Cn{BnCl}}}D`}{{cCj}{{Cn{C`Cl}}}D`}{{cCj}{{Cn{CdCl}}}D`}{{nc}{{Cn{DbDd}}}Df}{{A`c}{{Cn{DbDd}}}Df}{{Abc}{{Cn{DbDd}}}Df}{{bc}{{Cn{DbDd}}}Df}{{Adc}{{Cn{DbDd}}}Df}{{Afc}{{Cn{DbDd}}}Df}{{Ajc}{{Cn{DbDd}}}Df}{{Alc}{{Cn{DbDd}}}Df}{{B`c}{{Cn{DbDd}}}Df}{{Bbc}{{Cn{DbDd}}}Df}{{Bdc}{{Cn{DbDd}}}Df}{{Bfc}{{Cn{DbDd}}}Df}{{Bjc}{{Cn{DbDd}}}Df}{{fc}{{Cn{DbDd}}}Df}{{Blc}{{Cn{DbDd}}}Df}{{Bnc}{{Cn{DbDd}}}Df}{{C`c}{{Cn{DbDd}}}Df}{{Cdc}{{Cn{DbDd}}}Df}{{cDf}{{Cn{DbDd}}}{}}00000000000000000{{}Dh}{Bdc{}}0{c{{Cn{n}}}Dj}{c{{Cn{A`}}}Dj}{c{{Cn{Ab}}}Dj}{c{{Cn{b}}}Dj}{c{{Cn{Ad}}}Dj}{c{{Cn{Af}}}Dj}{c{{Cn{Aj}}}Dj}{c{{Cn{Al}}}Dj}{c{{Cn{B`}}}Dj}{c{{Cn{Bb}}}Dj}{c{{Cn{Bd}}}Dj}{c{{Cn{Bf}}}Dj}{c{{Cn{Bj}}}Dj}{c{{Cn{f}}}Dj}{c{{Cn{Bl}}}Dj}{{cDl}{{Cn{ChDn}}}{}}00000000000000{cE`{}}00000{Af{{Cn{AlAj}}}}{B`{{Cn{BdBb}}}}{Bf{{Cn{fBj}}}}`{{nn}Eb}{{A`A`}Eb}{{AbAb}Eb}{{bb}Eb}{{AdAd}Eb}{{AfAf}Eb}{{AjAj}Eb}{{AlAl}Eb}{{B`B`}Eb}{{BbBb}Eb}{{BdBd}Eb}{{BfBf}Eb}{{BjBj}Eb}{{ff}Eb}{{BlBl}Eb}{{BnBn}Eb}{{C`C`}Eb}{{CdCd}Eb}{{ce}Eb{}{}}00000000000000000000000000000000000000000000000000000000000000000000000{{cl}Eb{}}{{cAh}Eb{}}{{cAn}Eb{}}{{cBh}Eb{}}{{cCb}Eb{}}{{cCf}Eb{}}{{cDl}{{Cn{ChEd}}}{}}00000000000000```{{nEf}Eh}0{{A`Ef}Eh}{{AbEf}Eh}{{bEf}Eh}{{AdEf}Eh}{{AfEf}Eh}0{{AjEf}Eh}0{{AlEf}Eh}0{{EjEf}Eh}{{B`Ef}Eh}0{{BbEf}Eh}0{{BdEf}Eh}0{{BfEf}Eh}0{{BjEf}Eh}0{{fEf}Eh}0{{BlEf}Eh}{{BnEf}Eh}0{{C`Ef}Eh}0{{CdEf}Eh}0{{ElEf}Eh}0{cc{}}00000000000000000{BbC`}{EnC`}2{BjCd}33{{{Fb{F`}}{Ff{DhFd}}}{{Cn{cFh}}}{}}00000000000000000444444444444444444{{nc}ChFj}{{A`c}ChFj}{{bc}ChFj}{{Adc}ChFj}{{Afc}ChFj}{{Ajc}ChFj}{{Alc}ChFj}{{B`c}ChFj}{{Bbc}ChFj}{{Bdc}ChFj}{{Bfc}ChFj}{{Bjc}ChFj}{{fc}ChFj}{{Blc}ChFj}{{Bnc}ChFj}{{C`c}ChFj}{{Cdc}ChFj}{ce{}{}}00000000000000000000{{nFl}c{}}{{AfFl}c{}}{{B`Fl}c{}}{{BfFl}c{}}{{C`Fl}c{}}{{CdFl}c{}}{c{{Fn{e}}}{}{}}00000000000000000000``{Af{{G`{Al}}}}{B`{{G`{Bd}}}}{Bf{{G`{f}}}}{{E`E`}b}{GbAf}{GdB`}{{Gfdb}Bf}{{bGb}Bf}{{}Gh}`{{nc}CnGj}{{A`c}CnGj}{{Abc}CnGj}{{bc}CnGj}{{Adc}CnGj}{{Afc}CnGj}{{Ajc}CnGj}{{Alc}CnGj}{{B`c}CnGj}{{Bbc}CnGj}{{Bdc}CnGj}{{Bfc}CnGj}{{Bjc}CnGj}{{fc}CnGj}{{Blc}CnGj}`{C`{{G`{Gl}}}}{Cd{{G`{Gl}}}}{c{{Gn{F`}}}{}}00000000000000000{ce{}{}}00000000000000000{cH`{}}0000000000000`{c{{Cn{e}}}{}{}}00000000000000000000000000000000000000000`````{cHb{}}00000000000000000000{cEb{}}00000000000000000000000000000000000000000```444444444444444444444`````````````````{ch{}}``555555555555555555``{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{{cj}Ib{}}{IdId}{IfIf}{{ce}Ch{}{}}00000000``{{cCj}{{Cn{HlCl}}}D`}{{cCj}{{Cn{I`Cl}}}D`}{{cCj}{{Cn{IdCl}}}D`}{{cCj}{{Cn{IfCl}}}D`}{{Hlc}{{Cn{DbDd}}}Df}{{I`c}{{Cn{DbDd}}}Df}{{Idc}{{Cn{DbDd}}}Df}{{Ifc}{{Cn{DbDd}}}Df}{{cDf}{{Cn{DbDd}}}{}}000{{}If}``{c{{Cn{Hd}}}Dj}{c{{Cn{Hf}}}Dj}{c{{Cn{Hh}}}Dj}{c{{Cn{Hj}}}Dj}{c{{Cn{Hl}}}Dj}{c{{Cn{Hn}}}Dj}{c{{Cn{I`}}}Dj}{c{{Cn{Id}}}Dj}{c{{Cn{If}}}Dj}{{cDl}{{Cn{ChDn}}}{}}00000000{cE`{}}{{IdId}Eb}{{IfIf}Eb}{{ce}Eb{}{}}0000000{{cIb}Eb{}}{{cDl}{{Cn{ChEd}}}{}}00000000`````{{HdEf}Eh}{{HfEf}Eh}{{HhEf}Eh}{{HjEf}Eh}{{HlEf}Eh}{{HnEf}Eh}{{I`Ef}Eh}{{IdEf}Eh}0{{IfEf}Eh}{cc{}}00000000{{{Fb{F`}}{Ff{DhFd}}}{{Cn{cFh}}}{}}000{{ce}Hd{}{}}{{ceg}Hj{}{}{}}333333333{{Idc}ChFj}{{Ifc}ChFj}{ce{}{}}00000000{{IdFl}c{}}{c{{Fn{e}}}{}{}}00000000{I`Ih}`````{{{In{IjIl}}J`DbJbJdJfJf}Hj}{{JhJbJdJf}Id}```````{JfHd}{{Hdc}CnGj}{{Hfc}CnGj}{{Hhc}CnGj}{{Hjc}CnGj}{{Hlc}CnGj}{{Hnc}CnGj}{{I`c}CnGj}{{Idc}CnGj}{{Ifc}CnGj}{c{{Gn{F`}}}{}}000{c{{G`{Jj}}}{}}{ce{}{}}00000000{Hd{{Jl{ce}}}{}{}}{Hj{{Jl{Ihceg}}}{}{}{}}{cH`{}}{c{{Cn{e}}}{}{}}00000000000000000{cHb{}}00000000{cEb{}}00{I`Jn}777777777``77{IlIl}{{ce}Ch{}{}}{{IlIl}K`}{{ce}K`{}{}}{{cCj}{{Cn{IlCl}}}D`}{{Ilc}{{Cn{DbDd}}}Df}{{cDf}{{Cn{DbDd}}}{}}{c{{Cn{Il}}}Dj}{{cDl}{{Cn{ChDn}}}{}}{{IlIl}Eb}{{ce}Eb{}{}}000{{cDl}{{Cn{ChEd}}}{}}{{IlEf}Eh}0{cc{}}{{{Fb{F`}}{Ff{DhFd}}}{{Cn{cFh}}}{}}1{Kb{{Cn{Ilc}}}{}}{{Ilc}ChFj}{ce{}{}}{c{{Fn{e}}}{}{}}{IlEb}`{KdIl}{IlDb}{{IlIl}{{G`{K`}}}}{{Ilc}CnGj}{c{{Gn{F`}}}{}}{cKf{}}{cKh{}}9{IlKj}{cKl{}}{cKn{}}{cH`{}}{c{{Cn{e}}}{}{}}0{{Ilc{L`{e}}}IlLb{LdLf}}{cHb{}}{cEb{}}00{ce{}{}}``{{Lbc}{{Lh{Ch}}}Df}{{Ljc{L`{e}}}LjLb{LdLf}}``````2222{GdGd}{EnEn}{{ce}Ch{}{}}0{{cCj}{{Cn{GdCl}}}D`}{{cCj}{{Cn{EnCl}}}D`}{{Gdc}{{Cn{DbDd}}}Df}{{Enc}{{Cn{DbDd}}}Df}{{cDf}{{Cn{DbDd}}}{}}0{c{{Cn{Gd}}}Dj}{{cDl}{{Cn{ChDn}}}{}}{{GdGd}Eb}{{EnEn}Eb}{{ce}Eb{}{}}0000000{{cDl}{{Cn{ChEd}}}{}}{{GdEf}Eh}{{EnEf}Eh}0{cc{}}0{{{Fb{F`}}{Ff{DhFd}}}{{Cn{cFh}}}{}}011{{Gdc}ChFj}{{Enc}ChFj}{Gd{{Jl{KdGb}}}}{ce{}{}}0{c{{Fn{e}}}{}{}}0{{LlLnJdKd}{{Cn{GdEn}}}}{GdM`}`{GdMb}{{Gdc}CnGj}{c{{Gn{F`}}}{}}066{cH`{}}`{c{{Cn{e}}}{}{}}000{GdKd}`{GdMd}`{cHb{}}0{Gd{{Cn{ChMf}}}}{cEb{}}00{Gd{{Cn{ChMh}}}}{{Gdc}{{Cn{ChMf}}}{}}{{Gd{L`{c}}{Mj{Il}}}{{Cn{ChEn}}}{LdLf}}{ce{}{}}0","c":[],"p":[[5,"PegOutFees",0],[5,"Amount",1137],[6,"WalletOutputV0",0],[10,"Any",1138],[1,"u16"],[5,"DynModuleConsensusItem",1139],[6,"WalletConsensusItem",0],[5,"PegOutSignatureItem",0],[5,"SpendableUTXO",0],[5,"PegOut",0],[6,"WalletOutputOutcome",0],[5,"DynOutputOutcome",1139],[5,"UnknownWalletOutputOutcomeVariantError",0],[5,"WalletOutputOutcomeV0",0],[5,"DynInput",1139],[6,"WalletInput",0],[5,"UnknownWalletInputVariantError",0],[5,"WalletInputV0",0],[6,"WalletOutput",0],[5,"DynOutput",1139],[5,"UnknownWalletOutputVariantError",0],[5,"Rbf",0],[6,"WalletCreationError",0],[6,"WalletInputError",0],[5,"DynInputError",1139],[6,"WalletOutputError",0],[5,"DynOutputError",1139],[1,"unit"],[8,"ModuleDecoderRegistry",1140],[5,"DecodeError",1141],[6,"Result",1142],[10,"Read",1143],[1,"usize"],[5,"Error",1144],[10,"Write",1143],[5,"Decoder",1139],[10,"Deserializer",1145],[10,"Serializer",1146],[6,"ErrorImpl",1146],[1,"u64"],[1,"bool"],[5,"Error",1147],[5,"Formatter",1148],[8,"Result",1148],[5,"WalletCommonInit",0],[6,"ProcessPegOutSigError",0],[6,"PegInProofError",1058],[1,"u8"],[1,"slice"],[6,"DecodingMode",1140],[5,"ModuleRegistry",1140],[6,"DecodingError",1149],[10,"Hasher",1150],[8,"ModuleInstanceId",1139],[5,"Request",1151],[6,"Option",1152],[5,"Txid",1153],[5,"PegInProof",1058],[5,"Address",1154],[5,"ProprietaryKey",1155],[10,"Serializer",1156],[10,"Error",1157],[5,"Vec",1158],[5,"String",1159],[5,"TypeId",1138],[5,"WalletGenParams",755],[5,"WalletGenParamsLocal",755],[5,"WalletGenParamsConsensus",755],[5,"WalletConfig",755],[5,"WalletConfigLocal",755],[5,"WalletConfigPrivate",755],[5,"WalletConfigConsensus",755],[5,"DynClientConfig",1139],[5,"WalletClientConfig",755],[5,"FeeConsensus",755],[5,"ModuleKind",1139],[5,"PeerId",1160],[5,"CompressedPublicKey",1005],[5,"BTreeMap",1161],[5,"SecretKey",1162],[6,"Network",1163],[1,"u32"],[5,"BitcoinRpcConfig",1164],[8,"PegInDescriptor",0],[6,"Value",1165],[1,"tuple"],[5,"ModuleConsensusVersion",1166],[6,"Ordering",1167],[1,"str"],[5,"PublicKey",1162],[5,"Hash",1168],[5,"Hash",1169],[5,"PublicKey",1170],[5,"Hash",1171],[5,"Hash",1172],[5,"Secp256k1",1173],[10,"Contract",1054],[10,"Verification",1174],[10,"Signing",1174],[8,"Result",1144],[10,"Tweakable",1054],[5,"TxOutProof",1175],[5,"Transaction",1176],[5,"OutPoint",1176],[5,"BlockHash",1153],[5,"TxOut",1176],[5,"ValidationErrors",1177],[5,"ValidationError",1177],[6,"Descriptor",1178],[5,"WalletModuleTypes",0],[8,"PartialSig",0],[15,"Default",747],[15,"Default",749],[15,"Default",751],[15,"Default",753]],"b":[[373,"impl-Debug-for-WalletConsensusItem"],[374,"impl-Display-for-WalletConsensusItem"],[379,"impl-Debug-for-WalletOutputOutcome"],[380,"impl-Display-for-WalletOutputOutcome"],[381,"impl-Display-for-UnknownWalletOutputOutcomeVariantError"],[382,"impl-Debug-for-UnknownWalletOutputOutcomeVariantError"],[383,"impl-Display-for-WalletOutputOutcomeV0"],[384,"impl-Debug-for-WalletOutputOutcomeV0"],[386,"impl-Display-for-WalletInput"],[387,"impl-Debug-for-WalletInput"],[388,"impl-Display-for-UnknownWalletInputVariantError"],[389,"impl-Debug-for-UnknownWalletInputVariantError"],[390,"impl-Display-for-WalletInputV0"],[391,"impl-Debug-for-WalletInputV0"],[392,"impl-Debug-for-WalletOutput"],[393,"impl-Display-for-WalletOutput"],[394,"impl-Debug-for-UnknownWalletOutputVariantError"],[395,"impl-Display-for-UnknownWalletOutputVariantError"],[396,"impl-Debug-for-WalletOutputV0"],[397,"impl-Display-for-WalletOutputV0"],[399,"impl-Debug-for-WalletCreationError"],[400,"impl-Display-for-WalletCreationError"],[401,"impl-Display-for-WalletInputError"],[402,"impl-Debug-for-WalletInputError"],[403,"impl-Display-for-WalletOutputError"],[404,"impl-Debug-for-WalletOutputError"],[405,"impl-Display-for-ProcessPegOutSigError"],[406,"impl-Debug-for-ProcessPegOutSigError"],[425,"impl-From%3CUnknownWalletInputVariantError%3E-for-WalletInputError"],[426,"impl-From%3CPegInProofError%3E-for-WalletInputError"],[874,"impl-Debug-for-WalletClientConfig"],[875,"impl-Display-for-WalletClientConfig"],[1023,"impl-Display-for-CompressedPublicKey"],[1024,"impl-Debug-for-CompressedPublicKey"],[1092,"impl-Display-for-PegInProofError"],[1093,"impl-Debug-for-PegInProofError"]]}],\
["fedimint_wallet_server",{"doc":"","t":"FFFFFNNNNNNNONNNNNNNNNNNHOHHOOONNNNNNENNNNNNNNNNNNNNCNNNOOONNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNHNONNOONNNNNNOOONNHOOOOONNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNPFFPFFGFPFFPFFPFPFFPFFFFPFFPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["PendingTransaction","StatelessWallet","UnsignedTransaction","Wallet","WalletInit","api_endpoints","api_endpoints","as_any","as_common","audit","audit","available_utxos","block_count_local","block_is_known","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","calculate_pegin_metrics","calculate_pegout_metrics","cfg","change","change","clone","clone","clone","clone_into","clone_into","clone_into","common","consensus_block_count","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_fee_rate","consensus_nonce","consensus_proposal","consensus_proposal","create_peg_out_tx","create_tx","database_version","db","decoder","decoder","derive_script","descriptor","destination","destination","distributed_gen","distributed_gen","do_erased_serialize","do_erased_serialize","dump_database","dump_database","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fees","fees","finalize_peg_out_psbt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_block_count","get_client_config","get_client_config","get_database_migrations","get_fee_rate_opt","get_wallet_value","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","metrics","module_kind","new","new_with_bitcoind","nonce_from_idx","offline_wallet","our_peer_id","output_status","output_status","peg_out_amount","peg_out_amount","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","psbt","rbf","rbf","recognize_change_utxo","remove_rbf_transactions","run_broadcast_pending_tx","secp","secp","secret_key","selected_utxos","selected_utxos","serialize","serialize","sign_peg_out_psbt","sign_psbt","signatures","supported_api_versions","supported_api_versions","sync_up_to_consensus_height","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tweak","tx","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_params","validate_tx","versions","vzip","vzip","vzip","vzip","vzip","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","FeeRateVote","FeeRateVoteKey","FeeRateVotePrefix","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutNonce","PegOutNonceKey","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WALLET_BLOCK_COUNT","WALLET_INOUT_FEES_SATS","WALLET_INOUT_SATS","WALLET_PEGIN_FEES_SATS","WALLET_PEGIN_SATS","WALLET_PEGOUT_FEES_SATS","WALLET_PEGOUT_SATS","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_wallet_server"],[181,"fedimint_wallet_server::db"],[650,"fedimint_wallet_server::metrics"],[734,"fedimint_core::core::server"],[735,"fedimint_core::module"],[736,"alloc::vec"],[737,"core::any"],[738,"fedimint_core::module"],[739,"fedimint_core::module::audit"],[740,"fedimint_core::core"],[741,"core::future::future"],[742,"alloc::boxed"],[743,"core::pin"],[744,"fedimint_wallet_common"],[745,"bitcoin::hash_types::newtypes"],[746,"fedimint_bitcoind"],[747,"fedimint_core"],[748,"core::option"],[749,"fedimint_core::module::registry"],[750,"fedimint_core::encoding"],[751,"core::result"],[752,"std::io"],[753,"std::io::error"],[754,"std::io"],[755,"bitcoin::blockdata::script"],[756,"fedimint_wallet_common"],[757,"erased_serde::ser"],[758,"erased_serde::ser"],[759,"core::iter::traits::iterator"],[760,"erased_serde::error"],[761,"fedimint_wallet_common"],[762,"core::fmt"],[763,"fedimint_core::config"],[764,"alloc::collections::btree::map"],[765,"fedimint_core"],[766,"fedimint_core"],[767,"fedimint_core::core"],[768,"bitcoin::util::psbt"],[769,"fedimint_wallet_common"],[770,"fedimint_core::module"],[771,"fedimint_core::module::version"],[772,"prometheus::histogram"]],"d":["A peg-out tx that is ready to be broadcast with a tweak …","","A PSBT that is awaiting enough signatures from the …","","","","","","","","Queries the database and returns all assets and …","","The result of last successful get_block_count","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Wrapper around <code>self.btc_rpc</code> that keeps track of the last …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","","","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","Add a change UTXO to our spendable UTXO database after it …","Removes the <code>PendingTransaction</code> and any transactions tied …","","","","","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a tx created from an <code>WalletOutput</code>, validate there …","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefixeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,4,4,22,4,4,4,4,4,39,22,4,23,24,39,22,4,23,24,0,4,0,0,4,23,24,22,23,24,22,23,24,0,4,23,24,23,24,23,24,4,4,4,4,4,39,22,0,22,4,39,39,23,24,22,22,23,24,22,22,24,24,24,24,24,23,24,23,24,4,22,4,23,24,39,22,4,23,24,23,24,22,22,23,23,24,24,4,22,22,22,4,4,22,22,39,22,4,23,24,39,22,4,23,24,0,22,4,4,0,4,4,4,4,23,24,4,4,4,4,4,4,24,23,24,4,4,0,39,4,39,23,24,23,24,4,39,24,22,22,4,23,24,22,22,23,24,22,22,39,22,4,23,24,39,22,4,23,24,23,23,39,22,4,23,24,22,22,22,39,22,39,22,4,23,24,95,0,0,95,0,0,0,0,95,0,0,95,0,0,95,0,95,0,0,95,0,0,0,0,95,0,0,95,96,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,97,14,100,102,104,106,108,110,14,14,14,14,14,97,14,100,102,104,106,108,110,95,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,97,97,98,14,14,99,100,100,101,102,102,103,104,104,105,106,106,107,108,108,109,110,110,111,112,112,95,95,96,96,97,97,98,98,14,14,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,96,96,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,96,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,96,96,96,96,97,14,100,102,104,106,108,110,96,97,97,98,98,14,14,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,95,95,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,0,0,0,0,0,0,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121,113,115,116,118,119,120,121],"f":"`````{c{{f{{d{b}}}}}{}}{h{{f{{d{h}}}}}}{cj{}}{cl{}}{{hnA`Ab}{{Ah{{Af{Ad}}}}}}{{cnA`Aj}{{Ah{{Af{Ad}}}}}{}}{{hn}{{f{{B`{AlAn}}}}}}`{{hnBb}Bd}{ce{}{}}000000000{{nBf}Bh}`{{nBjBj}Bh}0```{BlBl}{BnBn}{C`C`}{{ce}Bh{}{}}00`{{hn}{{Cd{Cb}}}}{{cCf}{{Cj{BnCh}}}Cl}{{cCf}{{Cj{C`Ch}}}Cl}{{Bnc}{{Cj{CnD`}}}Db}{{C`c}{{Cj{CnD`}}}Db}{{cDb}{{Cj{CnD`}}}{}}0{{hn}Dd}{{hn}{{Dh{Df}}}}{{cnAj}{{Ah{{Af{Ad}}}}}{}}{{hn}{{Ah{{Af{Ad}}}}}}{{hnDj{Dh{Df}}}{{Cj{C`Dl}}}}{{DnE`Eb{f{{B`{AlAn}}}}{f{{B`{AlAn}}}}Dd{Dh{Df}}{Cd{Ed}}}{{Cj{C`Dl}}}}{cEf{}}`{cEh{}}0{{Dn{Ej{Df}}}Eb}```{{BlElEn}{{Ah{{Af{Ad}}}}}}{{cElEn}{{Ah{{Af{Ad}}}}}{}}{{cF`}{{Cj{BhFb}}}{}}0{{cn{f{Fd}}}{{Ah{{Af{Ad}}}}}{}}{{Bln{f{Fd}}}{{Af{Ff}}}}{{C`C`}Bd}{{ce}Bd{}{}}000{{cF`}{{Cj{BhFh}}}{}}0``{{hC`}{{Cj{BnFj}}}}{{BlFl}Fn}{{hFl}Fn}{{BnFl}Fn}{{C`Fl}Fn}{cc{}}0000{{{Ej{Df}}{Gb{EhG`}}}{{Cj{cGd}}}{}}0111111{h{{Gf{Cb}}}}{{cAjGh}{{Cj{GjGl}}}{}}{{BlGh}{{Gf{Gn}}}}{c{{Hd{Ef{Hb{n}{{H`{{Ah{{Af{Ad}}}}}}}}}}}{}}{h{{Gf{{Cd{Dd}}}}}}{{hn}E`}{{cHfHhHjHlHn}{{Ah{{Af{Ad}}}}}{}}{{Bl{I`{Bl}}}{{Ah{{Af{Ad}}}}}}{ce{}{}}0000{c{{Ib{e}}}{}{}}0000`{cId{}}{{IfHjHlHn}{{Gf{h}}}}{{IfHjBfHlHn}{{Cj{hIh}}}}{Ij{{Dh{Df}}}}{hDn}`{{hnIl}{{Ah{{Af{Ad}}}}}}{{cnIlAj}{{Ah{{Af{Ad}}}}}{}}``{{hnInHn}{{Ah{{Af{Ad}}}}}}{{cnJ`Hn}{{Ah{{Af{Ad}}}}}{}}{{hnJb}{{Ah{{Af{Ad}}}}}}{{cnJdAj}{{Ah{{Af{Ad}}}}}{}}{{hnJfIl}{{Ah{{Af{Ad}}}}}}{{cnJhIlAj}{{Ah{{Af{Ad}}}}}{}}```{{hnBn}Bh}0{{HjBfJj}Bh}`````{{Bnc}CjJl}{{C`c}CjJl}{{hJnHnK`}{{Cj{BhFj}}}}{{DnJn}Bh}`{BlKb}{cKb{}}{{hnCbCb}Bh}{c{{f{Df}}}{}}0{cKd{}}{ce{}{}}00{{Bl{Ej{Hn}}En}{{Hd{HnHh}}}}{{c{Ej{Hn}}En}{{Hd{HnHh}}}{}}{c{{Cj{e}}}{}{}}000000000``{cKf{}}0000{{cHnHh}{{Cj{BhGl}}}{}}{{BlHnHh}{{Gf{Bh}}}}{{cEn}{{Cj{BhGl}}}{}}{{DnC`DjDdKh}{{Cj{BhDl}}}}{{BlKj}{{Ej{Kl}}}}99999`````````````````````````````99999999999999999999999999999999999999{KnKn}{L`L`}{LbLb}{LdLd}{AlAl}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{MjMj}{MlMl}{MnMn}{N`N`}{{ce}Bh{}{}}000000000000000000{{cCf}{{Cj{LbCh}}}Cl}{{cCf}{{Cj{LdCh}}}Cl}{{cCf}{{Cj{AlCh}}}Cl}{{cCf}{{Cj{LfCh}}}Cl}{{cCf}{{Cj{LhCh}}}Cl}{{cCf}{{Cj{LjCh}}}Cl}{{cCf}{{Cj{LlCh}}}Cl}{{cCf}{{Cj{LnCh}}}Cl}{{cCf}{{Cj{M`Ch}}}Cl}{{cCf}{{Cj{MbCh}}}Cl}{{cCf}{{Cj{MdCh}}}Cl}{{cCf}{{Cj{MfCh}}}Cl}{{cCf}{{Cj{MhCh}}}Cl}{{cCf}{{Cj{MjCh}}}Cl}{{cCf}{{Cj{MlCh}}}Cl}{{cCf}{{Cj{MnCh}}}Cl}{{cCf}{{Cj{N`Ch}}}Cl}{{Lbc}{{Cj{CnD`}}}Db}{{Ldc}{{Cj{CnD`}}}Db}{{Alc}{{Cj{CnD`}}}Db}{{Lfc}{{Cj{CnD`}}}Db}{{Lhc}{{Cj{CnD`}}}Db}{{Ljc}{{Cj{CnD`}}}Db}{{Llc}{{Cj{CnD`}}}Db}{{Lnc}{{Cj{CnD`}}}Db}{{M`c}{{Cj{CnD`}}}Db}{{Mbc}{{Cj{CnD`}}}Db}{{Mdc}{{Cj{CnD`}}}Db}{{Mfc}{{Cj{CnD`}}}Db}{{Mhc}{{Cj{CnD`}}}Db}{{Mjc}{{Cj{CnD`}}}Db}{{Mlc}{{Cj{CnD`}}}Db}{{Mnc}{{Cj{CnD`}}}Db}{{N`c}{{Cj{CnD`}}}Db}{{cDb}{{Cj{CnD`}}}{}}0000000000000000{{cF`}{{Cj{BhFb}}}{}}0000000{{AlAl}Bd}{{ce}Bd{}{}}000{{cF`}{{Cj{BhFh}}}{}}0000000{{KnFl}Fn}0{{L`Fl}Fn}{{LbFl}Fn}{{LdFl}Fn}{{AlFl}Fn}{{LfFl}Fn}{{LhFl}Fn}{{LjFl}Fn}{{LlFl}Fn}{{LnFl}Fn}{{M`Fl}Fn}{{MbFl}Fn}{{MdFl}Fn}{{MfFl}Fn}{{MhFl}Fn}{{MjFl}Fn}{{MlFl}Fn}{{MnFl}Fn}{{N`Fl}Fn}{cc{}}000000000000000000{{{Ej{Df}}{Gb{EhG`}}}{{Cj{cGd}}}{}}000000000000000000000000011111111111111111111111111111111111111{{L`Cn}{{Cd{Kn}}}}`{ce{}{}}0000000000000000000{c{{Ib{e}}}{}{}}000000000000000000{{}L`}{L`Cn}`{L`{{Cd{c}}}{}}0{{L`Cn}{{Cd{c}}}{}}{{Lbc}CjJl}{{Alc}CjJl}{{Lhc}CjJl}{{Llc}CjJl}{{M`c}CjJl}{{Mdc}CjJl}{{Mhc}CjJl}{{Mlc}CjJl}{L`{{B`{Cn{Cd{Cn}}}}}}{c{{f{Df}}}{}}000000000000000000000000000000000???????????????????{cFd{}}{c{{Cj{e}}}{}{}}0000000000000000000000000000000000000{cKf{}}000000000000000000{cBd{}}00{ce{}{}}000000000000000000``````````````00000000000000{NbNd}{NfNd}{NhNj}{NlNj}{NnNj}{O`Nj}{ObOd}{cc{}}0000008888888{c{{Ib{e}}}{}{}}000000<<<<<<<<<<<<<<;;;;;;;9999999","c":[],"p":[[5,"DynServerModule",734],[5,"ApiEndpoint",735],[5,"Vec",736],[5,"Wallet",0],[10,"Any",737],[10,"IDynCommonModuleInit",735],[5,"DatabaseTransaction",738],[5,"Audit",739],[8,"ModuleInstanceId",740],[10,"Future",741],[5,"Box",742],[5,"Pin",743],[1,"u16"],[5,"UTXOKey",181],[5,"SpendableUTXO",744],[1,"tuple"],[5,"BlockHash",745],[1,"bool"],[5,"DynBitcoindRpc",746],[1,"unit"],[5,"Amount",747],[5,"WalletInit",0],[5,"PendingTransaction",0],[5,"UnsignedTransaction",0],[1,"u32"],[6,"Option",748],[8,"ModuleDecoderRegistry",749],[5,"DecodeError",750],[6,"Result",751],[10,"Read",752],[1,"usize"],[5,"Error",753],[10,"Write",752],[5,"Feerate",747],[1,"u8"],[1,"array"],[6,"WalletOutputV0",744],[6,"WalletOutputError",744],[5,"StatelessWallet",0],[5,"Amount",754],[5,"Script",755],[5,"Rbf",744],[5,"DatabaseVersion",738],[5,"Decoder",740],[1,"slice"],[5,"PeerHandle",735],[5,"ConfigGenModuleParams",756],[10,"Serializer",757],[6,"ErrorImpl",757],[5,"String",758],[10,"Iterator",759],[5,"Error",760],[6,"ProcessPegOutSigError",744],[5,"Formatter",761],[8,"Result",761],[6,"DecodingMode",749],[5,"ModuleRegistry",749],[6,"DecodingError",738],[8,"Result",762],[5,"ServerModuleConsensusConfig",756],[5,"ClientModuleConfig",756],[5,"Error",762],[5,"WalletClientConfig",763],[17,"Output"],[1,"fn"],[5,"BTreeMap",764],[5,"NumPeers",747],[5,"ServerModuleConfig",756],[5,"Database",738],[5,"TaskGroup",765],[5,"PeerId",747],[5,"ServerModuleInitArgs",735],[5,"Request",766],[5,"ModuleKind",740],[5,"WalletConfig",763],[6,"WalletCreationError",744],[1,"u64"],[5,"OutPoint",747],[6,"WalletConsensusItem",744],[5,"DynModuleConsensusItem",740],[6,"WalletInput",744],[5,"DynInput",740],[6,"WalletOutput",744],[5,"DynOutput",740],[5,"TaskHandle",765],[10,"Serializer",767],[5,"PartiallySignedTransaction",768],[5,"PegOutSignatureItem",744],[5,"SupportedModuleApiVersions",769],[5,"DynCommonModuleInit",735],[5,"TypeId",737],[6,"Network",770],[5,"CoreConsensusVersion",769],[5,"ModuleConsensusVersion",769],[6,"DbKeyPrefix",181],[5,"DbKeyPrefixIter",181],[5,"BlockHashKey",181],[5,"BlockHashKeyPrefix",181],[5,"UTXOPrefixKey",181],[5,"UnsignedTransactionKey",181],[5,"UnsignedTransactionPrefixKey",181],[5,"PendingTransactionKey",181],[5,"PendingTransactionPrefixKey",181],[5,"PegOutTxSignatureCI",181],[5,"PegOutTxSignatureCIPrefix",181],[5,"PegOutBitcoinTransaction",181],[5,"PegOutBitcoinTransactionPrefix",181],[5,"BlockCountVoteKey",181],[5,"BlockCountVotePrefix",181],[5,"FeeRateVoteKey",181],[5,"FeeRateVotePrefix",181],[5,"PegOutNonceKey",181],[5,"WALLET_INOUT_SATS",650],[8,"HistogramVec",771],[5,"WALLET_INOUT_FEES_SATS",650],[5,"WALLET_PEGIN_SATS",650],[5,"Histogram",771],[5,"WALLET_PEGIN_FEES_SATS",650],[5,"WALLET_PEGOUT_SATS",650],[5,"WALLET_PEGOUT_FEES_SATS",650],[5,"WALLET_BLOCK_COUNT",650],[8,"IntGauge",772]],"b":[[358,"impl-Debug-for-DbKeyPrefix"],[359,"impl-Display-for-DbKeyPrefix"]]}],\
["fedimint_wasm_tests",{"doc":"","t":"HCHHCHHHHHHHHHHHHHHHHHHHHH","n":["client","faucet","load_or_generate_mnemonic","make_client_builder","tests","gateway_api","generate_invoice","invite_code","pay_invoice","__wbgt_build_client_0","__wbgt_derive_chacha_key_2","__wbgt_receive_1","__wbgt_receive_and_pay_3","__wbgt_test_ecash_4","__wbgt_test_ecash_exact_5","build_client","derive_chacha_key","get_gateway","pay_once","receive","receive_and_pay","receive_once","send_and_recv_ecash_once","send_ecash_exact","test_ecash","test_ecash_exact"],"q":[[0,"fedimint_wasm_tests"],[5,"fedimint_wasm_tests::faucet"],[9,"fedimint_wasm_tests::tests"],[26,"fedimint_core::api"],[27,"fedimint_client"],[28,"anyhow"],[29,"fedimint_core::db"],[30,"fedimint_client"],[31,"wasm_bindgen_test::__rt"],[32,"fedimint_ln_common"],[33,"anyhow"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"{b{{f{d}}}}`{h{{f{{l{j}}}}}}{{}n}`{{}{{f{A`}}}}{Ab{{f{A`}}}}1{Ad{{f{Af}}}}{AhAf}00000{{}{{f{Af}}}}{{}Af}{d{{f{Aj}}}}{{dAj}{{f{AfAl}}}}33{{dAnAj}{{f{Af}}}}{d{{f{AfAl}}}}{{dAn}{{f{AfAl}}}}66","c":[],"p":[[5,"InviteCode",26],[8,"ClientHandleArc",27],[8,"Result",28],[5,"Database",29],[1,"u8"],[1,"array"],[5,"ClientBuilder",27],[5,"String",30],[1,"u64"],[1,"str"],[1,"unit"],[5,"Context",31],[5,"LightningGateway",32],[5,"Error",28],[5,"Amount",33]],"b":[]}],\
["fedimintd",{"doc":"","t":"FFOOOOOOHCOCOOOOOOOOOOSSSSSSSSSSSSSFSFONNOOOONNNNNNOOONNNNNNNNNCONOOHOHNOOONNNNNNNNNONNNNNOFONNNNNNNNNN","n":["Fedimintd","ServerOpts","api_url","bind_api","bind_metrics_api","bind_p2p","bitcoind_rpc","data_dir","default_esplora_server","envs","extra_dkg_meta","fedimintd","finality_delay","network","opts","p2p_url","password","server_gen_params","server_gens","tokio_console_bind","version_hash","with_telemetry","FM_API_URL_ENV","FM_BIND_API_ENV","FM_BIND_METRICS_API_ENV","FM_BIND_P2P_ENV","FM_BITCOIN_NETWORK_ENV","FM_DATA_DIR_ENV","FM_DISABLE_META_MODULE_ENV","FM_EXTRA_DKG_META_ENV","FM_FINALITY_DELAY_ENV","FM_P2P_URL_ENV","FM_PASSWORD_ENV","FM_PORT_ESPLORA_ENV","FM_TOKIO_CONSOLE_BIND_ENV","Fedimintd","SHUTDOWN_TIMEOUT","ServerOpts","api_url","augment_args","augment_args_for_update","bind_api","bind_metrics_api","bind_p2p","bitcoind_rpc","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","data_dir","extra_dkg_meta","finality_delay","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into_request","into_request","metrics","network","new","opts","p2p_url","parse_map","password","run","run","server_gen_params","server_gens","tokio_console_bind","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","version_hash","version_hash","vzip","vzip","with_default_modules","with_module_instance","with_module_kind","with_telemetry","APP_START_TS","__private_field","borrow","borrow_mut","deref","from","into","into_request","try_from","try_into","type_id","vzip"],"q":[[0,"fedimintd"],[22,"fedimintd::envs"],[35,"fedimintd::fedimintd"],[91,"fedimintd::fedimintd::metrics"],[103,"bitcoin::network::constants"],[104,"fedimint_core::envs"],[105,"clap_builder::builder::command"],[106,"clap_builder::parser::matches::arg_matches"],[107,"clap_builder"],[108,"core::result"],[109,"clap_builder::util::id"],[110,"core::option"],[111,"tonic::request"],[112,"anyhow"],[113,"alloc::string"],[114,"alloc::collections::btree::map"],[115,"fedimint_core::task"],[116,"fedimint_core::config"],[117,"fedimint_core::config"],[118,"fedimint_core::core"],[119,"fedimint_core::config"],[120,"core::marker"],[121,"core::marker"]],"d":["<code>fedimintd</code> builder","","Our API address for clients to connect to us","Address we bind to for exposing the API","","Address we bind to for federation communication","","Path to folder containing federation config files","","","List of default meta values to use during config …","","The number of blocks the federation stays behind the …","The bitcoin network that fedimint will be running on","","Our external address for communicating with our peers","Password to encrypt sensitive config files","","","Enable tokio console logging","","Enable telemetry logging","","","","","","","","","","","","","","<code>fedimintd</code> builder","Time we will wait before forcefully shutting down tasks","","Our API address for clients to connect to us","","","Address we bind to for exposing the API","","Address we bind to for federation communication","","","","","","","","Path to folder containing federation config files","List of default meta values to use during config …","The number of blocks the federation stays behind the …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The bitcoin network that fedimint will be running on","Start a new custom <code>fedimintd</code>","","Our external address for communicating with our peers","","Password to encrypt sensitive config files","","Block thread and run a Fedimintd server","","","Enable tokio console logging","","","","","","","","","Get the version hash this <code>fedimintd</code> will report for …","","","","Attach default server modules to Fedimintd instance","Attach additional module instance with parameters","Attach a server module kind to the Fedimintd instance","Enable telemetry logging","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,5,5,5,5,12,5,0,0,5,0,5,5,12,5,5,12,12,5,12,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,12,12,5,12,5,5,5,5,5,5,12,5,5,5,5,12,5,12,5,0,5,12,12,5,0,5,0,12,12,12,5,12,5,12,5,12,5,5,5,12,12,12,5,12,12,12,5,0,27,27,27,27,27,27,27,27,27,27,27],"f":"````````{bd}``````````````````````````````{ff}0````{ce{}{}}000{{}f}0```{cc{}}0{h{{n{jl}}}}0{{}{{Ab{A`}}}}44{c{{Ad{e}}}{}{}}0``{Af{{Aj{Ah}}}}``{Af{{Aj{{An{AlAl}}}}}}`{{jB`BbBdAl}{{Aj{Bf}}}}{AhBh}```{c{{n{e}}}{}{}}000{cBj{}}0{{jh}{{n{Bfl}}}}0{AhAf}`=={AhAh}{{AhBlc}AhBn}{{Ahc}Ah{C`CbCd}}```{ce{}{}}0{CfCh}{cc{}}2>9982","c":[],"p":[[6,"Network",103],[5,"BitcoinRpcConfig",104],[5,"Command",105],[5,"ArgMatches",106],[5,"ServerOpts",35],[8,"Error",107],[6,"Result",108],[5,"Id",109],[6,"Option",110],[5,"Request",111],[1,"str"],[5,"Fedimintd",35],[8,"Result",112],[5,"String",113],[5,"BTreeMap",114],[5,"TaskGroup",115],[8,"ServerModuleInitRegistry",116],[8,"ServerModuleConfigGenParamsRegistry",116],[1,"unit"],[1,"never"],[5,"TypeId",117],[5,"ModuleKind",118],[10,"ModuleInitParams",116],[10,"ServerModuleInit",119],[10,"Send",120],[10,"Sync",120],[5,"APP_START_TS",91],[8,"IntGaugeVec",121]],"b":[]}],\
["gateway_cli",{"doc":"","t":"PPPFGPPPPPFPPPPONNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNHHOONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOO","n":["Address","Backup","Balance","Cli","Commands","Completion","Config","ConnectFed","Info","LeaveFed","PerFederationRoutingFees","Restore","SetConfiguration","VersionHash","Withdraw","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command","command_for_update","federation_id","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_str","group_id","has_subcommand","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","main","print_response","routing_fees","rpcpassword","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","address","amount","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","invite_code","network","num_route_hints","password","per_federation_routing_fees","routing_fees","shell"],"q":[[0,"gateway_cli"],[74,"gateway_cli::Commands"],[90,"clap_builder::builder::command"],[91,"clap_builder::parser::matches::arg_matches"],[92,"clap_builder"],[93,"core::result"],[94,"clap_builder::util::id"],[95,"core::option"],[96,"tonic::request"],[97,"tonic::request"],[98,"serde::ser"],[99,"core::any"]],"d":["Generate a new peg-in address, funds sent to it can later …","Make a backup of snapshot of all ecash","Check gateway balance","","","","Display config information about the Gateways federation","Register federation with the gateway","Display high-level information about the Gateway","Leave a federation","","Restore ecash from last available snapshot or from scratch","","Display CLI version hash","Claim funds from a gateway federation","The address of the gateway webserver","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","WARNING: Passing in a password from the command line may …","","","","","","","","","","","","","","","","","","The address to send the funds to","The amount to withdraw","","","","","","","","InviteCode code to connect to the federation","","","","Format federation id,base msat,proportional to millionths …","Default routing fee for all new federations. Setting it won…",""],"i":[8,8,8,0,0,8,8,8,8,8,0,8,8,8,8,5,5,5,8,8,5,8,2,5,8,2,2,2,5,5,5,2,5,8,2,5,8,5,8,2,2,2,5,8,5,8,2,5,5,8,8,2,2,0,0,2,5,2,5,8,2,5,8,2,5,8,2,5,8,5,8,5,8,2,18,18,19,20,21,18,22,23,24,25,26,26,26,26,26,27],"f":"````````````````{bb}000{ce{}{}}00000{dd}{{ce}f{}{}}{{}b}`0`{cc{}}00{h{{n{jl}}}}{h{{n{A`l}}}}1022{Ab{{n{dc}}}{}}{{}{{Af{Ad}}}}{AbAh}999{c{{Aj{e}}}{}{}}{c{{Al{e}}}{}{}}1001{{}{{An{f}}}}{cfB`}``={c{{n{e}}}{}{}}00000{cBb{}}00{{jh}{{n{fl}}}}{{A`h}{{n{fl}}}}10{ce{}{}}00````````````````","c":[],"p":[[5,"Command",90],[5,"PerFederationRoutingFees",0],[1,"unit"],[5,"ArgMatches",91],[5,"Cli",0],[8,"Error",92],[6,"Result",93],[6,"Commands",0],[1,"str"],[5,"Id",94],[6,"Option",95],[1,"bool"],[5,"Request",96],[5,"Request",96],[8,"Result",97],[10,"Serialize",98],[5,"TypeId",99],[15,"Withdraw",74],[15,"Config",74],[15,"Balance",74],[15,"Address",74],[15,"LeaveFed",74],[15,"Backup",74],[15,"Restore",74],[15,"ConnectFed",74],[15,"SetConfiguration",74],[15,"Completion",74]],"b":[]}],\
["gateway_cln_extension",{"doc":"","t":"GFFFPFFIISFPPONNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNOHONONONNNNNNNNNNNNNNNNNNNNNHNNOONOONNHONNNOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ClnExtensionError","ClnExtensionOpts","ClnHtlcInterceptor","ClnRpcService","Error","Htlc","HtlcAccepted","HtlcInterceptionSender","HtlcOutcomeSender","MAX_HTLC_PROCESSING_DURATION","Onion","RpcError","RpcWrongResponse","amount_msat","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chan","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","command","command_for_update","complete_htlc","convert_short_channel_id","create_invoice","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","fm_gateway_listen","fmt","fmt","fmt","fmt","fmt","forward_msat","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_node_info","get_route_hints","group_id","htlc","htlc_processing_failure","id","info","inner","intercept_htlc","interceptor","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","main","new","new","onion","outcomes","pay_invoice","payment_hash","resource_span","route_htlcs","rpc_client","scid_to_u64","sender","serialize","serialize","serialize","short_channel_id","short_channel_id","socket","source","task_group","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"gateway_cln_extension"],[170,"clap_builder::builder::command"],[171,"ln_gateway::gateway_lnrpc"],[172,"tonic::request"],[173,"core::future::future"],[174,"alloc::boxed"],[175,"core::pin"],[176,"anyhow"],[177,"core::result"],[178,"ln_gateway::gateway_lnrpc"],[179,"erased_serde::ser"],[180,"erased_serde::ser"],[181,"core::fmt"],[182,"core::fmt"],[183,"clap_builder::parser::matches::arg_matches"],[184,"clap_builder"],[185,"ln_gateway::gateway_lnrpc"],[186,"core::option"],[187,"serde_json::value"],[188,"secp256k1::key"],[189,"alloc::string"],[190,"tonic::request"],[191,"alloc::sync"],[192,"cln_plugin"],[193,"ln_gateway::gateway_lnrpc"],[194,"fedimint_cln_rpc::primitives"],[195,"core::error"],[196,"core::any"]],"d":["","","Functional structure to filter intercepted HTLCs into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateway CLN extension service listen address","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Creates a new RPC client for a request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,24,0,0,0,0,0,0,24,24,2,27,27,7,27,2,3,4,24,5,7,27,2,3,4,24,5,48,2,3,4,5,2,3,4,5,2,2,27,27,7,5,7,2,3,4,2,3,4,2,3,4,27,2,3,4,24,24,3,7,27,2,3,4,24,24,24,5,27,27,2,2,3,3,4,4,5,5,7,7,27,4,0,2,7,49,5,7,7,27,2,3,4,24,5,7,7,27,27,2,2,3,3,4,4,24,24,5,5,0,7,5,4,5,7,2,49,7,7,0,5,2,3,4,2,3,7,24,7,2,3,4,5,24,7,27,2,3,4,24,5,7,27,2,3,4,24,5,7,27,2,3,4,24,5,27,27,24,24,24,7,27,2,3,4,24,5],"f":"``````````````{bb}0{ce{}{}}0000000000000`{dd}{ff}{hh}{jj}{{ce}l{}{}}000``{{}b}0{{n{Ab{A`}}}{{Ah{{Af{Ad}}}}}}{Aj{{B`{AlAn}}}}{{n{Ab{Bb}}}{{Ah{{Af{Ad}}}}}}{c{{B`{d}}}Bd}{c{{B`{f}}}Bd}{c{{B`{h}}}Bd}{{cBf}{{B`{lBh}}}{}}00{{cBf}{{B`{lBj}}}{}}00`{{dBl}Bn}{{fBl}Bn}{{hBl}Bn}{{C`Bl}Bn}0`{cc{}}00000{AnC`}{CbC`}2{Cd{{B`{CfCh}}}}033333333{{n{Ab{Cj}}}{{Ah{{Af{Ad}}}}}}{{n{Ab{Cl}}}{{Ah{{Af{Ad}}}}}}{{}{{D`{Cn}}}}`{{}Db}`{n{{B`{{Dh{DdDfDf}}C`}}}}`{{jh}Db}`{ce{}{}}000000{c{{Ab{e}}}{}{}}{c{{Dj{e}}}{}{}}010110010110{{}{{B`{lAn}}}}{{}{{B`{{Dh{nDl{E`{{Dn{j}}}}}}C`}}}}{{}j}``{{n{Ab{Eb}}}{{Ah{{Af{Ad}}}}}}``<{n{{B`{EdC`}}}}{EfAl}`{{dc}B`Eh}{{fc}B`Eh}{{hc}B`Eh}```{C`{{D`{Ej}}}}`<<<<{cDf{}}{c{{B`{e}}}{}{}}0000000000000{cEl{}}000000{{CfCd}{{B`{lCh}}}}0{cEn{}}00{ce{}{}}000000","c":[],"p":[[5,"Command",170],[5,"Htlc",0],[5,"Onion",0],[5,"HtlcAccepted",0],[5,"ClnHtlcInterceptor",0],[1,"unit"],[5,"ClnRpcService",0],[5,"InterceptHtlcResponse",171],[5,"Request",172],[10,"Future",173],[5,"Box",174],[5,"Pin",175],[1,"str"],[1,"u64"],[5,"Error",176],[6,"Result",177],[5,"CreateInvoiceRequest",171],[10,"Deserializer",178],[10,"Serializer",179],[6,"ErrorImpl",179],[5,"Error",180],[5,"Formatter",181],[8,"Result",181],[6,"ClnExtensionError",0],[5,"RpcError",182],[5,"ArgMatches",183],[5,"ClnExtensionOpts",0],[8,"Error",184],[5,"EmptyRequest",171],[5,"GetRouteHintsRequest",171],[5,"Id",185],[6,"Option",186],[6,"Value",187],[5,"PublicKey",188],[5,"String",189],[1,"tuple"],[5,"Request",172],[6,"SocketAddr",190],[5,"Arc",191],[5,"Plugin",192],[5,"PayInvoiceRequest",171],[5,"ClnRpc",193],[5,"ShortChannelId",182],[10,"Serializer",194],[10,"Error",195],[5,"TypeId",196],[1,"bool"],[8,"HtlcInterceptionSender",0],[8,"HtlcOutcomeSender",0]],"b":[[59,"impl-Debug-for-ClnExtensionError"],[60,"impl-Display-for-ClnExtensionError"],[68,"impl-From%3CError%3E-for-ClnExtensionError"],[69,"impl-From%3CRpcError%3E-for-ClnExtensionError"]]}],\
["gatewayd",{"doc":"This crate provides <code>gatewayd</code>, the Fedimint gateway binary.","t":"H","n":["main"],"q":[[0,"gatewayd"],[1,"anyhow"],[2,"core::result"]],"d":[""],"i":[0],"f":"{{}{{f{bd}}}}","c":[],"p":[[1,"unit"],[5,"Error",1],[6,"Result",2]],"b":[]}],\
["hkdf",{"doc":"This crate implements the RFC5869 hash based key …","t":"KTRFRTMMENNNNNNNNMMNMNCNMNONNNNFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BitcoinHash","DISPLAY_BACKWARD","Engine","Hkdf","Inner","LEN","all_zeros","as_inner","bitcoin_hashes","borrow","borrow_mut","clone","clone_into","derive","derive_hmac","engine","from","from_engine","from_inner","from_prk","from_slice","hash","hashes","into","into_inner","new","prk","to_owned","try_from","try_into","type_id","Hash160","Ripemd160","Sha1","Sha256","Sha256d","Sha512","Siphash24","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","engine","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine_to_u64","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u64","hash","hash","hash","hash","hash","hash","hash","hash_to_u64_with_keys","hash_with_keys","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"hkdf"],[31,"hkdf::hashes"],[284,"bitcoin_hashes"],[285,"bitcoin_hashes::hex"],[286,"core::clone"],[287,"bitcoin_hashes::hmac"],[288,"bitcoin_hashes::error"],[289,"core::result"],[290,"core::option"],[291,"core::any"],[292,"core::cmp"],[293,"serde::de"],[294,"bitcoin_hashes::sha256"],[295,"core::fmt"],[296,"core::fmt"],[297,"core::iter::traits::exact_size"],[298,"core::iter::traits::double_ended"],[299,"bitcoin_hashes::sha512"],[300,"bitcoin_hashes::ripemd160"],[301,"bitcoin_hashes::sha1"],[302,"bitcoin_hashes::siphash24"],[303,"core::hash"],[304,"core::slice::index"],[305,"serde::ser"],[306,"alloc::string"]],"d":["Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","Implements the RFC5869 hash based key derivation function …","The byte array that represents the hash internally.","Length of the hash, in bytes.","Returns an all zero hash.","Unwraps the hash and returns a reference to the underlying …","","","","","","Run HKDF-expand to generate new key material","Run HKDF-expand to generate new key material with …","Constructs a new engine.","Returns the argument unchanged.","Produces a hash from the current state of a given engine.","Constructs a hash from the underlying byte array.","Construct the HKDF from a pseudo random key that has the …","Copies a byte slice into a hash object.","Hashes some bytes.","","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","Run HKDF-extract and keep the resulting pseudo random key …","","","","","","Output of the Bitcoin HASH160 hash function.","Output of the RIPEMD160 hash function.","Output of the SHA1 hash function.","Output of the SHA256 hash function.","Output of the SHA256d hash function.","Output of the SHA256 hash function.","Output of the SipHash24 hash function.","","","","","","","","","","","","","","","","","","","","","","Returns the (little endian) 64-bit integer representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Produces a hash as <code>u64</code> from the current state of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a hash from its (little endian) 64-bit integer …","","","","","","","","Hashes the given data directly to u64 with an engine with …","Hashes the given data with an engine with the provided …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,3,3,3,3,0,6,6,6,6,6,6,3,6,3,3,6,3,3,0,6,3,6,6,6,6,6,6,0,0,0,0,0,0,0,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,23,17,17,18,18,19,19,20,20,21,21,22,22,23,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,17,18,19,20,21,22,23,17,18,19,20,21,22,23,18,22,17,18,19,20,21,22,23,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,23,17,18,19,20,21,22,23,23,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23,17,18,19,20,21,22,23],"f":"``````{{}{{f{}{{b{c}}{d{e}}}}}hj}{{{f{}{{b{c}}{d{e}}}}}ehj}`{ce{}{}}0{{{l{c}}}{{l{c}}}{nf}}{{ce}A`{}{}}{{{l{c}}{Ad{Ab}}}{{Af{Ab}}}f}{{{l{c}}{Ad{Ab}}}{{Ah{c}}}f}{{}c{}}{cc{}}{c{{f{}{{b{c}}{d{e}}}}}hj}{c{{f{}{{b{e}}{d{c}}}}}jh}{{{Ah{c}}}{{l{c}}}f}{{{Ad{Ab}}}{{Al{{f{}{{b{c}}{d{e}}}}Aj}}}hj}{{{Ad{Ab}}}{{f{}{{b{c}}{d{e}}}}}hj}`;<{{{Ad{Ab}}{An{{Ad{Ab}}}}}{{l{c}}}f}`<{c{{Al{e}}}{}{}}0{cB`{}}```````{{}Bb}{{}Bd}{{}Bf}{{}Bh}{{}Bj}{{}Bl}{{}Bn}{Bb}{Bd}{Bf}{Bh}{Bj}{Bl}{Bn}{Bb{{Ad{Ab}}}}{Bd{{Ad{Ab}}}}{Bf{{Ad{Ab}}}}{Bh{{Ad{Ab}}}}{Bj{{Ad{Ab}}}}{Bl{{Ad{Ab}}}}{Bn{{Ad{Ab}}}}{BnC`}{ce{}{}}87060500430020000000{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{{ce}A`{}{}}000000{{BbBb}Cb}{{BdBd}Cb}{{BfBf}Cb}{{BhBh}Cb}{{BjBj}Cb}{{BlBl}Cb}{{BnBn}Cb}{{}Bb}{Bb}{Bd}{Bf}{Bh}{Bj}{Bl}{Bn}{c{{Al{Bb}}}Cd}{c{{Al{Bd}}}Cd}{c{{Al{Bf}}}Cd}{c{{Al{Bh}}}Cd}{c{{Al{Bj}}}Cd}{c{{Al{Bl}}}Cd}{c{{Al{Bn}}}Cd}{{}Cf}0{{BbBb}Ch}{{BdBd}Ch}{{BfBf}Ch}{{BhBh}Ch}{{BjBj}Ch}{{BlBl}Ch}{{BnBn}Ch}{{BbCj}{{Al{A`Cl}}}}00{{BdCj}{{Al{A`Cl}}}}00{{BfCj}{{Al{A`Cl}}}}00{{BhCj}{{Al{A`Cl}}}}00{{BjCj}{{Al{A`Cl}}}}00{{BlCj}{{Al{A`Cl}}}}00{{BnCj}{{Al{A`Cl}}}}00{cc{}}000000{c{{Al{eCn}}}{{Db{}{{D`{{Al{AbCn}}}}}}DdDf}{}}000000{DhBb}{CfBd}{DjBf}{DlBh}{CfBj}{CfBl}{DnBn}{DnC`}{{}Bb}{{}Bd}{{}Bf}{{}Bh}{{}Bj}{{}Bl}{{}Bn}{{{Ad{Ab}}}{{Al{BbAj}}}}{{{Ad{Ab}}}{{Al{BdAj}}}}{{{Ad{Ab}}}{{Al{BfAj}}}}{{{Ad{Ab}}}{{Al{BhAj}}}}{{{Ad{Ab}}}{{Al{BjAj}}}}{{{Ad{Ab}}}{{Al{BlAj}}}}{{{Ad{Ab}}}{{Al{BnAj}}}}6543210{E`{{Al{Bb}}}}{E`{{Al{Bd}}}}{E`{{Al{Bf}}}}{E`{{Al{Bh}}}}{E`{{Al{Bj}}}}{E`{{Al{Bl}}}}{E`{{Al{Bn}}}}{C`Bn}{{Bbc}A`Eb}{{Bdc}A`Eb}{{Bfc}A`Eb}{{Bhc}A`Eb}{{Bjc}A`Eb}{{Blc}A`Eb}{{Bnc}A`Eb}{{C`C`{Ad{Ab}}}C`}{{C`C`{Ad{Ab}}}Bn}{{Bbc}{}{{Ed{{Ad{Ab}}}}}}{{Bdc}{}{{Ed{{Ad{Ab}}}}}}{{Bfc}{}{{Ed{{Ad{Ab}}}}}}{{Bhc}{}{{Ed{{Ad{Ab}}}}}}{{Bjc}{}{{Ed{{Ad{Ab}}}}}}{{Blc}{}{{Ed{{Ad{Ab}}}}}}{{Bnc}{}{{Ed{{Ad{Ab}}}}}}{ce{}{}}000000{Bb}{Bd}{Bf}{Bh}{Bj}{Bl}{Bn}{{BbBb}{{An{Cb}}}}{{BdBd}{{An{Cb}}}}{{BfBf}{{An{Cb}}}}{{BhBh}{{An{Cb}}}}{{BjBj}{{An{Cb}}}}{{BlBl}{{An{Cb}}}}{{BnBn}{{An{Cb}}}}{{Bbc}AlEf}{{Bdc}AlEf}{{Bfc}AlEf}{{Bhc}AlEf}{{Bjc}AlEf}{{Blc}AlEf}{{Bnc}AlEf}{cEh{}}000000{ce{}{}}0000001111111{c{{Al{e}}}{}{}}0000000000000{cB`{}}000000","c":[],"p":[[17,"Engine"],[17,"Inner"],[10,"BitcoinHash",0],[10,"HashEngine",284],[10,"FromHex",285],[5,"Hkdf",0],[10,"Clone",286],[1,"unit"],[1,"u8"],[1,"slice"],[1,"array"],[5,"Hmac",287],[6,"Error",288],[6,"Result",289],[6,"Option",290],[5,"TypeId",291],[5,"Sha512",31],[5,"Hash160",31],[5,"Ripemd160",31],[5,"Sha1",31],[5,"Sha256",31],[5,"Sha256d",31],[5,"Siphash24",31],[1,"u64"],[6,"Ordering",292],[10,"Deserializer",293],[5,"HashEngine",294],[1,"bool"],[5,"Formatter",295],[5,"Error",295],[6,"Error",285],[17,"Item"],[10,"Iterator",296],[10,"ExactSizeIterator",297],[10,"DoubleEndedIterator",298],[5,"HashEngine",299],[5,"HashEngine",300],[5,"HashEngine",301],[5,"HashEngine",302],[1,"str"],[10,"Hasher",303],[10,"SliceIndex",304],[10,"Serializer",305],[5,"String",306]],"b":[[126,"impl-LowerHex-for-Hash"],[127,"impl-Display-for-Hash"],[128,"impl-Debug-for-Hash"],[129,"impl-LowerHex-for-Hash"],[130,"impl-Display-for-Hash"],[131,"impl-Debug-for-Hash"],[132,"impl-LowerHex-for-Hash"],[133,"impl-Debug-for-Hash"],[134,"impl-Display-for-Hash"],[135,"impl-LowerHex-for-Hash"],[136,"impl-Debug-for-Hash"],[137,"impl-Display-for-Hash"],[138,"impl-LowerHex-for-Hash"],[139,"impl-Display-for-Hash"],[140,"impl-Debug-for-Hash"],[141,"impl-LowerHex-for-Hash"],[142,"impl-Display-for-Hash"],[143,"impl-Debug-for-Hash"],[144,"impl-LowerHex-for-Hash"],[145,"impl-Debug-for-Hash"],[146,"impl-Display-for-Hash"]]}],\
["ln_gateway",{"doc":"","t":"PFPPPGSSSSSPPPPPPPIPPSFPGFFGPSPPPPPPPPFPPPPSPPFSSGIPIGPPPPPPPPPPOOONNNNNNNNNNNNNNNNNNNNNNNNNCOOONNNNNNNNNNNNNNNNOCNCNNNNNNNNNNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOOOOOOONNOOOONNNOOOONNOOOONNNNNNCNONNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNOFNNNNNNNNNNNNNNOONNNNNNOPFGFFPFFSFPFFFFPFPFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOHOOONNNOONOOOOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSFFFFFFFFFFFOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCOOOOOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNKFRFNONNNNNNNNNNNMMNNNNNNNNNMMONNNNNNNNNNONONMNNNMNONNNNNNNNNNNFFONNNNNNNNNNONNNNNNNNNNNNNNONONONNNNNNOOONNNNNNNNNNGFPFPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNFFFGFPPNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNOONNONNNNCNCNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNPPSFGFPPPNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNPFPFGFPNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPFKKGGPSNNNNNNNNMNCNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNOCMNMMNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOPIFPINNNNONNNNNNNNNNNNNNNFISONNNONNNNNNNNNONONNNHNNNNNONNNNHFFFFFFFFFFFFFSFOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNPPFGIPPNONNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHPPPPPPFFFGGGGFPPPPPPPPPPFONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNOONNONNCOONOONNNONNNONNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOPGFPPPFFGPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPFFFFFGFPPPPPPPPPPPGFGPFPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOOOOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOO","n":["ClientStateMachineError","ClientsJoinLock","Configuring","Connected","ContractExpired","CreateInvoiceErrorV2","DB_FILE","DEFAULT_FEES","DEFAULT_MODULE_KINDS","DEFAULT_NETWORK","DEFAULT_NUM_ROUTE_HINTS","DatabaseError","Disconnected","Disconnected","Err","Failure","FederationAlreadyConnected","FederationError","FederationToClientMap","FederationUnreachable","FinalizationError","GW_ANNOUNCEMENT_TTL","Gateway","GatewayConfigurationError","GatewayError","GatewayOpts","GatewayParameters","GatewayState","HashAlreadyRegistered","INITIAL_SCID","IncorrectAmount","Initializing","InsufficientFunds","InvalidContract","InvalidInvoiceHash","InvalidMetadata","InvoiceExpired","InvoiceMissingAmount","LightningContext","LightningRpcError","NodeError","NotOurKey","NotOurKey","OUTGOING_CLTV_DELTA_V2","Ok","OutgoingPaymentError","PrettyInterceptHtlcRequest","ROUTE_HINT_RETRIES","ROUTE_HINT_RETRY_SLEEP","ReceiveErrorV2","Result","Running","ScidToFederationMap","SendPaymentErrorV2","TimeoutTooClose","Unbalanced","UnconfirmedContract","Underfunded","UnexpectedState","UnknownDecryptionContract","UnknownFederation","UnknownFederationId","UnknownFederationId","UnsupportedNetwork","alloc","alloc","api_addr","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_federation_network","client","client_builder","client_joining_lock","clients","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command_for_update","create_invoice_v2","create_invoice_via_lnrpc_v2","data_dir","db","dump_database","envs","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fees","fees","fetch_lightning_node_info","fetch_lightning_route_hints","fetch_lightning_route_hints_try","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_config","gateway_db","gateway_id","gateway_lnrpc","gateway_module_v2","get_gateway_configuration","get_gateway_id","get_lightning_context","group_id","handle_address_msg","handle_backup_msg","handle_balance_msg","handle_connect_federation","handle_disconnect","handle_get_federation_config","handle_get_info","handle_htlc_stream","handle_leave_federation","handle_pay_invoice_msg","handle_restore_msg","handle_set_configuration_msg","handle_withdraw_msg","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","leave_all_federations","lightning","lightning_alias","lightning_builder","lightning_network","lightning_public_key","listen","listen","listen","lnrpc","load_clients","make_federation_info","max_used_scid","mode","network","network","new","new_with_custom_registry","new_with_default_modules","num_route_hints","num_route_hints","password","password","payment_fees_v2","payment_info_v2","phantom","phantom","ptr","ptr","public_key_v2","receive_v2","register_clients_timer","register_federations","remove_client","remove_client_hack","rpc","run","scid_to_federation","select_client","send_payment_v2","set_gateway_state","source","start_gateway","state","state_machine","to_gateway_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","update_from_arg_matches","update_from_arg_matches_mut","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ip","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","validate_ipv6","versioned_api","versioned_api","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","lightning_context","GatewayClientBuilder","borrow","borrow_mut","build","clone","clone_into","fmt","from","from_ref","from_ref","into","into_request","into_request","load_configs","new","primary_module","registry","save_config","to_owned","try_from","try_into","type_id","vzip","work_dir","CreateInvoicePayload","CreateInvoicePayloadKey","DbKeyPrefix","DbKeyPrefixIter","FederationConfig","FederationConfig","FederationIdKey","FederationIdKeyPrefix","GATEWAYD_DATABASE_VERSION","GatewayConfiguration","GatewayConfiguration","GatewayConfigurationKey","GatewayConfigurationKeyV0","GatewayConfigurationV0","GatewayPublicKey","GatewayPublicKey","PreimageAuthentication","PreimageAuthentication","PreimageAuthenticationPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_gatewayd_database_migrations","hash","hashed_password","id","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","iter","len","marker","migrate_to_v1","mint_channel_id","network","network","next","next_back","nth","num_route_hints","num_route_hints","partial_cmp","password","password_salt","payment_hash","routing_fees","routing_fees","serialize","serialize","serialize","size_hint","timelock_delta","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FM_CLN_EXTENSION_LISTEN_ADDRESS_ENV","FM_GATEWAY_API_ADDR_ENV","FM_GATEWAY_DATA_DIR_ENV","FM_GATEWAY_FEES_ENV","FM_GATEWAY_LIGHTNING_ADDR_ENV","FM_GATEWAY_LISTEN_ADDR_ENV","FM_GATEWAY_NETWORK_ENV","FM_GATEWAY_PASSWORD_ENV","FM_LND_MACAROON_ENV","FM_LND_RPC_ADDR_ENV","FM_LND_TLS_CERT_ENV","FM_NUMBER_OF_ROUTE_HINTS_ENV","CreateInvoiceRequest","CreateInvoiceResponse","EmptyRequest","EmptyResponse","GetNodeInfoResponse","GetRouteHintsRequest","GetRouteHintsResponse","InterceptHtlcRequest","InterceptHtlcResponse","PayInvoiceRequest","PayInvoiceResponse","action","alias","amount_msat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","description","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expiry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_lightning_client","gateway_lightning_server","get_route_hints_response","htlc_id","htlc_id","incoming_amount_msat","incoming_chan_id","incoming_chan_id","incoming_expiry","intercept_htlc_response","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","max_delay","max_fee_msat","network","num_route_hints","outgoing_amount_msat","payment_hash","payment_hash","payment_hash","preimage","pub_key","route_hints","short_channel_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GatewayLightningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","complete_htlc","connect","create_invoice","fmt","from","from_ref","from_ref","get_node_info","get_route_hints","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","pay_invoice","route_htlcs","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GatewayLightning","GatewayLightningServer","RouteHtlcsStream","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","call","clone","clone","clone_into","clone_into","complete_htlc","create_invoice","fmt","fmt","from","from","from_arc","from_ref","from_ref","from_ref","from_ref","get_node_info","get_route_hints","inner","into","into","into_make_service","into_make_service","into_make_service_with_connect_info","into_request","into_request","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","pay_invoice","poll_ready","poll_ready","poll_ready","route_htlcs","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","cltv_expiry_delta","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","from_ref","from_ref","hops","htlc_maximum_msat","htlc_maximum_msat","htlc_minimum_msat","htlc_minimum_msat","into","into","into_request","into_request","into_request","into_request","proportional_millionths","short_channel_id","src_node_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Action","Cancel","Cancel","Forward","Forward","Settle","Settle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","merge","preimage","reason","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","GatewayClientContextV2","GatewayClientInitV2","GatewayClientModuleV2","GatewayClientStateMachinesV2","GatewayOperationMetaV2","Receive","Send","as_any","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","context","context","create_exact_output","create_sufficient_input","database_version","decoder","decoder","decoder","decoder","deserialize","do_erased_serialize","dump_database","dump_database","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","federation_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway","gateway","gateway","get_balance","get_database_migrations","handle_cli_command","hash","init","init","input_amount","input_amount","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keypair","module_api","module_kind","module_kind","notifier","operation_id","operation_id","output_amount","output_amount","receive_sm","recover","send_sm","serialize","start_receive_state_machine","start_send_state_machine","subscribe_balance_changes","subscribe_receive","subscribe_send","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","tpe_agg_pk","tpe_pks","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Failure","Funding","RETRY_DELAY","ReceiveSMCommon","ReceiveSMState","ReceiveStateMachine","Refunding","Rejected","Success","as_any","await_funding_rejected","await_outcome_ready","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","out_point","refund_keypair","state","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","transition_funding_rejected","transition_outcome_ready","transitions","transitions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","Cancelled","Claiming","Claiming","SendSMCommon","SendSMState","SendStateMachine","Sending","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_keypair","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","max_delay","max_fee_msat","operation_id","operation_id","operation_id","outpoints","preimage","send_payment","state","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","transition_send_payment","transitions","transitions","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","Cln","FailedPayment","FailedToCompleteHtlc","FailedToConnect","FailedToGetInvoice","FailedToGetNodeInfo","FailedToGetRouteHints","FailedToOpenChannel","FailedToRouteHtlcs","GatewayLightningBuilder","ILnRpcClient","LightningBuilder","LightningMode","LightningRpcError","Lnd","MAX_LIGHTNING_RETRIES","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","cln","clone","clone","clone","clone_into","clone_into","clone_into","complete_htlc","consensus_decode_from_finite_reader","consensus_encode","consensus_encode_dyn","create_invoice","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","has_subcommand","hash","info","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lightning_mode","lnd","pay","pay_private","route_htlcs","routehints","serialize","serialize","supports_private_payments","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","cln_extension_addr","lnd_macaroon","lnd_rpc_addr","lnd_tls_cert","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","Err","HtlcResult","NetworkLnRpcClient","Ok","RouteHtlcStream","borrow","borrow_mut","complete_htlc","connect","connection_url","create_invoice","fmt","from","info","into","into_request","into_request","new","pay","route_htlcs","routehints","try_from","try_into","type_id","vzip","GatewayLndClient","HtlcSubscriptionSender","LND_PAYMENT_TIMEOUT_SECONDS","address","borrow","borrow_mut","cancel_htlc","chan","complete_htlc","connect","create_invoice","fmt","from","info","into","into_request","into_request","lnd_sender","lookup_payment","macaroon","new","pay","pay_private","route_hints_to_lnd","route_htlcs","routehints","send_lnd_response","spawn_interceptor","supports_private_payments","tls_cert","try_from","try_into","type_id","vzip","wire_features_to_lnd_feature_vec","BackupPayload","BalancePayload","ConfigPayload","ConnectFedPayload","DepositAddressPayload","FederationInfo","FederationRoutingFees","GatewayFedConfig","GatewayInfo","InfoPayload","LeaveFedPayload","RestorePayload","SetConfigurationPayload","V1_API_ENDPOINT","WithdrawPayload","address","amount","balance_msat","base_msat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channels","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federations","federations","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","gateway_id","gateway_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","lightning_alias","lightning_pub_key","network","network","num_route_hints","password","per_federation_routing_fees","proportional_millionths","route_hints","routing_fees","routing_fees","rpc_client","rpc_server","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadStatus","Err","GatewayRpcClient","GatewayRpcError","GatewayRpcResult","Ok","RequestError","backup","base_url","borrow","borrow","borrow_mut","borrow_mut","call","call_get","call_post","client","connect_federation","fmt","fmt","from","from","from","get_balance","get_config","get_deposit_address","get_info","get_info_legacy","into","into","into_request","into_request","into_request","into_request","leave_federation","new","password","restore","set_configuration","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","with_password","withdraw","address","auth_after_config_middleware","auth_middleware","authenticate","backup","balance","configuration","connect_fed","create_invoice_v2","extract_bearer_token","get_gateway_id","handle_post_info","hash_password","info","leave_fed","pay_invoice","payment_info_v2","restore","run_webserver","send_payment_v2","set_configuration","v1_routes","withdraw","Canceled","Complete","Created","Fail","Funding","FundingFailed","GatewayClientContext","GatewayClientInit","GatewayClientModule","GatewayClientStateMachines","GatewayExtPayStates","GatewayExtReceiveStates","GatewayMeta","Htlc","OfferDoesNotExist","Pay","Pay","Preimage","Preimage","Receive","Receive","RefundError","RefundSuccess","Success","SwapParameters","amount_msat","as_any","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","client_ctx","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complete","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_funding_incoming_contract_output_from_htlc","create_funding_incoming_contract_output_from_swap","create_sufficient_input","database_version","decoder","decoder","decoder","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","dump_database","dump_database","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway","gateway","gateway","gateway_handle_direct_swap","gateway_handle_intercepted_htlc","gateway_pay_bolt11_invoice","gateway_subscribe_ln_pay","gateway_subscribe_ln_receive","get_balance","get_database_migrations","handle_cli_command","hash","htlc_id","incoming_amount_msat","incoming_chan_id","incoming_expiry","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ln_decoder","mint_channel_id","mint_channel_id","module_api","module_kind","module_kind","notifier","notifier","operation_id","operation_id","outgoing_amount_msat","output_amount","output_amount","pay","payment_hash","payment_hash","recover","redeem_key","redeem_key","register_with_federation","remove_from_federation","remove_from_federation_inner","secp","serialize","serialize","serialize","short_channel_id","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","timelock_delta","timelock_delta","timelock_delta","to_bytes","to_bytes","to_dyn_common","to_gateway_registration_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract_id","error","error","error_message","out_points","preimage","preimage","error","error","error","error_message","out_points","CompleteHtlc","CompleteHtlcError","CompleteHtlcState","FailedToCompleteHtlc","Failure","Failure","GatewayCompleteCommon","GatewayCompleteStateMachine","GatewayCompleteStates","HtlcFinished","HtlcOutcome","IncomingContractNotFunded","Success","WaitForPreimage","WaitForPreimageState","as_any","await_complete_htlc","await_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","htlc_id","incoming_chan_id","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","outcome","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_complete_htlc","transition_success","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CancelContract","Canceled","CancelledContract","ClaimOutgoingContract","Failed","GatewayPayCancelContract","GatewayPayClaimOutgoingContract","GatewayPayCommon","GatewayPayInvoice","GatewayPayStateMachine","GatewayPayStates","GatewayPayWaitForSwapPreimage","InvalidFederationConfiguration","InvalidOutgoingContract","InvalidOutgoingContract","InvoiceAlreadyPaid","InvoiceExpired","InvoiceMissingAmount","LightningPayError","MissingContractData","NotOurKey","OfferDoesNotExist","OutgoingContractDoesNotExist","OutgoingContractError","OutgoingPaymentError","OutgoingPaymentErrorType","PayInvoice","PaymentParameters","Preimage","SwapFailed","TimeoutTooClose","Underfunded","WaitForSwapPreimage","as_any","await_get_payment_parameters","await_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage","buy_preimage_over_lightning","buy_preimage_via_direct_swap","check_swap_to_federation","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract","contract","contract_id","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_hash_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","error_type","federation_id","fetch_parameters_and_pay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_pay_cancel_contract","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_delay","max_send_amount","operation_id","operation_id","operation_id","operation_id","pay_invoice_payload","payment_data","preimage","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transition_canceled","transition_claim_outgoing_contract","transition_claim_outgoing_contract","transitions","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_ip","validate_ip","validate_ip","validate_ipv4","validate_ipv4","validate_ipv4","validate_ipv6","validate_ipv6","validate_ipv6","validate_outgoing_account","verify_preimage_authentication","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract_id","error","error","error_message","txid","contract_id","contract_id","error","lightning_error","swap_error"],"q":[[0,"ln_gateway"],[355,"ln_gateway::GatewayState"],[356,"ln_gateway::client"],[380,"ln_gateway::db"],[750,"ln_gateway::envs"],[762,"ln_gateway::gateway_lnrpc"],[1022,"ln_gateway::gateway_lnrpc::gateway_lightning_client"],[1054,"ln_gateway::gateway_lnrpc::gateway_lightning_server"],[1117,"ln_gateway::gateway_lnrpc::get_route_hints_response"],[1169,"ln_gateway::gateway_lnrpc::intercept_htlc_response"],[1258,"ln_gateway::gateway_module_v2"],[1414,"ln_gateway::gateway_module_v2::receive_sm"],[1523,"ln_gateway::gateway_module_v2::send_sm"],[1659,"ln_gateway::lightning"],[1766,"ln_gateway::lightning::LightningMode"],[1770,"ln_gateway::lightning::LightningRpcError"],[1777,"ln_gateway::lightning::cln"],[1802,"ln_gateway::lightning::lnd"],[1837,"ln_gateway::rpc"],[2152,"ln_gateway::rpc::rpc_client"],[2206,"ln_gateway::rpc::rpc_server"],[2229,"ln_gateway::state_machine"],[2518,"ln_gateway::state_machine::GatewayExtPayStates"],[2525,"ln_gateway::state_machine::GatewayExtReceiveStates"],[2530,"ln_gateway::state_machine::complete"],[2762,"ln_gateway::state_machine::pay"],[3192,"ln_gateway::state_machine::pay::GatewayPayStates"],[3197,"ln_gateway::state_machine::pay::OutgoingContractError"],[3198,"ln_gateway::state_machine::pay::OutgoingPaymentErrorType"],[3202,"clap_builder::builder::command"],[3203,"bitcoin::network::constants"],[3204,"fedimint_lnv2_client"],[3205,"lightning_invoice"],[3206,"core::result"],[3207,"bitcoin_hashes::sha256"],[3208,"fedimint_core"],[3209,"alloc::string"],[3210,"fedimint_core::db"],[3211,"alloc::vec"],[3212,"core::iter::traits::iterator"],[3213,"alloc::boxed"],[3214,"alloc::sync"],[3215,"secp256k1::key"],[3216,"fedimint_ln_common::route_hints"],[3217,"core::fmt"],[3218,"core::fmt"],[3219,"fedimint_core::api"],[3220,"clap_builder::parser::matches::arg_matches"],[3221,"clap_builder"],[3222,"fedimint_core::db"],[3223,"clap_builder::util::id"],[3224,"bitcoin::address"],[3225,"fedimint_core::task"],[3226,"fedimint_core::config"],[3227,"fedimint_core::task"],[3228,"fedimint_ln_common::contracts"],[3229,"bitcoin::hash_types::newtypes"],[3230,"tonic::request"],[3231,"tonic::request"],[3232,"fedimint_client"],[3233,"anyhow"],[3234,"fedimint_core::util"],[3235,"lightning::routing::gossip"],[3236,"fedimint_lnv2_client"],[3237,"fedimint_core::util"],[3238,"core::error"],[3239,"core::any"],[3240,"std::path"],[3241,"fedimint_client::module::init"],[3242,"fedimint_core::core"],[3243,"fedimint_core::db"],[3244,"fedimint_core::module::registry"],[3245,"fedimint_core::encoding"],[3246,"std::io"],[3247,"std::io::error"],[3248,"std::io"],[3249,"erased_serde::ser"],[3250,"erased_serde::ser"],[3251,"fedimint_core::core"],[3252,"core::hash"],[3253,"serde::ser"],[3254,"tonic::codec::compression"],[3255,"tonic::body"],[3256,"tonic::client::service"],[3257,"core::clone"],[3258,"tonic::response"],[3259,"tonic::status"],[3260,"tonic::request"],[3261,"tonic::transport::error"],[3262,"tonic::transport::channel::endpoint"],[3263,"core::convert"],[3264,"core::fmt"],[3265,"tonic::service::interceptor"],[3266,"http::request"],[3267,"http::response"],[3268,"tower_service"],[3269,"tonic::service::interceptor"],[3270,"http_body"],[3271,"core::marker"],[3272,"core::future::future"],[3273,"core::pin"],[3274,"futures_core::stream"],[3275,"axum::routing::into_make_service"],[3276,"axum::routing::into_make_service"],[3277,"core::task::wake"],[3278,"core::task::poll"],[3279,"bytes::buf::buf_mut"],[3280,"prost::encoding"],[3281,"prost::encoding"],[3282,"bytes::buf::buf_impl"],[3283,"core::any"],[3284,"fedimint_core::core"],[3285,"fedimint_client::sm::state"],[3286,"fedimint_client::module::init"],[3287,"fedimint_core::config"],[3288,"fedimint_derive_secret"],[3289,"fedimint_client::sm::notifier"],[3290,"fedimint_core::api"],[3291,"fedimint_client::module::recovery"],[3292,"fedimint_lnv2_common::contracts"],[3293,"fedimint_lnv2_common::contracts"],[3294,"tpe"],[3295,"tpe"],[3296,"fedimint_tonic_lnd::routerrpc"],[3297,"fedimint_tonic_lnd::routerrpc"],[3298,"fedimint_tonic_lnd"],[3299,"fedimint_tonic_lnd::lnrpc"],[3300,"tokio::sync::mpsc::bounded"],[3301,"serde::ser"],[3302,"bitcoin::util::address"],[3303,"axum::extension"],[3304,"axum::json"],[3305,"axum_core::response::into_response"],[3306,"axum_core::extract"],[3307,"axum::middleware::from_fn"],[3308,"http::status"],[3309,"serde_json::value"],[3310,"axum::routing"],[3311,"fedimint_ln_common"],[3312,"fedimint_ln_client::incoming"],[3313,"fedimint_client::oplog"],[3314,"core::time"],[3315,"secp256k1::key"]],"d":["","","","","","","","","","","","","","","Contains the error value","","","","","","","How long a gateway announcement stays valid","","","","","<code>GatewayParameters</code> is a helper struct that can be derived …","","","This initial SCID is considered invalid by LND HTLC …","","","","","","","","","Represents an active connection to the lightning node.","","","","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","Public URL from which the webserver API is reachable","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joining or leaving Federation is protected by this lock to …","","","","","","","","","","","","","","","","","","Path to folder containing gateway config and data files","","","","","","","","","","","","","","Configured gateway routing fees Format: &lt;base_msat&gt;,&lt;…","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","This function will return a <code>GatewayConfiguration</code> one of two","","Checks the Gateway’s current state and returns the proper","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Iterates through all of the federations the gateway is …","","","","","","Gateway webserver listen address","","","","","","","","Bitcoin network this gateway will be running on","","","","","Number of route hints to return in invoices","","Gateway webserver authentication password","","","","","","","","","","","Registers the gateway with each specified federation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map <code>gateway_lnrpc</code> protobuf types to rust types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An iterator over the variants of DbKeyPrefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The alias of the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>GetRouteHintsResponse</code>.","The index of the incoming htlc in the incoming channel","The index of the incoming htlc in the incoming channel","The incoming HTLC amount in millisatoshi. This amount …","The id of the incoming channel","The id of the incoming channel","The incoming HTLC expiry Determines block height when the …","Nested message and enum types in <code>InterceptHtlcResponse</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Bolt11 invoice","","The maximum delay, in blocks, that the payment route can …","The maximum fee, in millisats, that will be paid as a …","The network the node is on. Valid values are “main” | …","","The outgoing HTLC amount in millisatoshi This is the …","The hash of the payment","The HTLC payment hash. Value is not guaranteed to be …","","The preimage of the invoice","The public key of the associated lightning node","The route hints to the associated lightning node","The short channel id of the HTLC. Use this value to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GatewayLightning is a service that provides limited access …","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","","Returns the argument unchanged.","","","GetNodeInfo returns the public key and alias of the …","GetRouteHints returns the route hints to the associated …","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","PayInvoice attempts to pay an invoice using the associated …","RouteHtlcs opens a bi-directional stream for the client to …","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","GatewayLightning is a service that provides limited access …","Server streaming response type for the RouteHtlcs method.","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","GetNodeInfo returns the public key and alias of the …","GetRouteHints returns the route hints to the associated …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","PayInvoice attempts to pay an invoice using the associated …","","","","RouteHtlcs opens a bi-directional stream for the client to …","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Flat routing fee in millisatoshis.","","","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Hops that make up a route hint to the associated lightning …","Returns the value of <code>htlc_maximum_msat</code>, or the default …","The maximum value in msat available for routing with a …","Returns the value of <code>htlc_minimum_msat</code>, or the default …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Liquidity-based routing fee in millionths of a routed …","The short_channel_id of this channel.","The node_id of the non-target end of the route.","","","","","","","","","","","","","Request to complete an intercepted HTLC with failure …","","Request to just forward the HTLC without failing or …","","Request to complete an intercepted HTLC with success …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","Returns the encoded length of the message without a length …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Decodes an instance of the message from a buffer, and …","The preimage for settling an intercepted HTLC","The reason for the cancellation of an intercepted HTLC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that the gateway uses to interact with a lightning …","","","","","","","","","","","","","","","","","","","","","","","Complete an HTLC that was intercepted by the gateway. Must …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Get the public key and alias of the lightning node","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Attempt to pay an invoice using the lightning node","Attempt to pay an invoice using the lightning node using a …","Consumes the current client and returns a stream of …","Get route hints to the lightning node","","","Returns true if the lightning backend supports payments …","","","","","","","","","","","","","","","","","","","","","","","","LND macaroon file path","LND RPC address","LND TLS cert file path","","","","","","","","Contains the error value","","An <code>ILnRpcClient</code> that wraps around <code>GatewayLightningClient</code> …","Contains the success value","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","LND client","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns true if the lightning backend supports payments …","","","","","","","","","","","","Information about one of the feds we are connected to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","","Contains the success value","","","Base URL to gateway web server This should include an …","","","","","","","","A request client","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Optional gateway password","","","","","","","","","","","","","","","","","","Generate deposit address","Middleware to authenticate an incoming request. Routes …","Middleware to authenticate an incoming request. Routes …","Validate that the Bearer token matches the gateway’s …","Backup a gateway actor state","Display gateway ecash note balance","Display high-level information about the Gateway config","Connect a new federation","","Extracts the Bearer token from the Authorization header of …","","Display high-level information about the Gateway","Creates a password hash by appending a 4 byte salt to the …","Display high-level information about the Gateway","Leave a federation","","","","Creates the webserver’s routes and spawns the webserver …","","","Gateway Webserver Routes. The gateway supports three types …","Withdraw from a gateway federation.","","","","","","","","","Client side Lightning module <strong>for the gateway</strong>.","","The high-level state of a reissue operation started with …","The high-level state of an intercepted HTLC operation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Attempt buying preimage from this federation in order to …","Attempt fulfill HTLC by buying preimage from the federation","Pay lightning invoice on behalf of federation user","","Subscribe to updates when the gateway is handling an …","","","","","The index of the incoming htlc in the incoming channel","The incoming HTLC amount in millisatoshi.","The id of the incoming channel","The incoming HTLC expiry","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The outgoing HTLC amount in millisatoshi","","","","The HTLC payment hash.","","","","","Register gateway with federation","Attempts to remove a gateway’s registration from the …","Retrieves the signing challenge from each federation peer. …","","","","","The short channel id of the HTLC.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that completes the incoming payment by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes the Lightning payment on …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies that the supplied <code>preimage_auth</code> is the same as the","","","","","","","","","","","","","","","","","","","","",""],"i":[32,0,8,8,11,0,0,0,0,0,0,32,8,32,6,33,32,32,0,10,33,0,0,32,0,0,0,0,11,0,33,8,32,11,10,32,10,10,0,32,11,10,11,0,6,32,0,0,0,0,0,8,0,0,10,11,10,10,32,33,11,10,33,32,299,300,39,39,39,79,29,39,7,8,9,2,32,10,33,11,79,29,39,7,8,9,2,32,10,33,11,2,0,2,2,2,7,8,9,2,10,11,7,8,9,2,10,11,39,39,2,2,39,0,2,0,10,11,10,10,10,10,11,11,11,11,39,7,0,2,2,29,7,8,8,9,2,32,32,10,10,33,33,11,11,79,29,39,7,8,9,2,32,32,32,32,32,10,33,11,39,39,7,7,8,8,9,9,2,2,10,10,11,11,2,2,2,0,0,2,2,2,39,2,2,2,2,2,2,2,2,2,2,2,2,2,79,29,39,7,8,9,2,32,10,33,11,79,79,29,29,39,39,7,7,8,8,9,9,2,2,32,32,10,10,33,33,11,11,32,2,0,9,2,9,9,39,7,2,9,2,2,2,39,39,7,2,2,2,39,7,39,7,2,2,299,300,299,300,2,2,2,2,2,2,0,2,2,2,2,2,32,2,2,0,39,7,8,9,2,10,11,29,8,32,10,33,11,79,29,39,7,8,9,2,32,10,33,11,79,29,39,7,8,9,2,32,10,33,11,79,29,39,7,8,9,2,32,10,33,11,0,39,39,29,8,32,10,33,11,29,8,32,10,33,11,29,8,32,10,33,11,7,2,79,29,39,7,8,9,2,32,10,33,11,301,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,91,0,0,0,0,91,0,0,0,0,91,0,0,0,0,91,0,91,0,92,91,92,93,103,77,94,95,96,97,42,98,104,105,91,92,93,103,77,94,95,96,97,42,98,104,105,91,92,93,77,94,95,96,97,42,98,91,92,93,77,94,95,96,97,42,98,93,93,93,103,77,94,95,96,97,42,98,104,105,93,103,77,94,95,96,97,42,98,104,105,93,103,77,94,95,96,97,42,98,104,105,77,96,42,77,96,42,93,77,94,95,96,97,42,98,93,93,93,93,77,77,77,77,94,94,94,94,95,95,95,95,96,96,96,96,97,97,97,97,42,42,42,42,98,98,98,98,77,96,42,77,91,91,92,93,103,77,94,95,96,97,42,98,104,105,91,92,93,103,77,94,95,96,97,42,98,104,105,93,93,103,77,94,94,95,95,96,97,97,42,98,98,104,105,105,91,91,92,92,93,93,77,77,94,94,95,95,96,96,97,97,42,42,98,98,92,0,93,42,93,92,91,92,93,103,77,94,95,96,97,42,98,104,105,92,91,91,92,92,93,93,103,103,77,77,94,94,95,95,96,96,97,97,42,42,98,98,104,104,105,105,77,91,92,92,0,77,96,42,92,92,92,96,42,93,96,42,98,96,42,77,96,42,92,77,93,93,103,103,77,94,94,95,95,96,97,97,42,98,98,104,104,105,105,91,92,93,77,94,95,96,97,42,98,91,91,92,93,103,77,94,95,96,97,42,98,104,105,91,92,93,103,77,94,95,96,97,42,98,104,105,91,92,93,103,77,94,95,96,97,42,98,104,105,91,91,91,91,92,93,103,77,94,95,96,97,42,98,104,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,125,131,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,131,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,131,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,0,0,0,128,129,128,128,129,128,0,122,123,124,125,126,127,128,129,130,131,132,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,126,132,126,126,125,124,128,126,128,131,127,125,130,128,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,122,123,124,125,126,127,128,129,130,131,132,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,0,155,0,154,154,158,154,158,154,154,154,154,158,154,158,154,155,155,158,154,158,154,154,158,158,154,154,155,155,154,158,154,154,154,154,158,158,154,154,154,154,154,154,154,155,154,154,154,155,154,154,158,154,158,154,158,154,158,154,158,154,154,0,0,169,169,170,169,170,169,170,169,170,169,170,169,169,170,169,170,169,170,169,170,169,170,169,169,170,170,170,169,169,169,169,169,170,169,169,170,170,169,169,169,169,170,169,170,169,170,169,170,169,170,0,0,175,0,175,0,175,172,173,174,175,172,173,174,175,172,173,174,172,173,174,175,172,173,174,175,172,173,174,175,172,173,174,175,172,173,174,175,172,173,174,175,172,173,174,175,172,172,173,173,174,174,175,175,172,173,174,175,172,172,173,173,174,174,175,175,175,172,173,172,173,174,175,172,173,174,175,172,173,174,175,172,173,174,175,172,173,174,175,0,0,0,0,0,189,189,192,189,187,192,192,186,187,192,188,189,186,187,192,188,189,192,192,186,187,188,189,189,186,187,188,189,189,189,189,192,192,192,192,187,187,187,192,188,186,186,187,187,189,189,189,189,189,189,189,186,192,186,187,192,188,189,186,187,192,188,189,189,186,186,187,187,188,188,189,189,187,192,188,192,187,192,189,187,187,192,192,186,187,192,188,189,189,186,186,187,187,192,192,188,188,189,189,192,192,187,187,192,189,189,192,192,0,187,0,186,192,192,192,192,192,187,187,192,192,189,187,186,187,188,189,188,188,189,189,186,187,192,188,189,186,187,192,188,189,186,187,192,188,189,186,187,192,188,189,224,224,0,0,0,0,224,224,224,222,222,222,222,223,224,222,223,224,222,222,223,224,222,223,224,222,222,223,224,222,223,224,222,223,224,223,222,223,224,222,222,222,222,223,223,223,223,224,224,224,224,222,222,222,223,224,222,223,224,222,223,224,222,222,223,223,224,224,222,223,224,222,223,224,222,222,223,223,224,224,222,222,223,223,223,222,222,223,224,222,223,224,222,222,222,222,222,223,224,222,223,224,222,223,224,222,222,223,224,229,0,229,0,0,0,229,227,227,228,229,230,227,228,229,230,228,227,227,228,229,230,227,228,229,230,227,227,228,229,230,227,228,229,230,227,228,229,230,228,227,228,229,230,227,227,227,227,228,228,228,228,229,229,229,229,230,230,230,230,227,227,227,228,229,230,227,228,229,230,227,228,229,230,227,227,228,228,229,229,230,230,227,228,229,230,227,228,229,230,227,227,228,228,229,229,230,230,228,228,228,227,227,228,230,230,227,227,227,228,229,230,227,228,229,230,227,227,227,227,228,229,230,227,228,229,230,227,228,229,230,227,227,228,229,230,232,37,37,37,37,37,37,37,37,0,0,0,0,0,232,0,232,232,37,232,231,37,232,231,67,231,0,37,232,231,37,232,231,24,37,37,37,24,37,232,37,232,37,37,37,37,37,37,232,37,37,232,37,232,231,232,232,37,37,37,232,232,231,231,232,37,24,37,232,231,37,37,232,232,231,231,231,0,24,24,24,24,37,232,24,37,37,232,231,37,37,232,231,37,232,231,37,232,231,232,232,37,37,37,37,232,231,302,303,303,303,304,305,306,307,308,309,310,311,0,0,311,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,0,0,239,239,239,239,312,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,239,239,239,239,239,239,239,239,239,239,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,61,3,245,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,56,246,47,59,244,48,45,61,3,53,52,245,60,3,53,49,56,244,48,45,61,3,245,60,49,56,244,48,45,61,3,245,60,3,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,56,246,47,59,244,48,45,61,3,53,52,245,60,3,53,52,245,245,245,245,245,49,56,246,47,59,244,48,45,61,3,53,52,245,60,56,47,59,244,48,45,61,3,53,52,53,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,56,246,47,59,244,48,45,61,3,53,52,245,245,60,49,49,56,56,244,244,48,48,45,45,61,61,3,3,245,245,60,60,245,53,53,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,49,56,56,246,246,47,47,59,59,244,244,48,48,45,45,61,61,3,3,53,53,52,52,245,245,60,60,49,53,53,53,60,60,60,60,245,53,3,60,0,0,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,56,244,48,45,61,3,245,60,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,56,246,47,59,244,48,45,61,3,53,52,245,60,49,56,246,47,59,244,48,45,61,3,53,52,245,60,53,49,56,246,47,59,244,48,45,61,3,53,52,245,60,250,248,0,0,0,248,250,247,247,247,250,247,250,247,247,247,247,247,250,250,247,250,250,247,247,247,247,247,247,250,247,247,250,250,247,247,247,247,247,250,250,247,250,247,250,247,250,250,250,250,247,250,247,247,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,263,268,263,263,264,264,0,0,0,0,0,0,0,0,263,265,268,263,264,265,268,264,264,263,0,270,271,268,266,271,271,263,264,265,266,267,271,268,269,270,263,264,265,266,267,271,268,269,270,271,271,263,264,265,266,267,268,268,269,270,263,264,265,266,267,268,269,270,0,268,269,268,269,268,269,271,271,271,271,271,271,266,266,266,271,263,264,265,263,264,265,266,266,263,264,268,269,263,263,263,263,264,264,264,264,268,268,268,268,269,269,269,269,268,268,263,264,265,263,264,265,266,267,271,268,269,270,263,264,265,266,267,271,268,269,270,268,269,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,266,267,271,271,271,271,271,271,271,266,271,268,269,269,269,269,266,266,271,271,263,264,265,266,267,271,268,269,270,268,263,263,264,264,265,265,266,266,267,267,271,271,268,268,269,269,270,270,267,266,271,271,266,266,267,271,268,268,269,271,271,0,269,270,266,267,271,271,271,271,267,263,264,265,269,271,266,266,271,271,266,267,271,268,269,266,271,263,264,265,266,267,268,269,270,268,268,263,264,265,266,267,271,268,269,269,270,270,263,264,265,266,267,271,268,269,270,263,264,265,266,267,271,268,269,270,263,264,265,266,267,271,268,269,270,313,314,315,315,316,317,316,318,319,320,319,318,283,0,0,282,283,281,0,0,0,283,0,282,281,283,0,284,286,285,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,283,280,284,284,285,281,286,282,283,280,284,285,281,286,284,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,282,282,283,280,284,285,281,286,282,282,282,282,283,283,283,283,280,280,280,280,284,284,284,284,285,285,285,285,281,281,281,281,286,286,286,286,284,284,282,282,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,282,283,283,280,280,284,284,285,285,281,281,286,286,283,280,284,285,281,286,280,280,282,283,280,284,285,281,286,282,282,283,283,280,280,284,284,285,285,281,281,286,286,284,284,280,286,282,284,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,285,286,284,284,285,286,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,283,280,284,285,281,286,282,282,282,282,283,280,284,285,281,286,292,292,293,292,292,0,0,0,0,0,0,0,294,293,294,294,293,293,294,293,293,292,294,0,0,0,292,0,292,294,293,293,292,291,295,297,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,295,295,295,295,292,290,291,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,291,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,34,296,297,298,34,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,292,292,292,290,290,290,290,291,291,291,291,293,293,293,293,294,294,294,294,34,34,34,34,295,295,295,295,289,289,289,289,296,296,296,296,297,297,297,297,298,298,298,298,291,291,292,290,291,293,294,34,295,289,296,297,298,298,34,297,295,292,290,291,293,293,294,294,34,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,292,290,290,291,291,293,293,294,294,34,34,295,295,289,289,296,296,297,297,298,298,295,292,290,291,293,294,34,295,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,292,290,290,291,291,293,293,294,294,34,34,295,295,289,289,296,296,297,297,298,298,289,289,291,291,290,297,295,289,296,292,290,291,293,294,34,295,289,296,297,298,291,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,293,294,34,298,296,297,291,291,295,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,292,290,291,293,294,34,295,289,296,297,298,293,294,34,293,294,34,293,294,34,295,295,292,290,291,293,294,34,295,289,296,297,298,321,321,322,322,321,323,324,325,326,327],"f":"```````````````````````````````````````````````````````````````````{bb}0{ce{}{}}000000000000000000000{{dfh}{{l{j}}}}````{nn}{A`A`}{AbAb}{dd}{AdAd}{AfAf}{{ce}j{}{}}00000{{}b}0{{dAh}{{Al{AjAf}}}}{{dAnB`BbBd}{{Al{AjBb}}}}``{{Bf{Bh{Bb}}}{{Bl{Bj}}}}`{{AdAd}Bn}{{AfAf}Bn}{{ce}Bn{}{}}0000000``{{{Cb{C`}}}{{l{{Cf{CdBbh}}}}}}{{{Cb{C`}}Bd}{{l{{Bh{Ch}}}}}}{{C`Bd}{{l{{Bh{Ch}}}}}}{{CjCl}Cn}{{nCl}Cn}{{A`Cl}Cn}0{{AbCl}Cn}{{dCl}Cn}{{D`Cl}Cn}0{{AdCl}Cn}0{{DbCl}Cn}0{{AfCl}Cn}0{cc{}}000000{{{Bl{Dd}}}D`}{DfD`}{DhD`}{DjD`}4444{Dl{{Al{DnE`}}}}0555555555555`````{{Ebn}{{Ef{Ed}}}}{EbCd}{d{{Al{AbDj}}}}{{}{{Ef{Eh}}}}{{dEj}{{l{El}}}}{{dEn}{{l{j}}}}{{dF`}{{l{B`}}}}{{dFb}{{l{f}}}}{{dFd}j}{{d{Ef{Ff}}}{{l{Fh}}}}{d{{l{Fj}}}}{{dFlFn}j}{{dG`}{{l{f}}}}{{dGb}{{l{Gd}}}}{{dGf}{{l{j}}}}{{dGh}{{l{j}}}}{{dGj}{{l{Gl}}}}{ce{}{}}0000000000{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}10100101011010101001{D`Hb}{dj}`````````0{{dHdFf}f}````{{{Cb{Hf}}nEbHh}{{Hj{d}}}}{{{Cb{Hf}}HhHlHn{Ef{Bb}}{Ef{h}}I`BdEb}{{Hj{d}}}}{{}{{Hj{d}}}}````{dIb}{{dFf}{{Ef{Id}}}}````{{dFf}{{Ef{Cd}}}}{{d{Ih{If}}B`}{{Al{{Ih{If}}Db}}}}{{dFd}j}{{dEd{Il{{Cf{FfIj}}}}}{{l{j}}}}{{dFf{J`{In}}}{{l{j}}}}{{dFf}{{l{{Jb{Hd}}}}}}`{{dFd}{{Hj{Jd}}}}`1{{dJf}{{Al{{Al{{Ih{If}}Jh}}Ad}}}}{{dA`}j}{D`{{Ef{Jj}}}}{{dFd}{{l{j}}}}``{Dn{{Hj{n}}}}{ce{}{}}00000{cBb{}}00000{c{{Al{e}}}{}{}}000000000000000000000{cJl{}}0000000000`{{DnDl}{{Al{jE`}}}}0{cBn{}}00000000000000000``55555555555``55{{HhIjd}{{l{Hd}}}}{HhHh}{{ce}j{}{}}{{HhCl}Cn}{cc{}}00:{c{{H`{e}}}{}{}}{c{{Gn{e}}}{}{}}{{HhBf}{{Bh{Ij}}}}{{JnK`Kb}Hh}``{{HhIj{Bf{Kd}}}{{l{j}}}}?==<?`````````````````````??????????????????????????{KfKf}{KhKh}{KjKj}{IjIj}{KlKl}{KnKn}{L`L`}{LbLb}{EdEd}{LdLd}{{ce}j{}{}}000000000{{KjKj}Lf}{{ce}Lf{}{}}{{cLh}{{Al{KjLj}}}Ll}{{cLh}{{Al{LnLj}}}Ll}{{cLh}{{Al{IjLj}}}Ll}{{cLh}{{Al{KlLj}}}Ll}{{cLh}{{Al{KnLj}}}Ll}{{cLh}{{Al{L`Lj}}}Ll}{{cLh}{{Al{LbLj}}}Ll}{{cLh}{{Al{EdLj}}}Ll}{{cLh}{{Al{LdLj}}}Ll}{{cLh}{{Al{M`Lj}}}Ll}{{cLh}{{Al{MbLj}}}Ll}{{Kjc}{{Al{MdMf}}}Mh}{{Lnc}{{Al{MdMf}}}Mh}{{Ijc}{{Al{MdMf}}}Mh}{{Klc}{{Al{MdMf}}}Mh}{{Knc}{{Al{MdMf}}}Mh}{{L`c}{{Al{MdMf}}}Mh}{{Lbc}{{Al{MdMf}}}Mh}{{Edc}{{Al{MdMf}}}Mh}{{Ldc}{{Al{MdMf}}}Mh}{{M`c}{{Al{MdMf}}}Mh}{{Mbc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}0000000000{c{{Al{Ij}}}Mj}{c{{Al{L`}}}Mj}{c{{Al{Ed}}}Mj}{{cMl}{{Al{jMn}}}{}}00{{KjKj}Bn}{{IjIj}Bn}{{KlKl}Bn}{{KnKn}Bn}{{L`L`}Bn}{{LbLb}Bn}{{EdEd}Bn}{{LdLd}Bn}{{ce}Bn{}{}}0000000000000000000000000000000{{cMl}{{Al{jN`}}}{}}00`{{KfCl}Cn}0{{KhCl}Cn}{{KjCl}Cn}{{LnCl}Cn}{{IjCl}Cn}{{KlCl}Cn}{{KnCl}Cn}{{L`Cl}Cn}{{LbCl}Cn}{{EdCl}Cn}{{LdCl}Cn}{{M`Cl}Cn}{{MbCl}Cn}{cc{}}000000000000{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}000000000000000011111111111111111111{{KhMd}{{Ef{Kf}}}}{{}{{Nn{NjNl}}}}{{Kjc}jO`}```{ce{}{}}0000000000000{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}010110010110100101100110`{{}Kh}{KhMd}`{Bf{{Al{jDf}}}}```{Kh{{Ef{c}}}{}}0{{KhMd}{{Ef{c}}}{}}``{{KjKj}{{Ef{Lf}}}}`````{{Ijc}AlOb}{{L`c}AlOb}{{Edc}AlOb}{Kh{{Cf{Md{Ef{Md}}}}}}`{c{{Bh{If}}}{}}000000000000000000=========={cBb{}}{c{{Al{e}}}{}{}}0000000000000000000000000{cJl{}}000000000000{cBn{}}00{ce{}{}}000000000000``````````````````````````0000000000000000000000{Odj}{Ofj}{Ohj}{Ojj}{Olj}{Onj}{A`j}{Abj}{Adj}{Afj}{Ahj}{OdOd}{OfOf}{OhOh}{OjOj}{OlOl}{OnOn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{{ce}j{}{}}0000000000{{}Od}{{}Of}{{}Oh}{{}Oj}{{}Ol}{{}On}{{}A`}{{}Ab}{{}Ad}{{}Af}{{}Ah}`{OdMd}{OfMd}{OhMd}{OjMd}{OlMd}{OnMd}{A`Md}{AbMd}{AdMd}{AfMd}{AhMd}{{OdOd}Bn}{{OfOf}Bn}{{OhOh}Bn}{{OjOj}Bn}{{OlOl}Bn}{{OnOn}Bn}{{A`A`}Bn}{{AbAb}Bn}{{AdAd}Bn}{{AfAf}Bn}{{AhAh}Bn}`{{OdCl}Cn}{{OfCl}Cn}{{OhCl}Cn}{{OjCl}Cn}{{OlCl}Cn}{{OnCl}Cn}{{A`Cl}Cn}{{AbCl}Cn}{{AdCl}Cn}{{AfCl}Cn}{{AhCl}Cn}{cc{}}00000000000000000000000000000000``````````{ce{}{}}0000000000{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}10010110100101101001``````````````22222222222{c{{Al{e}}}{}{}}000000000000000000000{cJl{}}000000000044444444444`{{{Aj{c}}Al}{{Aj{c}}}{{AA`{An}}}}55{{{Aj{c}}}{{Aj{c}}}AAb}{{ce}j{}{}}{{{Aj{c}}e}{{Al{{AAd{Of}}AAf}}}{{AA`{An}}}{{AAh{Ab}}}}{c{{Al{{Aj{AAj}}AAl}}}{{AB`{AAn}}}}{{{Aj{c}}e}{{Al{{AAd{Ah}}AAf}}}{{AA`{An}}}{{AAh{Af}}}}{{{Aj{c}}Cl}CnABb}<<<{{{Aj{c}}e}{{Al{{AAd{Oj}}AAf}}}{{AA`{An}}}{{AAh{Od}}}}{{{Aj{c}}e}{{Al{{AAd{Ad}}AAf}}}{{AA`{An}}}{{AAh{Oh}}}}`=;<{{{Aj{c}}Md}{{Aj{c}}}{{AA`{An}}}}0{c{{Aj{c}}}{{AA`{An}}}}{{{Aj{c}}e}{{Al{{AAd{On}}AAf}}}{{AA`{An}}}{{AAh{Ol}}}}{{{Aj{c}}e}{{Al{{AAd{{ABd{A`}}}}AAf}}}{{AA`{An}}}{{AAh{Od}}}}<{ce{}{}}??>0{{ce}{{Aj{{ABf{ce}}}}}{{ABn{{ABh{An}}}{{ABj{ABl}}}}{AA`{An}}}AC`}{{cACb}{{Aj{c}}}{{AA`{An}}}}````{{{ACd{c}}Al}{{ACd{c}}}ACf}`3333{{c{ABh{e}}}{}{}{}}{{{ACd{c}}{ABh{e}}}gACf{AChACj}{}}1{{{ACl{c}}}{{ACl{c}}}ACf}{{{ACd{c}}}{{ACd{c}}}ACf}{{ce}j{}{}}0{{{ACf{}{{ACn{c}}}}{Gn{Ab}}}{{ADb{{Bl{AD`}}}}}{{ADf{}{{ADd{{Al{A`AAf}}}}}}ACj}}{{{ACf{}{{ACn{c}}}}{Gn{Af}}}{{ADb{{Bl{AD`}}}}}{{ADf{}{{ADd{{Al{A`AAf}}}}}}ACj}}{{{ACl{c}}Cl}CnABb}{{{ACd{c}}Cl}Cn{ABbACf}}{cc{}}0{{{Cb{c}}}{{ACd{c}}}ACf}1111{{{ACf{}{{ACn{c}}}}{Gn{Od}}}{{ADb{{Bl{AD`}}}}}{{ADf{}{{ADd{{Al{A`AAf}}}}}}ACj}}{{{ACf{}{{ACn{c}}}}{Gn{Oh}}}{{ADb{{Bl{AD`}}}}}{{ADf{}{{ADd{{Al{A`AAf}}}}}}ACj}}`{ce{}{}}0{c{{ADh{e}}}{}{}}{c{{ADj{e}}}{}{}}{c{{ADl{eg}}}{}{}{}}{c{{H`{e}}}{}{}}{c{{Gn{e}}}{}{}}10{{{ACd{c}}Md}{{ACd{c}}}ACf}`0`{c{{ACd{c}}}ACf}{{{ACf{}{{ACn{c}}}}{Gn{Ol}}}{{ADb{{Bl{AD`}}}}}{{ADf{}{{ADd{{Al{A`AAf}}}}}}ACj}}{{{ACd{c}}ADn}{{AE`{{Al{je}}}}}ACf{}}{{cADn}{{AE`{{Al{j}}}}}{}}0<{{{ACd{c}}Al}{{ACd{c}}}ACf}`;;{c{{Al{e}}}{}{}}000{cJl{}}0=={{ce}{{ABf{{ACd{c}}e}}}ACfAC`}```>>>>{AEbj}{AEdj}{AEbAEb}{AEdAEd}{{ce}j{}{}}0`{{}AEb}{{}AEd}{AEbMd}{AEdMd}{{AEbAEb}Bn}{{AEdAEd}Bn}{{AEbCl}Cn}{{AEdCl}Cn}{cc{}}00000`{AEbAEf}`0`{ce{}{}}0{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}01```22{c{{Al{e}}}{}{}}000{cJl{}}044```````44444444{AEhj}{AEjj}{AElj}{AEhAEh}{AEjAEj}{AElAEl}{AEnAEn}{{ce}j{}{}}000{{}AEh}{{}AEj}{{}AEl}{{AEnc}jAF`}{AEhMd}{AEjMd}{AElMd}{AEnMd}{{AEhAEh}Bn}{{AEjAEj}Bn}{{AElAEl}Bn}{{AEnAEn}Bn}{{AEhCl}Cn}{{AEjCl}Cn}{{AElCl}Cn}{{AEnCl}Cn}{cc{}}00000000000{ce{}{}}000{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}011010{{{Ef{AEn}}BdAFbcAFd}{{Al{jAFf}}}AFh}``3333{c{{Al{e}}}{}{}}0000000{cJl{}}0005555```````{cAFj{}}0{cAFl{}}{{cAFnAG`}{{ADb{{Bl{AD`}}}}}{}}{{cAGb}{{ADb{{Bl{AD`}}}}}{}}9999999999``{AGdAGd}{AGfAGf}{AGhAGh}{AGjAGj}{{cAGb}AGl{}}{{ce}j{}{}}000{{cLh}{{Al{AGjLj}}}Ll}{{AGjc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}{{cAGb}AGn{}}{AH`c{}}{{cAGbBfAFnB`}{{ADb{{Bl{AD`}}}}}{}}0{cNj{}}{cNb{}}00`{c{{Al{AGd}}}Mj}{{cMl}{{Al{jMn}}}{}}{{cBf{Bh{Bb}}}{{ADb{{Bl{AD`}}}}}{}}{{AGfBf{Bh{Bb}}}{{Bl{Bj}}}}{{AGjAGj}Bn}{{ce}Bn{}{}}000{{cAGl}Bn{}}{{cO`}j{}}{{cMl}{{Al{jN`}}}{}}`{{AGdCl}Cn}{{AGfCl}Cn}{{AH`Cl}Cn}{{AGhCl}Cn}{{AGjCl}Cn}{cc{}}0000{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}11111111```{{cAGbBf}{{ADb{{Bl{AD`}}}}}{}}{c{{Nn{Nj{AHd{BfAGb{Bh{{Cf{{Bh{If}}AFn}}}}{Bh{{Cf{{Bh{If}}AFn}}}}{Nf{NbNd}}}{{AHb{{ADb{{Bl{AD`}}}}}}}}}}}{}}{{c{Il{AHf}}}{{ADb{{Bl{AD`}}}}}{}}{{AGjc}jO`}{{AGf{AHh{AGf}}}{{ADb{{Bl{AD`}}}}}}{{cAHjFfMdAHlEbAGbAHnAHnAI`AIbAId{Ef{AIf}}Fd}{{ADb{{Bl{AD`}}}}}{}}{AH`{{Ef{AIh}}}}{{cAIj}{{Ef{AIh}}}{}}{ce{}{}}0000{{AGjKb}c{}}{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}01011010``{cAIl{}}0`{AGjAFn}{cAFn{}}8{{cAIn}{{Ef{AIh}}}{}}`{{cAHjFfAJ`AHlEbAGbAHnAHnAI`AIbAId{Ef{AIf}}{Ef{AJb}}{AJf{AJd}}}{{ADb{{Bl{AD`}}}}}{}}`{{AGdc}AlOb}{{AH`AFnAJh}{{Hj{j}}}}{{AH`AFnAEfAEfAjAJj}{{Hj{j}}}}{c{{ADb{{Bl{AD`}}}}}{}}{{AH`AFn}{{Ef{{Ih{If}}}}}}{{AH`AFnAJj}{{Al{{Ih{If}}Jh}}}}{AGfAJl}{cAJl{}}{cBn{}}0{c{{Bh{If}}}{}}{cAJn{}}{ce{}{}}000``{{cAGnAK`}{{Bh{{AKb{AGl}}}}}{}}{{AGjcAK`}{{Bh{{AKb{AGj}}}}}{}}{c{{Al{e}}}{}{}}000000000{cJl{}}000044444`````````{cAFj{}}{{AK`AKd}Bb}{{AK`Nb{Nn{AKfAKh}}AG`AJh}{{Nn{AKfAKj}}}}777777{{cAGb}AGl{}}{AKlAKl}{AKnAKn}{AL`AL`}{{ce}j{}{}}00`{{cLh}{{Al{AKlLj}}}Ll}{{cLh}{{Al{AKnLj}}}Ll}{{cLh}{{Al{AL`Lj}}}Ll}{{AKlc}{{Al{MdMf}}}Mh}{{AKnc}{{Al{MdMf}}}Mh}{{AL`c}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}00`{{AKlAKl}Bn}{{AKnAKn}Bn}{{AL`AL`}Bn}{{ce}Bn{}{}}00000000000{{cAGl}Bn{}}{{cO`}j{}}{{AKlCl}Cn}{{AKnCl}Cn}{{AL`Cl}Cn}{cc{}}00{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}00111111{{AKlc}jO`}{{AKnc}jO`}{{AL`c}jO`}{ce{}{}}00{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}1001{AKlAFn}{cAFn{}}````{c{{Bh{If}}}{}}00555{{BbAKl}AKl}{{ALb{Nn{AKfAKj}}AKlAK`ALd}AKl}{{AKlcAK`}{{Bh{{AKb{AKl}}}}}{}}{{cAGnAK`}{{Bh{{AKb{AGl}}}}}{}}{c{{Al{e}}}{}{}}00000{cJl{}}00{{AKlAL`}AKl}<<<```````{cAFj{}}========`{ALfALf}{{cAGb}AGl{}}{ALhALh}{ALjALj}{ALlALl}{{ce}j{}{}}000`{{cLh}{{Al{ALfLj}}}Ll}{{cLh}{{Al{ALhLj}}}Ll}{{cLh}{{Al{ALjLj}}}Ll}{{cLh}{{Al{ALlLj}}}Ll}{{ALfc}{{Al{MdMf}}}Mh}{{ALhc}{{Al{MdMf}}}Mh}{{ALjc}{{Al{MdMf}}}Mh}{{ALlc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}000`{{ALfALf}Bn}{{ALhALh}Bn}{{ALjALj}Bn}{{ALlALl}Bn}{{ce}Bn{}{}}000000000000000{{cAGl}Bn{}}{{cO`}j{}}{{ALfCl}Cn}{{ALhCl}Cn}{{ALjCl}Cn}{{ALlCl}Cn}{cc{}}000{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}00011111111{{ALfc}jO`}{{ALhc}jO`}{{ALjc}jO`}{{ALlc}jO`}{ce{}{}}000{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}011010```{ALfAFn}{cAFn{}}```{{AGhAEfAEfAj}{{Al{{Ih{If}}Bb}}}}`{c{{Bh{If}}}{}}0006666{{ALbALfAK`{Al{{Ih{If}}Bb}}}ALf}{{cAGnAK`}{{Bh{{AKb{AGl}}}}}{}}{{ALfcAK`}{{Bh{{AKb{ALf}}}}}{}}{c{{Al{e}}}{}{}}0000000{cJl{}}000{{ALfALj}ALf}<<<<````````````````{bb}0======{Hf{{ADb{{Bl{AD`}}}}}}{ALn{{ADb{{Bl{AD`}}}}}}`{DjDj}{AM`AM`}{ALnALn}{{ce}j{}{}}00{{C`Ab}{{ADb{{Bl{AD`}}}}}}{{cLh}{{Al{DjLj}}}Ll}{{Djc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}{{C`Af}{{ADb{{Bl{AD`}}}}}}{c{{Al{Dj}}}Mj}{c{{Al{AM`}}}Mj}{{cMl}{{Al{jMn}}}{}}0{{DjDj}Bn}{{ce}Bn{}{}}000{{cMl}{{Al{jN`}}}{}}0{{DjCl}Cn}0{{AM`Cl}Cn}{cc{}}00{Dl{{Al{AM`E`}}}}0{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}222222{AMbBn}{{Djc}jO`}{C`{{ADb{{Bl{AD`}}}}}}{ce{}{}}00{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}0110``{{C`Ol}{{ADb{{Bl{AD`}}}}}}{{C`AMdAEfB`}{{ADb{{Bl{AD`}}}}}}{{{Bl{C`}}Fd}{{ADb{{Bl{AD`}}}}}}{{C`Md}{{ADb{{Bl{AD`}}}}}}{{Djc}AlOb}{{AM`c}AlOb}{C`Bn}{c{{Bh{If}}}{}}:::{cBb{}}{c{{Al{e}}}{}{}}00000{cJl{}}00{{AM`Dl}{{Al{jE`}}}}0{cBn{}}00???````````````````??{{AMfAb}{{ADb{{Bl{AD`}}}}}}{Hn{{Al{{Aj{AAj}}Dj}}}}`{{AMfAf}{{ADb{{Bl{AD`}}}}}}{{AMfCl}Cn}{cc{}}{AMf{{ADb{{Bl{AD`}}}}}}{ce{}{}}{c{{H`{e}}}{}{}}{c{{Gn{e}}}{}{}}{HnAMf}{{AMfOl}{{ADb{{Bl{AD`}}}}}}{{{Bl{AMf}}Fd}{{ADb{{Bl{AD`}}}}}}{{AMfMd}{{ADb{{Bl{AD`}}}}}}{c{{Al{e}}}{}{}}0{cJl{}}8````88{{AMh{AMl{AMj}}}{{Al{jDj}}}}`{{AMnAb}{{ADb{{Bl{AD`}}}}}}{{BbBbBb}{{Al{AN`Dj}}}}{{AMnAf}{{ADb{{Bl{AD`}}}}}}{{AMnCl}Cn}?{AMn{{ADb{{Bl{AD`}}}}}}>=<`{{AMn{Bh{If}}AN`}{{Al{{Ef{Bb}}Dj}}}}`{{BbBbBb{Ef{{AMl{AMj}}}}}AMn}{{AMnOl}{{ADb{{Bl{AD`}}}}}}{{AMnAMdAEfB`}{{ADb{{Bl{AD`}}}}}}{{{Il{Ch}}}{{Bh{ANb}}}}{{{Bl{AMn}}Fd}{{ADb{{Bl{AD`}}}}}}{{AMnMd}{{ADb{{Bl{AD`}}}}}}{{{AMl{AMj}}AMj}{{Al{jDj}}}}{{AMnFd{AMl{AMj}}{ANd{AMj}}{AMl{{Al{A`AAf}}}}}{{Al{jDj}}}}{AMnBn}`{c{{Al{e}}}{}{}}0{cJl{}}{ce{}{}}{{{Il{If}}}{{Hj{{Bh{ANf}}}}}}```````````````````1111111111111111111111111111``{FbFb}{G`G`}{ANhANh}{F`F`}{EjEj}{GjGj}{ff}{ANjANj}{GhGh}{{ce}j{}{}}00000000`{c{{Al{Fb}}}Mj}{c{{Al{G`}}}Mj}{c{{Al{ANl}}}Mj}{c{{Al{En}}}Mj}{c{{Al{Gf}}}Mj}{c{{Al{ANh}}}Mj}{c{{Al{F`}}}Mj}{c{{Al{Ej}}}Mj}{c{{Al{Gj}}}Mj}{c{{Al{f}}}Mj}{c{{Al{Fj}}}Mj}{c{{Al{Fh}}}Mj}{c{{Al{ANj}}}Mj}{c{{Al{Gh}}}Mj}{{cMl}{{Al{jMn}}}{}}0000000000000{{ff}Bn}{{FjFj}Bn}{{FhFh}Bn}{{ANjANj}Bn}{{ce}Bn{}{}}000{{cMl}{{Al{jN`}}}{}}0000000000000```````````{{FbCl}Cn}{{G`Cl}Cn}{{ANlCl}Cn}{{EnCl}Cn}{{GfCl}Cn}{{ANhCl}Cn}{{F`Cl}Cn}{{EjCl}Cn}{{GjCl}Cn}{{fCl}Cn}{{FjCl}Cn}{{FhCl}Cn}{{ANjCl}Cn}{{GhCl}Cn}{cc{}}00000000000{I`ANj}11111111111111111111{AMb{{Al{ANjc}}}{}}``{ce{}{}}0000000000000{c{{H`{e}}}{}{}}{c{{Gn{e}}}{}{}}10010110100110010110010110``````````````{{Fbc}AlOb}{{G`c}AlOb}{{ANlc}AlOb}{{Enc}AlOb}{{Gfc}AlOb}{{ANhc}AlOb}{{F`c}AlOb}{{Ejc}AlOb}{{Gjc}AlOb}{{fc}AlOb}{{Fjc}AlOb}{{Fhc}AlOb}{{ANjc}AlOb}{{Ghc}AlOb}{ce{}{}}00000000{c{{Al{e}}}{}{}}000000000000000000000000000{cJl{}}0000000000000`22222222222222```````{{ANnEn}{{AO`{j}}}}`3333{{ANnAObHn{Ef{c}}}{{Al{eAOd}}}AOfAOh}{{ANnHn}{{Al{cAOd}}}AOh}{{ANnHnc}{{Al{eAOd}}}AOfAOh}`{{ANnFb}{{AO`{f}}}}{{AOdCl}Cn}0{cc{}}0{AOjAOd}{{ANnF`}{{AO`{B`}}}}{{ANnANh}{{AO`{Fh}}}}{{ANnEj}{{AO`{AOl}}}}{ANn{{AO`{Fj}}}}0>>{c{{H`{e}}}{}{}}{c{{Gn{e}}}{}{}}01{{ANnG`}{{AO`{f}}}}{{Hn{Ef{Bb}}}ANn}`{{ANnGf}{{AO`{j}}}}{{ANnGh}{{AO`{j}}}}{AOd{{Ef{Jj}}}}{cBb{}}{c{{Al{e}}}{}{}}000{cJl{}}0{cBn{}}00{ce{}{}}0{{ANn{Ef{Bb}}}ANn}{{ANnGj}{{AO`{AKd}}}}{{{AOn{d}}{B`{Ej}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}BdBf}{{Al{{`{Bb}}Bh}}}}0{{An{Ih{If}}BdBf}{{Al{HbBh}}}}{{{AOn{d}}{B`{En}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{F`}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{ANh}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{Fb}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{Ah}}}{{B`{Bj}}}}{Bd{{Al{BbBh}}}}{{{AOn{d}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{ANl}}}{{Al{{`{Bb}}D`}}}}{{Bb{Ih{If}}}An}2{{{AOn{d}}{B`{G`}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{Gb}}}{{Al{{`{Bb}}D`}}}}{{{AOn{d}}{B`{Ff}}}{{B`{Bj}}}}{{{AOn{d}}{B`{Gf}}}{{Al{{`{Bb}}D`}}}}{{dFd}{{Hj{j}}}}{{{AOn{d}}{B`{Jf}}}{{B`{Bj}}}}{{{AOn{d}}{B`{Gh}}}{{Al{{`{Bb}}D`}}}}{dBl}{{{AOn{d}}{B`{Gj}}}{{Al{{`{Bb}}D`}}}}``````````````````````````{cAFj{}}0{cAFl{}}{{cAFnAG`}{{ADb{{Bl{AD`}}}}}{}}{{cAGb}{{ADb{{Bl{AD`}}}}}{}}{ce{}{}}00000000000000000``{BnBn}{BA`BA`}{BAbBAb}{BAdBAd}{BAfBAf}{{cAGb}AGl{}}{BAhBAh}{BAjBAj}{BAlBAl}{{ce}j{}{}}0000000`{{cLh}{{Al{BAhLj}}}Ll}{{cLh}{{Al{BAjLj}}}Ll}{{BAhc}{{Al{MdMf}}}Mh}{{BAjc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}0{{cAGb}AGn{}}{BAnc{}}{{cAGbBfAFnB`}{{ADb{{Bl{AD`}}}}}{}}{{BAnBAj}{{Al{{Cf{AFn{BBb{BB`BAh}}}}BBd}}}}{{BAnBAl}{{Al{{Cf{AFn{BBb{BB`BAh}}}}BBd}}}}2{cNj{}}{cNb{}}00{c{{Al{Bn}}}Mj}{c{{Al{BA`}}}Mj}{c{{Al{BAb}}}Mj}{{cMl}{{Al{jMn}}}{}}00{{cBf{Bh{Bb}}}{{ADb{{Bl{AD`}}}}}{}}{{BAdBf{Bh{Bb}}}{{Bl{Bj}}}}{{BnBn}Bn}{{BA`BA`}Bn}{{BAhBAh}Bn}{{BAjBAj}Bn}{{ce}Bn{}{}}000000000000000{{cAGl}Bn{}}{{cO`}j{}}{{cMl}{{Al{jN`}}}{}}00{{BnCl}Cn}{{BA`Cl}Cn}{{BAbCl}Cn}{{BAdCl}Cn}{{BAfCl}Cn}{{BAnCl}Cn}{{BAhCl}Cn}{{BAjCl}Cn}{{BAlCl}Cn}{cc{}}00000000{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}01111111111111111```{{BAnBAl}{{Hj{AFn}}}}{{BAnBAj}{{Hj{AFn}}}}{{BAnGb}{{Hj{AFn}}}}{{BAnAFn}{{Hj{{BBf{Bn}}}}}}{{BAnAFn}{{Hj{{BBf{BA`}}}}}}{{cAGbBf}{{ADb{{Bl{AD`}}}}}{}}{c{{Nn{Nj{AHd{BfAGb{Bh{{Cf{{Bh{If}}AFn}}}}{Bh{{Cf{{Bh{If}}AFn}}}}{Nf{NbNd}}}{{AHb{{ADb{{Bl{AD`}}}}}}}}}}}{}}{{c{Il{AHf}}}{{ADb{{Bl{AD`}}}}}{}}{{BAhc}jO`}````{{BAd{AHh{BAd}}}{{ADb{{Bl{AD`}}}}}}{{cAHjFfMdAHlEbAGbAHnAHnAI`AIbAId{Ef{AIf}}Fd}{{ADb{{Bl{AD`}}}}}{}}{BAn{{Ef{AIh}}}}{{cAIj}{{Ef{AIh}}}{}}{ce{}{}}00000000{{BAhKb}c{}}{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}0110010101100101````{cAIl{}}0``{cAFn{}}{BAhAFn}`{{cAIn}{{Ef{AIh}}}{}}9```{{cAHjFfAJ`AHlEbAGbAHnAHnAI`AIbAId{Ef{AIf}}{Ef{AJb}}{AJf{AJd}}}{{ADb{{Bl{AD`}}}}}{}}``{{BAn{Bh{Ch}}BBhI`Ab}{{Hj{j}}}}{{BAnBBj}j}{{BAnBBj}{{Hj{j}}}}`{{Bnc}AlOb}{{BA`c}AlOb}{{BAbc}AlOb}`{c{{ADb{{Bl{AD`}}}}}{}}{BAdAJl}{cAJl{}}{cBn{}}0```{c{{Bh{If}}}{}}0{cAJn{}}{{BAn{Bh{Ch}}BBhI`Ab}BBl}{ce{}{}}0000000{{BAhcAK`}{{Bh{{AKb{BAh}}}}}{}}{{cAGnAK`}{{Bh{{AKb{AGl}}}}}{}}{c{{Al{e}}}{}{}}000000{A`{{Al{BAjc}}}{}}1{BBn{{Al{BAlc}}}{}}2222222222{cJl{}}00000000666666666```````````````````````````{cAFj{}}{{BAfBC`BCb}{{Al{jBCd}}}}{{BAfBC`}{{Al{GdBCd}}}}99999999999999{BCdBCd}{BCfBCf}{BC`BC`}{{cAGb}AGl{}}{BChBCh}{BCjBCj}{BCbBCb}{BClBCl}{{ce}j{}{}}000000`{{cLh}{{Al{BCdLj}}}Ll}{{cLh}{{Al{BCfLj}}}Ll}{{cLh}{{Al{BC`Lj}}}Ll}{{cLh}{{Al{BChLj}}}Ll}{{cLh}{{Al{BCjLj}}}Ll}{{cLh}{{Al{BCbLj}}}Ll}{{cLh}{{Al{BClLj}}}Ll}{{BCdc}{{Al{MdMf}}}Mh}{{BCfc}{{Al{MdMf}}}Mh}{{BC`c}{{Al{MdMf}}}Mh}{{BChc}{{Al{MdMf}}}Mh}{{BCjc}{{Al{MdMf}}}Mh}{{BCbc}{{Al{MdMf}}}Mh}{{BClc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}000000{c{{Al{BCd}}}Mj}{{cMl}{{Al{jMn}}}{}}{{BCdBCd}Bn}{{BCfBCf}Bn}{{BC`BC`}Bn}{{BChBCh}Bn}{{BCjBCj}Bn}{{BCbBCb}Bn}{{BClBCl}Bn}{{ce}Bn{}{}}000000000000000000000000000{{cAGl}Bn{}}{{cO`}j{}}{{cMl}{{Al{jN`}}}{}}{{BCdCl}Cn}0{{BCfCl}Cn}{{BC`Cl}Cn}{{BChCl}Cn}{{BCjCl}Cn}{{BCbCl}Cn}{{BClCl}Cn}{cc{}}000000{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}00000011111111111111{{BCfc}jO`}{{BC`c}jO`}{{BChc}jO`}{{BCjc}jO`}{{BCbc}jO`}{{BClc}jO`}``{ce{}{}}000000{c{{Gn{e}}}{}{}}{c{{H`{e}}}{}{}}011010011001{cAFn{}}{BChAFn}``{{BCdc}AlOb}`{c{{Bh{If}}}{}}0000006666666{cBb{}}{{{Al{GdBCd}}BC`}BCh}{{{Al{jBCd}}BC`}BCh}{{cAGnAK`}{{Bh{{AKb{AGl}}}}}{}}{{BChcAK`}{{Bh{{AKb{BCh}}}}}{}}{{BCjBAfBC`}{{Bh{{AKb{BCh}}}}}}{{BClBAfBC`}{{Bh{{AKb{BCh}}}}}}{c{{Al{e}}}{}{}}0000000000000{cJl{}}000000{cBn{}}00{ce{}{}}000000`````````````````````````````````{cAFj{}}{{AK`BAfBCnBBnFf}{{Al{{Cf{BD`BDb}}Dd}}}}{{BAfFfAFnBD`}{{Al{GdDd}}}}3333333333333333333333{{BAfBD`BDbBDdGb}BDf}{{BAfBDbBD`BDd}BDf}{{HdBBnBD`BDd}BDf}{{BAfBBn}{{Ef{{Jb{Hd}}}}}}{BDhBDh}{BDdBDd}{BDfBDf}{{cAGb}AGl{}}{BDjBDj}{BDlBDl}{DdDd}{BDnBDn}{BDbBDb}{BE`BE`}{BEbBEb}{BEdBEd}{{ce}j{}{}}0000000000`{{cLh}{{Al{BDhLj}}}Ll}{{cLh}{{Al{BDdLj}}}Ll}{{cLh}{{Al{BDfLj}}}Ll}{{cLh}{{Al{BDjLj}}}Ll}{{cLh}{{Al{BDlLj}}}Ll}{{cLh}{{Al{DdLj}}}Ll}{{cLh}{{Al{BDnLj}}}Ll}{{cLh}{{Al{BDbLj}}}Ll}{{cLh}{{Al{BE`Lj}}}Ll}{{cLh}{{Al{BEbLj}}}Ll}{{cLh}{{Al{BEdLj}}}Ll}{{BDhc}{{Al{MdMf}}}Mh}{{BDdc}{{Al{MdMf}}}Mh}{{BDfc}{{Al{MdMf}}}Mh}{{BDjc}{{Al{MdMf}}}Mh}{{BDlc}{{Al{MdMf}}}Mh}{{Ddc}{{Al{MdMf}}}Mh}{{BDnc}{{Al{MdMf}}}Mh}{{BDbc}{{Al{MdMf}}}Mh}{{BE`c}{{Al{MdMf}}}Mh}{{BEbc}{{Al{MdMf}}}Mh}{{BEdc}{{Al{MdMf}}}Mh}{{cMh}{{Al{MdMf}}}{}}0000000000`````{c{{Al{BDh}}}Mj}{c{{Al{BDd}}}Mj}{c{{Al{BDf}}}Mj}{c{{Al{BDj}}}Mj}{c{{Al{BDl}}}Mj}{c{{Al{Dd}}}Mj}{c{{Al{BDn}}}Mj}{c{{Al{BDb}}}Mj}{c{{Al{BE`}}}Mj}{c{{Al{BEb}}}Mj}{c{{Al{BEd}}}Mj}{{cMl}{{Al{jMn}}}{}}0000000000{{BDhBDh}Bn}{{BDdBDd}Bn}{{BDfBDf}Bn}{{BDjBDj}Bn}{{BDlBDl}Bn}{{DdDd}Bn}{{BDnBDn}Bn}{{BDbBDb}Bn}{{BE`BE`}Bn}{{BEbBEb}Bn}{{BEdBEd}Bn}{{ce}Bn{}{}}0000000000000000000000000000000000000000000{{cAGl}Bn{}}{{cO`}j{}}{{cMl}{{Al{jN`}}}{}}0000000000```{{AK`GbBAfBDd}BDf}{{BDhCl}Cn}{{BDdCl}Cn}{{BDfCl}Cn}{{BDjCl}Cn}0{{BDlCl}Cn}0{{DdCl}Cn}0{{BDnCl}Cn}{{BDbCl}Cn}{{BE`Cl}Cn}{{BEbCl}Cn}{{BEdCl}Cn}{cc{}}0000000000{{{Il{If}}{Nf{NbNd}}}{{Al{cNh}}}{}}00000000001111111111111111111111{{DjBD`BDd}BDf}{{BDhc}jO`}{{BDdc}jO`}{{BDfc}jO`}{{BDjc}jO`}{{BDlc}jO`}{{Ddc}jO`}{{BDnc}jO`}{{BE`c}jO`}{{BEbc}jO`}{{BEdc}jO`}{ce{}{}}0000000000{c{{H`{e}}}{}{}}{c{{Gn{e}}}{}{}}01100110011010010101``{cAFn{}}{BDfAFn}`````{{BDhc}AlOb}{{BDdc}AlOb}{{BDfc}AlOb}{{BDjc}AlOb}{{BDlc}AlOb}{{Ddc}AlOb}{{BDnc}AlOb}{{BDbc}AlOb}{{BE`c}AlOb}{{BEbc}AlOb}{{BEdc}AlOb}`{c{{Bh{If}}}{}}0000000000{ce{}{}}0000000000{cBb{}}00{{ALbBD`AK`BAfBDdDd}BDf}{{ALbAK`BAfBDdBD`Gd}BDf}{{BDd{Al{GdDd}}BD`}BDf}{{cAGnAK`}{{Bh{{AKb{AGl}}}}}{}}{{BDfcAK`}{{Bh{{AKb{BDf}}}}}{}}{{BDnAK`BAfBDd}{{Bh{{AKb{BDf}}}}}}{{BE`AK`BAfBDd}{{Bh{{AKb{BDf}}}}}}{{BEbBAfBDd}{{Bh{{AKb{BDf}}}}}}{{BEdAK`BAfBDd}{{Bh{{AKb{BDf}}}}}}{c{{Al{e}}}{}{}}000000000000000000000{cJl{}}0000000000{cBn{}}00000000{{BD`BBjAEfAEfBBnI`}{{Al{BDbBDj}}}}{{BAfAnAnBD`}{{Al{jDd}}}}???????????``````````","c":[],"p":[[5,"Command",3202],[5,"Gateway",0],[5,"FederationInfo",1837],[6,"Network",3203],[1,"unit"],[8,"Result",0],[5,"GatewayParameters",0],[6,"GatewayState",0],[5,"LightningContext",0],[6,"SendPaymentErrorV2",0],[6,"CreateInvoiceErrorV2",0],[5,"CreateInvoicePayload",3204],[5,"Bolt11Invoice",3205],[6,"Result",3206],[5,"Hash",3207],[5,"Amount",3208],[5,"String",3209],[1,"u32"],[5,"DatabaseTransaction",3210],[5,"Vec",3211],[10,"Iterator",3212],[5,"Box",3213],[1,"bool"],[10,"ILnRpcClient",1659],[5,"Arc",3214],[5,"PublicKey",3215],[1,"tuple"],[5,"RouteHint",3216],[5,"PrettyInterceptHtlcRequest",0],[5,"Formatter",3217],[8,"Result",3217],[6,"GatewayError",0],[6,"ReceiveErrorV2",0],[5,"OutgoingPaymentError",2762],[5,"Error",3218],[5,"FederationError",3219],[6,"LightningRpcError",1659],[5,"ArgMatches",3220],[5,"GatewayOpts",0],[8,"Error",3221],[5,"Database",3210],[5,"GatewayConfiguration",380],[6,"Option",3222],[5,"Id",3223],[5,"DepositAddressPayload",1837],[5,"Address",3224],[5,"BackupPayload",1837],[5,"BalancePayload",1837],[5,"ConnectFedPayload",1837],[5,"TaskGroup",3225],[5,"FederationId",3226],[5,"GatewayFedConfig",1837],[5,"GatewayInfo",1837],[8,"RouteHtlcStream",1777],[5,"TaskHandle",3225],[5,"LeaveFedPayload",1837],[5,"PayInvoicePayload",3227],[5,"Preimage",3228],[5,"RestorePayload",1837],[5,"SetConfigurationPayload",1837],[5,"WithdrawPayload",1837],[5,"Txid",3229],[5,"Request",3230],[5,"Request",3230],[8,"Response",3231],[8,"ClientHandleArc",3232],[10,"LightningBuilder",1659],[5,"GatewayClientBuilder",356],[8,"Result",3218],[6,"SocketAddr",3233],[5,"SafeUrl",3234],[5,"RoutingFees",3235],[5,"PaymentFees",3204],[5,"PaymentInfo",3204],[1,"u8"],[1,"array"],[5,"FederationConfig",380],[1,"slice"],[5,"ClientsJoinLock",0],[5,"MutexGuard",3236],[5,"Spanned",3234],[5,"TaskShutdownToken",3225],[5,"SendPaymentPayload",3204],[5,"Signature",3237],[10,"Error",3238],[5,"TypeId",3239],[5,"PathBuf",3240],[8,"ClientModuleInitRegistry",3241],[8,"ModuleInstanceId",3242],[5,"Committable",3210],[6,"DbKeyPrefix",380],[5,"DbKeyPrefixIter",380],[5,"FederationIdKey",380],[5,"GatewayPublicKey",380],[5,"GatewayConfigurationKeyV0",380],[5,"GatewayConfigurationV0",380],[5,"GatewayConfigurationKey",380],[5,"PreimageAuthentication",380],[6,"Ordering",3243],[8,"ModuleDecoderRegistry",3244],[5,"DecodeError",3245],[10,"Read",3246],[5,"FederationIdKeyPrefix",380],[5,"PreimageAuthenticationPrefix",380],[5,"CreateInvoicePayloadKey",380],[1,"usize"],[5,"Error",3247],[10,"Write",3246],[10,"Deserializer",3248],[10,"Serializer",3249],[6,"ErrorImpl",3249],[5,"Error",3250],[5,"Decoder",3242],[6,"DecodingMode",3244],[5,"ModuleRegistry",3244],[6,"DecodingError",3210],[5,"DatabaseVersion",3210],[8,"ServerMigrationFn",3210],[5,"BTreeMap",3251],[10,"Hasher",3252],[10,"Serializer",3253],[5,"EmptyRequest",762],[5,"EmptyResponse",762],[5,"GetRouteHintsRequest",762],[5,"GetNodeInfoResponse",762],[5,"PayInvoiceRequest",762],[5,"PayInvoiceResponse",762],[5,"InterceptHtlcRequest",762],[5,"InterceptHtlcResponse",762],[5,"GetRouteHintsResponse",762],[5,"CreateInvoiceRequest",762],[5,"CreateInvoiceResponse",762],[5,"GatewayLightningClient",1022],[6,"CompressionEncoding",3254],[8,"BoxBody",3255],[10,"GrpcService",3256],[10,"Clone",3257],[5,"Response",3258],[5,"Status",3259],[10,"IntoRequest",3230],[5,"Channel",3260],[5,"Error",3261],[5,"Endpoint",3262],[10,"TryInto",3263],[10,"Debug",3217],[5,"Streaming",3264],[5,"InterceptedService",3265],[5,"Request",3266],[17,"Response"],[5,"Response",3267],[10,"Service",3268],[10,"Interceptor",3265],[5,"Uri",3269],[5,"GatewayLightningServer",1054],[10,"GatewayLightning",1054],[10,"Body",3270],[10,"Send",3271],[5,"_Inner",1054],[17,"RouteHtlcsStream"],[10,"Future",3272],[5,"Pin",3273],[17,"Item"],[10,"Stream",3274],[5,"IntoMakeService",3275],[5,"IntoMakeService",3275],[5,"IntoMakeServiceWithConnectInfo",3276],[5,"Context",3277],[6,"Poll",3278],[5,"RouteHintHop",1117],[5,"RouteHint",1117],[1,"u64"],[5,"Settle",1169],[5,"Cancel",1169],[5,"Forward",1169],[6,"Action",1169],[10,"BufMut",3279],[6,"WireType",3280],[5,"DecodeContext",3280],[5,"DecodeError",3281],[10,"Buf",3282],[10,"Any",3239],[10,"IDynCommonModuleInit",3283],[5,"OperationId",3242],[5,"OutPoint",3208],[1,"u16"],[5,"GatewayOperationMetaV2",1258],[5,"GatewayClientInitV2",1258],[5,"GatewayClientContextV2",1258],[6,"GatewayClientStateMachinesV2",1258],[5,"DynState",3284],[5,"DynContext",3284],[5,"GatewayClientModuleV2",1258],[17,"Output"],[1,"fn"],[5,"OsString",3285],[5,"ClientModuleInitArgs",3241],[5,"FinalClient",3286],[5,"ClientModuleConfig",3226],[5,"ApiVersion",3287],[5,"DerivableSecret",3288],[5,"Notifier",3289],[5,"DynGlobalApi",3219],[5,"ApiAuth",3283],[5,"TransactionItemAmount",3283],[5,"DynInput",3242],[5,"ModuleKind",3242],[5,"DynOutput",3242],[5,"NumPeers",3208],[5,"DynModuleBackup",3290],[5,"RecoveryProgress",3290],[5,"Sender",3291],[5,"IncomingContract",3292],[5,"OutgoingContract",3292],[5,"MultiApiVersion",3287],[5,"DynCommonModuleInit",3283],[5,"DynGlobalClientContext",3232],[5,"StateTransition",3284],[5,"TransactionId",3208],[5,"PeerId",3208],[5,"PublicKeyShare",3293],[5,"DecryptionKeyShare",3293],[5,"ReceiveStateMachine",1414],[5,"ReceiveSMCommon",1414],[6,"ReceiveSMState",1414],[5,"ClientSMDatabaseTransaction",3294],[5,"AggregatePublicKey",3293],[5,"SendStateMachine",1523],[5,"SendSMCommon",1523],[6,"SendSMState",1523],[5,"Claiming",1523],[5,"GatewayLightningBuilder",1659],[6,"LightningMode",1659],[1,"str"],[5,"PrunedInvoice",3295],[5,"NetworkLnRpcClient",1777],[5,"CircuitKey",3296],[5,"ForwardHtlcInterceptResponse",3296],[5,"Sender",3297],[5,"GatewayLndClient",1802],[5,"Client",3298],[5,"RouteHint",3299],[5,"Receiver",3297],[1,"i32"],[5,"ConfigPayload",1837],[5,"FederationRoutingFees",1837],[5,"InfoPayload",1837],[5,"GatewayRpcClient",2152],[8,"GatewayRpcResult",2152],[5,"Method",3300],[6,"GatewayRpcError",2152],[10,"Serialize",3253],[10,"DeserializeOwned",3248],[5,"Error",3301],[5,"Address",3302],[5,"Extension",3303],[5,"Json",3304],[10,"IntoResponse",3305],[8,"Request",3306],[5,"Next",3307],[5,"StatusCode",3308],[6,"Value",3309],[5,"Router",3310],[6,"GatewayExtPayStates",2229],[6,"GatewayExtReceiveStates",2229],[6,"GatewayMeta",2229],[5,"GatewayClientInit",2229],[5,"GatewayClientContext",2229],[6,"GatewayClientStateMachines",2229],[5,"Htlc",2229],[5,"SwapParameters",2229],[5,"GatewayClientModule",2229],[6,"LightningOutputV0",3295],[5,"ClientOutput",3311],[6,"IncomingSmError",3312],[6,"UpdateStreamOrOutcome",3313],[5,"Duration",3314],[5,"KeyPair",3215],[5,"LightningGatewayAnnouncement",3295],[6,"PaymentData",3227],[5,"GatewayCompleteCommon",2530],[6,"HtlcOutcome",2530],[6,"CompleteHtlcError",2530],[6,"GatewayCompleteStates",2530],[5,"GatewayCompleteStateMachine",2530],[5,"WaitForPreimageState",2530],[5,"CompleteHtlcState",2530],[5,"ContractId",3228],[5,"OutgoingContractAccount",3315],[5,"PaymentParameters",2762],[5,"GatewayPayCommon",2762],[5,"GatewayPayStateMachine",2762],[6,"GatewayPayStates",2762],[6,"OutgoingContractError",2762],[6,"OutgoingPaymentErrorType",2762],[5,"GatewayPayInvoice",2762],[5,"GatewayPayClaimOutgoingContract",2762],[5,"GatewayPayWaitForSwapPreimage",2762],[5,"GatewayPayCancelContract",2762],[8,"ScidToFederationMap",0],[8,"FederationToClientMap",0],[15,"Running",355],[15,"Cln",1766],[15,"Lnd",1766],[15,"FailedToGetNodeInfo",1770],[15,"FailedToGetRouteHints",1770],[15,"FailedPayment",1770],[15,"FailedToRouteHtlcs",1770],[15,"FailedToCompleteHtlc",1770],[15,"FailedToOpenChannel",1770],[15,"FailedToGetInvoice",1770],[8,"HtlcResult",1777],[8,"HtlcSubscriptionSender",1802],[15,"OfferDoesNotExist",2518],[15,"Canceled",2518],[15,"Fail",2518],[15,"Success",2518],[15,"Preimage",2518],[15,"RefundSuccess",2525],[15,"RefundError",2525],[15,"FundingFailed",2525],[15,"Canceled",3192],[15,"Failed",3192],[15,"InvalidOutgoingContract",3197],[15,"OutgoingContractDoesNotExist",3198],[15,"InvalidOutgoingContract",3198],[15,"LightningPayError",3198],[15,"SwapFailed",3198]],"b":[[133,"impl-Display-for-GatewayState"],[134,"impl-Debug-for-GatewayState"],[137,"impl-Debug-for-GatewayError"],[138,"impl-Display-for-GatewayError"],[139,"impl-Display-for-SendPaymentErrorV2"],[140,"impl-Debug-for-SendPaymentErrorV2"],[141,"impl-Debug-for-ReceiveErrorV2"],[142,"impl-Display-for-ReceiveErrorV2"],[143,"impl-Display-for-CreateInvoiceErrorV2"],[144,"impl-Debug-for-CreateInvoiceErrorV2"],[152,"impl-From%3CBox%3COutgoingPaymentError%3E%3E-for-GatewayError"],[153,"impl-From%3CError%3E-for-GatewayError"],[154,"impl-From%3CFederationError%3E-for-GatewayError"],[155,"impl-From%3CLightningRpcError%3E-for-GatewayError"],[531,"impl-Debug-for-DbKeyPrefix"],[532,"impl-Display-for-DbKeyPrefix"],[1708,"impl-Debug-for-LightningRpcError"],[1709,"impl-Display-for-LightningRpcError"],[2170,"impl-Debug-for-GatewayRpcError"],[2171,"impl-Display-for-GatewayRpcError"],[2639,"impl-Debug-for-CompleteHtlcError"],[2640,"impl-Display-for-CompleteHtlcError"],[2983,"impl-Display-for-OutgoingContractError"],[2984,"impl-Debug-for-OutgoingContractError"],[2985,"impl-Display-for-OutgoingPaymentErrorType"],[2986,"impl-Debug-for-OutgoingPaymentErrorType"],[2987,"impl-Display-for-OutgoingPaymentError"],[2988,"impl-Debug-for-OutgoingPaymentError"]]}],\
["meta_sanity_test",{"doc":"","t":"H","n":["main"],"q":[[0,"meta_sanity_test"],[1,"anyhow"]],"d":[""],"i":[0],"f":"{{}{{d{b}}}}","c":[],"p":[[1,"unit"],[8,"Result",1]],"b":[]}],\
["recoverytool",{"doc":"","t":"PPFFGPPFFGPONNNNNNNNNNNNNNNNNNNNNNNNOOOONNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNHNNNNNNNNNNNNNOHONONONOONONNNONNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNOOOOS","n":["Direct","Epochs","ImportableWallet","ImportableWalletMin","Key","Private","Public","RecoveryTool","SecretKeyInjector","TweakSource","Utxos","amount_sat","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","command","command_for_update","compare","config","descriptor","descriptor","descriptor","do_erased_serialize","do_erased_serialize","envs","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","get_db","group_id","has_subcommand","hash","hash160","hash256","input_tweaks_output_present","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_uncompressed","key","main","network","num_der_paths","outpoint","partial_cmp","password","pk","public","readonly","ripemd160","secret","serialize","serialize","sha256","strategy","to_compressed_public_key","to_hash160","to_hash256","to_owned","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tweak_descriptor","tweak_parser","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","validate_ip","validate_ipv4","validate_ipv6","vzip","vzip","vzip","vzip","vzip","vzip","db","db","legacy","tweak","FM_PASSWORD_ENV"],"q":[[0,"recoverytool"],[149,"recoverytool::TweakSource"],[153,"recoverytool::envs"],[154,"clap_builder::builder::command"],[155,"core::cmp"],[156,"erased_serde::ser"],[157,"erased_serde::ser"],[158,"erased_serde::error"],[159,"core::fmt"],[160,"core::fmt"],[161,"clap_builder"],[162,"std::path"],[163,"fedimint_core::module::registry"],[164,"fedimint_core::db"],[165,"clap_builder::util::id"],[166,"core::option"],[167,"core::hash"],[168,"alloc::collections::btree::set"],[169,"fedimint_core::transaction"],[170,"core::iter::traits::iterator"],[171,"tonic::request"],[172,"anyhow"],[173,"fedimint_wallet_common::keys"],[174,"serde::ser"],[175,"bitcoin_hashes::hash160"],[176,"miniscript::miniscript::hash256"],[177,"bitcoin::crypto::key"],[178,"bitcoin_hashes::ripemd160"],[179,"bitcoin_hashes::sha256"],[180,"alloc::string"],[181,"fedimint_wallet_common"],[182,"secp256k1::key"],[183,"bitcoin::network::constants"],[184,"miniscript::descriptor"],[185,"core::any"]],"d":["Derive the wallet descriptor using a single tweak","Derive all wallet descriptors of tweaks that were ever …","A UTXO with its Bitcoin Core importable descriptor","A Bitcoin Core importable descriptor","<code>MiniscriptKey</code> that is either a WIF-encoded private key or …","","","Tool to recover the on-chain wallet of a Fedimint …","Miniscript <code>Translator</code> that replaces a public key with a …","","Derive all wallet descriptors of confirmed UTXOs in the …","","","","","","","","","","","","","","","","","","","","","","","","","","Directory containing server config files","Wallet descriptor, can be used instead of –cfg","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Wallet secret key, can be used instead of config together …","","Network to operate on, has to be specified if –cfg isn’…","","","","The password that encrypts the configs","","","Open the database in read-only mode, useful for debugging, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to database","Path to database","Extract UTXOs from a database without module partitioning","",""],"i":[2,2,0,0,0,3,3,0,0,0,2,14,11,11,2,2,11,2,14,15,3,16,11,2,14,15,3,16,2,3,2,3,3,11,11,3,11,11,14,15,14,15,0,3,3,3,3,3,14,15,11,2,14,15,3,3,16,11,2,14,15,3,16,11,2,11,2,2,2,3,3,0,11,2,3,16,16,0,11,2,14,15,3,16,11,2,14,15,3,16,3,11,0,11,3,14,3,11,16,16,11,16,16,14,15,16,11,3,3,3,2,3,3,3,3,3,11,2,14,15,3,16,11,2,14,15,3,16,0,0,11,2,14,15,3,16,11,2,11,2,3,3,3,11,2,14,15,3,16,49,50,49,51,0],"f":"````````````{bb}000{ce{}{}}00000000000{dd}{ff}{{ce}h{}{}}0{{ff}j}{{}b}0{{ce}j{}{}}````{{cl}{{A`{hn}}}{}}0`{{ff}Ab}{{ce}Ab{}{}}000{{cl}{{A`{hAd}}}{}}0{{AfAh}Aj}{{dAh}Aj}{{AlAh}Aj}{{AnAh}Aj}{{fAh}Aj}0{{B`Ah}Aj}{cc{}}00000{Bb{{A`{AfBd}}}}{Bb{{A`{dBd}}}}102222{{AbBfBh}Bj}{{}{{Bn{Bl}}}}{C`Ab}{{fc}hCb}{B`{{A`{h}}}}0{c{{Cj{{Ch{{Cf{Cd}}}}Ab}}}{{D`{}{{Cl{Cn}}}}}}{ce{}{}}00000{c{{Db{e}}}{}{}}00000{fAb}`{{}{{Dd{h}}}}`{fDf}`{{ff}{{Bn{j}}}}`{{B`Dh}{{A`{fh}}}}``8`{{Alc}A`Dj}{{Anc}A`Dj}:`{fDh}{cDl{}}{cDn{}};;{fE`}{cEb{}}{cEd{}}{cEf{}}{c{{A`{e}}}{}{}}00000000000{{EhEj{Cf{Cd}}El}{{En{f}}}}{C`{{Dd{{Cf{Cd}}}}}}{cF`{}}00000{{AfBb}{{A`{hBd}}}}{{dBb}{{A`{hBd}}}}10{cAb{}}00{ce{}{}}00000`````","c":[],"p":[[5,"Command",154],[6,"TweakSource",0],[6,"Key",0],[1,"unit"],[6,"Ordering",155],[10,"Serializer",156],[6,"ErrorImpl",156],[6,"Result",157],[1,"bool"],[5,"Error",158],[5,"RecoveryTool",0],[5,"Formatter",159],[8,"Result",159],[5,"ImportableWallet",0],[5,"ImportableWalletMin",0],[5,"SecretKeyInjector",0],[5,"ArgMatches",160],[8,"Error",161],[5,"Path",162],[8,"ModuleDecoderRegistry",163],[5,"Database",164],[5,"Id",165],[6,"Option",166],[1,"str"],[10,"Hasher",167],[1,"u8"],[1,"array"],[5,"BTreeSet",168],[1,"tuple"],[17,"Item"],[5,"Transaction",169],[10,"Iterator",170],[5,"Request",171],[8,"Result",172],[1,"usize"],[5,"CompressedPublicKey",173],[10,"Serializer",174],[5,"Hash",175],[5,"Hash",176],[5,"PublicKey",177],[5,"Hash",178],[5,"Hash",179],[5,"String",180],[8,"PegInDescriptor",181],[5,"SecretKey",182],[6,"Network",183],[6,"Descriptor",184],[5,"TypeId",185],[15,"Utxos",149],[15,"Epochs",149],[15,"Direct",149]],"b":[[54,"impl-Display-for-Key"],[55,"impl-Debug-for-Key"]]}],\
["tbs",{"doc":"Threshold Blind Signatures","t":"FFFFFSSFFFFHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNHQNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNN","n":["AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FINGERPRINT_TAG","HASH_TAG","Message","PublicKeyShare","SecretKeyShare","Signature","aggregate_public_key_shares","aggregate_signature_shares","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash_bytes_to_g1","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lagrange_multipliers","point_hash_impl","random","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","verify_blinded_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"tbs"],[287,"alloc::collections::btree::map"],[288,"fedimint_core::module::registry"],[289,"fedimint_core::encoding"],[290,"core::result"],[291,"std::io"],[292,"std::io::error"],[293,"std::io"],[294,"erased_serde::ser"],[295,"erased_serde::ser"],[296,"core::fmt"],[297,"core::fmt"],[298,"fedimint_core::module::registry"],[299,"core::hash"],[300,"bls12_381::g1"],[301,"tonic::request"],[302,"bls12_381::scalar"],[303,"alloc::vec"],[304,"serde::ser"],[305,"alloc::string"],[306,"core::any"]],"d":["","","","","","","","","","","","","Combines the exact threshold of valid blinded signature …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,10,10,10,2,2,2,2,4,4,4,4,7,7,7,7,8,8,8,8,9,9,9,9,5,5,5,5,6,6,6,6,11,11,11,11,10,2,4,7,8,9,5,6,11,8,10,2,4,7,8,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,2,4,7,9,5,6,11,0,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,0,0,8,10,2,4,7,8,9,5,6,11,0,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,8,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,10,2,4,7,8,9,5,6,11,0,0,0,0,10,2,4,7,8,9,5,6,11],"f":"```````````{{{f{bd}}}h}{{{f{bj}}}l}{{nA`}Ab}{ce{}{}}00000000000000000{AdAd}{dd}{hh}{nn}{A`A`}{AbAb}{jj}{ll}{AfAf}{{ce}Ah{}{}}00000000{{cAj}{{An{AdAl}}}B`}{{cAj}{{An{dAl}}}B`}{{cAj}{{An{hAl}}}B`}{{cAj}{{An{nAl}}}B`}{{cAj}{{An{A`Al}}}B`}{{cAj}{{An{AbAl}}}B`}{{cAj}{{An{jAl}}}B`}{{cAj}{{An{lAl}}}B`}{{cAj}{{An{AfAl}}}B`}{{Adc}{{An{BbBd}}}Bf}{{dc}{{An{BbBd}}}Bf}{{hc}{{An{BbBd}}}Bf}{{nc}{{An{BbBd}}}Bf}{{A`c}{{An{BbBd}}}Bf}{{Abc}{{An{BbBd}}}Bf}{{jc}{{An{BbBd}}}Bf}{{lc}{{An{BbBd}}}Bf}{{Afc}{{An{BbBd}}}Bf}{{cBf}{{An{BbBd}}}{}}00000000{c{{An{Ad}}}Bh}{c{{An{d}}}Bh}{c{{An{h}}}Bh}{c{{An{n}}}Bh}{c{{An{A`}}}Bh}{c{{An{Ab}}}Bh}{c{{An{j}}}Bh}{c{{An{l}}}Bh}{c{{An{Af}}}Bh}{{cBj}{{An{AhBl}}}{}}00000000{{AdAd}Bn}{{dd}Bn}{{hh}Bn}{{nn}Bn}{{A`A`}Bn}{{AbAb}Bn}{{jj}Bn}{{ll}Bn}{{AfAf}Bn}{{ce}Bn{}{}}00000000000000000000000000000000000{{cBj}{{An{AhC`}}}{}}00000000{A`{{Cd{Cb}}}}{{AdCf}Ch}{{dCf}Ch}{{hCf}Ch}{{nCf}Ch}{{A`Cf}Ch}0{{AbCf}Ch}{{jCf}Ch}{{lCf}Ch}{{AfCf}Ch}{cc{}}00000000{{{Cj{Cb}}{D`{ClCn}}}{{An{cDb}}}{}}00{{{Cj{Cb}}}n}111111222222222{{dc}AhDd}{{hc}AhDd}{{nc}AhDd}{{Abc}AhDd}{{jc}AhDd}{{lc}AhDd}{{Afc}AhDd}{{{Cj{Cb}}}Df}{ce{}{}}00000000{c{{Dh{e}}}{}{}}00000000{{{Dl{Dj}}}{{Dl{Dj}}}}`{{}A`}{{Adc}AnDn}{{dc}AnDn}{{hc}AnDn}{{nc}AnDn}{{A`c}AnDn}{{Abc}AnDn}{{jc}AnDn}{{lc}AnDn}{{Afc}AnDn}{{AbAd}j}{c{{Dl{Cb}}}{}}00000000>>>>>>>>>{Add}{cE`{}}{c{{An{e}}}{}{}}00000000000000000{cEb{}}00000000{{A`l}Af}{{nAfh}Bn}{{Abjd}Bn}{{Ablh}Bn}{ce{}{}}00000000","c":[],"p":[[1,"u64"],[5,"PublicKeyShare",0],[5,"BTreeMap",287],[5,"AggregatePublicKey",0],[5,"BlindedSignatureShare",0],[5,"BlindedSignature",0],[5,"Message",0],[5,"BlindingKey",0],[5,"BlindedMessage",0],[5,"SecretKeyShare",0],[5,"Signature",0],[1,"unit"],[8,"ModuleDecoderRegistry",288],[5,"DecodeError",289],[6,"Result",290],[10,"Read",291],[1,"usize"],[5,"Error",292],[10,"Write",291],[10,"Deserializer",293],[10,"Serializer",294],[6,"ErrorImpl",294],[1,"bool"],[5,"Error",295],[1,"u8"],[1,"array"],[5,"Formatter",296],[8,"Result",296],[1,"slice"],[5,"Decoder",297],[6,"DecodingMode",288],[5,"ModuleRegistry",288],[6,"DecodingError",298],[10,"Hasher",299],[5,"G1Projective",300],[5,"Request",301],[5,"Scalar",302],[5,"Vec",303],[10,"Serializer",304],[5,"String",305],[5,"TypeId",306]],"b":[[154,"impl-Display-for-BlindingKey"],[155,"impl-Debug-for-BlindingKey"]]}],\
["tpe",{"doc":"","t":"FFFFFFFFFFNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNHHNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNQOONNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNOOHOONN","n":["AggregateDecryptionKey","AggregatePublicKey","CipherText","DecryptionKeyShare","EphemeralPublicKey","EphemeralSignature","G1Affine","G2Affine","PublicKeyShare","SecretKeyShare","add","add","add","add","add","add","add","add","aggregate_decryption_shares","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","conditional_negate","conditional_negate","conditional_select","conditional_select","consensus_decode","consensus_decode","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_decode_from_finite_reader","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","create_decryption_key_share","ct_eq","ct_eq","decrypt_preimage","default","default","derive_agg_decryption_key","derive_ephemeral_sk","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","encrypt_preimage","encrypted_preimage","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","hash_to_message","identity","identity","identity","identity","impl_hash_with_serialized_compressed","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_identity","is_identity","is_identity","is_identity","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","lagrange_multipliers","mul","mul","mul","mul","mul","mul","mul","mul","neg","neg","neg","neg","pairing_with","pairing_with","pk","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","sub","sub","sub","sub","sub","sub","sub","sub","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_agg_decryption_key","verify_ciphertext","verify_decryption_key_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","xor_with_hash","y","y","zeroize","zeroize"],"q":[[0,"tpe"],[401,"bls12_381::g1"],[402,"bls12_381::g2"],[403,"alloc::collections::btree::map"],[404,"subtle"],[405,"fedimint_core::core"],[406,"fedimint_core::module::registry"],[407,"fedimint_core::module::registry"],[408,"core::result"],[409,"std::io"],[410,"fedimint_core::module::registry"],[411,"std::io"],[412,"serde::de"],[413,"erased_serde::ser"],[414,"erased_serde::ser"],[415,"erased_serde::error"],[416,"core::fmt"],[417,"core::fmt"],[418,"subtle"],[419,"tonic::request"],[420,"alloc::vec"],[421,"serde::ser"],[422,"alloc::string"],[423,"core::any"]],"d":["","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","","","","","","","","","","","","Attempts to deserialize an uncompressed element. See …","Attempts to deserialize an uncompressed element. See …","","","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","","","Returns a fixed generator of the group. See <code>notes::design</code> …","","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","","Returns the identity of the group: the point at infinity.","","","Returns the identity of the group: the point at infinity.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns true if this element is the identity (the point at …","","","Returns true if this element is the identity (the point at …","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,3,3,3,3,0,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,1,3,1,3,1,3,9,10,11,6,8,12,13,14,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,0,1,3,0,1,3,0,0,9,10,11,6,8,12,13,14,9,10,11,6,8,12,13,14,0,14,9,10,11,6,8,12,13,14,1,3,9,9,9,9,10,10,10,10,11,11,11,11,6,6,6,6,8,8,8,8,12,12,12,12,13,13,13,13,14,14,14,14,1,1,1,1,3,3,3,3,9,10,11,6,8,12,13,14,9,10,11,6,8,12,13,14,1,1,3,3,9,10,11,6,8,12,13,14,1,1,1,3,3,3,9,10,11,6,8,12,13,14,1,1,3,3,1,3,1,3,1,3,9,10,11,6,8,12,13,14,1,3,1,1,3,3,1,1,3,3,1,1,3,3,10,11,6,8,12,13,14,0,1,1,3,3,0,1,3,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,1,1,3,3,1,3,1,3,0,1,1,1,1,3,3,3,3,1,1,3,3,1,3,14,9,10,11,6,8,12,13,14,14,1,1,1,1,3,3,3,3,9,10,11,6,8,12,13,14,1,1,3,3,1,3,1,3,9,10,11,6,8,12,13,14,1,3,1,3,1,1,3,3,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,9,10,11,6,8,12,13,14,1,3,0,0,0,9,10,11,6,8,12,13,14,1,3,1,3,0,1,3,1,3],"f":"``````````{{bd}d}000{{fh}h}000{{{n{jl}}}A`}{ce{}{}}0000000000000000000{AbAb}{AdAd}{AfAf}{ll}{A`A`}{AhAh}{AjAj}{AlAl}{bb}{ff}{{ce}An{}{}}000000000{{cB`}An{}}0{{bbB`}b}{{ffB`}f}{{c{Bf{BbBd}}}{{Bj{bBh}}}Bl}{{c{Bf{BbBd}}}{{Bj{fBh}}}Bl}{{cBn}{{Bj{AbBh}}}Bl}{{cBn}{{Bj{AdBh}}}Bl}{{cBn}{{Bj{AfBh}}}Bl}{{cBn}{{Bj{lBh}}}Bl}{{cBn}{{Bj{A`Bh}}}Bl}{{cBn}{{Bj{AhBh}}}Bl}{{cBn}{{Bj{AjBh}}}Bl}{{cBn}{{Bj{AlBh}}}Bl}{{Abc}{{Bj{C`Cb}}}Cd}{{Adc}{{Bj{C`Cb}}}Cd}{{Afc}{{Bj{C`Cb}}}Cd}{{lc}{{Bj{C`Cb}}}Cd}{{A`c}{{Bj{C`Cb}}}Cd}{{Ahc}{{Bj{C`Cb}}}Cd}{{Ajc}{{Bj{C`Cb}}}Cd}{{Alc}{{Bj{C`Cb}}}Cd}{{bc}{{Bj{C`Cb}}}Cd}{{fc}{{Bj{C`Cb}}}Cd}{{cCd}{{Bj{C`Cb}}}{}}000000000{{AbAl}l}{{bb}B`}{{ff}B`}{{AlA`}{{Ch{Cf}}}}{{}b}{{}f}{{Af{Ch{Cf}}}A`}{{{Ch{Cf}}}Cj}{c{{Bj{Ab}}}Cl}{c{{Bj{Ad}}}Cl}{c{{Bj{Af}}}Cl}{c{{Bj{l}}}Cl}{c{{Bj{A`}}}Cl}{c{{Bj{Ah}}}Cl}{c{{Bj{Aj}}}Cl}{c{{Bj{Al}}}Cl}{{cCn}{{Bj{AnD`}}}{}}0000000{{Af{Ch{Cf}}{Ch{Cf}}Db}Al}`{{AbAb}Dd}{{AdAd}Dd}{{AfAf}Dd}{{ll}Dd}{{A`A`}Dd}{{AhAh}Dd}{{AjAj}Dd}{{AlAl}Dd}{{bb}Dd}{{ff}Dd}{{ce}Dd{}{}}000000000000000000000000000000000000000{{cCn}{{Bj{AnDf}}}{}}0000000{{AbDh}Dj}{{AdDh}Dj}{{AfDh}Dj}{{lDh}Dj}{{A`Dh}Dj}{{AhDh}Dj}{{AjDh}Dj}{{AlDh}Dj}{{bDh}{{Bj{AnDl}}}}0{{fDh}{{Bj{AnDl}}}}0{cc{}}00000000{db}0{hf}20{{{Dn{Cf}}{Bf{BbBd}}}{{Bj{cE`}}}{}}00000000{{}{{Eb{b}}}}1{{}{{Eb{f}}}}10{{{Ch{Cf}}}{{Eb{b}}}}{{{Ch{Cf}}}{{Eb{f}}}}10777777777731023102{{}b}0{{}f}0{{Adc}AnEd}{{Afc}AnEd}{{lc}AnEd}{{A`c}AnEd}{{Ahc}AnEd}{{Ajc}AnEd}{{Alc}AnEd}{{{Ch{Cf}}bDb}f}9988```{ce{}{}}000000000{c{{Ef{e}}}{}{}}000000000{bB`}0{fB`}01010{{{Eh{Cj}}}{{Eh{Cj}}}}{{bCj}d}{{bCj}}11{{fCj}}{{fCj}h}00{bb}0{ff}0{b}{f}`{{Abc}BjEj}{{Adc}BjEj}{{Afc}BjEj}{{lc}BjEj}{{A`c}BjEj}{{Ahc}BjEj}{{Ajc}BjEj}{{Alc}BjEj}`{{bd}d}000{{fh}h}000{c{{Eh{Cf}}}{}}0000000<0;0{b{{Ch{Cf}}}}{f{{Ch{Cf}}}}>={ce{}{}}000000000{cEl{}}03{b}3{f}{c{{Bj{e}}}{}{}}0000000000000000000{cEn{}}000000000{{AfA`AlDb}Dd}{{AlDb}Dd}{{AdlAlDb}Dd}8888888888``{{{Ch{Cf}}A`}{{Ch{Cf}}}}``{cAn{}}0","c":[],"p":[[5,"G1Affine",0],[5,"G1Projective",401],[5,"G2Affine",0],[5,"G2Projective",402],[1,"u64"],[5,"DecryptionKeyShare",0],[5,"BTreeMap",403],[5,"AggregateDecryptionKey",0],[5,"SecretKeyShare",0],[5,"PublicKeyShare",0],[5,"AggregatePublicKey",0],[5,"EphemeralPublicKey",0],[5,"EphemeralSignature",0],[5,"CipherText",0],[1,"unit"],[5,"Choice",404],[5,"Decoder",405],[6,"DecodingMode",406],[5,"ModuleRegistry",406],[5,"DecodeError",407],[6,"Result",408],[10,"Read",409],[8,"ModuleDecoderRegistry",406],[1,"usize"],[5,"Error",410],[10,"Write",409],[1,"u8"],[1,"array"],[5,"Scalar",411],[10,"Deserializer",412],[10,"Serializer",413],[6,"ErrorImpl",413],[5,"Hash",414],[1,"bool"],[5,"Error",415],[5,"Formatter",416],[8,"Result",416],[5,"Error",416],[1,"slice"],[6,"DecodingError",417],[5,"CtOption",404],[10,"Hasher",418],[5,"Request",419],[5,"Vec",420],[10,"Serializer",421],[5,"String",422],[5,"TypeId",423]],"b":[[10,"impl-Add%3CG1Projective%3E-for-G1Affine"],[11,"impl-Add%3CG1Projective%3E-for-%26G1Affine"],[12,"impl-Add%3C%26G1Projective%3E-for-%26G1Affine"],[13,"impl-Add%3C%26G1Projective%3E-for-G1Affine"],[14,"impl-Add%3C%26G2Projective%3E-for-%26G2Affine"],[15,"impl-Add%3CG2Projective%3E-for-G2Affine"],[16,"impl-Add%3C%26G2Projective%3E-for-G2Affine"],[17,"impl-Add%3CG2Projective%3E-for-%26G2Affine"],[185,"impl-Debug-for-G1Affine"],[186,"impl-Display-for-G1Affine"],[187,"impl-Debug-for-G2Affine"],[188,"impl-Display-for-G2Affine"],[198,"impl-From%3C%26G1Projective%3E-for-G1Affine"],[199,"impl-From%3CG1Projective%3E-for-G1Affine"],[200,"impl-From%3C%26G2Projective%3E-for-G2Affine"],[202,"impl-From%3CG2Projective%3E-for-G2Affine"],[231,"impl-UncompressedEncoding-for-G1Affine"],[232,"impl-G1Affine"],[233,"impl-G2Affine"],[234,"impl-UncompressedEncoding-for-G2Affine"],[235,"impl-UncompressedEncoding-for-G1Affine"],[236,"impl-G1Affine"],[237,"impl-G2Affine"],[238,"impl-UncompressedEncoding-for-G2Affine"],[239,"impl-PrimeCurveAffine-for-G1Affine"],[240,"impl-G1Affine"],[241,"impl-PrimeCurveAffine-for-G2Affine"],[242,"impl-G2Affine"],[251,"impl-G1Affine"],[252,"impl-PrimeCurveAffine-for-G1Affine"],[253,"impl-PrimeCurveAffine-for-G2Affine"],[254,"impl-G2Affine"],[278,"impl-G1Affine"],[279,"impl-PrimeCurveAffine-for-G1Affine"],[280,"impl-PrimeCurveAffine-for-G2Affine"],[281,"impl-G2Affine"],[287,"impl-Mul%3CScalar%3E-for-%26G1Affine"],[288,"impl-Mul%3C%26Scalar%3E-for-%26G1Affine"],[289,"impl-Mul%3C%26Scalar%3E-for-G1Affine"],[290,"impl-Mul%3CScalar%3E-for-G1Affine"],[291,"impl-Mul%3C%26Scalar%3E-for-%26G2Affine"],[292,"impl-Mul%3C%26Scalar%3E-for-G2Affine"],[293,"impl-Mul%3CScalar%3E-for-G2Affine"],[294,"impl-Mul%3CScalar%3E-for-%26G2Affine"],[295,"impl-Neg-for-G1Affine"],[296,"impl-Neg-for-%26G1Affine"],[297,"impl-Neg-for-%26G2Affine"],[298,"impl-Neg-for-G2Affine"],[311,"impl-Sub%3CG1Projective%3E-for-%26G1Affine"],[312,"impl-Sub%3C%26G1Projective%3E-for-%26G1Affine"],[313,"impl-Sub%3C%26G1Projective%3E-for-G1Affine"],[314,"impl-Sub%3CG1Projective%3E-for-G1Affine"],[315,"impl-Sub%3CG2Projective%3E-for-G2Affine"],[316,"impl-Sub%3C%26G2Projective%3E-for-G2Affine"],[317,"impl-Sub%3C%26G2Projective%3E-for-%26G2Affine"],[318,"impl-Sub%3CG2Projective%3E-for-%26G2Affine"],[347,"impl-G1Affine"],[348,"impl-UncompressedEncoding-for-G1Affine"],[349,"impl-G2Affine"],[350,"impl-UncompressedEncoding-for-G2Affine"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
